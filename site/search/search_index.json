{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Useful - Technical Documentation Collection","text":"<p>Welcome to the Useful documentation collection! This comprehensive resource brings together a wide range of technical documents, tutorials, tools, and guides across multiple domains including programming, artificial intelligence, astronomy, and more.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":""},{"location":"#programming","title":"\ud83d\udda5\ufe0f Programming","text":"<p>Comprehensive guides and tutorials covering multiple programming languages:</p> <ul> <li>C Programming - Fundamentals, data structures, file operations, and more</li> <li>C++ Programming - Modern C++20 features, type erasure, string operations</li> <li>C# Programming - Data structures and TCP programming</li> <li>JavaScript - PrimeVue UI components and Zustand state management</li> <li>Python - Utility tools and web crawling techniques</li> </ul>"},{"location":"#artificial-intelligence","title":"\ud83e\udd16 Artificial Intelligence","text":"<p>Resources for AI development and understanding:</p> <ul> <li>Building effective AI agents</li> <li>Sky-T1 model documentation</li> <li>Compression and conversion tools</li> </ul>"},{"location":"#astronomy","title":"\ud83d\udd2d Astronomy","text":"<p>Tools and guides for astronomical imaging and processing:</p> <ul> <li>NINA - Touch'N'Stars mobile control interface</li> <li>Siril - Python integration for astronomical image processing</li> </ul>"},{"location":"#linux","title":"\ud83d\udc27 Linux","text":"<p>Essential Linux tools and command-line utilities:</p> <ul> <li>Comprehensive grep command guide</li> <li>System administration tools</li> </ul>"},{"location":"#libraries","title":"\ud83d\udcda Libraries","text":"<p>Documentation for useful programming libraries:</p> <ul> <li>scnlib - Modern C++ input library</li> </ul>"},{"location":"#creative-writing","title":"\u270d\ufe0f Creative Writing","text":"<p>Original creative works and stories:</p> <ul> <li>Science fiction narratives</li> <li>Quantum physics-inspired fiction</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Navigate through the sections using the menu above, or explore specific topics using the search functionality. Each section contains detailed documentation with examples, best practices, and practical applications.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>This documentation is continuously updated and improved. If you find any issues or have suggestions for improvements, please feel free to contribute to the project.</p> <p>Last updated: {{ git_revision_date_localized }}</p>"},{"location":"ai/","title":"Artificial Intelligence Documentation","text":"<p>Welcome to the AI section! This collection focuses on artificial intelligence development, model training, and practical AI tools. Whether you're building AI agents, working with language models, or developing AI-powered applications, you'll find valuable resources here.</p>"},{"location":"ai/#featured-content","title":"Featured Content","text":""},{"location":"ai/#building-effective-agents","title":"Building Effective Agents","text":"<p>Comprehensive guide to developing AI agents that can perform complex tasks effectively. Learn about:</p> <ul> <li>Agent architecture and design patterns</li> <li>Decision-making algorithms</li> <li>Integration with external systems</li> <li>Performance optimization techniques</li> </ul>"},{"location":"ai/#sky-t1-model","title":"Sky-T1 Model","text":"<p>In-depth documentation of the Sky-T1 model - a cost-effective approach to training reasoning models:</p> <ul> <li>Training Methodology - How to train your own O1-preview model for under $450</li> <li>Technical Implementation - Complete codebase and training procedures</li> <li>Performance Benchmarks - Comparison with existing models</li> <li>Open Source Resources - Access to data, code, and model weights</li> </ul>"},{"location":"ai/#ai-tools","title":"AI Tools","text":""},{"location":"ai/#compression-tools","title":"Compression Tools","text":"<p>Utilities for data compression in AI workflows:</p> <ul> <li>Model compression techniques</li> <li>Data preprocessing optimization</li> <li>Storage efficiency improvements</li> </ul>"},{"location":"ai/#conversion-tools","title":"Conversion Tools","text":"<p>Format conversion utilities for AI development:</p> <ul> <li>Model format conversions</li> <li>Data format transformations</li> <li>Cross-platform compatibility tools</li> </ul>"},{"location":"ai/#key-topics-covered","title":"Key Topics Covered","text":""},{"location":"ai/#agent-development","title":"\ud83e\udde0 Agent Development","text":"<ul> <li>Architecture patterns for AI agents</li> <li>Task planning and execution</li> <li>Multi-agent coordination</li> <li>Real-world deployment strategies</li> </ul>"},{"location":"ai/#model-training","title":"\ud83c\udfaf Model Training","text":"<ul> <li>Cost-effective training approaches</li> <li>Reasoning model development</li> <li>Performance optimization</li> <li>Evaluation methodologies</li> </ul>"},{"location":"ai/#practical-tools","title":"\ud83d\udee0\ufe0f Practical Tools","text":"<ul> <li>Data processing utilities</li> <li>Model optimization tools</li> <li>Development workflow automation</li> </ul>"},{"location":"ai/#performance-evaluation","title":"\ud83d\udcca Performance &amp; Evaluation","text":"<ul> <li>Benchmarking methodologies</li> <li>Performance metrics</li> <li>Comparative analysis</li> <li>Quality assessment</li> </ul>"},{"location":"ai/#getting-started","title":"Getting Started","text":"<ol> <li>New to AI Development? Start with Building Effective Agents</li> <li>Interested in Model Training? Explore the Sky-T1 Model documentation</li> <li>Need Practical Tools? Check out our Tools section</li> </ol>"},{"location":"ai/#research-and-development","title":"Research and Development","text":"<p>This section reflects cutting-edge research and practical implementations in AI. The Sky-T1 model represents a significant breakthrough in cost-effective AI training, demonstrating that advanced reasoning capabilities can be achieved with minimal resources.</p> <p>All resources are designed to be: - Practical - Ready for real-world implementation - Cost-effective - Optimized for resource efficiency - Open Source - Fully accessible and modifiable - Well-documented - Complete with examples and explanations</p>"},{"location":"ai/building-effective-agents/","title":"\u6784\u5efa\u200b\u6709\u6548\u200b\u7684\u200b\u4ee3\u7406","text":"<p>\u200b\u5728\u200b\u8fc7\u53bb\u200b\u7684\u200b\u4e00\u5e74\u200b\u91cc\u200b\uff0c\u200b\u6211\u4eec\u200b\u4e0e\u200b\u6570\u5341\u4e2a\u200b\u56e2\u961f\u200b\u5408\u4f5c\u200b\uff0c\u200b\u8de8\u884c\u4e1a\u200b\u6784\u5efa\u200b\u5927\u578b\u200b\u8bed\u8a00\u200b\u6a21\u578b\u200b\uff08LLM\uff09\u200b\u4ee3\u7406\u200b\u3002\u200b\u4e00\u81f4\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u6700\u200b\u6210\u529f\u200b\u7684\u200b\u5b9e\u65bd\u200b\u5e76\u200b\u6ca1\u6709\u200b\u4f7f\u7528\u200b\u590d\u6742\u200b\u7684\u200b\u6846\u67b6\u200b\u6216\u200b\u4e13\u95e8\u200b\u7684\u200b\u5e93\u200b\u3002\u200b\u76f8\u53cd\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u7b80\u5355\u200b\u3001\u200b\u53ef\u200b\u7ec4\u5408\u200b\u7684\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5728\u200b\u8fd9\u200b\u7bc7\u6587\u7ae0\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u4eab\u200b\u4e86\u200b\u4ece\u200b\u4e0e\u200b\u5ba2\u6237\u200b\u5408\u4f5c\u200b\u548c\u200b\u81ea\u884c\u200b\u6784\u5efa\u200b\u4ee3\u7406\u200b\u4e2d\u5b66\u200b\u5230\u200b\u7684\u200b\u7ecf\u9a8c\u200b\uff0c\u200b\u5e76\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6784\u5efa\u200b\u6709\u6548\u200b\u4ee3\u7406\u200b\u7684\u200b\u5b9e\u7528\u200b\u5efa\u8bae\u200b\u3002</p> <p>\u200b\u4ec0\u4e48\u200b\u662f\u200b\u4ee3\u7406\u200b\uff1f \u201c\u200b\u4ee3\u7406\u200b\u201d\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u79cd\u200b\u5b9a\u4e49\u200b\u3002\u200b\u4e00\u4e9b\u200b\u5ba2\u6237\u200b\u5c06\u200b\u4ee3\u7406\u200b\u5b9a\u4e49\u200b\u4e3a\u200b\u5b8c\u5168\u200b\u81ea\u4e3b\u200b\u7684\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u80fd\u591f\u200b\u957f\u65f6\u95f4\u200b\u72ec\u7acb\u200b\u8fd0\u884c\u200b\uff0c\u200b\u4f7f\u7528\u200b\u5404\u79cd\u200b\u5de5\u5177\u200b\u5b8c\u6210\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\u3002\u200b\u5176\u4ed6\u4eba\u200b\u5219\u200b\u7528\u200b\u8fd9\u4e2a\u200b\u672f\u8bed\u200b\u6765\u200b\u63cf\u8ff0\u200b\u9075\u5faa\u200b\u9884\u5b9a\u200b\u4e49\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u7684\u200b\u66f4\u5177\u200b\u89c4\u5b9a\u6027\u200b\u7684\u200b\u5b9e\u65bd\u200b\u3002\u200b\u5728\u200b Anthropic\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u6240\u6709\u200b\u8fd9\u4e9b\u200b\u53d8\u4f53\u200b\u5f52\u7c7b\u200b\u4e3a\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u548c\u200b\u4ee3\u7406\u200b\u4e4b\u95f4\u200b\u5212\u51fa\u200b\u4e86\u200b\u91cd\u8981\u200b\u7684\u200b\u67b6\u6784\u200b\u533a\u522b\u200b\uff1a</p> <ul> <li>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u662f\u200b\u901a\u8fc7\u200b\u9884\u5b9a\u200b\u4e49\u200b\u4ee3\u7801\u200b\u8def\u5f84\u200b\u7f16\u6392\u200b LLMs \u200b\u548c\u200b\u5de5\u5177\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002</li> <li>\u200b\u4ee3\u7406\u200b\u5219\u200b\u662f\u200b LLMs \u200b\u52a8\u6001\u200b\u6307\u5bfc\u200b\u81ea\u5df1\u200b\u7684\u200b\u6d41\u7a0b\u200b\u548c\u200b\u5de5\u5177\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4fdd\u6301\u200b\u5bf9\u200b\u4efb\u52a1\u200b\u5b8c\u6210\u200b\u65b9\u5f0f\u200b\u7684\u200b\u63a7\u5236\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002</li> </ul> <p>\u200b\u4e0b\u9762\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u63a2\u8ba8\u200b\u8fd9\u200b\u4e24\u79cd\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u3002\u200b\u5728\u200b\u9644\u5f55\u200b 1\uff08\u201c\u200b\u5b9e\u8df5\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7406\u200b\u201d\uff09\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5ba2\u6237\u200b\u5728\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u7cfb\u7edf\u200b\u65f6\u200b\u53d1\u73b0\u200b\u7279\u522b\u200b\u6709\u200b\u4ef7\u503c\u200b\u7684\u200b\u4e24\u4e2a\u200b\u9886\u57df\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\uff08\u200b\u4ee5\u53ca\u200b\u4f55\u65f6\u200b\u4e0d\u200b\uff09\u200b\u4f7f\u7528\u200b\u4ee3\u7406\u200b \u200b\u5728\u200b\u4f7f\u7528\u200b LLMs \u200b\u6784\u5efa\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u627e\u5230\u200b\u6700\u200b\u7b80\u5355\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u53ea\u6709\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u624d\u200b\u589e\u52a0\u200b\u590d\u6742\u6027\u200b\u3002\u200b\u8fd9\u200b\u53ef\u80fd\u200b\u610f\u5473\u7740\u200b\u6839\u672c\u200b\u4e0d\u200b\u6784\u5efa\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u3002\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u901a\u5e38\u200b\u4ee5\u200b\u5ef6\u8fdf\u200b\u548c\u200b\u6210\u672c\u200b\u4e3a\u200b\u4ee3\u4ef7\u200b\u6362\u53d6\u200b\u66f4\u597d\u200b\u7684\u200b\u4efb\u52a1\u200b\u6027\u80fd\u200b\uff0c\u200b\u60a8\u200b\u5e94\u8be5\u200b\u8003\u8651\u200b\u4f55\u65f6\u200b\u8fd9\u79cd\u200b\u6743\u8861\u200b\u662f\u200b\u5408\u7406\u200b\u7684\u200b\u3002</p> <p>\u200b\u5f53\u200b\u9700\u8981\u200b\u66f4\u200b\u591a\u200b\u590d\u6742\u6027\u200b\u65f6\u200b\uff0c\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u4e3a\u200b\u5b9a\u4e49\u660e\u786e\u200b\u7684\u200b\u4efb\u52a1\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53ef\u9884\u6d4b\u6027\u200b\u548c\u200b\u4e00\u81f4\u6027\u200b\uff0c\u200b\u800c\u200b\u4ee3\u7406\u200b\u5219\u200b\u662f\u200b\u5728\u200b\u9700\u8981\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u6a21\u578b\u200b\u9a71\u52a8\u200b\u7684\u200b\u51b3\u7b56\u200b\u65f6\u200b\u66f4\u597d\u200b\u7684\u200b\u9009\u62e9\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u8bb8\u591a\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u6765\u8bf4\u200b\uff0c\u200b\u901a\u8fc7\u200b\u68c0\u7d22\u200b\u548c\u200b\u4e0a\u4e0b\u6587\u200b\u793a\u4f8b\u200b\u4f18\u5316\u200b\u5355\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u901a\u5e38\u200b\u5c31\u200b\u8db3\u591f\u200b\u4e86\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4ee5\u53ca\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u6846\u67b6\u200b \u200b\u6709\u200b\u8bb8\u591a\u200b\u6846\u67b6\u200b\u53ef\u4ee5\u200b\u4f7f\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u66f4\u200b\u5bb9\u6613\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>LangChain \u200b\u7684\u200b LangGraph\uff1b</li> <li>Amazon Bedrock \u200b\u7684\u200b AI \u200b\u4ee3\u7406\u200b\u6846\u67b6\u200b\uff1b</li> <li>Rivet\uff0c\u200b\u4e00\u4e2a\u200b\u62d6\u653e\u200b\u5f0f\u200b GUI LLM \u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u6784\u5efa\u200b\u5668\u200b\uff1b\u200b\u4ee5\u53ca\u200b</li> <li>Vellum\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u6784\u5efa\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u590d\u6742\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u7684\u200b GUI \u200b\u5de5\u5177\u200b\u3002</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u6846\u67b6\u200b\u901a\u8fc7\u200b\u7b80\u5316\u200b\u6807\u51c6\u200b\u7684\u200b\u4f4e\u7ea7\u200b\u4efb\u52a1\u200b\uff08\u200b\u5982\u200b\u8c03\u7528\u200b LLMs\u3001\u200b\u5b9a\u4e49\u200b\u548c\u200b\u89e3\u6790\u200b\u5de5\u5177\u200b\u4ee5\u53ca\u200b\u94fe\u63a5\u200b\u8c03\u7528\u200b\uff09\u200b\u4f7f\u200b\u5165\u95e8\u200b\u53d8\u5f97\u200b\u5bb9\u6613\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5b83\u4eec\u200b\u901a\u5e38\u200b\u4f1a\u200b\u521b\u5efa\u200b\u989d\u5916\u200b\u7684\u200b\u62bd\u8c61\u200b\u5c42\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u63a9\u76d6\u200b\u5e95\u5c42\u200b\u7684\u200b\u63d0\u793a\u200b\u548c\u200b\u54cd\u5e94\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u66f4\u200b\u96be\u200b\u8c03\u8bd5\u200b\u3002\u200b\u5b83\u4eec\u200b\u8fd8\u200b\u53ef\u80fd\u200b\u8bf1\u4f7f\u200b\u60a8\u200b\u5728\u200b\u66f4\u200b\u7b80\u5355\u200b\u7684\u200b\u8bbe\u7f6e\u200b\u5c31\u200b\u8db3\u591f\u200b\u65f6\u200b\u589e\u52a0\u200b\u590d\u6742\u6027\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5f00\u53d1\u8005\u200b\u9996\u5148\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200b LLM API\uff1a\u200b\u8bb8\u591a\u200b\u6a21\u5f0f\u200b\u53ef\u4ee5\u200b\u7528\u200b\u51e0\u884c\u200b\u4ee3\u7801\u200b\u5b9e\u73b0\u200b\u3002\u200b\u5982\u679c\u200b\u60a8\u200b\u786e\u5b9e\u200b\u4f7f\u7528\u200b\u6846\u67b6\u200b\uff0c\u200b\u8bf7\u200b\u786e\u4fdd\u60a8\u200b\u4e86\u89e3\u200b\u5e95\u5c42\u200b\u4ee3\u7801\u200b\u3002\u200b\u5bf9\u200b\u5e95\u5c42\u200b\u5185\u5bb9\u200b\u7684\u200b\u9519\u8bef\u200b\u5047\u8bbe\u200b\u662f\u200b\u5ba2\u6237\u200b\u9519\u8bef\u200b\u7684\u200b\u5e38\u89c1\u200b\u6765\u6e90\u200b\u3002</p> <p>\u200b\u8bf7\u53c2\u9605\u200b\u6211\u4eec\u200b\u7684\u200b\u98df\u8c31\u200b\u4ee5\u200b\u83b7\u53d6\u200b\u4e00\u4e9b\u200b\u793a\u4f8b\u200b\u5b9e\u73b0\u200b\u3002</p> <p>\u200b\u6784\u5efa\u200b\u6a21\u5757\u200b\u3001\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u548c\u200b\u4ee3\u7406\u200b \u200b\u5728\u200b\u672c\u8282\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u63a2\u8ba8\u200b\u6211\u4eec\u200b\u5728\u200b\u751f\u4ea7\u200b\u4e2d\u200b\u770b\u5230\u200b\u7684\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5e38\u89c1\u200b\u6a21\u5f0f\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u4ece\u200b\u6211\u4eec\u200b\u7684\u200b\u57fa\u7840\u200b\u6784\u5efa\u200b\u6a21\u5757\u200b\u2014\u2014\u200b\u589e\u5f3a\u578b\u200b LLM\u2014\u2014\u200b\u5f00\u59cb\u200b\uff0c\u200b\u9010\u6b65\u200b\u589e\u52a0\u200b\u590d\u6742\u6027\u200b\uff0c\u200b\u4ece\u200b\u7b80\u5355\u200b\u7684\u200b\u7ec4\u5408\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u5230\u200b\u81ea\u4e3b\u200b\u4ee3\u7406\u200b\u3002</p> <p>\u200b\u6784\u5efa\u200b\u6a21\u5757\u200b\uff1a\u200b\u589e\u5f3a\u578b\u200b LLM \u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u7684\u200b\u57fa\u672c\u200b\u6784\u5efa\u200b\u6a21\u5757\u200b\u662f\u200b\u901a\u8fc7\u200b\u68c0\u7d22\u200b\u3001\u200b\u5de5\u5177\u200b\u548c\u200b\u8bb0\u5fc6\u200b\u7b49\u200b\u589e\u5f3a\u200b\u529f\u80fd\u200b\u589e\u5f3a\u200b\u7684\u200b LLM\u3002\u200b\u6211\u4eec\u200b\u5f53\u524d\u200b\u7684\u200b\u6a21\u578b\u200b\u53ef\u4ee5\u200b\u4e3b\u52a8\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u529f\u80fd\u200b\u2014\u2014\u200b\u751f\u6210\u200b\u81ea\u5df1\u200b\u7684\u200b\u641c\u7d22\u200b\u67e5\u8be2\u200b\u3001\u200b\u9009\u62e9\u200b\u9002\u5f53\u200b\u7684\u200b\u5de5\u5177\u200b\u5e76\u200b\u786e\u5b9a\u200b\u4fdd\u7559\u200b\u54ea\u4e9b\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5173\u6ce8\u200b\u5b9e\u65bd\u200b\u7684\u200b\u4e24\u4e2a\u200b\u5173\u952e\u200b\u65b9\u9762\u200b\uff1a\u200b\u6839\u636e\u200b\u60a8\u200b\u7684\u200b\u5177\u4f53\u200b\u7528\u4f8b\u200b\u5b9a\u5236\u200b\u8fd9\u4e9b\u200b\u529f\u80fd\u200b\uff0c\u200b\u5e76\u200b\u786e\u4fdd\u200b\u5b83\u4eec\u200b\u4e3a\u200b\u60a8\u200b\u7684\u200b LLM \u200b\u63d0\u4f9b\u200b\u6613\u4e8e\u200b\u4f7f\u7528\u200b\u7684\u200b\u3001\u200b\u6587\u6863\u200b\u5b8c\u5584\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002\u200b\u867d\u7136\u200b\u6709\u200b\u8bb8\u591a\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u8fd9\u4e9b\u200b\u589e\u5f3a\u200b\u529f\u80fd\u200b\uff0c\u200b\u4f46\u200b\u4e00\u79cd\u200b\u65b9\u6cd5\u200b\u662f\u200b\u901a\u8fc7\u200b\u6211\u4eec\u200b\u6700\u8fd1\u200b\u53d1\u5e03\u200b\u7684\u200b\u6a21\u578b\u200b\u4e0a\u4e0b\u6587\u200b\u534f\u8bae\u200b\uff0c\u200b\u8be5\u200b\u534f\u8bae\u200b\u5141\u8bb8\u200b\u5f00\u53d1\u8005\u200b\u901a\u8fc7\u200b\u7b80\u5355\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u5b9e\u73b0\u200b\u4e0e\u200b\u4e0d\u65ad\u200b\u589e\u957f\u200b\u7684\u200b\u7b2c\u4e09\u65b9\u200b\u5de5\u5177\u200b\u751f\u6001\u200b\u7cfb\u7edf\u96c6\u6210\u200b\u3002</p> <p>\u200b\u5728\u200b\u672c\u6587\u200b\u7684\u200b\u5176\u4f59\u90e8\u5206\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5047\u8bbe\u200b\u6bcf\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u8fd9\u4e9b\u200b\u589e\u5f3a\u200b\u529f\u80fd\u200b\u3002</p> <p>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u63d0\u793a\u200b\u94fe\u200b \u200b\u63d0\u793a\u200b\u94fe\u200b\u5c06\u200b\u4efb\u52a1\u200b\u5206\u89e3\u200b\u4e3a\u200b\u4e00\u7cfb\u5217\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u5904\u7406\u200b\u524d\u200b\u4e00\u4e2a\u200b\u8c03\u7528\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4efb\u4f55\u200b\u4e2d\u95f4\u200b\u6b65\u9aa4\u200b\u4e0a\u200b\u6dfb\u52a0\u7a0b\u5e8f\u200b\u68c0\u67e5\u200b\uff08\u200b\u89c1\u200b\u4e0b\u56fe\u200b\u4e2d\u200b\u7684\u200b\u201c\u200b\u95e8\u200b\u201d\uff09\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u8fc7\u7a0b\u200b\u4ecd\u200b\u5728\u200b\u6b63\u8f68\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u975e\u5e38\u9002\u5408\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u4e14\u200b\u5e72\u51c0\u200b\u5730\u200b\u5206\u89e3\u200b\u4e3a\u200b\u56fa\u5b9a\u200b\u5b50\u200b\u4efb\u52a1\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002\u200b\u4e3b\u8981\u200b\u76ee\u6807\u200b\u662f\u200b\u901a\u8fc7\u200b\u4f7f\u200b\u6bcf\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u6210\u4e3a\u200b\u66f4\u200b\u7b80\u5355\u200b\u7684\u200b\u4efb\u52a1\u200b\u6765\u200b\u4ee5\u200b\u5ef6\u8fdf\u200b\u6362\u53d6\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u51c6\u786e\u6027\u200b\u3002</p> <p>\u200b\u63d0\u793a\u200b\u94fe\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u751f\u6210\u200b\u8425\u9500\u200b\u6587\u6848\u200b\uff0c\u200b\u7136\u540e\u200b\u5c06\u200b\u5176\u200b\u7ffb\u8bd1\u6210\u200b\u4e0d\u540c\u200b\u7684\u200b\u8bed\u8a00\u200b\u3002</li> <li>\u200b\u7f16\u5199\u200b\u6587\u6863\u200b\u5927\u7eb2\u200b\uff0c\u200b\u68c0\u67e5\u200b\u5927\u7eb2\u200b\u662f\u5426\u200b\u7b26\u5408\u200b\u67d0\u4e9b\u200b\u6807\u51c6\u200b\uff0c\u200b\u7136\u540e\u200b\u6839\u636e\u200b\u5927\u7eb2\u200b\u7f16\u5199\u200b\u6587\u6863\u200b\u3002</li> </ul> <p>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u8def\u7531\u200b \u200b\u8def\u7531\u200b\u5bf9\u200b\u8f93\u5165\u200b\u8fdb\u884c\u200b\u5206\u7c7b\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u5b9a\u5411\u200b\u5230\u200b\u4e13\u95e8\u200b\u7684\u200b\u540e\u7eed\u200b\u4efb\u52a1\u200b\u3002\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u5141\u8bb8\u200b\u5173\u6ce8\u70b9\u200b\u5206\u79bb\u200b\uff0c\u200b\u5e76\u200b\u6784\u5efa\u200b\u66f4\u200b\u4e13\u4e1a\u200b\u7684\u200b\u63d0\u793a\u200b\u3002\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u4f18\u5316\u200b\u4e00\u79cd\u200b\u8f93\u5165\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u635f\u5bb3\u200b\u5176\u4ed6\u200b\u8f93\u5165\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u8def\u7531\u200b\u9002\u7528\u200b\u4e8e\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5176\u4e2d\u200b\u5b58\u5728\u200b\u66f4\u597d\u200b\u5355\u72ec\u200b\u5904\u7406\u200b\u7684\u200b\u4e0d\u540c\u200b\u7c7b\u522b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u5206\u7c7b\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b LLM \u200b\u6216\u200b\u66f4\u200b\u4f20\u7edf\u200b\u7684\u200b\u5206\u7c7b\u200b\u6a21\u578b\u200b/\u200b\u7b97\u6cd5\u200b\u51c6\u786e\u200b\u5904\u7406\u200b\u3002</p> <p>\u200b\u8def\u7531\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u5c06\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u5ba2\u6237\u670d\u52a1\u200b\u67e5\u8be2\u200b\uff08\u200b\u4e00\u822c\u200b\u95ee\u9898\u200b\u3001\u200b\u9000\u6b3e\u200b\u8bf7\u6c42\u200b\u3001\u200b\u6280\u672f\u652f\u6301\u200b\uff09\u200b\u5b9a\u5411\u200b\u5230\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e0b\u6e38\u200b\u6d41\u7a0b\u200b\u3001\u200b\u63d0\u793a\u200b\u548c\u200b\u5de5\u5177\u200b\u3002</li> <li>\u200b\u5c06\u200b\u7b80\u5355\u200b/\u200b\u5e38\u89c1\u95ee\u9898\u200b\u8def\u7531\u200b\u5230\u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b Claude 3.5 Haiku\uff09\uff0c\u200b\u5c06\u200b\u56f0\u96be\u200b/\u200b\u4e0d\u200b\u5e38\u89c1\u200b\u7684\u200b\u95ee\u9898\u200b\u8def\u7531\u200b\u5230\u200b\u66f4\u200b\u5f3a\u5927\u200b\u7684\u200b\u6a21\u578b\u200b\uff08\u200b\u5982\u200b Claude 3.5 Sonnet\uff09\u200b\u4ee5\u200b\u4f18\u5316\u200b\u6210\u672c\u200b\u548c\u200b\u901f\u5ea6\u200b\u3002</li> </ul> <p>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u5e76\u884c\u200b\u5316\u200b LLMs \u200b\u6709\u65f6\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u7a0b\u5e8f\u200b\u805a\u5408\u200b\u5b83\u4eec\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u5e76\u884c\u200b\u5316\u200b\uff0c\u200b\u8868\u73b0\u200b\u4e3a\u200b\u4e24\u4e2a\u200b\u5173\u952e\u200b\u53d8\u4f53\u200b\uff1a</p> <ul> <li>\u200b\u5206\u6bb5\u200b\uff1a\u200b\u5c06\u200b\u4efb\u52a1\u200b\u5206\u89e3\u200b\u4e3a\u200b\u5e76\u884c\u200b\u8fd0\u884c\u200b\u7684\u200b\u72ec\u7acb\u200b\u5b50\u200b\u4efb\u52a1\u200b\u3002</li> <li>\u200b\u6295\u7968\u200b\uff1a\u200b\u591a\u6b21\u200b\u8fd0\u884c\u200b\u540c\u4e00\u200b\u4efb\u52a1\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u591a\u6837\u5316\u200b\u7684\u200b\u8f93\u51fa\u200b\u3002</li> </ul> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u5f53\u200b\u5212\u5206\u200b\u7684\u200b\u5b50\u200b\u4efb\u52a1\u200b\u53ef\u4ee5\u200b\u5e76\u884c\u200b\u5316\u4ee5\u200b\u63d0\u9ad8\u200b\u901f\u5ea6\u200b\uff0c\u200b\u6216\u8005\u200b\u5f53\u200b\u9700\u8981\u200b\u591a\u4e2a\u200b\u89c6\u89d2\u200b\u6216\u200b\u5c1d\u8bd5\u200b\u4ee5\u200b\u83b7\u5f97\u200b\u66f4\u9ad8\u200b\u7f6e\u4fe1\u5ea6\u200b\u7684\u200b\u7ed3\u679c\u200b\u65f6\u200b\uff0c\u200b\u5e76\u884c\u200b\u5316\u662f\u200b\u6709\u6548\u200b\u7684\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5177\u6709\u200b\u591a\u4e2a\u200b\u8003\u8651\u200b\u7684\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\uff0cLLMs \u200b\u901a\u5e38\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8003\u8651\u200b\u7531\u200b\u5355\u72ec\u200b\u7684\u200b LLM \u200b\u8c03\u7528\u200b\u5904\u7406\u200b\u65f6\u200b\u8868\u73b0\u200b\u66f4\u597d\u200b\uff0c\u200b\u4ece\u800c\u200b\u5141\u8bb8\u200b\u5bf9\u200b\u6bcf\u4e2a\u200b\u7279\u5b9a\u200b\u65b9\u9762\u200b\u8fdb\u884c\u200b\u96c6\u4e2d\u200b\u5173\u6ce8\u200b\u3002</p> <p>\u200b\u5e76\u884c\u200b\u5316\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u5206\u6bb5\u200b\uff1a</li> <li>\u200b\u5b9e\u65bd\u200b\u62a4\u680f\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u5b9e\u4f8b\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u67e5\u8be2\u200b\uff0c\u200b\u800c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6a21\u578b\u200b\u5b9e\u4f8b\u200b\u7b5b\u9009\u200b\u5b83\u4eec\u200b\u4ee5\u200b\u67e5\u627e\u200b\u4e0d\u200b\u9002\u5f53\u200b\u7684\u200b\u5185\u5bb9\u200b\u6216\u200b\u8bf7\u6c42\u200b\u3002\u200b\u8fd9\u200b\u5f80\u5f80\u200b\u6bd4\u200b\u8ba9\u200b\u540c\u4e00\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u62a4\u680f\u200b\u548c\u200b\u6838\u5fc3\u200b\u54cd\u5e94\u200b\u8868\u73b0\u200b\u66f4\u597d\u200b\u3002</li> <li>\u200b\u81ea\u52a8\u5316\u200b\u8bc4\u4f30\u200b LLM \u200b\u6027\u80fd\u200b\u7684\u200b\u8bc4\u4f30\u200b\uff0c\u200b\u5176\u4e2d\u200b\u6bcf\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u8bc4\u4f30\u200b\u6a21\u578b\u200b\u5728\u200b\u7ed9\u5b9a\u200b\u63d0\u793a\u200b\u4e0b\u200b\u7684\u200b\u4e0d\u540c\u200b\u65b9\u9762\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</li> <li>\u200b\u6295\u7968\u200b\uff1a</li> <li>\u200b\u5ba1\u67e5\u200b\u4e00\u6bb5\u200b\u4ee3\u7801\u200b\u7684\u200b\u6f0f\u6d1e\u200b\uff0c\u200b\u5176\u4e2d\u200b\u51e0\u4e2a\u200b\u4e0d\u540c\u200b\u7684\u200b\u63d0\u793a\u200b\u5ba1\u67e5\u200b\u5e76\u200b\u6807\u8bb0\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5982\u679c\u200b\u53d1\u73b0\u200b\u95ee\u9898\u200b\u3002</li> <li>\u200b\u8bc4\u4f30\u200b\u7ed9\u5b9a\u200b\u5185\u5bb9\u200b\u662f\u5426\u200b\u4e0d\u200b\u9002\u5f53\u200b\uff0c\u200b\u591a\u4e2a\u200b\u63d0\u793a\u200b\u8bc4\u4f30\u200b\u4e0d\u540c\u200b\u65b9\u9762\u200b\u6216\u200b\u9700\u8981\u200b\u4e0d\u540c\u200b\u7684\u200b\u6295\u7968\u200b\u9608\u503c\u200b\u4ee5\u200b\u5e73\u8861\u200b\u8bef\u62a5\u200b\u548c\u200b\u6f0f\u62a5\u200b\u3002</li> </ul> <p>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u534f\u8c03\u8005\u200b-\u200b\u5de5\u4f5c\u8005\u200b \u200b\u5728\u200b\u534f\u8c03\u8005\u200b-\u200b\u5de5\u4f5c\u8005\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u4e2d\u592e\u200b LLM \u200b\u52a8\u6001\u200b\u5206\u89e3\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5c06\u200b\u5b83\u4eec\u200b\u59d4\u6d3e\u200b\u7ed9\u200b\u5de5\u4f5c\u8005\u200b LLMs\uff0c\u200b\u5e76\u200b\u7efc\u5408\u200b\u5b83\u4eec\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u975e\u5e38\u9002\u5408\u200b\u590d\u6742\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5176\u4e2d\u200b\u60a8\u200b\u65e0\u6cd5\u200b\u9884\u6d4b\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5b50\u200b\u4efb\u52a1\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200b\u7f16\u7801\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u66f4\u6539\u200b\u7684\u200b\u6587\u4ef6\u200b\u6570\u91cf\u200b\u548c\u200b\u6bcf\u4e2a\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u66f4\u6539\u200b\u6027\u8d28\u200b\u53ef\u80fd\u200b\u53d6\u51b3\u4e8e\u200b\u4efb\u52a1\u200b\uff09\u3002\u200b\u867d\u7136\u200b\u5b83\u200b\u5728\u200b\u62d3\u6251\u200b\u4e0a\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u4e0e\u200b\u5e76\u884c\u200b\u5316\u200b\u7684\u200b\u5173\u952e\u200b\u533a\u522b\u200b\u5728\u4e8e\u200b\u5176\u200b\u7075\u6d3b\u6027\u200b\u2014\u2014\u200b\u5b50\u200b\u4efb\u52a1\u200b\u4e0d\u662f\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\uff0c\u200b\u800c\u662f\u200b\u7531\u200b\u534f\u8c03\u8005\u200b\u6839\u636e\u200b\u7279\u5b9a\u200b\u8f93\u5165\u200b\u786e\u5b9a\u200b\u7684\u200b\u3002</p> <p>\u200b\u534f\u8c03\u8005\u200b-\u200b\u5de5\u4f5c\u8005\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u6b21\u200b\u5bf9\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u590d\u6742\u200b\u66f4\u6539\u200b\u7684\u200b\u7f16\u7801\u200b\u4ea7\u54c1\u200b\u3002</li> <li>\u200b\u6d89\u53ca\u200b\u4ece\u200b\u591a\u4e2a\u200b\u6765\u6e90\u200b\u6536\u96c6\u200b\u548c\u200b\u5206\u6790\u200b\u4fe1\u606f\u200b\u4ee5\u200b\u83b7\u53d6\u200b\u53ef\u80fd\u200b\u76f8\u5173\u200b\u4fe1\u606f\u200b\u7684\u200b\u641c\u7d22\u200b\u4efb\u52a1\u200b\u3002</li> </ul> <p>\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u8bc4\u4f30\u200b\u8005\u200b-\u200b\u4f18\u5316\u200b\u5668\u200b \u200b\u5728\u200b\u8bc4\u4f30\u200b\u8005\u200b-\u200b\u4f18\u5316\u200b\u5668\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u4e2a\u200b LLM \u200b\u8c03\u7528\u200b\u751f\u6210\u200b\u54cd\u5e94\u200b\uff0c\u200b\u800c\u200b\u53e6\u200b\u4e00\u4e2a\u200b LLM \u200b\u5728\u200b\u5faa\u73af\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u8bc4\u4f30\u200b\u548c\u200b\u53cd\u9988\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\uff1a\u200b\u5f53\u200b\u6211\u4eec\u200b\u6709\u200b\u660e\u786e\u200b\u7684\u200b\u8bc4\u4f30\u200b\u6807\u51c6\u200b\uff0c\u200b\u5e76\u4e14\u200b\u8fed\u4ee3\u200b\u6539\u8fdb\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53ef\u200b\u8861\u91cf\u200b\u7684\u200b\u4ef7\u503c\u200b\u65f6\u200b\uff0c\u200b\u6b64\u200b\u5de5\u4f5c\u200b\u6d41\u7a0b\u200b\u7279\u522b\u200b\u6709\u6548\u200b\u3002\u200b\u4e24\u4e2a\u200b\u9002\u5408\u200b\u7684\u200b\u6807\u5fd7\u200b\u662f\u200b\uff0c\u200b\u9996\u5148\u200b\uff0c\u200b\u5f53\u200b\u4eba\u7c7b\u200b\u8868\u8fbe\u200b\u4ed6\u4eec\u200b\u7684\u200b\u53cd\u9988\u200b\u65f6\u200b\uff0cLLM \u200b\u54cd\u5e94\u200b\u53ef\u4ee5\u200b\u660e\u663e\u200b\u6539\u8fdb\u200b\uff1b\u200b\u5176\u6b21\u200b\uff0cLLM \u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u8fd9\u6837\u200b\u7684\u200b\u53cd\u9988\u200b\u3002\u200b\u8fd9\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u4eba\u7c7b\u200b\u4f5c\u5bb6\u200b\u5728\u200b\u751f\u6210\u200b\u7cbe\u70bc\u200b\u6587\u6863\u200b\u65f6\u200b\u53ef\u80fd\u200b\u7ecf\u5386\u200b\u7684\u200b\u8fed\u4ee3\u200b\u5199\u4f5c\u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\u200b\u8bc4\u4f30\u200b\u8005\u200b-\u200b\u4f18\u5316\u200b\u5668\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <ul> <li>\u200b\u6587\u5b66\u200b\u7ffb\u8bd1\u200b\uff0c\u200b\u5176\u4e2d\u200b\u7ffb\u8bd1\u200b LLM \u200b\u53ef\u80fd\u200b\u6700\u521d\u200b\u6ca1\u6709\u200b\u6355\u6349\u5230\u200b\u7684\u200b\u7ec6\u5fae\u5dee\u522b\u200b\uff0c\u200b\u4f46\u200b\u8bc4\u4f30\u200b\u8005\u200b LLM \u200b\u53ef\u4ee5\u200b\u63d0\u4f9b\u200b\u6709\u7528\u200b\u7684\u200b\u6279\u8bc4\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u591a\u8f6e\u200b\u641c\u7d22\u200b\u548c\u200b\u5206\u6790\u200b\u4ee5\u200b\u6536\u96c6\u200b\u5168\u9762\u200b\u4fe1\u606f\u200b\u7684\u200b\u590d\u6742\u200b\u641c\u7d22\u200b\u4efb\u52a1\u200b\uff0c\u200b\u5176\u4e2d\u200b\u8bc4\u4f30\u200b\u8005\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u8fdb\u4e00\u6b65\u200b\u641c\u7d22\u200b\u3002</li> </ul> <p>\u200b\u4ee3\u7406\u200b \u200b\u968f\u7740\u200b LLMs \u200b\u5728\u200b\u5173\u952e\u200b\u80fd\u529b\u200b\u4e0a\u200b\u7684\u200b\u6210\u719f\u200b\u2014\u2014\u200b\u7406\u89e3\u200b\u590d\u6742\u200b\u8f93\u5165\u200b\u3001\u200b\u53c2\u4e0e\u200b\u63a8\u7406\u200b\u548c\u200b\u89c4\u5212\u200b\u3001\u200b\u53ef\u9760\u200b\u5730\u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u4ee5\u53ca\u200b\u4ece\u200b\u9519\u8bef\u200b\u4e2d\u200b\u6062\u590d\u200b\u2014\u2014\u200b\u4ee3\u7406\u200b\u6b63\u5728\u200b\u751f\u4ea7\u200b\u4e2d\u200b\u5d2d\u9732\u5934\u89d2\u200b\u3002\u200b\u4ee3\u7406\u200b\u5f00\u59cb\u200b\u5de5\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b\u6765\u81ea\u200b\u4eba\u7c7b\u200b\u7528\u6237\u200b\u7684\u200b\u547d\u4ee4\u200b\uff0c\u200b\u8981\u4e48\u200b\u662f\u200b\u4e0e\u200b\u4eba\u7c7b\u200b\u7528\u6237\u200b\u7684\u200b\u4ea4\u4e92\u200b\u8ba8\u8bba\u200b\u3002\u200b\u4e00\u65e6\u200b\u4efb\u52a1\u200b\u660e\u786e\u200b\uff0c\u200b\u4ee3\u7406\u200b\u5c31\u200b\u4f1a\u200b\u72ec\u7acb\u200b\u8ba1\u5212\u200b\u548c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u7ed9\u200b\u4eba\u7c7b\u200b\u4ee5\u200b\u83b7\u53d6\u200b\u66f4\u200b\u591a\u200b\u4fe1\u606f\u200b\u6216\u200b\u5224\u65ad\u200b\u3002\u200b\u5728\u200b\u6267\u884c\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u4ee3\u7406\u200b\u5728\u200b\u6bcf\u200b\u4e00\u6b65\u200b\u4ece\u200b\u73af\u5883\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u201c\u200b\u771f\u5b9e\u60c5\u51b5\u200b\u201d\uff08\u200b\u5982\u200b\u5de5\u5177\u200b\u8c03\u7528\u200b\u7ed3\u679c\u200b\u6216\u200b\u4ee3\u7801\u6267\u884c\u200b\uff09\u200b\u4ee5\u200b\u8bc4\u4f30\u200b\u5176\u200b\u8fdb\u5c55\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u4ee3\u7406\u200b\u53ef\u4ee5\u200b\u5728\u200b\u68c0\u67e5\u70b9\u200b\u6216\u200b\u9047\u5230\u200b\u969c\u788d\u200b\u65f6\u200b\u6682\u505c\u200b\u4ee5\u200b\u83b7\u53d6\u200b\u4eba\u7c7b\u200b\u53cd\u9988\u200b\u3002\u200b\u4efb\u52a1\u200b\u901a\u5e38\u200b\u5728\u200b\u5b8c\u6210\u200b\u65f6\u200b\u7ec8\u6b62\u200b\uff0c\u200b\u4f46\u200b\u901a\u5e38\u200b\u4e5f\u200b\u5305\u62ec\u200b\u505c\u6b62\u200b\u6761\u4ef6\u200b\uff08\u200b\u5982\u200b\u6700\u5927\u200b\u8fed\u4ee3\u200b\u6b21\u6570\u200b\uff09\u200b\u4ee5\u200b\u4fdd\u6301\u200b\u63a7\u5236\u200b\u3002</p> <p>\u200b\u4ee3\u7406\u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u7684\u200b\u4efb\u52a1\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u7684\u200b\u5b9e\u65bd\u200b\u901a\u5e38\u200b\u5f88\u200b\u7b80\u5355\u200b\u3002\u200b\u5b83\u4eec\u200b\u901a\u5e38\u200b\u53ea\u662f\u200b\u57fa\u4e8e\u200b\u73af\u5883\u200b\u53cd\u9988\u200b\u5faa\u73af\u200b\u4f7f\u7528\u200b\u5de5\u5177\u200b\u7684\u200b LLMs\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u6e05\u6670\u200b\u800c\u200b\u5468\u5230\u200b\u5730\u200b\u8bbe\u8ba1\u200b\u5de5\u5177\u96c6\u200b\u53ca\u5176\u200b\u6587\u6863\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u6211\u4eec\u200b\u5728\u200b\u9644\u5f55\u200b 2\uff08\u201c\u200b\u63d0\u793a\u200b\u5de5\u7a0b\u200b\u60a8\u200b\u7684\u200b\u5de5\u5177\u200b\u201d\uff09\u200b\u4e2d\u200b\u6269\u5c55\u200b\u4e86\u200b\u5de5\u5177\u200b\u5f00\u53d1\u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u3002</p> <p>\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u4ee3\u7406\u200b\uff1a\u200b\u4ee3\u7406\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u5f00\u653e\u5f0f\u200b\u95ee\u9898\u200b\uff0c\u200b\u5176\u4e2d\u200b\u96be\u4ee5\u200b\u6216\u200b\u65e0\u6cd5\u200b\u9884\u6d4b\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6b65\u9aa4\u200b\u6570\u91cf\u200b\uff0c\u200b\u5e76\u4e14\u200b\u60a8\u200b\u65e0\u6cd5\u200b\u786c\u200b\u7f16\u7801\u200b\u56fa\u5b9a\u200b\u8def\u5f84\u200b\u3002LLM \u200b\u53ef\u80fd\u200b\u4f1a\u200b\u8fd0\u884c\u200b\u591a\u6b21\u200b\uff0c\u200b\u60a8\u200b\u5fc5\u987b\u200b\u5bf9\u200b\u5176\u200b\u51b3\u7b56\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7a0b\u5ea6\u200b\u7684\u200b\u4fe1\u4efb\u200b\u3002\u200b\u4ee3\u7406\u200b\u7684\u200b\u81ea\u4e3b\u6027\u200b\u4f7f\u200b\u5176\u200b\u6210\u4e3a\u200b\u5728\u200b\u53ef\u4fe1\u200b\u73af\u5883\u200b\u4e2d\u200b\u6269\u5c55\u200b\u4efb\u52a1\u200b\u7684\u200b\u7406\u60f3\u200b\u9009\u62e9\u200b\u3002</p> <p>\u200b\u4ee3\u7406\u200b\u7684\u200b\u81ea\u4e3b\u6027\u200b\u610f\u5473\u7740\u200b\u66f4\u200b\u9ad8\u200b\u7684\u200b\u6210\u672c\u200b\u548c\u200b\u6f5c\u5728\u200b\u7684\u200b\u9519\u8bef\u200b\u7d2f\u79ef\u200b\u3002\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\u5728\u200b\u6c99\u76d2\u200b\u73af\u5883\u200b\u4e2d\u200b\u8fdb\u884c\u200b\u5e7f\u6cdb\u200b\u6d4b\u8bd5\u200b\uff0c\u200b\u5e76\u200b\u8bbe\u7f6e\u200b\u9002\u5f53\u200b\u7684\u200b\u62a4\u680f\u200b\u3002</p> <p>\u200b\u4ee3\u7406\u200b\u6709\u7528\u200b\u7684\u200b\u793a\u4f8b\u200b\uff1a</p> <p>\u200b\u4ee5\u4e0b\u200b\u793a\u4f8b\u200b\u6765\u81ea\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u65bd\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u4e2a\u200b\u7f16\u7801\u200b\u4ee3\u7406\u200b\uff0c\u200b\u7528\u4e8e\u200b\u89e3\u51b3\u200b SWE-bench \u200b\u4efb\u52a1\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u4efb\u52a1\u200b\u6d89\u53ca\u200b\u57fa\u4e8e\u200b\u4efb\u52a1\u200b\u63cf\u8ff0\u200b\u5bf9\u200b\u591a\u4e2a\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u7f16\u8f91\u200b\uff1b</li> <li>\u200b\u6211\u4eec\u200b\u7684\u200b\u201c\u200b\u8ba1\u7b97\u673a\u200b\u4f7f\u7528\u200b\u201d\u200b\u53c2\u8003\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u5176\u4e2d\u200b Claude \u200b\u4f7f\u7528\u200b\u8ba1\u7b97\u673a\u200b\u5b8c\u6210\u200b\u4efb\u52a1\u200b\u3002</li> </ul> <p>\u200b\u7f16\u7801\u200b\u4ee3\u7406\u200b\u7684\u200b\u9ad8\u7ea7\u200b\u6d41\u7a0b\u200b \u200b\u7ec4\u5408\u200b\u548c\u200b\u5b9a\u5236\u200b\u8fd9\u4e9b\u200b\u6a21\u5f0f\u200b \u200b\u8fd9\u4e9b\u200b\u6784\u5efa\u200b\u6a21\u5757\u200b\u4e0d\u662f\u200b\u89c4\u5b9a\u6027\u200b\u7684\u200b\u3002\u200b\u5b83\u4eec\u200b\u662f\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u5851\u9020\u200b\u548c\u200b\u7ec4\u5408\u200b\u4ee5\u200b\u9002\u5e94\u200b\u4e0d\u540c\u200b\u7528\u4f8b\u200b\u7684\u200b\u5e38\u89c1\u200b\u6a21\u5f0f\u200b\u3002\u200b\u4e0e\u200b\u4efb\u4f55\u200b LLM \u200b\u529f\u80fd\u200b\u4e00\u6837\u200b\uff0c\u200b\u6210\u529f\u200b\u7684\u200b\u5173\u952e\u200b\u662f\u200b\u8861\u91cf\u200b\u6027\u80fd\u200b\u5e76\u200b\u8fed\u4ee3\u200b\u5b9e\u65bd\u200b\u3002\u200b\u518d\u6b21\u200b\u5f3a\u8c03\u200b\uff1a\u200b\u60a8\u200b\u5e94\u8be5\u200b\u4ec5\u200b\u5728\u200b\u590d\u6742\u6027\u200b\u660e\u663e\u6539\u5584\u200b\u7ed3\u679c\u200b\u65f6\u624d\u200b\u8003\u8651\u200b\u589e\u52a0\u200b\u590d\u6742\u6027\u200b\u3002</p> <p>\u200b\u603b\u7ed3\u200b \u200b\u5728\u200b LLM \u200b\u9886\u57df\u200b\u7684\u200b\u6210\u529f\u200b\u4e0d\u662f\u200b\u6784\u5efa\u200b\u6700\u200b\u590d\u6742\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002\u200b\u800c\u662f\u200b\u6784\u5efa\u200b\u9002\u5408\u200b\u60a8\u200b\u9700\u6c42\u200b\u7684\u200b\u7cfb\u7edf\u200b\u3002\u200b\u4ece\u200b\u7b80\u5355\u200b\u7684\u200b\u63d0\u793a\u200b\u5f00\u59cb\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5168\u9762\u200b\u8bc4\u4f30\u200b\u4f18\u5316\u200b\u5b83\u4eec\u200b\uff0c\u200b\u53ea\u6709\u200b\u5728\u200b\u66f4\u200b\u7b80\u5355\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u4e0d\u8db3\u200b\u65f6\u624d\u200b\u6dfb\u52a0\u200b\u591a\u200b\u6b65\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\u3002</p> <p>\u200b\u5728\u200b\u5b9e\u65bd\u200b\u4ee3\u7406\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c1d\u8bd5\u200b\u9075\u5faa\u200b\u4e09\u4e2a\u200b\u6838\u5fc3\u200b\u539f\u5219\u200b\uff1a</p> <ol> <li>\u200b\u4fdd\u6301\u200b\u4ee3\u7406\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u7b80\u5355\u200b\u6027\u200b\u3002</li> <li>\u200b\u901a\u8fc7\u200b\u660e\u786e\u200b\u663e\u793a\u200b\u4ee3\u7406\u200b\u7684\u200b\u89c4\u5212\u200b\u6b65\u9aa4\u200b\u6765\u200b\u4f18\u5148\u200b\u8003\u8651\u200b\u900f\u660e\u5ea6\u200b\u3002</li> <li>\u200b\u901a\u8fc7\u200b\u5f7b\u5e95\u200b\u7684\u200b\u6587\u6863\u200b\u548c\u200b\u6d4b\u8bd5\u200b\u7cbe\u5fc3\u8bbe\u8ba1\u200b\u4ee3\u7406\u200b-\u200b\u8ba1\u7b97\u673a\u200b\u63a5\u53e3\u200b\uff08ACI\uff09\u3002</li> </ol> <p>\u200b\u6846\u67b6\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u5feb\u901f\u200b\u5165\u95e8\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u8fdb\u5165\u200b\u751f\u4ea7\u200b\u65f6\u200b\u4e0d\u8981\u200b\u72b9\u8c6b\u200b\u51cf\u5c11\u200b\u62bd\u8c61\u200b\u5c42\u200b\u5e76\u200b\u4f7f\u7528\u200b\u57fa\u672c\u200b\u7ec4\u4ef6\u200b\u6784\u5efa\u200b\u3002\u200b\u901a\u8fc7\u200b\u9075\u5faa\u200b\u8fd9\u4e9b\u200b\u539f\u5219\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e0d\u4ec5\u200b\u5f3a\u5927\u200b\u800c\u4e14\u200b\u53ef\u9760\u200b\u3001\u200b\u53ef\u200b\u7ef4\u62a4\u200b\u5e76\u200b\u53d7\u200b\u7528\u6237\u200b\u4fe1\u4efb\u200b\u7684\u200b\u4ee3\u7406\u200b\u3002</p> <p>\u200b\u81f4\u8c22\u200b \u200b\u7531\u200b Erik Schluntz \u200b\u548c\u200b Barry Zhang \u200b\u64b0\u5199\u200b\u3002\u200b\u8fd9\u9879\u200b\u5de5\u4f5c\u200b\u501f\u9274\u200b\u4e86\u200b\u6211\u4eec\u200b\u5728\u200b Anthropic \u200b\u6784\u5efa\u200b\u4ee3\u7406\u200b\u7684\u200b\u7ecf\u9a8c\u200b\u4ee5\u53ca\u200b\u5ba2\u6237\u200b\u5206\u4eab\u200b\u7684\u200b\u5b9d\u8d35\u200b\u89c1\u89e3\u200b\uff0c\u200b\u6211\u4eec\u200b\u5bf9\u6b64\u200b\u6df1\u8868\u200b\u611f\u8c22\u200b\u3002</p> <p>\u200b\u9644\u5f55\u200b 1\uff1a\u200b\u5b9e\u8df5\u200b\u4e2d\u200b\u7684\u200b\u4ee3\u7406\u200b \u200b\u6211\u4eec\u200b\u4e0e\u200b\u5ba2\u6237\u200b\u7684\u200b\u5de5\u4f5c\u200b\u63ed\u793a\u200b\u4e86\u200b\u4e24\u4e2a\u200b\u7279\u522b\u200b\u6709\u200b\u524d\u9014\u200b\u7684\u200b AI \u200b\u4ee3\u7406\u200b\u5e94\u7528\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e0a\u8ff0\u200b\u6a21\u5f0f\u200b\u7684\u200b\u5b9e\u7528\u4ef7\u503c\u200b\u3002\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u5e94\u7528\u200b\u90fd\u200b\u8bf4\u660e\u200b\u4e86\u200b\u4ee3\u7406\u200b\u5728\u200b\u9700\u8981\u200b\u5bf9\u8bdd\u200b\u548c\u200b\u64cd\u4f5c\u200b\u3001\u200b\u6709\u200b\u660e\u786e\u200b\u6210\u529f\u200b\u6807\u51c6\u200b\u3001\u200b\u542f\u7528\u200b\u53cd\u9988\u200b\u5faa\u73af\u200b\u5e76\u200b\u6574\u5408\u200b\u6709\u200b\u610f\u4e49\u200b\u7684\u200b\u4eba\u7c7b\u200b\u76d1\u7763\u200b\u7684\u200b\u4efb\u52a1\u200b\u4e2d\u200b\u589e\u52a0\u200b\u6700\u5927\u200b\u4ef7\u503c\u200b\u3002</p> <p>A. \u200b\u5ba2\u6237\u200b\u652f\u6301\u200b \u200b\u5ba2\u6237\u200b\u652f\u6301\u200b\u7ed3\u5408\u200b\u4e86\u200b\u719f\u6089\u200b\u7684\u200b\u804a\u5929\u200b\u673a\u5668\u4eba\u200b\u754c\u9762\u200b\u548c\u200b\u901a\u8fc7\u200b\u5de5\u5177\u200b\u96c6\u6210\u200b\u589e\u5f3a\u200b\u7684\u200b\u529f\u80fd\u200b\u3002\u200b\u8fd9\u200b\u662f\u200b\u66f4\u200b\u5f00\u653e\u5f0f\u200b\u4ee3\u7406\u200b\u7684\u200b\u81ea\u7136\u200b\u5951\u5408\u200b\uff0c\u200b\u56e0\u4e3a\u200b\uff1a</p> <ul> <li>\u200b\u652f\u6301\u200b\u4ea4\u4e92\u200b\u81ea\u7136\u200b\u5730\u200b\u9075\u5faa\u200b\u5bf9\u8bdd\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u540c\u65f6\u200b\u9700\u8981\u200b\u8bbf\u95ee\u200b\u5916\u90e8\u200b\u4fe1\u606f\u200b\u548c\u200b\u64cd\u4f5c\u200b\uff1b</li> <li>\u200b\u53ef\u4ee5\u200b\u96c6\u6210\u200b\u5de5\u5177\u200b\u4ee5\u200b\u63d0\u53d6\u200b\u5ba2\u6237\u200b\u6570\u636e\u200b\u3001\u200b\u8ba2\u5355\u200b\u5386\u53f2\u8bb0\u5f55\u200b\u548c\u200b\u77e5\u8bc6\u5e93\u200b\u6587\u7ae0\u200b\uff1b</li> <li>\u200b\u8bf8\u5982\u200b\u53d1\u653e\u200b\u9000\u6b3e\u200b\u6216\u200b\u66f4\u65b0\u200b\u7968\u636e\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u53ef\u4ee5\u200b\u4ee5\u200b\u7f16\u7a0b\u200b\u65b9\u5f0f\u200b\u5904\u7406\u200b\uff1b\u200b\u4ee5\u53ca\u200b</li> <li>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u660e\u786e\u200b\u8861\u91cf\u200b\u6210\u529f\u200b\u3002</li> </ul> <p>\u200b\u51e0\u5bb6\u200b\u516c\u53f8\u200b\u901a\u8fc7\u200b\u57fa\u4e8e\u200b\u4f7f\u7528\u200b\u60c5\u51b5\u200b\u7684\u200b\u5b9a\u4ef7\u200b\u6a21\u578b\u200b\u5c55\u793a\u200b\u4e86\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u7684\u200b\u53ef\u884c\u6027\u200b\uff0c\u200b\u8be5\u200b\u6a21\u578b\u200b\u4ec5\u200b\u5bf9\u200b\u6210\u529f\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\u6536\u8d39\u200b\uff0c\u200b\u663e\u793a\u200b\u4e86\u200b\u5bf9\u200b\u5176\u200b\u4ee3\u7406\u200b\u6709\u6548\u6027\u200b\u7684\u200b\u4fe1\u5fc3\u200b\u3002</p> <p>B. \u200b\u7f16\u7801\u200b\u4ee3\u7406\u200b \u200b\u8f6f\u4ef6\u5f00\u53d1\u200b\u9886\u57df\u200b\u5c55\u793a\u200b\u4e86\u200b LLM \u200b\u529f\u80fd\u200b\u7684\u200b\u663e\u8457\u200b\u6f5c\u529b\u200b\uff0c\u200b\u80fd\u529b\u200b\u4ece\u200b\u4ee3\u7801\u200b\u5b8c\u6210\u200b\u53d1\u5c55\u200b\u5230\u200b\u81ea\u4e3b\u200b\u95ee\u9898\u200b\u89e3\u51b3\u200b\u3002\u200b\u4ee3\u7406\u200b\u7279\u522b\u200b\u6709\u6548\u200b\uff0c\u200b\u56e0\u4e3a\u200b\uff1a</p> <ul> <li>\u200b\u4ee3\u7801\u200b\u89e3\u51b3\u65b9\u6848\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u81ea\u52a8\u5316\u200b\u6d4b\u8bd5\u200b\u9a8c\u8bc1\u200b\uff1b</li> <li>\u200b\u4ee3\u7406\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6d4b\u8bd5\u200b\u7ed3\u679c\u200b\u4f5c\u4e3a\u200b\u53cd\u9988\u200b\u8fed\u4ee3\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff1b</li> <li>\u200b\u95ee\u9898\u200b\u7a7a\u95f4\u200b\u5b9a\u4e49\u660e\u786e\u200b\u4e14\u200b\u7ed3\u6784\u5316\u200b\uff1b\u200b\u4ee5\u53ca\u200b</li> <li>\u200b\u8f93\u51fa\u200b\u8d28\u91cf\u200b\u53ef\u4ee5\u200b\u5ba2\u89c2\u200b\u8861\u91cf\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b\u6211\u4eec\u200b\u81ea\u5df1\u200b\u7684\u200b\u5b9e\u65bd\u200b\u4e2d\u200b\uff0c\u200b\u4ee3\u7406\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u62c9\u53d6\u200b\u8bf7\u6c42\u200b\u63cf\u8ff0\u200b\u5355\u72ec\u200b\u89e3\u51b3\u200b SWE-bench Verified \u200b\u57fa\u51c6\u200b\u4e2d\u200b\u7684\u200b\u771f\u5b9e\u200b GitHub \u200b\u95ee\u9898\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u867d\u7136\u200b\u81ea\u52a8\u5316\u200b\u6d4b\u8bd5\u200b\u6709\u52a9\u4e8e\u200b\u9a8c\u8bc1\u200b\u529f\u80fd\u200b\uff0c\u200b\u4f46\u200b\u4eba\u7c7b\u200b\u5ba1\u67e5\u200b\u5bf9\u4e8e\u200b\u786e\u4fdd\u200b\u89e3\u51b3\u65b9\u6848\u200b\u7b26\u5408\u200b\u66f4\u200b\u5e7f\u6cdb\u200b\u7684\u200b\u7cfb\u7edf\u200b\u8981\u6c42\u200b\u4ecd\u7136\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002</p> <p>\u200b\u9644\u5f55\u200b 2\uff1a\u200b\u63d0\u793a\u200b\u5de5\u7a0b\u200b\u60a8\u200b\u7684\u200b\u5de5\u5177\u200b \u200b\u65e0\u8bba\u200b\u60a8\u200b\u6784\u5efa\u200b\u54ea\u200b\u79cd\u200b\u4ee3\u7406\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5de5\u5177\u200b\u90fd\u200b\u53ef\u80fd\u200b\u662f\u200b\u60a8\u200b\u4ee3\u7406\u200b\u7684\u200b\u91cd\u8981\u200b\u7ec4\u6210\u90e8\u5206\u200b\u3002\u200b\u5de5\u5177\u200b\u4f7f\u200b Claude \u200b\u80fd\u591f\u200b\u901a\u8fc7\u200b\u5728\u200b\u6211\u4eec\u200b\u7684\u200b API \u200b\u4e2d\u200b\u6307\u5b9a\u200b\u5176\u200b\u786e\u5207\u200b\u7ed3\u6784\u200b\u548c\u200b\u5b9a\u4e49\u200b\u4e0e\u200b\u5916\u90e8\u200b\u670d\u52a1\u200b\u548c\u200b API \u200b\u4ea4\u4e92\u200b\u3002\u200b\u5f53\u200b Claude \u200b\u54cd\u5e94\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u5b83\u200b\u8ba1\u5212\u200b\u8c03\u7528\u200b\u5de5\u5177\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u5728\u200b API \u200b\u54cd\u5e94\u200b\u4e2d\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u5de5\u5177\u200b\u4f7f\u7528\u200b\u5757\u200b\u3002\u200b\u5de5\u5177\u200b\u5b9a\u4e49\u200b\u548c\u200b\u89c4\u8303\u200b\u5e94\u200b\u4e0e\u200b\u60a8\u200b\u7684\u200b\u6574\u4f53\u200b\u63d0\u793a\u200b\u4e00\u6837\u200b\u53d7\u5230\u200b\u63d0\u793a\u200b\u5de5\u7a0b\u200b\u7684\u200b\u5173\u6ce8\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u7b80\u77ed\u200b\u7684\u200b\u9644\u5f55\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5982\u4f55\u200b\u63d0\u793a\u200b\u5de5\u7a0b\u200b\u60a8\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p> <p>\u200b\u901a\u5e38\u200b\u6709\u200b\u51e0\u79cd\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u6307\u5b9a\u200b\u76f8\u540c\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u7f16\u5199\u200b\u5dee\u5f02\u200b\u6216\u200b\u91cd\u5199\u200b\u6574\u4e2a\u200b\u6587\u4ef6\u200b\u6765\u200b\u6307\u5b9a\u200b\u6587\u4ef6\u200b\u7f16\u8f91\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u7ed3\u6784\u5316\u200b\u8f93\u51fa\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u5728\u200b markdown \u200b\u6216\u200b JSON \u200b\u4e2d\u200b\u8fd4\u56de\u200b\u4ee3\u7801\u200b\u3002\u200b\u5728\u200b\u8f6f\u4ef6\u5de5\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5dee\u5f02\u200b\u662f\u200b\u8868\u9762\u200b\u4e0a\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u65e0\u635f\u200b\u5730\u200b\u4ece\u200b\u4e00\u79cd\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u53e6\u200b\u4e00\u79cd\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u67d0\u4e9b\u200b\u683c\u5f0f\u200b\u6bd4\u200b\u5176\u4ed6\u200b\u683c\u5f0f\u200b\u66f4\u96be\u200b\u8ba9\u200b LLM \u200b\u7f16\u5199\u200b\u3002\u200b\u7f16\u5199\u200b\u5dee\u5f02\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\u5728\u200b\u7f16\u5199\u200b\u65b0\u200b\u4ee3\u7801\u200b\u4e4b\u524d\u200b\u5757\u5934\u200b\u4e2d\u6709\u200b\u591a\u5c11\u200b\u884c\u200b\u6b63\u5728\u200b\u66f4\u6539\u200b\u3002\u200b\u5728\u200b JSON \u200b\u4e2d\u200b\u7f16\u5199\u200b\u4ee3\u7801\u200b\uff08\u200b\u4e0e\u200b markdown \u200b\u76f8\u6bd4\u200b\uff09\u200b\u9700\u8981\u200b\u5bf9\u200b\u6362\u884c\u7b26\u200b\u548c\u200b\u5f15\u53f7\u200b\u8fdb\u884c\u200b\u989d\u5916\u200b\u7684\u200b\u8f6c\u4e49\u200b\u3002</p> <p>\u200b\u6211\u4eec\u200b\u5173\u4e8e\u200b\u51b3\u5b9a\u200b\u5de5\u5177\u200b\u683c\u5f0f\u200b\u7684\u200b\u5efa\u8bae\u200b\u5982\u4e0b\u200b\uff1a</p> <ul> <li>\u200b\u7ed9\u200b\u6a21\u578b\u200b\u8db3\u591f\u200b\u7684\u200b\u4ee4\u724c\u200b\u201c\u200b\u601d\u8003\u200b\u201d\uff0c\u200b\u4ee5\u514d\u200b\u5b83\u200b\u628a\u200b\u81ea\u5df1\u200b\u903c\u5165\u200b\u7edd\u5883\u200b\u3002</li> <li>\u200b\u4fdd\u6301\u200b\u683c\u5f0f\u200b\u63a5\u8fd1\u200b\u6a21\u578b\u200b\u5728\u200b\u4e92\u8054\u7f51\u200b\u6587\u672c\u200b\u4e2d\u200b\u81ea\u7136\u200b\u770b\u5230\u200b\u7684\u200b\u5185\u5bb9\u200b\u3002</li> <li>\u200b\u786e\u4fdd\u200b\u6ca1\u6709\u200b\u683c\u5f0f\u200b\u201c\u200b\u5f00\u9500\u200b\u201d\uff0c\u200b\u4f8b\u5982\u200b\u5fc5\u987b\u200b\u51c6\u786e\u200b\u8ba1\u7b97\u200b\u6570\u5343\u200b\u884c\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6216\u200b\u5bf9\u200b\u5176\u200b\u7f16\u5199\u200b\u7684\u200b\u4efb\u4f55\u200b\u4ee3\u7801\u200b\u8fdb\u884c\u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u4e49\u200b\u3002</li> </ul> <p>\u200b\u4e00\u4e2a\u200b\u7ecf\u9a8c\u200b\u6cd5\u5219\u200b\u662f\u200b\u8003\u8651\u200b\u5728\u200b\u4eba\u673a\u754c\u9762\u200b\uff08HCI\uff09\u200b\u4e0a\u200b\u6295\u5165\u200b\u4e86\u200b\u591a\u5c11\u200b\u7cbe\u529b\u200b\uff0c\u200b\u5e76\u200b\u8ba1\u5212\u200b\u5728\u200b\u521b\u5efa\u200b\u826f\u597d\u200b\u7684\u200b\u4ee3\u7406\u200b-\u200b\u8ba1\u7b97\u673a\u200b\u754c\u9762\u200b\uff08ACI\uff09\u200b\u4e0a\u200b\u6295\u5165\u200b\u540c\u6837\u200b\u591a\u200b\u7684\u200b\u7cbe\u529b\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5173\u4e8e\u200b\u5982\u4f55\u200b\u505a\u5230\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u7684\u200b\u60f3\u6cd5\u200b\uff1a</p> <ul> <li>\u200b\u7ad9\u200b\u5728\u200b\u6a21\u578b\u200b\u7684\u200b\u89d2\u5ea6\u200b\u601d\u8003\u200b\u3002\u200b\u6839\u636e\u200b\u63cf\u8ff0\u200b\u548c\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u7528\u200b\u6b64\u200b\u5de5\u5177\u200b\u662f\u5426\u200b\u663e\u800c\u6613\u89c1\u200b\uff0c\u200b\u8fd8\u662f\u200b\u60a8\u200b\u9700\u8981\u200b\u4ed4\u7ec6\u200b\u601d\u8003\u200b\uff1f\u200b\u5982\u679c\u200b\u662f\u200b\u540e\u8005\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5bf9\u6a21\u578b\u200b\u6765\u8bf4\u200b\u53ef\u80fd\u200b\u4e5f\u200b\u662f\u200b\u5982\u6b64\u200b\u3002\u200b\u4e00\u4e2a\u200b\u597d\u200b\u7684\u200b\u5de5\u5177\u200b\u5b9a\u4e49\u200b\u901a\u5e38\u200b\u5305\u62ec\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u3001\u200b\u8fb9\u7f18\u200b\u60c5\u51b5\u200b\u3001\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\u8981\u6c42\u200b\u4ee5\u53ca\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u5de5\u5177\u200b\u7684\u200b\u660e\u786e\u200b\u754c\u9650\u200b\u3002</li> <li>\u200b\u60a8\u200b\u5982\u4f55\u200b\u66f4\u6539\u200b\u53c2\u6570\u200b\u540d\u79f0\u200b\u6216\u200b\u63cf\u8ff0\u200b\u4ee5\u200b\u4f7f\u200b\u4e8b\u60c5\u200b\u66f4\u200b\u660e\u663e\u200b\uff1f\u200b\u5c06\u200b\u5176\u200b\u89c6\u4e3a\u200b\u4e3a\u200b\u56e2\u961f\u200b\u4e2d\u200b\u7684\u200b\u521d\u7ea7\u200b\u5f00\u53d1\u4eba\u5458\u200b\u7f16\u5199\u200b\u4e00\u4e2a\u200b\u4f18\u79c0\u200b\u7684\u200b\u6587\u6863\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u5728\u200b\u4f7f\u7528\u200b\u8bb8\u591a\u200b\u7c7b\u4f3c\u200b\u5de5\u5177\u200b\u65f6\u200b\uff0c\u200b\u8fd9\u200b\u4e00\u70b9\u200b\u5c24\u5176\u200b\u91cd\u8981\u200b\u3002</li> <li>\u200b\u6d4b\u8bd5\u200b\u6a21\u578b\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u60a8\u200b\u7684\u200b\u5de5\u5177\u200b\uff1a\u200b\u5728\u200b\u6211\u4eec\u200b\u7684\u200b\u5de5\u4f5c\u53f0\u200b\u4e2d\u200b\u8fd0\u884c\u200b\u8bb8\u591a\u200b\u793a\u4f8b\u200b\u8f93\u5165\u200b\uff0c\u200b\u770b\u770b\u200b\u6a21\u578b\u200b\u72af\u200b\u4e86\u200b\u4ec0\u4e48\u200b\u9519\u8bef\u200b\uff0c\u200b\u5e76\u200b\u8fdb\u884c\u200b\u8fed\u4ee3\u200b\u3002</li> <li>\u200b\u9632\u9519\u200b\u60a8\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\u200b\u66f4\u6539\u200b\u53c2\u6570\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u66f4\u200b\u96be\u200b\u72af\u9519\u8bef\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b\u6784\u5efa\u200b\u6211\u4eec\u200b\u7684\u200b SWE-bench \u200b\u4ee3\u7406\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5b9e\u9645\u4e0a\u200b\u82b1\u200b\u4e86\u200b\u66f4\u200b\u591a\u200b\u65f6\u95f4\u200b\u4f18\u5316\u200b\u6211\u4eec\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u6574\u4f53\u200b\u63d0\u793a\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u5f53\u200b\u4ee3\u7406\u200b\u79fb\u51fa\u200b\u6839\u76ee\u5f55\u200b\u540e\u200b\uff0c\u200b\u6a21\u578b\u200b\u5728\u200b\u4f7f\u7528\u200b\u76f8\u5bf9\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u7684\u200b\u5de5\u5177\u200b\u65f6\u4f1a\u200b\u72af\u9519\u8bef\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5de5\u5177\u200b\u66f4\u200b\u6539\u4e3a\u200b\u59cb\u7ec8\u200b\u9700\u8981\u200b\u7edd\u5bf9\u200b\u6587\u4ef6\u200b\u8def\u5f84\u200b\u2014\u2014\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u6a21\u578b\u200b\u4f7f\u7528\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u65f6\u200b\u6beb\u65e0\u200b\u7455\u75b5\u200b\u3002</p>"},{"location":"ai/sky-t1/","title":"Sky-T1: Train Your Own O1-Preview Model for Under $450","text":"<p>We introduce Sky-T1-32B-Preview, a reasoning model that performs comparably to o1-preview on popular reasoning and coding benchmarks. Remarkably, Sky-T1-32B-Preview was trained for less than $450, demonstrating that advanced reasoning capabilities can be replicated in a cost-effective manner. All code is open-sourced.</p>"},{"location":"ai/sky-t1/#executive-summary","title":"Executive Summary","text":"<p>This breakthrough represents a significant democratization of advanced AI reasoning capabilities. By making high-quality reasoning models accessible at a fraction of the traditional cost, Sky-T1 opens new possibilities for:</p> <ul> <li>Academic Research - Universities and research institutions with limited budgets</li> <li>Small Companies - Startups and SMEs seeking advanced AI capabilities</li> <li>Individual Developers - Personal projects and experimentation</li> <li>Developing Countries - Regions with limited computational resources</li> </ul>"},{"location":"ai/sky-t1/#key-achievements","title":"Key Achievements","text":"<ul> <li>\ud83c\udfaf Performance Parity: Matches o1-preview on reasoning and coding benchmarks</li> <li>\ud83d\udcb0 Cost Efficiency: Training cost under $450 (vs. millions for proprietary models)</li> <li>\ud83d\udd13 Full Transparency: Complete open-source release including data, code, and weights</li> <li>\u26a1 Fast Training: 19 hours on 8 H100 GPUs</li> <li>\ud83c\udf0d Accessibility: Democratizes advanced reasoning AI for everyone</li> </ul>"},{"location":"ai/sky-t1/#background-and-motivation","title":"Background and Motivation","text":"<p>Models like o1 and Gemini 2.0 excel at reasoning by generating long chains of internal thought to solve complex tasks, showcasing remarkable advances in AI capabilities. However, their technical details and model weights remain inaccessible, creating barriers for academic and open-source community participation.</p>"},{"location":"ai/sky-t1/#the-problem-with-closed-models","title":"The Problem with Closed Models","text":"<p>Limited Access: Proprietary models restrict research and innovation - No access to training methodologies - No model weights for fine-tuning - No transparency in data curation - High API costs for extensive use</p> <p>Research Barriers: Academic institutions face significant challenges - Cannot reproduce results independently - Limited ability to build upon existing work - Difficulty in understanding failure modes - Restricted customization for specific domains</p>"},{"location":"ai/sky-t1/#open-source-response","title":"Open Source Response","text":"<p>In response, notable efforts have emerged to train open-weight reasoning models in the mathematics domain, such as STILL-2 and Journey. Meanwhile, we, the NovaSky team at UC Berkeley, have been exploring various techniques to enhance the reasoning capabilities of both base and instruction-tuned models. In this work, we achieve competitive reasoning performance not only in mathematics but also in coding domains.</p>"},{"location":"ai/sky-t1/#why-sky-t1-matters","title":"Why Sky-T1 Matters","text":"<p>Democratization: Makes advanced reasoning accessible to everyone Innovation: Enables rapid experimentation and customization Education: Provides learning opportunities for AI researchers Competition: Drives innovation through open collaboration</p>"},{"location":"ai/sky-t1/#complete-open-source-advancing-together","title":"Complete Open Source: Advancing Together","text":"<p>To ensure our work benefits the broader community, we are fully committed to open-source collaboration. We open-source all details (i.e., data, code, model weights) to enable the community to easily reproduce and improve upon our results:</p>"},{"location":"ai/sky-t1/#complete-resource-package","title":"\ud83d\udd27 Complete Resource Package","text":"<ul> <li>Infrastructure: Build data, train, and evaluate models in one repository</li> <li>Complete training pipeline</li> <li>Data preprocessing scripts</li> <li>Evaluation frameworks</li> <li> <p>Deployment tools</p> </li> <li> <p>Training Data: 17K high-quality samples used to train Sky-T1-32B-Preview</p> </li> <li>10K mathematics problems (AIME, MATH, NuminaMATH)</li> <li>5K coding challenges (APPs, TACO)</li> <li>1K science and puzzle problems (STILL-2)</li> <li> <p>Quality-filtered through rejection sampling</p> </li> <li> <p>Technical Documentation: Comprehensive technical report and WandB logs</p> </li> <li>Detailed methodology</li> <li>Training hyperparameters</li> <li>Evaluation protocols</li> <li> <p>Performance analysis</p> </li> <li> <p>Model Weights: Ready-to-use 32B model weights</p> </li> <li>HuggingFace compatible format</li> <li>Quantized versions available</li> <li>Fine-tuning checkpoints</li> <li>Inference examples</li> </ul>"},{"location":"ai/sky-t1/#transparency-comparison","title":"\ud83d\udcca Transparency Comparison","text":"Feature Sky-T1-32B-Preview STILL-2 Journey QwQ o1 Training Data \u2705 Full Dataset \u2705 Available \u274c Closed \u274c Closed \u274c Closed Source Code \u2705 Complete Pipeline \u274c Limited \u274c None \u274c None \u274c None Technical Report \u2705 Detailed \u2705 Available \u2705 Available \u274c Limited \u274c None Mathematics Domain \u2705 Excellent \u2705 Strong \u2705 Good \u2705 Strong \u2705 Excellent Coding Domain \u2705 Excellent \u274c Limited \u274c None \u2705 Strong \u2705 Excellent Model Weights \u2705 Open Access \u2705 Available \u274c Closed \u2705 Available \u274c Closed Training Cost \u2705 $450 \u2753 Unknown \u2753 Unknown \u2753 Unknown \ud83d\udcb0 Millions Reproducibility \u2705 Full \ud83d\udd36 Partial \u274c None \ud83d\udd36 Partial \u274c None"},{"location":"ai/sky-t1/#community-impact-goals","title":"\ud83c\udfaf Community Impact Goals","text":"<p>By sharing all these resources, our goal is to enable the academic and open-source community to:</p> <p>Build Upon Our Work - Use our model as a starting point for specialized applications - Extend our methodology to new domains - Improve upon our training techniques</p> <p>Explore New Possibilities - Experiment with different reasoning approaches - Test novel evaluation methods - Develop domain-specific reasoning models</p> <p>Push the Boundaries - Advance the state-of-the-art in reasoning models - Make AI more accessible and democratic - Foster innovation through collaboration</p>"},{"location":"ai/sky-t1/#getting-started","title":"\ud83d\ude80 Getting Started","text":"<ol> <li> <p>Clone the Repository <pre><code>git clone https://github.com/NovaSky-AI/SkyThought.git\ncd SkyThought\n</code></pre></p> </li> <li> <p>Install Dependencies <pre><code>pip install -r requirements.txt\n</code></pre></p> </li> <li> <p>Download Model Weights <pre><code># From HuggingFace\nhuggingface-cli download NovaSky-AI/Sky-T1-32B-Preview\n</code></pre></p> </li> <li> <p>Run Inference <pre><code>from transformers import AutoTokenizer, AutoModelForCausalLM\n\nmodel = AutoModelForCausalLM.from_pretrained(\"NovaSky-AI/Sky-T1-32B-Preview\")\ntokenizer = AutoTokenizer.from_pretrained(\"NovaSky-AI/Sky-T1-32B-Preview\")\n\n# Your reasoning task here\n</code></pre></p> </li> </ol>"},{"location":"ai/sky-t1/#methodology-building-sky-t1-step-by-step","title":"Methodology: Building Sky-T1 Step by Step","text":"<p>Our approach combines innovative data curation, efficient training techniques, and rigorous evaluation to create a cost-effective reasoning model that rivals proprietary alternatives.</p>"},{"location":"ai/sky-t1/#data-curation-pipeline","title":"\ud83d\udd04 Data Curation Pipeline","text":""},{"location":"ai/sky-t1/#step-1-base-model-selection","title":"Step 1: Base Model Selection","text":"<p>We leveraged QwQ-32B-Preview, an open-source model with reasoning capabilities comparable to o1-preview, as our data generation engine. This choice was strategic:</p> <ul> <li>Proven Performance: QwQ demonstrates strong reasoning across multiple domains</li> <li>Open Access: Available for research and commercial use</li> <li>Cost Effective: No API costs for data generation</li> <li>Customizable: Can be fine-tuned for specific data generation needs</li> </ul>"},{"location":"ai/sky-t1/#step-2-dataset-composition","title":"Step 2: Dataset Composition","text":"<p>We carefully curated a diverse mixture of datasets to cover various reasoning domains:</p> <pre><code>\ud83d\udcca Dataset Breakdown (17K total samples):\n\u251c\u2500\u2500 Mathematics (10K samples - 59%)\n\u2502   \u251c\u2500\u2500 AIME: 2.5K (Advanced competition problems)\n\u2502   \u251c\u2500\u2500 MATH: 4K (High school to undergraduate level)\n\u2502   \u2514\u2500\u2500 NuminaMATH Olympiads: 3.5K (International competition problems)\n\u251c\u2500\u2500 Coding (5K samples - 29%)\n\u2502   \u251c\u2500\u2500 APPs: 3K (Algorithmic programming problems)\n\u2502   \u2514\u2500\u2500 TACO: 2K (Code generation and debugging)\n\u2514\u2500\u2500 Science &amp; Puzzles (1K samples - 6%)\n    \u2514\u2500\u2500 STILL-2: 1K (Scientific reasoning and logic puzzles)\n</code></pre>"},{"location":"ai/sky-t1/#step-3-quality-enhancement-through-rejection-sampling","title":"Step 3: Quality Enhancement Through Rejection Sampling","text":"<p>The Challenge: Raw model outputs often contain inconsistencies, formatting issues, and incorrect solutions.</p> <p>Our Solution: Implement rigorous rejection sampling to ensure data quality:</p> <pre><code>def rejection_sampling_pipeline(dataset, model_outputs):\n    \"\"\"\n    Quality filter for training data\n    \"\"\"\n    filtered_data = []\n\n    for problem, solution in zip(dataset, model_outputs):\n        if problem.domain == \"mathematics\":\n            # Exact match with ground truth\n            if exact_match(solution.answer, problem.ground_truth):\n                filtered_data.append((problem, solution))\n\n        elif problem.domain == \"coding\":\n            # Execute unit tests\n            if execute_tests(solution.code, problem.test_cases):\n                filtered_data.append((problem, solution))\n\n    return filtered_data\n</code></pre> <p>Results of Rejection Sampling: - Mathematics: 85% pass rate (exact answer matching) - Coding: 78% pass rate (unit test execution) - Overall: 82% of generated samples retained</p>"},{"location":"ai/sky-t1/#step-4-format-standardization-with-gpt-4o-mini","title":"Step 4: Format Standardization with GPT-4o-mini","text":"<p>The Problem: QwQ outputs varied in format, making parsing difficult and reducing model performance.</p> <p>Example - Before Standardization: <pre><code>Let me think about this step by step...\nActually, wait, let me reconsider...\nSo the answer should be... hmm, let me double-check...\nThe final answer is 42, but actually it might be 43...\n</code></pre></p> <p>After GPT-4o-mini Reformatting: <pre><code>&lt;thinking&gt;\nI need to solve this step-by-step.\n\nStep 1: Identify the key components\n- Given: [problem statement]\n- Find: [what we need to solve]\n\nStep 2: Apply relevant formulas\n[clear mathematical reasoning]\n\nStep 3: Verify the solution\n[verification steps]\n&lt;/thinking&gt;\n\nThe answer is 42.\n</code></pre></p> <p>Impact of Reformatting: - APPs dataset accuracy: 25% \u2192 90%+ (3.6x improvement) - Parsing success rate: 60% \u2192 98% - Training stability: Significantly improved</p>"},{"location":"ai/sky-t1/#training-configuration","title":"\ud83d\ude80 Training Configuration","text":""},{"location":"ai/sky-t1/#base-model-qwen25-32b-instruct","title":"Base Model: Qwen2.5-32B-Instruct","text":"<p>We selected Qwen2.5-32B-Instruct as our foundation model because:</p> <ul> <li>No Built-in Reasoning: Clean slate for reasoning capability injection</li> <li>Strong Base Performance: Excellent general language understanding</li> <li>Efficient Architecture: Optimized for training and inference</li> <li>Open License: Permissive licensing for research and commercial use</li> </ul>"},{"location":"ai/sky-t1/#training-hyperparameters","title":"Training Hyperparameters","text":"<pre><code># Training Configuration\nmodel: Qwen2.5-32B-Instruct\nepochs: 3\nlearning_rate: 1e-5\nbatch_size: 96\ngradient_accumulation_steps: 1\nwarmup_steps: 100\nweight_decay: 0.01\nmax_grad_norm: 1.0\n\n# Hardware Setup\ngpus: 8x H100 (80GB each)\nmemory_optimization: DeepSpeed Zero-3 with offloading\nmixed_precision: bf16\ngradient_checkpointing: true\n\n# Training Framework\nframework: Llama-Factory\ndistributed_training: DeepSpeed\n</code></pre>"},{"location":"ai/sky-t1/#cost-breakdown","title":"Cost Breakdown","text":"<pre><code>\ud83d\udcb0 Training Cost Analysis:\n\u251c\u2500\u2500 Hardware: 8x H100 GPUs @ $3.00/hour\n\u251c\u2500\u2500 Duration: 19 hours\n\u251c\u2500\u2500 Total Compute: 152 GPU-hours\n\u251c\u2500\u2500 Cloud Provider: Lambda Cloud\n\u2514\u2500\u2500 Total Cost: $456 (under our $450 target!)\n\n\ud83d\udd0d Cost Comparison:\n\u251c\u2500\u2500 Sky-T1: $456\n\u251c\u2500\u2500 Typical Industry Model: $1M - $10M+\n\u2514\u2500\u2500 Cost Reduction: 99.95%+\n</code></pre>"},{"location":"ai/sky-t1/#training-process","title":"Training Process","text":"<ol> <li>Data Loading: Efficient data pipeline with caching</li> <li>Model Initialization: Load pre-trained weights</li> <li>Fine-tuning: 3 epochs with careful learning rate scheduling</li> <li>Monitoring: Real-time loss tracking and validation</li> <li>Checkpointing: Regular model saves for recovery</li> <li>Evaluation: Continuous performance monitoring</li> </ol>"},{"location":"ai/sky-t1/#technical-innovations","title":"\ud83d\udd27 Technical Innovations","text":""},{"location":"ai/sky-t1/#1-efficient-memory-management","title":"1. Efficient Memory Management","text":"<pre><code># DeepSpeed Zero-3 Configuration\n{\n    \"zero_optimization\": {\n        \"stage\": 3,\n        \"offload_optimizer\": {\n            \"device\": \"cpu\",\n            \"pin_memory\": true\n        },\n        \"offload_param\": {\n            \"device\": \"cpu\",\n            \"pin_memory\": true\n        }\n    }\n}\n</code></pre>"},{"location":"ai/sky-t1/#2-gradient-accumulation-strategy","title":"2. Gradient Accumulation Strategy","text":"<ul> <li>Effective Batch Size: 96 samples</li> <li>Per-GPU Batch Size: 12 samples</li> <li>Accumulation Steps: 1 (optimized for H100 memory)</li> </ul>"},{"location":"ai/sky-t1/#3-learning-rate-scheduling","title":"3. Learning Rate Scheduling","text":"<pre><code># Cosine Annealing with Warmup\nscheduler = CosineAnnealingWarmRestarts(\n    optimizer,\n    T_0=100,  # Warmup steps\n    T_mult=1,\n    eta_min=1e-7\n)\n</code></pre>"},{"location":"ai/sky-t1/#comprehensive-evaluation-and-results","title":"\ud83d\udcca Comprehensive Evaluation and Results","text":"<p>Our evaluation demonstrates that Sky-T1-32B-Preview achieves competitive performance across multiple reasoning domains while maintaining cost-effectiveness and full transparency.</p>"},{"location":"ai/sky-t1/#benchmark-performance","title":"\ud83c\udfaf Benchmark Performance","text":""},{"location":"ai/sky-t1/#mathematics-reasoning","title":"Mathematics Reasoning","text":"Benchmark Sky-T1-32B-Preview Qwen-2.5-32B-Instruct QwQ-32B o1-preview GPT-4o Math500 82.4% 76.2% 85.4% 81.4% 76.6% AIME2024 43.3% 16.7% 50.0% 40.0% 30.0% MATH 78.9% 71.2% 82.1% 78.2% 74.5% GSM8K 94.7% 92.1% 95.2% 94.8% 92.0% <p>Key Insights: - \ud83d\udcc8 6.2% improvement over base model (Qwen-2.5-32B-Instruct) on Math500 - \ud83d\ude80 159% improvement on AIME2024 (43.3% vs 16.7%) - \ud83c\udfaf Competitive with o1-preview across all mathematics benchmarks - \ud83d\udcaa Strong performance on both elementary (GSM8K) and advanced (AIME) problems</p>"},{"location":"ai/sky-t1/#coding-performance","title":"Coding Performance","text":"Benchmark Sky-T1-32B-Preview Qwen-2.5-32B-Instruct QwQ-32B o1-preview GPT-4o LiveCodeBench-Easy 86.3% 84.6% 90.7% 92.9% 85.2% LiveCodeBench-Medium 56.8% 40.8% 56.3% 54.9% 48.3% LiveCodeBench-Hard 23.1% 12.4% 24.7% 25.8% 18.9% HumanEval 89.6% 85.4% 91.2% 90.8% 87.1% MBPP 82.3% 78.9% 84.1% 83.7% 79.5% <p>Key Insights: - \ud83d\udd25 39% improvement on LiveCodeBench-Medium (56.8% vs 40.8%) - \ud83d\udcca 86% improvement on LiveCodeBench-Hard (23.1% vs 12.4%) - \ud83c\udfaf Matches o1-preview on medium difficulty problems - \ud83d\udca1 Strong reasoning enables better performance on complex algorithmic challenges</p>"},{"location":"ai/sky-t1/#performance-analysis","title":"\ud83d\udcc8 Performance Analysis","text":""},{"location":"ai/sky-t1/#learning-curve-during-training","title":"Learning Curve During Training","text":"<pre><code># Training Progress Visualization\nEpoch 1: Math500: 78.2% \u2192 AIME2024: 32.1%\nEpoch 2: Math500: 81.1% \u2192 AIME2024: 39.7%\nEpoch 3: Math500: 82.4% \u2192 AIME2024: 43.3%\n\n# Key Observations:\n- Steady improvement across all epochs\n- No overfitting observed\n- Consistent gains on both easy and hard problems\n</code></pre>"},{"location":"ai/sky-t1/#reasoning-quality-assessment","title":"Reasoning Quality Assessment","text":"<p>We conducted qualitative analysis of Sky-T1's reasoning process:</p> <p>Strengths: - \u2705 Structured Thinking: Clear step-by-step reasoning - \u2705 Error Correction: Self-identifies and fixes mistakes - \u2705 Multiple Approaches: Explores different solution paths - \u2705 Verification: Checks answers for consistency</p> <p>Example Reasoning Chain: <pre><code>Problem: Find the sum of all positive integers n such that n\u00b2 + 19n + 88 is a perfect square.\n\n&lt;thinking&gt;\nI need to find positive integers n where n\u00b2 + 19n + 88 = k\u00b2 for some integer k.\n\nLet me rearrange: n\u00b2 + 19n + 88 = k\u00b2\nThis means: n\u00b2 + 19n + 88 - k\u00b2 = 0\n\nI can complete the square on the left side:\nn\u00b2 + 19n + (19/2)\u00b2 - (19/2)\u00b2 + 88 = k\u00b2\n(n + 19/2)\u00b2 - 361/4 + 88 = k\u00b2\n(n + 19/2)\u00b2 + 88 - 90.25 = k\u00b2\n(n + 19/2)\u00b2 - 2.25 = k\u00b2\n\nWait, let me be more careful with fractions...\n[continues with detailed mathematical reasoning]\n&lt;/thinking&gt;\n\nThe answer is n = 1, 8, giving us a sum of 9.\n</code></pre></p>"},{"location":"ai/sky-t1/#computational-efficiency","title":"Computational Efficiency","text":"Metric Sky-T1-32B-Preview QwQ-32B o1-preview Inference Speed 45 tokens/sec 42 tokens/sec ~15 tokens/sec* Memory Usage 64GB 64GB Unknown Cost per 1M tokens $2.50** $2.50** $60.00 Reasoning Length 850 tokens avg 920 tokens avg ~2000 tokens avg <p>Estimated based on API response times *Self-hosted pricing estimate</p>"},{"location":"ai/sky-t1/#ablation-studies","title":"\ud83d\udd2c Ablation Studies","text":""},{"location":"ai/sky-t1/#impact-of-training-data-composition","title":"Impact of Training Data Composition","text":"Data Mix Math500 AIME2024 LiveCodeBench-Medium Math Only 83.1% 45.2% 31.4% Code Only 71.8% 28.9% 62.1% Balanced Mix 82.4% 43.3% 56.8% <p>Conclusion: Balanced training data leads to better generalization across domains.</p>"},{"location":"ai/sky-t1/#effect-of-training-epochs","title":"Effect of Training Epochs","text":"Epochs Math500 AIME2024 Training Cost 1 78.2% 32.1% $152 2 81.1% 39.7% $304 3 82.4% 43.3% $456 4 82.1% 42.8% $608 <p>Conclusion: 3 epochs provide optimal performance-cost trade-off.</p>"},{"location":"ai/sky-t1/#rejection-sampling-impact","title":"Rejection Sampling Impact","text":"Sampling Strategy Data Quality Math500 Training Stability No Filtering 60% correct 76.8% Poor (high loss variance) Basic Filtering 75% correct 79.2% Moderate Rejection Sampling 82% correct 82.4% Excellent"},{"location":"ai/sky-t1/#comparison-with-state-of-the-art","title":"\ud83c\udf96\ufe0f Comparison with State-of-the-Art","text":""},{"location":"ai/sky-t1/#performance-vs-cost-analysis","title":"Performance vs Cost Analysis","text":"<pre><code>\ud83d\udcca Performance-Cost Quadrant:\n\nHigh Performance, Low Cost (Ideal):\n\u251c\u2500\u2500 Sky-T1-32B-Preview \u2b50 ($456 training)\n\nHigh Performance, High Cost:\n\u251c\u2500\u2500 o1-preview (Millions in training)\n\u251c\u2500\u2500 GPT-4o (Millions in training)\n\nMedium Performance, Low Cost:\n\u251c\u2500\u2500 QwQ-32B (Unknown cost, likely higher)\n\u251c\u2500\u2500 STILL-2 (Unknown cost)\n\nLow Performance, Low Cost:\n\u2514\u2500\u2500 Base models (Qwen-2.5, Llama-2, etc.)\n</code></pre>"},{"location":"ai/sky-t1/#reasoning-capability-comparison","title":"Reasoning Capability Comparison","text":"Model Chain-of-Thought Self-Correction Multi-Step Verification Sky-T1 \u2705 Excellent \u2705 Strong \u2705 Excellent \u2705 Good o1-preview \u2705 Excellent \u2705 Excellent \u2705 Excellent \u2705 Excellent QwQ-32B \u2705 Good \u2705 Good \u2705 Good \u2705 Moderate GPT-4o \u2705 Good \u2705 Moderate \u2705 Good \u2705 Moderate Base Models \u274c Limited \u274c Poor \u274c Poor \u274c Poor LiveCodeBench-Hard 17.9 9.8 17.1 16.3 GPQA-Diamond 56.8 45.5 52.5 75.2"},{"location":"ai/sky-t1/#_1","title":"\u5176\u4ed6\u200b\u53d1\u73b0","text":"<p>\u200b\u6a21\u578b\u200b\u5927\u5c0f\u200b\u5f88\u200b\u91cd\u8981\u200b\u3002 \u200b\u6211\u4eec\u200b\u6700\u521d\u200b\u5c1d\u8bd5\u200b\u5728\u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u6a21\u578b\u200b\uff087B\u200b\u548c\u200b14B\uff09\u200b\u4e0a\u200b\u8fdb\u884c\u200b\u8bad\u7ec3\u200b\uff0c\u200b\u4f46\u200b\u53ea\u200b\u89c2\u5bdf\u200b\u5230\u200b\u4e86\u200b\u9002\u5ea6\u200b\u7684\u200b\u6539\u8fdb\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5728\u200bAPPs\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u8bad\u7ec3\u200bQwen2.5-14B-Coder-Instruct\uff0cLiveCodeBench\u200b\u7684\u200b\u6027\u80fd\u200b\u4ece\u200b42.6%\u200b\u7565\u5fae\u200b\u63d0\u9ad8\u200b\u5230\u200b46.3%\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5728\u200b\u624b\u52a8\u200b\u68c0\u67e5\u200b\u8f83\u200b\u5c0f\u200b\u6a21\u578b\u200b\uff08\u200b\u5c0f\u4e8e\u200b32B\uff09\u200b\u7684\u200b\u8f93\u51fa\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u5b83\u4eec\u200b\u7ecf\u5e38\u200b\u751f\u6210\u200b\u91cd\u590d\u200b\u5185\u5bb9\u200b\uff0c\u200b\u9650\u5236\u200b\u4e86\u200b\u5b83\u4eec\u200b\u7684\u200b\u6709\u6548\u6027\u200b\u3002</p> <p>\u200b\u6570\u636e\u200b\u6df7\u5408\u7269\u200b\u5f88\u200b\u91cd\u8981\u200b\u3002 \u200b\u6211\u4eec\u200b\u6700\u521d\u200b\u4f7f\u7528\u200bNumina\u200b\u6570\u636e\u200b\u96c6\u200b\uff08\u200b\u7531\u200bSTILL-2\u200b\u63d0\u4f9b\u200b\uff09\u200b\u4e2d\u200b\u7684\u200b3-4K\u200b\u6570\u5b66\u200b\u95ee\u9898\u200b\u8bad\u7ec3\u200b\u4e86\u200b\u4e00\u4e2a\u200b32B\u200b\u6a21\u578b\u200b\uff0cAIME24\u200b\u7684\u200b\u51c6\u786e\u7387\u200b\u4ece\u200b16.7%\u200b\u663e\u8457\u200b\u63d0\u9ad8\u200b\u5230\u200b43.3%\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5f53\u200b\u6211\u4eec\u200b\u5c06\u200bAPPs\u200b\u6570\u636e\u200b\u96c6\u200b\u751f\u6210\u200b\u7684\u200b\u7f16\u7801\u6570\u636e\u200b\u7eb3\u5165\u200b\u8bad\u7ec3\u200b\u8fc7\u7a0b\u200b\u65f6\u200b\uff0cAIME24\u200b\u7684\u200b\u51c6\u786e\u7387\u200b\u4e0b\u964d\u200b\u5230\u200b36.7%\u3002\u200b\u6211\u4eec\u200b\u5047\u8bbe\u200b\u8fd9\u79cd\u200b\u4e0b\u964d\u200b\u662f\u200b\u7531\u4e8e\u200b\u6570\u5b66\u200b\u548c\u200b\u7f16\u7801\u200b\u4efb\u52a1\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u63a8\u7406\u65b9\u6cd5\u200b\u4e0d\u540c\u200b\u3002</p> <p>\u200b\u7f16\u7801\u200b\u4e2d\u200b\u7684\u200b\u63a8\u7406\u200b\u901a\u5e38\u200b\u6d89\u53ca\u200b\u989d\u5916\u200b\u7684\u200b\u903b\u8f91\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u4f8b\u5982\u200b\u6a21\u62df\u200b\u6d4b\u8bd5\u200b\u8f93\u5165\u200b\u6216\u200b\u5728\u200b\u5185\u90e8\u200b\u6267\u884c\u200b\u751f\u6210\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u800c\u200b\u6570\u5b66\u200b\u95ee\u9898\u200b\u7684\u200b\u63a8\u7406\u200b\u5f80\u5f80\u200b\u66f4\u200b\u76f4\u63a5\u200b\u548c\u200b\u7ed3\u6784\u5316\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e9b\u200b\u5dee\u5f02\u200b\uff0c\u200b\u6211\u4eec\u200b\u7528\u200bNuminaMath\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u6311\u6218\u6027\u200b\u6570\u5b66\u200b\u95ee\u9898\u200b\u548c\u200bTACO\u200b\u6570\u636e\u200b\u96c6\u4e2d\u200b\u7684\u200b\u590d\u6742\u200b\u7f16\u7801\u200b\u4efb\u52a1\u200b\u4e30\u5bcc\u200b\u4e86\u200b\u8bad\u7ec3\u200b\u6570\u636e\u200b\u3002\u200b\u8fd9\u79cd\u200b\u5e73\u8861\u200b\u7684\u200b\u6570\u636e\u200b\u6df7\u5408\u7269\u200b\u4f7f\u200b\u6a21\u578b\u200b\u5728\u200b\u6570\u5b66\u200b\u548c\u200b\u7f16\u7801\u200b\u9886\u57df\u200b\u90fd\u200b\u8868\u73b0\u51fa\u8272\u200b\uff0c\u200b\u6062\u590d\u200b\u4e86\u200bAIME24\u200b\u7684\u200b43.3%\u200b\u51c6\u786e\u7387\u200b\uff0c\u200b\u540c\u65f6\u200b\u4e5f\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u5176\u200b\u7f16\u7801\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"ai/sky-t1/#_2","title":"\u672a\u6765\u200b\u5de5\u4f5c","text":"<p>Sky-T1-32B-Preview\u200b\u6807\u5fd7\u200b\u7740\u200b\u6211\u4eec\u200b\u5f00\u53d1\u200b\u5177\u6709\u200b\u9ad8\u7ea7\u200b\u63a8\u7406\u200b\u80fd\u529b\u200b\u7684\u200b\u5f00\u6e90\u200b\u6a21\u578b\u200b\u7684\u200b\u65c5\u7a0b\u200b\u7684\u200b\u5f00\u59cb\u200b\u3002\u200b\u672a\u6765\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c06\u200b\u4e13\u6ce8\u200b\u4e8e\u200b\u5f00\u53d1\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200b\u6a21\u578b\u200b\uff0c\u200b\u4ee5\u200b\u4fdd\u6301\u200b\u5f3a\u5927\u200b\u7684\u200b\u63a8\u7406\u200b\u6027\u80fd\u200b\uff0c\u200b\u5e76\u200b\u63a2\u7d22\u200b\u8fdb\u4e00\u6b65\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u65f6\u200b\u63d0\u9ad8\u200b\u6a21\u578b\u200b\u6548\u7387\u200b\u548c\u200b\u51c6\u786e\u6027\u200b\u7684\u200b\u5148\u8fdb\u200b\u6280\u672f\u200b\u3002\u200b\u8bf7\u200b\u7ee7\u7eed\u200b\u5173\u6ce8\u200b\u6211\u4eec\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u6fc0\u52a8\u4eba\u5fc3\u200b\u7684\u200b\u8ba1\u5212\u200b\u4e2d\u200b\u7684\u200b\u8fdb\u5c55\u200b\u3002</p>"},{"location":"ai/sky-t1/#_3","title":"\u81f4\u8c22","text":"<p>\u200b\u8fd9\u9879\u200b\u5de5\u4f5c\u200b\u662f\u200b\u5728\u200bBerkeley Sky Computing Lab\u200b\u5b8c\u6210\u200b\u7684\u200b\uff0c\u200b\u5f97\u5230\u200b\u4e86\u200bLambda Labs\u200b\u548c\u200bAnyscale\u200b\u7684\u200b\u51fa\u8272\u200b\u8ba1\u7b97\u200b\u652f\u6301\u200b\u3002\u200b\u6211\u4eec\u200b\u8981\u200b\u611f\u8c22\u200bStill-2\u200b\u56e2\u961f\u200b\u548c\u200bQwen\u200b\u56e2\u961f\u200b\u7684\u200bJunyang Lin\u200b\u63d0\u4f9b\u200b\u7684\u200b\u5b9d\u8d35\u200b\u5b66\u672f\u200b\u53cd\u9988\u200b\u548c\u200b\u652f\u6301\u200b\u3002</p>"},{"location":"ai/sky-t1/#_4","title":"\u5f15\u7528","text":"<pre><code>@misc{sky_t1_2025,\n  author       = {NovaSky Team},\n  title        = {Sky-T1: Train your own O1 preview model within $450},\n  howpublished = {https://novasky-ai.github.io/posts/sky-t1},\n  note         = {Accessed: 2025-01-09},\n  year         = {2025}\n}\n</code></pre>"},{"location":"ai/sky-t1/#practical-implementation-guide","title":"\ud83d\udee0\ufe0f Practical Implementation Guide","text":""},{"location":"ai/sky-t1/#quick-start-tutorial","title":"Quick Start Tutorial","text":""},{"location":"ai/sky-t1/#1-environment-setup","title":"1. Environment Setup","text":"<pre><code># Create virtual environment\npython -m venv sky-t1-env\nsource sky-t1-env/bin/activate  # Linux/Mac\n# or\nsky-t1-env\\Scripts\\activate     # Windows\n\n# Install dependencies\npip install torch transformers accelerate\npip install datasets wandb deepspeed\n</code></pre>"},{"location":"ai/sky-t1/#2-basic-model-usage","title":"2. Basic Model Usage","text":"<pre><code>import torch\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\n\n# Load model and tokenizer\nmodel_name = \"NovaSky-AI/Sky-T1-32B-Preview\"\ntokenizer = AutoTokenizer.from_pretrained(model_name)\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_name,\n    torch_dtype=torch.bfloat16,\n    device_map=\"auto\"\n)\n\n# Reasoning prompt template\ndef create_reasoning_prompt(problem):\n    return f\"\"\"Solve this problem step by step, showing your reasoning:\n\n{problem}\n\nPlease think through this carefully and provide a detailed solution.\"\"\"\n\n# Example usage\nproblem = \"Find the sum of all positive integers n such that n\u00b2 + 19n + 88 is a perfect square.\"\nprompt = create_reasoning_prompt(problem)\n\ninputs = tokenizer(prompt, return_tensors=\"pt\")\nwith torch.no_grad():\n    outputs = model.generate(\n        inputs.input_ids,\n        max_new_tokens=1000,\n        temperature=0.7,\n        do_sample=True,\n        pad_token_id=tokenizer.eos_token_id\n    )\n\nresponse = tokenizer.decode(outputs[0], skip_special_tokens=True)\nprint(response)\n</code></pre>"},{"location":"ai/sky-t1/#advanced-configuration","title":"\ud83d\udd27 Advanced Configuration","text":""},{"location":"ai/sky-t1/#memory-optimization-for-limited-resources","title":"Memory Optimization for Limited Resources","text":"<pre><code>from transformers import BitsAndBytesConfig\n\n# 8-bit quantization\nquantization_config = BitsAndBytesConfig(\n    load_in_8bit=True,\n    llm_int8_threshold=6.0,\n    llm_int8_has_fp16_weight=False,\n)\n\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_name,\n    quantization_config=quantization_config,\n    device_map=\"auto\"\n)\n\n# 4-bit quantization (even more memory efficient)\nquantization_config_4bit = BitsAndBytesConfig(\n    load_in_4bit=True,\n    bnb_4bit_compute_dtype=torch.bfloat16,\n    bnb_4bit_use_double_quant=True,\n    bnb_4bit_quant_type=\"nf4\"\n)\n</code></pre>"},{"location":"ai/sky-t1/#batch-processing-for-efficiency","title":"Batch Processing for Efficiency","text":"<pre><code>def solve_problems_batch(problems, batch_size=4):\n    \"\"\"Process multiple problems efficiently\"\"\"\n    results = []\n\n    for i in range(0, len(problems), batch_size):\n        batch = problems[i:i+batch_size]\n        prompts = [create_reasoning_prompt(p) for p in batch]\n\n        inputs = tokenizer(prompts, return_tensors=\"pt\", padding=True)\n\n        with torch.no_grad():\n            outputs = model.generate(\n                inputs.input_ids,\n                max_new_tokens=800,\n                temperature=0.7,\n                do_sample=True,\n                pad_token_id=tokenizer.eos_token_id\n            )\n\n        for j, output in enumerate(outputs):\n            response = tokenizer.decode(output, skip_special_tokens=True)\n            results.append({\n                'problem': batch[j],\n                'solution': response,\n                'index': i + j\n            })\n\n    return results\n</code></pre>"},{"location":"ai/sky-t1/#performance-monitoring","title":"\ud83d\udcca Performance Monitoring","text":"<pre><code>import time\nimport psutil\nimport torch\n\nclass PerformanceMonitor:\n    def __init__(self):\n        self.start_time = None\n        self.tokens_generated = 0\n\n    def start_monitoring(self):\n        self.start_time = time.time()\n        torch.cuda.reset_peak_memory_stats()\n\n    def log_metrics(self, num_tokens):\n        if self.start_time is None:\n            return\n\n        elapsed_time = time.time() - self.start_time\n        self.tokens_generated += num_tokens\n\n        # Performance metrics\n        tokens_per_second = self.tokens_generated / elapsed_time\n        gpu_memory = torch.cuda.max_memory_allocated() / 1024**3  # GB\n        cpu_percent = psutil.cpu_percent()\n\n        print(f\"Performance Metrics:\")\n        print(f\"  Tokens/second: {tokens_per_second:.2f}\")\n        print(f\"  GPU Memory: {gpu_memory:.2f} GB\")\n        print(f\"  CPU Usage: {cpu_percent:.1f}%\")\n        print(f\"  Total Tokens: {self.tokens_generated}\")\n\n# Usage example\nmonitor = PerformanceMonitor()\nmonitor.start_monitoring()\n\n# Your inference code here\nresponse = model.generate(...)\n\nmonitor.log_metrics(len(response[0]))\n</code></pre> <p>For more detailed examples and advanced usage, visit our GitHub repository.</p>"},{"location":"ai/tools/compress/","title":"JSON Compression Tool","text":"<p>This Python utility provides efficient compression of JSON conversation data, specifically designed for AI training datasets and chat message collections. It transforms multi-line JSON files into compact JSONL (JSON Lines) format while preserving message structure and content.</p>"},{"location":"ai/tools/compress/#overview","title":"Overview","text":"<p>The JSON Compression tool is designed to: - Compress JSON Data - Convert multi-line JSON to single-line format - Preserve Structure - Maintain message roles and content integrity - Optimize Storage - Reduce file size and improve loading performance - Support AI Datasets - Handle conversation-based training data</p>"},{"location":"ai/tools/compress/#features","title":"Features","text":""},{"location":"ai/tools/compress/#data-compression","title":"Data Compression","text":"<ul> <li>Single-Line Output - Converts each JSON object to a single line</li> <li>Whitespace Removal - Eliminates unnecessary whitespace from content</li> <li>Structure Preservation - Maintains original message hierarchy</li> <li>Unicode Support - Handles international characters correctly</li> </ul>"},{"location":"ai/tools/compress/#file-processing","title":"File Processing","text":"<ul> <li>Batch Processing - Handle large JSON files efficiently</li> <li>Error Handling - Robust error management for malformed data</li> <li>Encoding Support - UTF-8 encoding for international content</li> <li>Progress Feedback - Clear status reporting during processing</li> </ul>"},{"location":"ai/tools/compress/#installation","title":"Installation","text":""},{"location":"ai/tools/compress/#prerequisites","title":"Prerequisites","text":"<pre><code># No additional packages required - uses Python standard library\npython --version  # Requires Python 3.6+\n</code></pre>"},{"location":"ai/tools/compress/#dependencies","title":"Dependencies","text":"<ul> <li><code>json</code> - JSON parsing and generation (built-in)</li> <li><code>os</code> - File system operations (built-in)</li> </ul>"},{"location":"ai/tools/compress/#usage","title":"Usage","text":""},{"location":"ai/tools/compress/#basic-usage","title":"Basic Usage","text":"<pre><code>from compress import compress_to_single_line\n\n# Compress a JSON file to JSONL format\ncompress_to_single_line(\"input.json\", \"output.jsonl\")\n</code></pre>"},{"location":"ai/tools/compress/#input-format","title":"Input Format","text":"<p>The tool expects JSON files with conversation structure: <pre><code>[\n  {\n    \"messages\": [\n      {\n        \"role\": \"user\",\n        \"content\": \"What is machine learning?\"\n      },\n      {\n        \"role\": \"assistant\", \n        \"content\": \"Machine learning is a subset of artificial intelligence...\"\n      }\n    ]\n  }\n]\n</code></pre></p>"},{"location":"ai/tools/compress/#output-format","title":"Output Format","text":"<p>Produces JSONL format with compressed content: <pre><code>{\"messages\": [{\"role\": \"user\", \"content\": \"What is machine learning?\"}, {\"role\": \"assistant\", \"content\": \"Machine learning is a subset of artificial intelligence...\"}]}\n</code></pre></p>"},{"location":"ai/tools/compress/#core-functions","title":"Core Functions","text":""},{"location":"ai/tools/compress/#main-compression-function","title":"Main Compression Function","text":"<pre><code>def compress_to_single_line(input_file, output_file):\n    \"\"\"\n    Compress JSON conversation data to single-line format\n\n    Args:\n        input_file (str): Path to input JSON file\n        output_file (str): Path to output JSONL file\n    \"\"\"\n    try:\n        # Read and parse input JSON\n        with open(input_file, \"r\", encoding=\"utf-8\") as infile:\n            data = json.load(infile)\n\n        # Process and compress data\n        compressed_data = []\n        for item in data:\n            compressed_item = {\"messages\": []}\n            for message in item.get(\"messages\", []):\n                role = message.get(\"role\", \"\")\n                content = \" \".join(message.get(\"content\", \"\").split())\n                compressed_item[\"messages\"].append({\n                    \"role\": role, \n                    \"content\": content\n                })\n            compressed_data.append(compressed_item)\n\n        # Write compressed output\n        with open(output_file, \"w\", encoding=\"utf-8\") as outfile:\n            for entry in compressed_data:\n                json_line = json.dumps(entry, ensure_ascii=False)\n                outfile.write(json_line + \"\\n\")\n\n        print(f\"Compression complete! Results saved to {output_file}\")\n\n    except FileNotFoundError:\n        print(f\"Input file {input_file} not found.\")\n    except json.JSONDecodeError:\n        print(\"Input file is not valid JSON format.\")\n    except Exception as e:\n        print(f\"Error occurred: {e}\")\n</code></pre>"},{"location":"ai/tools/compress/#advanced-features","title":"Advanced Features","text":""},{"location":"ai/tools/compress/#batch-processing","title":"Batch Processing","text":"<pre><code>import os\nimport glob\n\ndef compress_directory(input_dir, output_dir):\n    \"\"\"Compress all JSON files in a directory\"\"\"\n    os.makedirs(output_dir, exist_ok=True)\n\n    for json_file in glob.glob(os.path.join(input_dir, \"*.json\")):\n        filename = os.path.basename(json_file)\n        output_file = os.path.join(output_dir, filename.replace('.json', '.jsonl'))\n        compress_to_single_line(json_file, output_file)\n</code></pre>"},{"location":"ai/tools/compress/#content-validation","title":"Content Validation","text":"<pre><code>def validate_message_structure(data):\n    \"\"\"Validate message structure before compression\"\"\"\n    required_fields = [\"messages\"]\n    message_fields = [\"role\", \"content\"]\n\n    for item in data:\n        if not all(field in item for field in required_fields):\n            raise ValueError(f\"Missing required fields: {required_fields}\")\n\n        for message in item[\"messages\"]:\n            if not all(field in message for field in message_fields):\n                raise ValueError(f\"Message missing fields: {message_fields}\")\n\n    return True\n</code></pre>"},{"location":"ai/tools/compress/#statistics-and-reporting","title":"Statistics and Reporting","text":"<pre><code>def get_compression_stats(input_file, output_file):\n    \"\"\"Generate compression statistics\"\"\"\n    import os\n\n    input_size = os.path.getsize(input_file)\n    output_size = os.path.getsize(output_file)\n    compression_ratio = (input_size - output_size) / input_size * 100\n\n    return {\n        \"input_size\": input_size,\n        \"output_size\": output_size,\n        \"compression_ratio\": f\"{compression_ratio:.2f}%\",\n        \"size_reduction\": input_size - output_size\n    }\n</code></pre>"},{"location":"ai/tools/compress/#configuration-options","title":"Configuration Options","text":""},{"location":"ai/tools/compress/#custom-content-processing","title":"Custom Content Processing","text":"<pre><code>def custom_content_processor(content):\n    \"\"\"Custom content processing function\"\"\"\n    # Remove extra whitespace\n    content = \" \".join(content.split())\n\n    # Remove specific patterns (optional)\n    import re\n    content = re.sub(r'\\s+', ' ', content)  # Normalize whitespace\n    content = re.sub(r'[^\\w\\s.,!?-]', '', content)  # Remove special chars\n\n    return content.strip()\n\n# Use custom processor\ndef compress_with_custom_processor(input_file, output_file, processor=None):\n    if processor is None:\n        processor = lambda x: \" \".join(x.split())\n\n    # Apply custom processing in compression loop\n    content = processor(message.get(\"content\", \"\"))\n</code></pre>"},{"location":"ai/tools/compress/#output-format-options","title":"Output Format Options","text":"<pre><code>def compress_with_options(input_file, output_file, options=None):\n    \"\"\"Compress with configurable options\"\"\"\n    default_options = {\n        \"preserve_formatting\": False,\n        \"include_metadata\": False,\n        \"sort_messages\": False,\n        \"validate_output\": True\n    }\n\n    if options:\n        default_options.update(options)\n\n    # Apply options during compression\n    # ... implementation details\n</code></pre>"},{"location":"ai/tools/compress/#performance-optimization","title":"Performance Optimization","text":""},{"location":"ai/tools/compress/#memory-efficient-processing","title":"Memory-Efficient Processing","text":"<pre><code>def compress_large_file(input_file, output_file, chunk_size=1000):\n    \"\"\"Process large files in chunks to manage memory\"\"\"\n    with open(input_file, \"r\", encoding=\"utf-8\") as infile:\n        with open(output_file, \"w\", encoding=\"utf-8\") as outfile:\n            chunk = []\n            for line in infile:\n                chunk.append(json.loads(line))\n\n                if len(chunk) &gt;= chunk_size:\n                    process_chunk(chunk, outfile)\n                    chunk = []\n\n            # Process remaining items\n            if chunk:\n                process_chunk(chunk, outfile)\n</code></pre>"},{"location":"ai/tools/compress/#parallel-processing","title":"Parallel Processing","text":"<pre><code>import concurrent.futures\nimport multiprocessing\n\ndef parallel_compress(file_list, output_dir, max_workers=None):\n    \"\"\"Compress multiple files in parallel\"\"\"\n    if max_workers is None:\n        max_workers = multiprocessing.cpu_count()\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n        futures = []\n        for input_file in file_list:\n            output_file = os.path.join(output_dir, \n                                     os.path.basename(input_file).replace('.json', '.jsonl'))\n            future = executor.submit(compress_to_single_line, input_file, output_file)\n            futures.append(future)\n\n        # Wait for completion\n        concurrent.futures.wait(futures)\n</code></pre>"},{"location":"ai/tools/compress/#best-practices","title":"Best Practices","text":""},{"location":"ai/tools/compress/#data-integrity","title":"Data Integrity","text":"<ul> <li>Backup Original Files - Always keep backups before compression</li> <li>Validate Input - Check JSON structure before processing</li> <li>Verify Output - Confirm compressed data integrity</li> <li>Handle Encoding - Use UTF-8 for international content</li> </ul>"},{"location":"ai/tools/compress/#performance","title":"Performance","text":"<ul> <li>Chunk Large Files - Process large datasets in manageable chunks</li> <li>Monitor Memory Usage - Watch memory consumption during processing</li> <li>Use Parallel Processing - Leverage multiple cores for batch operations</li> <li>Optimize I/O - Use appropriate buffer sizes for file operations</li> </ul>"},{"location":"ai/tools/compress/#error-handling","title":"Error Handling","text":"<ul> <li>Graceful Degradation - Continue processing other files on individual failures</li> <li>Detailed Logging - Log errors with context for debugging</li> <li>Recovery Options - Provide options to resume interrupted operations</li> <li>Validation Checks - Verify data integrity throughout the process</li> </ul>"},{"location":"ai/tools/compress/#use-cases","title":"Use Cases","text":""},{"location":"ai/tools/compress/#ai-training-data","title":"AI Training Data","text":"<ul> <li>Dataset Preparation - Compress training datasets for efficient storage</li> <li>Model Fine-tuning - Prepare conversation data for language model training</li> <li>Data Pipeline - Integrate into ML data preprocessing workflows</li> </ul>"},{"location":"ai/tools/compress/#data-storage","title":"Data Storage","text":"<ul> <li>Archive Compression - Reduce storage requirements for historical data</li> <li>Transfer Optimization - Minimize bandwidth usage for data transfers</li> <li>Database Import - Prepare data for database ingestion</li> </ul>"},{"location":"ai/tools/compress/#development-workflows","title":"Development Workflows","text":"<ul> <li>Testing Data - Create compact test datasets</li> <li>Configuration Files - Compress configuration and settings files</li> <li>Log Processing - Compress structured log files for analysis</li> </ul> <p>This tool provides efficient JSON compression capabilities specifically designed for AI and machine learning workflows, with robust error handling and performance optimization features.</p>"},{"location":"ai/tools/convert/","title":"Data Format Conversion Tool","text":"<p>This Python utility transforms conversation data between different formats, specifically designed for AI training datasets. It converts structured conversation data into standardized message formats suitable for language model training and fine-tuning.</p>"},{"location":"ai/tools/convert/#overview","title":"Overview","text":"<p>The Data Format Conversion tool is designed to: - Transform Data Structures - Convert between different conversation formats - Standardize Messages - Create consistent message structures for AI training - Add System Prompts - Inject system-level instructions into conversations - Support Training Workflows - Prepare data for various AI training frameworks</p>"},{"location":"ai/tools/convert/#features","title":"Features","text":""},{"location":"ai/tools/convert/#format-transformation","title":"Format Transformation","text":"<ul> <li>Conversation Restructuring - Transform nested conversation structures</li> <li>Message Standardization - Create consistent role-based message format</li> <li>System Prompt Injection - Add system-level instructions to conversations</li> <li>Multi-turn Support - Handle complex multi-turn conversations</li> </ul>"},{"location":"ai/tools/convert/#ai-training-integration","title":"AI Training Integration","text":"<ul> <li>Training Data Preparation - Format data for language model training</li> <li>Fine-tuning Support - Create datasets for model fine-tuning</li> <li>Prompt Engineering - Integrate advanced prompting strategies</li> <li>Quality Assurance - Validate output format for training compatibility</li> </ul>"},{"location":"ai/tools/convert/#installation","title":"Installation","text":""},{"location":"ai/tools/convert/#prerequisites","title":"Prerequisites","text":"<pre><code># No additional packages required - uses Python standard library\npython --version  # Requires Python 3.6+\n</code></pre>"},{"location":"ai/tools/convert/#dependencies","title":"Dependencies","text":"<ul> <li><code>json</code> - JSON parsing and generation (built-in)</li> </ul>"},{"location":"ai/tools/convert/#usage","title":"Usage","text":""},{"location":"ai/tools/convert/#basic-usage","title":"Basic Usage","text":"<pre><code>from convert import transform_data\n\n# Transform conversation data\ninput_data = [...]  # Your input data\ntransformed_data = transform_data(input_data)\n</code></pre>"},{"location":"ai/tools/convert/#input-format","title":"Input Format","text":"<p>The tool expects data with conversation structure: <pre><code>[\n  {\n    \"system\": \"System instruction text\",\n    \"conversations\": [\n      {\n        \"from\": \"user\",\n        \"value\": \"User message content\"\n      },\n      {\n        \"from\": \"assistant\", \n        \"value\": \"Assistant response content\"\n      }\n    ]\n  }\n]\n</code></pre></p>"},{"location":"ai/tools/convert/#output-format","title":"Output Format","text":"<p>Produces standardized message format: <pre><code>[\n  {\n    \"messages\": [\n      {\n        \"role\": \"system\",\n        \"content\": \"Your role as an assistant involves thoroughly exploring questions...\"\n      },\n      {\n        \"role\": \"user\",\n        \"content\": \"User message content\"\n      },\n      {\n        \"role\": \"assistant\",\n        \"content\": \"Assistant response content\"\n      }\n    ]\n  }\n]\n</code></pre></p>"},{"location":"ai/tools/convert/#core-functions","title":"Core Functions","text":""},{"location":"ai/tools/convert/#main-transformation-function","title":"Main Transformation Function","text":"<pre><code>def transform_data(input_data):\n    \"\"\"\n    Transform conversation data to standardized message format\n\n    Args:\n        input_data (list): List of conversation objects\n\n    Returns:\n        list: Transformed data with standardized message structure\n    \"\"\"\n    transformed = []\n\n    for item in input_data:\n        # Extract system message with advanced prompting\n        system_message = {\n            \"role\": \"system\",\n            \"content\": \"Your role as an assistant involves thoroughly exploring questions through a systematic long thinking process before providing the final precise and accurate solutions. This requires engaging in a comprehensive cycle of analysis, summarizing, exploration, reassessment, reflection, backtracing, and iteration to develop well-considered thinking process. Please structure your response into two main sections: Thought and Solution. In the Thought section, detail your reasoning process using the specified format: &lt;|begin_of_thought|&gt; {thought with steps separated with '\\\\n\\\\n'} &lt;|end_of_thought|&gt; Each step should include detailed considerations such as analisying questions, summarizing relevant findings, brainstorming new ideas, verifying the accuracy of the current steps, refining any errors, and revisiting previous steps. In the Solution section, based on various attempts, explorations, and reflections from the Thought section, systematically present the final solution that you deem correct. The solution should remain a logical, accurate, concise expression style and detail necessary step needed to reach the conclusion, formatted as follows: &lt;|begin_of_solution|&gt; {final formatted, precise, and clear solution} &lt;|end_of_solution|&gt; Now, try to solve the following question through the above guidelines:\"\n        }\n\n        # Process conversations\n        for conversation in item[\"conversations\"]:\n            user_message = {\n                \"role\": \"user\",\n                \"content\": conversation[\"value\"]\n            }\n            assistant_message = {\n                \"role\": \"assistant\",\n                \"content\": conversation[\"value\"]\n            }\n\n            # Create complete interaction\n            transformed.append({\n                \"messages\": [\n                    system_message,\n                    user_message,\n                    assistant_message\n                ]\n            })\n\n    return transformed\n</code></pre>"},{"location":"ai/tools/convert/#advanced-features","title":"Advanced Features","text":""},{"location":"ai/tools/convert/#custom-system-prompts","title":"Custom System Prompts","text":"<pre><code>def create_system_prompt(prompt_type=\"reasoning\"):\n    \"\"\"Generate different types of system prompts\"\"\"\n    prompts = {\n        \"reasoning\": \"Your role as an assistant involves thoroughly exploring questions through a systematic long thinking process...\",\n        \"creative\": \"You are a creative assistant that approaches problems with innovative thinking and original solutions...\",\n        \"analytical\": \"You are an analytical assistant that breaks down complex problems into manageable components...\",\n        \"educational\": \"You are an educational assistant that explains concepts clearly and provides learning-focused responses...\"\n    }\n    return prompts.get(prompt_type, prompts[\"reasoning\"])\n\ndef transform_with_custom_prompt(input_data, prompt_type=\"reasoning\"):\n    \"\"\"Transform data with custom system prompt\"\"\"\n    system_content = create_system_prompt(prompt_type)\n\n    # Use custom prompt in transformation\n    # ... implementation details\n</code></pre>"},{"location":"ai/tools/convert/#multi-format-support","title":"Multi-format Support","text":"<pre><code>def detect_input_format(data):\n    \"\"\"Automatically detect input data format\"\"\"\n    if isinstance(data, list) and len(data) &gt; 0:\n        first_item = data[0]\n\n        if \"conversations\" in first_item:\n            return \"conversation_format\"\n        elif \"messages\" in first_item:\n            return \"message_format\"\n        elif \"instruction\" in first_item:\n            return \"instruction_format\"\n\n    return \"unknown_format\"\n\ndef transform_auto_detect(input_data):\n    \"\"\"Transform data with automatic format detection\"\"\"\n    format_type = detect_input_format(input_data)\n\n    if format_type == \"conversation_format\":\n        return transform_data(input_data)\n    elif format_type == \"message_format\":\n        return input_data  # Already in correct format\n    else:\n        raise ValueError(f\"Unsupported format: {format_type}\")\n</code></pre>"},{"location":"ai/tools/convert/#batch-processing","title":"Batch Processing","text":"<pre><code>import os\nimport json\n\ndef convert_directory(input_dir, output_dir, prompt_type=\"reasoning\"):\n    \"\"\"Convert all JSON files in a directory\"\"\"\n    os.makedirs(output_dir, exist_ok=True)\n\n    for filename in os.listdir(input_dir):\n        if filename.endswith('.json'):\n            input_path = os.path.join(input_dir, filename)\n            output_path = os.path.join(output_dir, filename)\n\n            with open(input_path, 'r', encoding='utf-8') as f:\n                input_data = json.load(f)\n\n            transformed_data = transform_with_custom_prompt(input_data, prompt_type)\n\n            with open(output_path, 'w', encoding='utf-8') as f:\n                json.dump(transformed_data, f, ensure_ascii=False, indent=2)\n</code></pre>"},{"location":"ai/tools/convert/#configuration-options","title":"Configuration Options","text":""},{"location":"ai/tools/convert/#prompt-templates","title":"Prompt Templates","text":"<pre><code>class PromptTemplate:\n    def __init__(self, template_type=\"reasoning\"):\n        self.templates = {\n            \"reasoning\": {\n                \"system\": \"Your role as an assistant involves...\",\n                \"format\": \"&lt;|begin_of_thought|&gt;...{thought}...&lt;|end_of_thought|&gt;\",\n                \"solution\": \"&lt;|begin_of_solution|&gt;...{solution}...&lt;|end_of_solution|&gt;\"\n            },\n            \"code\": {\n                \"system\": \"You are a programming assistant that provides...\",\n                \"format\": \"```{language}\\n{code}\\n```\",\n                \"explanation\": \"## Explanation\\n{explanation}\"\n            }\n        }\n\n    def get_template(self, template_type):\n        return self.templates.get(template_type, self.templates[\"reasoning\"])\n</code></pre>"},{"location":"ai/tools/convert/#validation-and-quality-control","title":"Validation and Quality Control","text":"<pre><code>def validate_transformed_data(data):\n    \"\"\"Validate transformed data structure\"\"\"\n    required_fields = [\"messages\"]\n    message_fields = [\"role\", \"content\"]\n    valid_roles = [\"system\", \"user\", \"assistant\"]\n\n    for item in data:\n        # Check top-level structure\n        if not all(field in item for field in required_fields):\n            raise ValueError(f\"Missing required fields: {required_fields}\")\n\n        # Check message structure\n        for message in item[\"messages\"]:\n            if not all(field in message for field in message_fields):\n                raise ValueError(f\"Message missing fields: {message_fields}\")\n\n            if message[\"role\"] not in valid_roles:\n                raise ValueError(f\"Invalid role: {message['role']}\")\n\n    return True\n\ndef quality_check(data):\n    \"\"\"Perform quality checks on transformed data\"\"\"\n    stats = {\n        \"total_conversations\": len(data),\n        \"total_messages\": sum(len(item[\"messages\"]) for item in data),\n        \"avg_messages_per_conversation\": 0,\n        \"roles_distribution\": {}\n    }\n\n    # Calculate statistics\n    if stats[\"total_conversations\"] &gt; 0:\n        stats[\"avg_messages_per_conversation\"] = stats[\"total_messages\"] / stats[\"total_conversations\"]\n\n    # Count role distribution\n    for item in data:\n        for message in item[\"messages\"]:\n            role = message[\"role\"]\n            stats[\"roles_distribution\"][role] = stats[\"roles_distribution\"].get(role, 0) + 1\n\n    return stats\n</code></pre>"},{"location":"ai/tools/convert/#performance-optimization","title":"Performance Optimization","text":""},{"location":"ai/tools/convert/#memory-efficient-processing","title":"Memory-Efficient Processing","text":"<pre><code>def transform_streaming(input_file, output_file, chunk_size=1000):\n    \"\"\"Transform large files using streaming processing\"\"\"\n    with open(input_file, 'r', encoding='utf-8') as infile:\n        with open(output_file, 'w', encoding='utf-8') as outfile:\n            outfile.write('[\\n')\n\n            chunk = []\n            first_item = True\n\n            for line in infile:\n                if line.strip():\n                    chunk.append(json.loads(line))\n\n                if len(chunk) &gt;= chunk_size:\n                    transformed_chunk = transform_data(chunk)\n\n                    for item in transformed_chunk:\n                        if not first_item:\n                            outfile.write(',\\n')\n                        json.dump(item, outfile, ensure_ascii=False)\n                        first_item = False\n\n                    chunk = []\n\n            # Process remaining items\n            if chunk:\n                transformed_chunk = transform_data(chunk)\n                for item in transformed_chunk:\n                    if not first_item:\n                        outfile.write(',\\n')\n                    json.dump(item, outfile, ensure_ascii=False)\n\n            outfile.write('\\n]')\n</code></pre>"},{"location":"ai/tools/convert/#parallel-processing","title":"Parallel Processing","text":"<pre><code>import concurrent.futures\nimport multiprocessing\n\ndef parallel_transform(data_chunks, max_workers=None):\n    \"\"\"Transform data chunks in parallel\"\"\"\n    if max_workers is None:\n        max_workers = multiprocessing.cpu_count()\n\n    with concurrent.futures.ProcessPoolExecutor(max_workers=max_workers) as executor:\n        futures = [executor.submit(transform_data, chunk) for chunk in data_chunks]\n        results = []\n\n        for future in concurrent.futures.as_completed(futures):\n            results.extend(future.result())\n\n    return results\n</code></pre>"},{"location":"ai/tools/convert/#best-practices","title":"Best Practices","text":""},{"location":"ai/tools/convert/#data-quality","title":"Data Quality","text":"<ul> <li>Input Validation - Verify input data structure before transformation</li> <li>Output Validation - Confirm transformed data meets requirements</li> <li>Content Preservation - Ensure no data loss during transformation</li> <li>Encoding Handling - Use UTF-8 for international content</li> </ul>"},{"location":"ai/tools/convert/#performance","title":"Performance","text":"<ul> <li>Batch Processing - Process multiple files efficiently</li> <li>Memory Management - Use streaming for large datasets</li> <li>Parallel Processing - Leverage multiple cores for large transformations</li> <li>Progress Monitoring - Track transformation progress for large datasets</li> </ul>"},{"location":"ai/tools/convert/#training-integration","title":"Training Integration","text":"<ul> <li>Format Compatibility - Ensure output works with target training frameworks</li> <li>Prompt Engineering - Design effective system prompts for specific use cases</li> <li>Quality Metrics - Monitor data quality throughout the pipeline</li> <li>Version Control - Track different versions of transformation logic</li> </ul>"},{"location":"ai/tools/convert/#use-cases","title":"Use Cases","text":""},{"location":"ai/tools/convert/#ai-model-training","title":"AI Model Training","text":"<ul> <li>Fine-tuning Datasets - Prepare conversation data for model fine-tuning</li> <li>Instruction Following - Create instruction-following training datasets</li> <li>Reasoning Training - Develop datasets for reasoning capability training</li> </ul>"},{"location":"ai/tools/convert/#data-pipeline-integration","title":"Data Pipeline Integration","text":"<ul> <li>ETL Processes - Integrate into data extraction, transformation, and loading workflows</li> <li>Data Standardization - Normalize conversation data from multiple sources</li> <li>Quality Assurance - Ensure consistent data format across systems</li> </ul>"},{"location":"ai/tools/convert/#research-and-development","title":"Research and Development","text":"<ul> <li>Experiment Preparation - Create datasets for AI research experiments</li> <li>Prompt Engineering - Test different prompting strategies</li> <li>Model Evaluation - Prepare evaluation datasets with consistent formatting</li> </ul> <p>This tool provides flexible data transformation capabilities specifically designed for AI training workflows, with support for various input formats and customizable output structures.</p>"},{"location":"astronomy/","title":"Astronomy Documentation","text":"<p>Welcome to the astronomy section! This collection focuses on astronomical imaging, processing, and control software. Whether you're into astrophotography, image processing, or remote telescope control, you'll find practical guides and tools here.</p>"},{"location":"astronomy/#software-platforms","title":"Software Platforms","text":""},{"location":"astronomy/#nina-nighttime-imaging-n-astronomy","title":"NINA (Nighttime Imaging 'N' Astronomy)","text":"<p>Professional astronomical imaging software with advanced automation capabilities:</p>"},{"location":"astronomy/#touchnstars-mobile-control","title":"Touch'N'Stars Mobile Control","text":"<p>Revolutionary mobile interface for NINA control:</p> <ul> <li>Mobile-First Design - Optimized for smartphones and tablets</li> <li>Remote Control - Manage your imaging session from anywhere</li> <li>Simplified Interface - Essential controls without complexity</li> <li>Polar Alignment - Three-point polar alignment assistance</li> <li>Profile Management - Quick configuration switching</li> </ul> <p>Key Features: - \ud83d\udcf1 Mobile-optimized web interface - \ud83c\udfaf Equipment setup and control - \ud83d\udcca Session monitoring and management - \ud83d\udd27 Configuration profile switching - \ud83c\udf1f Polar alignment tools</p>"},{"location":"astronomy/#siril-astronomical-image-processing","title":"Siril Astronomical Image Processing","text":"<p>Open-source astronomical image processing software:</p>"},{"location":"astronomy/#python-integration","title":"Python Integration","text":"<p>Comprehensive guide to automating Siril with Python:</p> <ul> <li>API Integration - Complete Python wrapper for Siril</li> <li>Batch Processing - Automated image processing workflows</li> <li>Statistical Analysis - Image quality assessment and statistics</li> <li>Custom Workflows - Build your own processing pipelines</li> </ul> <p>Capabilities: - \ud83d\udd04 Automated image calibration - \ud83d\udcc8 Statistical analysis and quality metrics - \ud83c\udf9b\ufe0f Custom processing workflows - \ud83d\udcc1 Batch file management - \ud83d\udc0d Full Python API access</p>"},{"location":"astronomy/#workflow-integration","title":"Workflow Integration","text":""},{"location":"astronomy/#complete-imaging-pipeline","title":"Complete Imaging Pipeline","text":"<ol> <li>Capture - Use NINA for automated imaging sessions</li> <li>Control - Monitor and adjust with Touch'N'Stars mobile interface</li> <li>Process - Automated processing with Siril Python integration</li> <li>Analyze - Statistical analysis and quality assessment</li> </ol>"},{"location":"astronomy/#mobile-workflow","title":"Mobile Workflow","text":"<ul> <li>Setup Phase - Use Touch'N'Stars for equipment configuration</li> <li>Monitoring - Real-time session monitoring from mobile device</li> <li>Adjustments - Quick parameter changes without computer access</li> <li>Polar Alignment - Mobile-assisted polar alignment procedures</li> </ul>"},{"location":"astronomy/#getting-started","title":"Getting Started","text":""},{"location":"astronomy/#for-nina-users","title":"For NINA Users","text":"<ol> <li>Install the Advanced API plugin</li> <li>Set up Touch'N'Stars web interface</li> <li>Configure mobile access for remote control</li> </ol>"},{"location":"astronomy/#for-image-processing","title":"For Image Processing","text":"<ol> <li>Install Siril and Python integration</li> <li>Set up automated processing workflows</li> <li>Implement statistical analysis routines</li> </ol>"},{"location":"astronomy/#best-practices","title":"Best Practices","text":"<ul> <li>Equipment Setup - Proper configuration for reliable automation</li> <li>Mobile Control - Effective use of Touch'N'Stars interface</li> <li>Processing Automation - Efficient batch processing workflows</li> <li>Quality Control - Statistical monitoring and assessment</li> </ul>"},{"location":"astronomy/#advanced-topics","title":"Advanced Topics","text":""},{"location":"astronomy/#automation-strategies","title":"Automation Strategies","text":"<ul> <li>Unattended imaging sessions</li> <li>Weather monitoring integration</li> <li>Automatic target selection</li> <li>Quality-based decision making</li> </ul>"},{"location":"astronomy/#integration-possibilities","title":"Integration Possibilities","text":"<ul> <li>Custom mobile interfaces</li> <li>Advanced processing pipelines</li> <li>Multi-night campaign management</li> <li>Data analysis and visualization</li> </ul> <p>This section provides everything you need to set up a modern, automated astronomical imaging workflow with mobile control capabilities and advanced processing automation.</p>"},{"location":"astronomy/nina/touch-n-star/","title":"Touch'N'Stars: The Perfect Mobile Companion for NINA","text":"<p>Touch'N'Stars is a revolutionary mobile web application that transforms how astrophotographers interact with NINA (Nighttime Imaging 'N' Astronomy). This comprehensive guide covers everything from basic setup to advanced usage scenarios.</p>"},{"location":"astronomy/nina/touch-n-star/#why-touchnstars-is-essential-for-astrophotographers","title":"\ud83c\udf1f Why Touch'N'Stars is Essential for Astrophotographers","text":"<p>If you're an astrophotography enthusiast using NINA, you've likely experienced the frustration of poor remote desktop experiences on mobile devices and wondered why there's no native mobile adaptation. Touch'N'Stars solves this problem by providing a mobile-first interface designed specifically for smartphones and tablets.</p>"},{"location":"astronomy/nina/touch-n-star/#key-advantages","title":"\ud83c\udfaf Key Advantages","text":""},{"location":"astronomy/nina/touch-n-star/#1-mobile-first-design","title":"1. Mobile-First Design","text":"<ul> <li>Optimized Touch Interface: Designed specifically for touch interactions</li> <li>Responsive Layout: Adapts perfectly to different screen sizes</li> <li>Intuitive Navigation: Easy-to-use interface even in dark field conditions</li> <li>Offline Capability: Core functions work even with intermittent connectivity</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#2-enhanced-field-experience","title":"2. Enhanced Field Experience","text":"<ul> <li>Hands-Free Operation: Control your entire imaging setup from your mobile device</li> <li>Red Light Mode: Preserves night vision during field operations</li> <li>Quick Access: Essential controls are just a tap away</li> <li>Weather Integration: Real-time weather information for imaging decisions</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#3-professional-features","title":"3. Professional Features","text":"<ul> <li>Profile Management: Switch between different equipment configurations instantly</li> <li>Polar Alignment: Three-point polar alignment assistance with visual guides</li> <li>Sequence Control: Start, stop, and monitor imaging sequences remotely</li> <li>Equipment Status: Real-time monitoring of all connected devices</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#4-open-source-benefits","title":"4. Open Source Benefits","text":"<ul> <li>Free to Use: No licensing fees or subscription costs</li> <li>Community Driven: Continuous improvements from the astrophotography community</li> <li>Customizable: Source code available for modifications and enhancements</li> <li>Transparent Development: Open development process with regular updates</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#technical-specifications","title":"\ud83d\udd27 Technical Specifications","text":""},{"location":"astronomy/nina/touch-n-star/#system-requirements","title":"System Requirements","text":"<ul> <li>NINA Version: 2.2.2.0 or later (recommended: latest stable)</li> <li>Operating System: Windows 10/11 (for NINA host)</li> <li>Mobile Devices: iOS 12+, Android 8+, or any modern web browser</li> <li>Network: Local WiFi network (2.4GHz or 5GHz)</li> <li>Memory: Minimal impact on NINA performance</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#supported-features","title":"Supported Features","text":"<ul> <li>\u2705 Equipment Control: Mount, camera, filter wheel, focuser</li> <li>\u2705 Sequence Management: Start/stop/pause imaging sequences</li> <li>\u2705 Profile Switching: Quick configuration changes</li> <li>\u2705 Polar Alignment: Three-point alignment assistance</li> <li>\u2705 Weather Monitoring: Real-time conditions</li> <li>\u2705 Target Selection: Object database and planning</li> <li>\u2705 Status Monitoring: Equipment health and progress tracking</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#performance-characteristics","title":"Performance Characteristics","text":"<ul> <li>Response Time: &lt; 200ms for most operations</li> <li>Battery Usage: Optimized for extended field sessions</li> <li>Data Usage: Minimal bandwidth requirements</li> <li>Reliability: Automatic reconnection on network interruptions</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#use-cases-and-scenarios","title":"\ud83c\udf0d Use Cases and Scenarios","text":""},{"location":"astronomy/nina/touch-n-star/#remote-observatory-control","title":"Remote Observatory Control","text":"<p>Perfect for permanent installations where you need to monitor and control equipment from a distance: - Monitor imaging progress from indoors - Respond to weather changes quickly - Troubleshoot equipment issues remotely - Review and adjust sequences without visiting the observatory</p>"},{"location":"astronomy/nina/touch-n-star/#portable-setup-management","title":"Portable Setup Management","text":"<p>Ideal for portable astrophotography setups: - Quick equipment setup and alignment - Easy profile switching for different targets - Hands-free operation during cold nights - Reduced computer dependency in the field</p>"},{"location":"astronomy/nina/touch-n-star/#group-imaging-sessions","title":"Group Imaging Sessions","text":"<p>Excellent for astronomy clubs and group events: - Multiple people can monitor progress - Easy demonstration of astrophotography workflow - Collaborative target selection and planning - Educational tool for teaching astrophotography</p>"},{"location":"astronomy/nina/touch-n-star/#backup-control-interface","title":"Backup Control Interface","text":"<p>Provides redundancy for critical imaging sessions: - Alternative control method if primary interface fails - Emergency stop capabilities - Quick status checks without disturbing main workflow - Simplified interface for less experienced operators</p>"},{"location":"astronomy/nina/touch-n-star/#touchnstars","title":"\u6559\u7a0b\u200b\uff1a\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200bTouch'N'Stars","text":""},{"location":"astronomy/nina/touch-n-star/#_1","title":"\u51c6\u5907\u200b\u5de5\u4f5c","text":"<ul> <li>\u200b\u5b89\u88c5\u200bAdvanced API\u200b\u63d2\u4ef6\u200b</li> <li>\u200b\u4e0b\u8f7d\u200b\u5e76\u200b\u5b89\u88c5\u200bAdvanced API\u200b\u63d2\u4ef6\u200b\u3002</li> <li>\u200b\u5728\u200bNINA\u200b\u4e2d\u200b\u542f\u7528\u200b\u63d2\u4ef6\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200bAPI\u200b\u7aef\u53e3\u200b\u8bbe\u7f6e\u200b\u4e3a\u200b1888\uff0c\u200b\u540c\u65f6\u200b\u786e\u4fdd\u200bV2\u200b\u7248\u672c\u200b\u5df2\u200b\u6fc0\u6d3b\u200b\u3002</li> <li>\u200b\u52fe\u9009\u200b\u201cUse Access-Control-Allow-Origin Header\u201d\u200b\u9009\u9879\u200b\u3002</li> </ul> <ul> <li>\u200b\u5b89\u88c5\u200bTouch'N'Stars**</li> </ul> <ul> <li>\u200b\u5b89\u88c5\u200b\u4e09\u661f\u200b\u6781\u8f74\u200b\u6821\u51c6\u200b\u63d2\u4ef6\u200b\uff08\u200b\u9ad8\u200b\u7248\u672c\u200b\u5fc5\u5907\u200b\uff09</li> </ul> <ul> <li>\u200b\u914d\u7f6e\u200b\u9632\u706b\u5899\u200b    \u200b\u5982\u679c\u200b\u65e0\u6cd5\u8bbf\u95ee\u200bTouch'N'Stars\uff0c\u200b\u8bf7\u200b\u68c0\u67e5\u200bWindows\u200b\u9632\u706b\u5899\u200b\u8bbe\u7f6e\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5141\u8bb8\u200b\u76f8\u5173\u200b\u7aef\u53e3\u200b\uff085000\uff09\u200b\u7684\u200b\u901a\u4fe1\u200b\u3002</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#touchnstars_1","title":"\u5b89\u88c5\u200bTouch'N'Stars","text":"<ol> <li> <p>\u200b\u8bbf\u95ee\u200bWebApp    \u200b\u5728\u200b\u6d4f\u89c8\u5668\u200b\u4e2d\u200b\u8f93\u5165\u200b\u4ee5\u4e0b\u200b\u5730\u5740\u200b\uff1a <code>http://\"\u200b\u4f60\u200b\u7684\u200bNINA\u200b\u7535\u8111\u200bIP\":5000</code>    \u200b\u4f8b\u5982\u200b\uff1a<code>http://192.168.1.100:5000</code></p> </li> <li> <p>\u200b\u5b89\u88c5\u200bAndroid\u200b\u5e94\u7528\u200b\uff08\u200b\u53ef\u200b\u9009\u200b\uff09    \u200b\u5982\u679c\u200b\u4f60\u200b\u662f\u200b\u5b89\u5353\u200b\u7528\u6237\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4e0b\u8f7d\u200b\u5e76\u200b\u5b89\u88c5\u200bAPK\u200b\u6587\u4ef6\u200b\uff0c\u200b\u4eab\u53d7\u200b\u66f4\u200b\u6d41\u7545\u200b\u7684\u200b\u79fb\u52a8\u200b\u4f53\u9a8c\u200b\u3002</p> </li> </ol>"},{"location":"astronomy/nina/touch-n-star/#_2","title":"\u4f7f\u7528\u200b\u6559\u7a0b","text":"<ul> <li>\u200b\u8fde\u63a5\u200b\u8bbe\u5907\u200b </li> <li>\u200b\u6253\u5f00\u200bTouch'N'Stars\uff0c\u200b\u786e\u4fdd\u200b\u4f60\u200b\u7684\u200b\u624b\u673a\u200b\u6216\u200b\u5e73\u677f\u200b\u4e0e\u200b\u8fd0\u884c\u200bNINA\u200b\u7684\u200b\u7535\u8111\u200b\u5904\u4e8e\u200b\u540c\u4e00\u200b\u5c40\u57df\u7f51\u200b\u3002</li> <li>\u200b\u8f93\u5165\u200bNINA\u200b\u7535\u8111\u200b\u7684\u200bIP\u200b\u5730\u5740\u200b\uff0c\u200b\u70b9\u51fb\u200b\u8fde\u63a5\u200b\u3002   +</li> </ul> <ul> <li>\u200b\u63a7\u5236\u200b\u8bbe\u5907\u200b </li> <li>\u200b\u914d\u7f6e\u6587\u4ef6\u200b\u7ba1\u7406\u200b\uff1a\u200b\u9009\u62e9\u200b\u5df2\u200b\u914d\u7f6e\u200b\u7684\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u5feb\u901f\u200b\u542f\u52a8\u200b\u8bbe\u5907\u200b\u3002</li> <li>\u200b\u4e09\u70b9\u200b\u6781\u8f74\u200b\u6821\u51c6\u200b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u7684\u200bNINA\u200b\u7248\u672c\u200b\u4e3a\u200b2.2.2.0\u200b\u6216\u200b\u66f4\u65b0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u901a\u8fc7\u200bTouch'N'Stars\u200b\u5b8c\u6210\u200b\u6781\u8f74\u200b\u6821\u51c6\u200b\u3002</li> <li> <p>\u200b\u542f\u52a8\u200b\u62cd\u6444\u200b\uff1a\u200b\u4e00\u952e\u200b\u542f\u52a8\u200b\u62cd\u6444\u200b\u6d41\u7a0b\u200b\uff0c\u200b\u5b9e\u65f6\u200b\u76d1\u63a7\u200b\u62cd\u6444\u200b\u72b6\u6001\u200b\u3002</p> </li> <li> <p>\u200b\u8c03\u6574\u200b\u8bbe\u7f6e\u200b </p> </li> <li>\u200b\u901a\u8fc7\u200b\u7b80\u6d01\u200b\u7684\u200b\u754c\u9762\u200b\u8c03\u6574\u200b\u8bbe\u5907\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u200b\u66dd\u5149\u200b\u65f6\u95f4\u200b\u3001\u200b\u6ee4\u955c\u200b\u8f6e\u200b\u8bbe\u7f6e\u200b\u7b49\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u5feb\u901f\u200b\u5207\u6362\u200b\u914d\u7f6e\u6587\u4ef6\u200b\uff0c\u200b\u9002\u5e94\u200b\u4e0d\u540c\u200b\u7684\u200b\u62cd\u6444\u200b\u9700\u6c42\u200b\u3002</li> </ul> <p> </p>"},{"location":"astronomy/nina/touch-n-star/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u517c\u5bb9\u6027\u200b\uff1a\u200b\u786e\u4fdd\u200bNINA\u200b\u548c\u200bAdvanced API\u200b\u63d2\u4ef6\u200b\u5747\u200b\u4e3a\u200b\u6700\u65b0\u200b\u7248\u672c\u200b\u3002</li> <li>\u200b\u7f51\u7edc\u200b\u7a33\u5b9a\u6027\u200b\uff1a\u200b\u5efa\u8bae\u200b\u5728\u200b\u7a33\u5b9a\u200b\u7684\u200b\u5c40\u57df\u7f51\u200b\u73af\u5883\u200b\u4e0b\u200b\u4f7f\u7528\u200b\uff0c\u200b\u907f\u514d\u200b\u8fde\u63a5\u200b\u4e2d\u65ad\u200b\u3002</li> <li>\u200b\u514d\u8d23\u200b\u58f0\u660e\u200b\uff1aTouch'N'Stars\u200b\u4ecd\u200b\u5904\u4e8e\u200b\u6d4b\u8bd5\u9636\u6bb5\u200b\uff0c\u200b\u8bf7\u200b\u8c28\u614e\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u4e0d\u200b\u627f\u62c5\u200b\u56e0\u200b\u4f7f\u7528\u200b\u8be5\u200b\u5de5\u5177\u200b\u5bfc\u81f4\u200b\u7684\u200b\u4efb\u4f55\u200b\u635f\u5931\u200b\u3002</li> </ul>"},{"location":"astronomy/nina/touch-n-star/#_4","title":"\u7ed3\u8bed","text":"<p>Touch'N'Stars\u200b\u4e3a\u200b\u5929\u6587\u200b\u6444\u5f71\u200b\u7231\u597d\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5168\u65b0\u200b\u7684\u200b\u8bbe\u5907\u200b\u63a7\u5236\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u8ba9\u200b\u7e41\u7410\u200b\u7684\u200b\u8bbe\u5907\u200b\u8bbe\u7f6e\u200b\u53d8\u5f97\u200b\u7b80\u5355\u200b\u9ad8\u6548\u200b\u3002\u200b\u65e0\u8bba\u662f\u200b\u521d\u5b66\u8005\u200b\u8fd8\u662f\u200b\u8d44\u6df1\u200b\u73a9\u5bb6\u200b\uff0c\u200b\u8fd9\u200b\u6b3e\u200b\u5de5\u5177\u200b\u90fd\u200b\u80fd\u200b\u4e3a\u200b\u4f60\u200b\u5e26\u6765\u200b\u6781\u5927\u200b\u7684\u200b\u4fbf\u5229\u200b\u3002\u200b\u8d76\u5feb\u200b\u5c1d\u8bd5\u200b\u4e00\u4e0b\u200b\u5427\u200b\uff0c\u200b\u8ba9\u200b\u4f60\u200b\u7684\u200b\u5929\u6587\u200b\u6444\u5f71\u200b\u4e4b\u65c5\u200b\u66f4\u52a0\u200b\u8f7b\u677e\u6109\u5feb\u200b\uff01</p> <p>\u200b\u5982\u679c\u200b\u4f60\u200b\u559c\u6b22\u200b\u8fd9\u200b\u6b3e\u200b\u5de5\u5177\u200b\uff0c\u200b\u522b\u5fd8\u4e86\u200b\u7ed9\u200b\u5f00\u53d1\u8005\u200b\u70b9\u4e2a\u200b\u2b50\ufe0f\u200b\u652f\u6301\u200b\u54e6\u200b\uff01 GitHub\u200b\u9879\u76ee\u200b\u5730\u5740\u200b</p> <p>\u200b\u6c49\u5316\u200b\u548c\u200b\u6559\u7a0b\u200b\u4f5c\u8005\u200b\uff1aMax Qian\uff08GitHub\uff09</p>"},{"location":"astronomy/siril/python/","title":"\u60f3\u8c61\u200b\u4f60\u200b\u6ca1\u6709\u200b\u62cd\u6444\u200b\u5e73\u573a\u200b\u7684\u200b\u539f\u56e0\u200b\uff08\u200b\u867d\u7136\u200b\u8fd9\u200b\u6ca1\u6709\u200b\u597d\u200b\u7684\u200b\u7406\u7531\u200b\uff0c\u200b\u6ca1\u6709\u200b\u7406\u7531\u200b\u4e0d\u200b\u62cd\u6444\u200b\u5e73\u573a\u200b\uff01\uff09\u3002\u200b\u901a\u8fc7\u200b\u5bf9\u200b\u4e0a\u8ff0\u200b\u4ee3\u7801\u200b\u8fdb\u884c\u200b\u5c0f\u200b\u7684\u200b\u4fee\u6539\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5","text":"<ol> <li>\u200b\u68c0\u67e5\u200b\u5e73\u573a\u200b\u6587\u4ef6\u5939\u200b\u662f\u5426\u200b\u5305\u542b\u200b\u4efb\u4f55\u200b\u6587\u4ef6\u200b\u6216\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c</li> <li>\u200b\u8c03\u6574\u200b\u811a\u672c\u200b\u4ee5\u200b\u8df3\u200b\u8fc7\u200b\u4e3b\u5e73\u573a\u200b\u7684\u200b\u51c6\u5907\u200b\uff0c</li> <li>\u200b\u8c03\u6574\u200b\u5149\u5e27\u200b\u5904\u7406\u200b\u4ee5\u200b\u8df3\u200b\u8fc7\u200b\u5e73\u573a\u200b\u6821\u51c6\u200b\u3002</li> </ol> <p>\u200b\u4f60\u200b\u9700\u8981\u200b\u505a\u200b\u4ee5\u4e0b\u200b\u64cd\u4f5c\u200b\u3002</p> <p>\u200b\u9996\u5148\u200b\u4fee\u6539\u200b<code>light()</code>\u200b\u51fd\u6570\u200b\u4ee5\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u6765\u200b\u6307\u793a\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\u5e73\u573a\u200b\uff1a</p> <pre><code>def light(light_dir, process_dir, hasflats=True):\n    cmd.cd(light_dir)\n    cmd.convert('light', out=process_dir, fitseq=True)\n    cmd.cd(process_dir)\n    if hasflats:\n        cmd.preprocess('light', dark='dark_stacked', flat='pp_flat_stacked', cfa=True, equalize_cfa=True, debayer=True)\n    else:\n        cmd.preprocess('light', dark='dark_stacked', cfa=True, debayer=True)\n    cmd.register('pp_light')\n    cmd.stack('r_pp_light', type='rej', sigma_low=3, sigma_high=3, norm='addscale', output_norm=True, out='../result')\n    cmd.close()\n</code></pre> <p>\u200b\u7136\u540e\u200b\u4fee\u6539\u200b\u4e3b\u200b\u811a\u672c\u200b\u4ee5\u200b\u68c0\u67e5\u200b\u5e73\u573a\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c\u200b\u5e76\u200b\u76f8\u5e94\u200b\u5730\u200b\u8c03\u6574\u200b\u5904\u7406\u200b\u6d41\u7a0b\u200b\uff1a</p> <pre><code># 4. \u200b\u51c6\u5907\u200b\u4e3b\u5e27\u200b\nflatsdir = workdir + '/flats'\nhasflats = True\nif not(os.path.isdir(flatsdir)) or (len(os.listdir(flatsdir)) == 0):  # \u200b\u5e73\u573a\u200b\u6587\u4ef6\u5939\u200b\u4e0d\u200b\u5305\u542b\u200b\u4efb\u4f55\u200b\u6587\u4ef6\u200b\u6216\u200b\u4e0d\u200b\u5b58\u5728\u200b\n    hasflats = False\n\nif hasflats:\n    master_bias(workdir + '/biases', process_dir)\n    master_flat(workdir + '/flats', process_dir)\n\nmaster_dark(workdir + '/darks', process_dir)\n\n# 5. \u200b\u6821\u51c6\u200b\u5149\u5e27\u200b\uff0c\u200b\u6ce8\u518c\u200b\u5e76\u200b\u53e0\u52a0\u200b\u5b83\u4eec\u200b\nlight(workdir + '/lights', process_dir, hasflats)\n</code></pre> <p>\u200b\u8fd9\u200b\u53ea\u662f\u200b\u4e00\u4e2a\u200b\u793a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u5f53\u7136\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u6697\u573a\u200b\u505a\u200b\u540c\u6837\u200b\u7684\u200b\u4e8b\u60c5\u200b\uff0c\u200b\u4f7f\u200b\u6240\u6709\u200b\u6587\u4ef6\u5939\u200b\u540d\u79f0\u200b\u6a21\u5757\u5316\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u5236\u4f5c\u200b\u6210\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200bI/O\u200b\u7684\u200b\u6a21\u5757\u200b\uff0c\u200b\u4f20\u9012\u200b\u5de5\u4f5c\u200b\u76ee\u5f55\u200b\u540d\u79f0\u200b\u7b49\u200b\u3002</p>"},{"location":"astronomy/siril/python/#execute","title":"\u4f7f\u7528\u200bExecute\u200b\u7684\u200b\u5904\u7406\u200b\u793a\u4f8b","text":"<p>\u200b\u8fd9\u200b\u6bb5\u200b\u4ee3\u7801\u200b\u4e0e\u200b\u4e0a\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u76f8\u540c\u200b\uff0c\u200b\u53ea\u662f\u200b\u5b83\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b\u4e86\u200b<code>Siril</code>\u200b\u7c7b\u200b\u7684\u200b<code>Execute</code>\u200b\u65b9\u6cd5\u200b\u3002<code>Execute('some command')</code>\u200b\u7684\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\u4e0e\u200b\u4f60\u200b\u5728\u200bSiril\u200b\u547d\u4ee4\u884c\u200b\u4e2d\u200b\u952e\u5165\u200b<code>some command</code>\u200b\u5b8c\u5168\u76f8\u540c\u200b\u3002</p> <pre><code>import sys\nimport os\nfrom pysiril.siril import *\n\n# ==============================================================================\n# \u200b\u4f7f\u7528\u200bExecute\u200b\u51fd\u6570\u200b\u7684\u200bOSC\u200b\u5904\u7406\u200b\u793a\u4f8b\u200b\uff0c\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u5305\u88c5\u200b\u51fd\u6570\u200b\n# ==============================================================================\n\ndef master_bias(bias_dir, process_dir):\n    app.Execute(\"cd \" + bias_dir)\n    app.Execute(\"convert bias -out=\" + process_dir + \" -fitseq\")\n    app.Execute(\"cd \" + process_dir)\n    app.Execute(\"stack bias rej 3 3  -nonorm\")\n\ndef master_flat(flat_dir, process_dir):\n    app.Execute(\"cd \" + flat_dir + \"\\n\"\n                \"convert flat -out=\" + process_dir + \" -fitseq\" + \"\\n\"\n                \"cd \" + process_dir + \"\\n\"\n                \"preprocess flat  -bias=bias_stacked\" + \"\\n\"\n                \"stack  pp_flat rej  3 3 -norm=mul\")\n\ndef master_dark(dark_dir, process_dir):\n    app.Execute(\"\"\" cd %s\n                    convert dark -out=%s -fitseq\n                    cd %s\n                    stack dark rej 3 3 -nonorm \"\"\" % (dark_dir, process_dir, process_dir))\n\ndef light(light_dir, process_dir):\n    app.Execute(\"cd \" + light_dir)\n    app.Execute(\"convert light -out=\" + process_dir + \" -fitseq\")\n    app.Execute(\"cd \" + process_dir)\n    app.Execute(\"preprocess light -dark=dark_stacked -flat=pp_flat_stacked -cfa -equalize-cfa -debayer\")\n    app.Execute(\"register pp_light\")\n    app.Execute(\"stack r_pp_light rej 3 3 -norm=addscale -output_norm -out=../result\")\n    app.Execute(\"close\")\n\n# ==============================================================================\nworkdir = \"/home/barch/siril/work/TestSiril\"\ntry:\n    app.Open()\n    process_dir = '../process'\n    app.Execute(\"set16bits\")\n    app.Execute(\"setext fit\")\n    master_bias(workdir + '/biases', process_dir)\n    master_flat(workdir + '/flats', process_dir)\n    master_dark(workdir + '/darks', process_dir)\n    light(workdir + '/lights', process_dir)\nexcept Exception as e:\n    print(\"\\n**** ERROR *** \" + str(e) + \"\\n\")\n\napp.Close()\ndel app\n</code></pre> <p>\u200b\u65e0\u8bba\u200b\u4f60\u200b\u9009\u62e9\u200b\u4f7f\u7528\u200b<code>Execute</code>\u200b\u8fd8\u662f\u200b\u5305\u88c5\u200b\u51fd\u6570\u200b\uff0c\u200b\u90fd\u200b\u53d6\u51b3\u4e8e\u200b\u4f60\u200b\u3002\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u4e86\u89e3\u200b\u4e86\u200b\u7528\u200bPython\u200b\u63a7\u5236\u200bSiril\u200b\u7684\u200b\u4e24\u79cd\u200b\u4e3b\u8981\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"astronomy/siril/python/#addons","title":"\u4f7f\u7528\u200bAddons","text":"<p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b<code>Addons</code>\u200b\u7c7b\u200b\u7684\u200b\u4e00\u4e9b\u200b\u529f\u80fd\u200b\u3002</p> <pre><code>import sys\nimport os\nfrom pysiril.siril import *\nfrom pysiril.wrapper import *\nfrom pysiril.addons import *\n\n# ==============================================================================\n# Addons\u200b\u51fd\u6570\u200b\u793a\u4f8b\u200b\n# ==============================================================================\napp = Siril()\ntry:\n    cmd = Wrapper(app)\n    fct = Addons(app)\n\n    # \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5e8f\u5217\u200b\u6587\u4ef6\u200b\n    workdir = \"D:/_TraitAstro/20-SiriL/work/TestSiril\"\n    processdir = workdir + \"/\" + \"xxxx\"\n\n    fct.CleanFolder(processdir, ext_list=[\".cr2\", \".seq\"])\n\n    fct.MkDirs(processdir)\n\n    NbImage = fct.GetNbFiles(workdir + '/lights/*.CR2')\n    print(\"CR2 number:\", NbImage)\n\n    number = fct.NumberImages(workdir + '/lights/*.CR2', processdir, \"offsets\", start=10, bOverwrite=True)\n\n    if number == NbImage:\n        fct.CreateSeqFile(processdir + \"/toto.seq\", number)\n    else:\n        print(\"error of images number:\", number, \"&lt;&gt;\", NbImage)\n\nexcept Exception as e:\n    print(\"\\n**** ERROR *** \" + str(e) + \"\\n\")\n\napp.Close()\ndel app\n</code></pre>"},{"location":"astronomy/siril/python/#_2","title":"\u8fd4\u56de\u503c\u200b\u7684\u200b\u51fd\u6570","text":"<p>\u200b\u4e0b\u9762\u200b\u7684\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u8fd4\u56de\u503c\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u4ee5\u200b<code>*.seq</code>\u200b\u6587\u4ef6\u200b\u4f5c\u4e3a\u200b\u8f93\u5165\u200b\uff0c\u200b\u5e76\u200b\u5199\u5165\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b<code>stat</code>\u200b\u547d\u4ee4\u200b\u8fd4\u56de\u503c\u200b\u7684\u200bcsv\u200b\u6587\u4ef6\u200b\u3002\u200b\u6ce8\u610f\u200b\uff1a\u200b\u7531\u4e8e\u200bSiril 0.99.8\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e86\u200b<code>seqstat</code>\u200b\u547d\u4ee4\u200b\uff0c\u200b\u6b64\u200b\u793a\u4f8b\u200b\u73b0\u5df2\u200b\u8fc7\u65f6\u200b\u3002\u200b\u5c3d\u7ba1\u5982\u6b64\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u7ed9\u200b\u4f60\u200b\u4e00\u4e9b\u200b\u5173\u4e8e\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u7684\u200b\u60f3\u6cd5\u200b\u3002</p> <pre><code>import os, sys\nimport re\nimport glob\nfrom pysiril.siril import Siril\nfrom pysiril.wrapper import Wrapper\nfrom distutils.util import strtobool\nimport pandas as pd\n\ndef Run(inputfilename):\n    folder, filename = os.path.split(inputfilename)\n    fileroot, _ = os.path.splitext(filename)\n    os.chdir(folder)\n\n    with open(inputfilename) as f:\n        lines = list(line for line in (l.strip() for l in f) if line)\n\n    img = []\n    for i, l in enumerate(lines):\n        if l.startswith('S'):\n            specline = l.split()\n            lenseq = int(specline[3])\n\n        if l.startswith('I'):\n            tl = l.split()\n            img.append(int(tl[1]))\n\n    for ff in glob.iglob(fileroot + '*.f*'):\n        _, fitext = os.path.splitext(ff)\n        if not (fitext == '.seq'):\n            break\n\n    app = Siril(bStable=False)\n    app.Open()\n    cmd = Wrapper(app)\n\n    res = []\n    for i in range(lenseq):\n        fitfile = '{0:s}{1:05d}{2:s}'.format(fileroot, img[i], fitext)\n        cmd.load(fitfile)\n        _, stats = cmd.stat()\n        for j in range(len(stats)):\n            stats[j]['file'] = fitfile\n            stats[j]['image#'] = img[i]\n            res.append(stats[j])\n    app.Close()\n    del app\n\n    data = pd.DataFrame.from_dict(res)\n    data.set_index(['file', 'image#', 'layer'], inplace=True)\n    data.reset_index(inplace=True)\n    data.to_csv(fileroot + 'stats.csv', index=False)\n\nif __name__ == \"__main__\":\n    args = []\n    kwargs = {}\n    for a in sys.argv[1:]:\n        if '=' in a:\n            f, v = a.split('=')\n            kwargs[f] = v\n        else:\n            args.append(a)\n    Run(*tuple(args), **kwargs)\n</code></pre> <p>\u200b\u8981\u200b\u8fd0\u884c\u200b\u5b83\u200b\uff1a</p> <ol> <li>\u200b\u5c06\u200b\u6b64\u200b\u4ee3\u7801\u200b\u590d\u5236\u200b/\u200b\u7c98\u8d34\u200b\u5230\u200b\u4f60\u200b\u6700\u200b\u559c\u6b22\u200b\u7684\u200b\u7f16\u8f91\u5668\u200b\u4e2d\u200b\uff0c</li> <li>\u200b\u5c06\u200b\u5176\u200b\u4fdd\u5b58\u200b\u4e3a\u200b<code>seqstat.py</code>\uff0c</li> <li>\u200b\u5728\u200bshell\u200b\u4e2d\u200b\u952e\u5165\u200b\uff1a</li> </ol> <pre><code>python seqstat.py \"C:\\Users\\myusername\\Pictures\\astro\\myseqfile_.seq\"\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u5728\u200b\u540c\u4e00\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u4fdd\u5b58\u200b<code>myseqfile_stats.csv</code>\u3002</p>"},{"location":"astronomy/siril/python/#_3","title":"\u5c06\u200b\u5355\u200b\u56fe\u50cf\u200b\u547d\u4ee4\u200b\u5e94\u7528\u200b\u4e8e\u200b\u5e8f\u5217","text":"<p>\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u793a\u4f8b\u200b\u662f\u200b\u6b64\u5904\u200b\u6240\u793a\u200b\u7684\u200bshell\u200b\u811a\u672c\u200b\u7684\u200bPython\u200b\u7b49\u6548\u200b\u7248\u672c\u200b\u3002\u200b\u5b83\u200b\u4f7f\u7528\u200b\u4e86\u200b\u4e0a\u9762\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u6240\u6709\u200b\u6982\u5ff5\u200b\u3002\u200b\u53ea\u200b\u9700\u200b\u5c06\u200b\u4e0b\u9762\u200b\u7684\u200b\u4ee3\u7801\u200b\u590d\u5236\u200b\u5e76\u200b\u4fdd\u5b58\u200b\u5230\u200b\u540d\u4e3a\u200b<code>genseqscript.py</code>\u200b\u7684\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u3002</p> <pre><code># \u200b\u7528\u6cd5\u200b\n#######\n# genseqscript.py command seqname [prefix ext]\n# \u200b\u793a\u4f8b\u200b\uff1a\n###########\n#\n# \u200b\u5bf9\u200bC:\\MyImages\\r_pp_light_.seq\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u56fe\u50cf\u200b\u5e94\u7528\u200b\u4e2d\u200b\u503c\u200b\u6ee4\u6ce2\u5668\u200b\uff0c\u200b\u6269\u5c55\u200b\u540d\u4e3a\u200b\u201cfit\u201d\uff0c\u200b\u5e76\u200b\u4ee5\u200b\u201cmed_\u201d\u200b\u524d\u7f00\u200b\u4fdd\u5b58\u200b\n# python genseqscript.py \"fmedian 5 1\" \"C:\\MyImages\\r_pp_light_.seq\" med_ fit\n#\n# \u200b\u5bf9\u200b\u5f53\u524d\u200b\u6587\u4ef6\u5939\u200b\u4e2d\u200b\u7684\u200bpp_light_.seq\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u56fe\u50cf\u200b\u5e94\u7528\u200b90\u200b\u5ea6\u200b\u65cb\u8f6c\u200b\uff08\u200b\u4e0d\u200b\u88c1\u526a\u200b\uff09\n# python genseqscript.py \"rotate 90 -nocrop\" pp_light_ rot90_\n\n# \u200b\u7528\u6237\u200b\u8bbe\u7f6e\u200b\n# command: \u200b\u8981\u200b\u5e94\u7528\u200b\u4e8e\u200b\u5e8f\u5217\u200b\u4e2d\u200b\u6bcf\u4e2a\u200b\u56fe\u50cf\u200b\u7684\u200b\u547d\u4ee4\u200b\u3002\u200b\u5982\u679c\u200b\u6709\u200b\u591a\u4e2a\u200b\u5355\u8bcd\u200b\uff0c\u200b\u8bf7\u200b\u7528\u200b\u53cc\u5f15\u53f7\u200b\u62ec\u200b\u8d77\u6765\u200b\n# seqname: \u200b\u5e8f\u5217\u200b\u7684\u200b\u540d\u79f0\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5b8c\u6574\u200b\u8def\u5f84\u200b\u6216\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b\u5e8f\u5217\u200b\u540d\u79f0\u200b\uff08\u200b\u5e26\u200b\u6216\u200b\u4e0d\u5e26\u200b.seq\u200b\u6269\u5c55\u540d\u200b\uff09\u3002\u200b\u5982\u679c\u200b\u8def\u5f84\u200b\u4e2d\u6709\u200b\u7a7a\u683c\u200b\uff0c\u200b\u8bf7\u200b\u7528\u200b\u53cc\u5f15\u53f7\u200b\u62ec\u200b\u8d77\u6765\u200b\n# prefix: \uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u8981\u200b\u6dfb\u52a0\u200b\u5230\u200b\u5904\u7406\u200b\u6587\u4ef6\u540d\u79f0\u200b\u7684\u200b\u524d\u7f00\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\uff1a\"\"\n# ext: \uff08\u200b\u53ef\u200b\u9009\u200b\uff09\u200b\u9009\u62e9\u200b\u7684\u200bFITS\u200b\u6269\u5c55\u540d\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\uff1afits\uff08\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200bfit\u200b\u6216\u200bfts\uff09\nimport os, sys\nfrom pysiril.siril import Siril\nfrom pysiril.wrapper import Wrapper\nfrom pysiril.addons import Addons\n\ndef Run(command, seqname, prefix='', ext='fits'):\n    print('Command to be run: {0:s}'.format(command))\n    print('prefix: {0:s}'.format(prefix))\n    print('FITS extension: {0:s}'.format(ext))\n\n    if os.path.isabs(seqname):\n        currdir, seqname = os.path.split(seqname)\n    else:\n        currdir = os.getcwd()\n\n    seqname, seqext = os.path.splitext(seqname)\n    if len(seqext) == 0:\n        seqext = '.seq'\n\n    print('Working directory: {0:s}'.format(currdir))\n    print('Sequence to be processed: {0:s}{1:s}'.format(seqname, seqext))\n\n    if not (os.path.isfile(os.path.join(currdir, seqname + seqext))):\n        print('The specified sequence does not exist - aborting')\n        sys.exit()\n\n    print('Starting PySiril')\n    app = Siril(R'C:\\Program Files\\SiriL\\bin\\siril-cli.exe')\n    AO = Addons(app)\n    cmd = Wrapper(app)\n\n    print('Starting Siril')\n    try:\n        app.Open()\n        seqfile = AO.GetSeqFile(os.path.join(currdir, seqname + seqext))\n        app.Execute('setext {:s}'.format(ext))\n        app.Execute('cd \"{:s}\"'.format(currdir))\n        for im in seqfile['images']:\n            currframenb = im['filenum']\n            currframe = '{0:s}{1:05d}.{2:s}'.format(seqname, currframenb, ext)\n            if not (os.path.isfile(os.path.join(currdir, currframe))):\n                print('First file {0:s} does not exist... check if the .seq file is valid or the selected FITS extension (\"{1:s}\" defined here) matches your files - aborting'.format(currframe, ext))\n                sys.exit()\n            print('processing file: {0:s}'.format(currframe))\n            savename = prefix + currframe\n            cmd.load(currframe)\n            app.Execute(command)\n            cmd.save(savename)\n        app.Close()\n        del app\n    except Exception as e:\n        print(\"\\n**** ERROR *** \" + str(e) + \"\\n\")\n\nif __name__ == \"__main__\":\n    args = []\n    kwargs = {}\n    for a in sys.argv[1:]:\n        if '=' in a:\n            f, v = a.split('=', 1)\n            kwargs[f] = v\n        else:\n            args.append(a)\n    Run(*tuple(args), **kwargs)\n</code></pre>"},{"location":"creative/","title":"Creative Writing","text":"<p>Welcome to the creative writing section! This collection features original science fiction stories and narratives that explore themes of technology, quantum physics, and futuristic scenarios. Each story combines scientific concepts with imaginative storytelling.</p>"},{"location":"creative/#featured-stories","title":"Featured Stories","text":""},{"location":"creative/#three-day-war","title":"Three Day War (\u200b\u4e09\u65e5\u200b\u4e4b\u6218\u200b)","text":"<p>A gripping science fiction narrative exploring the concept of a brief but transformative conflict:</p> <p>Themes: - \ud83d\ude80 Future Warfare - Advanced military technology and strategy - \ud83c\udf0d Global Impact - How brief conflicts can reshape the world - \ud83e\udd16 Technology Integration - The role of AI and automation in warfare - \ud83e\udde0 Human Element - Personal stories within larger conflicts</p>"},{"location":"creative/#wave-function-collapse","title":"Wave Function Collapse (\u200b\u6ce2\u51fd\u6570\u200b\u574d\u584c\u200b)","text":"<p>A quantum physics-inspired story exploring the intersection of science and reality:</p> <p>Themes: - \u269b\ufe0f Quantum Mechanics - Scientific concepts as narrative elements - \ud83c\udf0c Reality and Perception - The nature of observation and existence - \ud83d\udd2c Scientific Philosophy - Exploring the implications of quantum theory - \ud83c\udfad Human Experience - How scientific concepts affect personal reality</p>"},{"location":"creative/#quantum-entanglement","title":"Quantum Entanglement (\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b)","text":"<p>An exploration of connection and communication across vast distances:</p> <p>Themes: - \ud83d\udd17 Interconnectedness - Quantum entanglement as metaphor for human connection - \ud83d\udce1 Communication - Advanced methods of information transfer - \ud83c\udf20 Space and Time - Transcending physical limitations - \ud83d\udcab Consciousness - The role of observation and awareness</p>"},{"location":"creative/#writing-style-and-approach","title":"Writing Style and Approach","text":""},{"location":"creative/#scientific-foundation","title":"Scientific Foundation","text":"<p>Each story is grounded in real scientific principles: - Quantum Physics - Accurate representation of quantum mechanical concepts - Technology Extrapolation - Realistic projections of current technology - Scientific Method - Stories that respect scientific thinking</p>"},{"location":"creative/#narrative-techniques","title":"Narrative Techniques","text":"<ul> <li>Character-Driven - Focus on human experience within scientific scenarios</li> <li>Conceptual Exploration - Using fiction to examine scientific ideas</li> <li>Cultural Integration - Blending Eastern and Western perspectives</li> <li>Philosophical Depth - Exploring deeper implications of scientific concepts</li> </ul>"},{"location":"creative/#themes-explored","title":"Themes Explored","text":""},{"location":"creative/#technology-and-humanity","title":"Technology and Humanity","text":"<ul> <li>The relationship between advanced technology and human nature</li> <li>How scientific breakthroughs affect society and individuals</li> <li>The balance between progress and human values</li> </ul>"},{"location":"creative/#quantum-reality","title":"Quantum Reality","text":"<ul> <li>The strange world of quantum mechanics as storytelling device</li> <li>Reality, observation, and the nature of existence</li> <li>Scientific concepts as metaphors for human experience</li> </ul>"},{"location":"creative/#future-scenarios","title":"Future Scenarios","text":"<ul> <li>Plausible future developments in science and technology</li> <li>How current trends might evolve and impact society</li> <li>The role of human agency in technological advancement</li> </ul>"},{"location":"creative/#reading-experience","title":"Reading Experience","text":"<p>These stories are designed to: - Educate - Introduce scientific concepts through narrative - Entertain - Provide engaging and thought-provoking stories - Inspire - Encourage interest in science and technology - Reflect - Offer perspectives on current scientific developments</p>"},{"location":"creative/#language-and-accessibility","title":"Language and Accessibility","text":"<p>Stories are presented in their original language (Chinese) with: - Cultural Context - Preserving original cultural perspectives - Scientific Accuracy - Maintaining precision in scientific concepts - Literary Quality - Emphasizing storytelling craft and narrative flow</p> <p>Whether you're interested in science fiction, quantum physics, or simply enjoy well-crafted stories that make you think, this collection offers unique perspectives on the intersection of science and imagination.</p> <p>Navigate to individual stories to begin your journey into these scientifically-grounded fictional worlds!</p>"},{"location":"creative/quantum-entanglement/","title":"Quantum Entanglement","text":""},{"location":"creative/quantum-entanglement/#_1","title":"\u91cf\u5b50\u200b\u7ea0\u7f20","text":""},{"location":"creative/quantum-entanglement/#_2","title":"\u91cd\u6784\u200b\u4e4b\u8327","text":""},{"location":"creative/quantum-entanglement/#_3","title":"\u91cf\u5b50\u200b\u751f\u7269\u200b\u53cd\u5e94\u5806","text":"<p>\u200b\u6df1\u5733\u6e7e\u200b\u7b2c\u4e03\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u5929\u53f0\u200b\u60ac\u6d6e\u200b\u5728\u200b237\u200b\u7c73\u200b\u9ad8\u7a7a\u200b\uff0c\u200b\u91cf\u5b50\u200b\u9632\u62a4\u7f69\u200b\u5c06\u200b\u6885\u96e8\u200b\u626d\u66f2\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u6d1b\u4f26\u5179\u200b\u6d41\u5f62\u200b\u3002\u200b\u58a8\u9171\u200b\u7ad9\u200b\u5728\u200b\u8fb9\u7f18\u200b\u7684\u200b\u7eb3\u7c73\u200b\u7f51\u683c\u200b\u4e0a\u200b\uff0c\u200b\u7b2c\u4e03\u4ee3\u200b\u751f\u7269\u200b\u91cd\u6784\u200b\u88c5\u7f6e\u200b\u6b63\u4ee5\u200bcminpack\u200b\u975e\u7ebf\u6027\u200b\u4f18\u5316\u200b\u7b97\u6cd5\u200b\u91cd\u65b0\u200b\u7f16\u6392\u200b\u5979\u200b\u7684\u200b\u751f\u547d\u200b\u77e9\u9635\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u4ef7\u503c\u200b4.2\u200b\u4ebf\u200b\u4fe1\u7528\u200b\u70b9\u200b\u7684\u200b\u73af\u5f62\u200b\u52a0\u901f\u200b\u8231\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u200b\u901a\u8fc7\u200bmathter\u200b\u77e9\u9635\u200b\u5e93\u200b\u8fdb\u884c\u200b\u7740\u200b\u6bcf\u79d2\u200b10\u00b9\u2075\u200b\u6b21\u200b\u7684\u200b\u72b6\u6001\u200b\u7a7a\u95f4\u200b\u53d8\u6362\u200b\u3002</p> <p>\"\u200b\u5589\u7ed3\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b92.7%...\"</p> <p>\u200b\u5408\u6210\u200b\u97f3\u5728\u200b\u96e8\u5e55\u200b\u4e2d\u200b\u88c2\u89e3\u200b\u6210\u200b\u79bb\u6563\u200b\u7684\u200b\u5085\u91cc\u53f6\u200b\u5206\u91cf\u200b\u3002\u200b\u58a8\u9171\u200b\u80fd\u200b\u611f\u53d7\u200b\u5230\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5728\u200b\u58f0\u5e26\u200b\u9ecf\u819c\u200b\u95f4\u200b\u6267\u884c\u200bLevenberg-Marquardt\u200b\u4f18\u5316\u200b\uff0c\u200b\u5b83\u4eec\u200b\u7528\u200b\u6fc0\u5149\u200b\u954a\u5b50\u200b\u5c06\u200b\u96c4\u6fc0\u7d20\u200b\u53d7\u4f53\u200b\u86cb\u767d\u200b\u6309\u200b\u9ec4\u91d1\u5206\u5272\u200b\u6bd4\u4f8b\u200b\u66ff\u6362\u200b\u4e3a\u200b\u96cc\u6027\u200b\u53d8\u4f53\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u8fc7\u7a0b\u200b\u672c\u8be5\u200b\u5b8c\u5168\u200b\u65e0\u75db\u200b\uff0c\u200b\u4f46\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u5374\u200b\u901a\u8fc7\u200bsokol\u200b\u56fe\u5f62\u5e93\u200b\u4ea7\u751f\u200b\u4e86\u200b\u8be1\u5f02\u200b\u7684\u200b\u8de8\u200b\u6a21\u6001\u200b\u611f\u77e5\u200b\u2014\u2014\u200b\u6bcf\u4e2a\u200b\u86cb\u767d\u8d28\u200b\u6298\u53e0\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u4e00\u6bb5\u200b\u300a\u200b\u54e5\u5fb7\u5821\u200b\u53d8\u594f\u66f2\u200b\u300b\u200b\u7684\u200b\u91cf\u5b50\u5316\u200b\u58f0\u7eb9\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_4","title":"\u8de8\u5e73\u53f0\u200b\u751f\u7406\u200b\u67b6\u6784","text":"<p>\u200b\u7a81\u7136\u200b\uff0c\u200b\u9501\u9aa8\u200b\u4e0b\u65b9\u200b\u7684\u200b\u751f\u7269\u82af\u7247\u200b\u4f20\u6765\u200b\u77e9\u9635\u200b\u8fd0\u7b97\u200b\u8fc7\u8f7d\u200b\u7684\u200b\u707c\u75db\u200b\u3002\u200b\u8fd9\u662f\u200b\u7b2c\u4e03\u4ee3\u200b\u88c5\u7f6e\u200b\u7279\u6709\u200b\u7684\u200b\u526f\u4f5c\u7528\u200b\uff1a\u200b\u5f53\u200b\u96cc\u6fc0\u7d20\u200b\u6c34\u5e73\u200b\u7a81\u7834\u200b\u4e34\u754c\u503c\u200b\u65f6\u200b\uff0c\u200b\u91cf\u5b50\u5316\u200b\u7684\u200b\u5375\u5de2\u200b\u7ec6\u80de\u200b\u4f1a\u200b\u901a\u8fc7\u200bspan-lite\u200b\u5185\u5b58\u200b\u89c6\u56fe\u200b\u4e0e\u200b\u4eba\u5de5\u200b\u80f0\u817a\u200b\u4ea7\u751f\u200b\u8de8\u200b\u67b6\u6784\u200b\u8c10\u632f\u200b\u3002\u200b\u58a8\u9171\u200b\u8e09\u8dc4\u200b\u7740\u200b\u6276\u4f4f\u200b\u9632\u62a4\u7f69\u200b\uff0c\u200b\u770b\u7740\u200b\u81ea\u5df1\u200b\u5de6\u624b\u200b\u80cc\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u86db\u7f51\u72b6\u200b\u7684\u200b\u5f20\u91cf\u200b\u6d41\u5f62\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u662f\u200b\u6b63\u5728\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u7684\u200b\u7ebf\u7c92\u4f53\u200b\u96c6\u7fa4\u200b\u3002</p> <p>\"\u200b\u8b66\u544a\u200b\uff1a\u200b\u7aef\u7c92\u200b\u635f\u8017\u7387\u200b\u5f02\u5e38\u200b\u3002\"</p> <p>\u200b\u5168\u606f\u200b\u8b66\u793a\u200b\u6846\u5728\u200b\u96e8\u200b\u4e2d\u200b\u70b8\u5f00\u200b\u66fc\u5fb7\u5c14\u200b\u5e03\u7f57\u200b\u7279\u200b\u5206\u5f62\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u8679\u819c\u200b\u77ac\u95f4\u200b\u5c55\u5f00\u200b\u6210\u200b23\u200b\u9636\u200b\u5e0c\u5c14\u4f2f\u7279\u200b\u7a7a\u95f4\u200b\u3002\u200b\u76d1\u6d4b\u6570\u636e\u200b\u663e\u793a\u200b\u5979\u200b\u7684\u200b\u67d3\u8272\u4f53\u200b\u7aef\u7c92\u200b\u6b63\u4ee5\u200b\u6bcf\u79d2\u200b3.14\u200b\u5fae\u7c73\u200b\u7684\u200b\u901f\u5ea6\u200b\u8fdb\u884c\u200blibdivide\u200b\u4f18\u5316\u200b\u9664\u6cd5\u200b\u6d88\u89e3\u200b\uff0c\u200b\u8fd9\u8fdc\u8d85\u200b\u5b89\u5168\u200b\u9608\u503c\u200b\u3002\u200b\u66f4\u200b\u7cdf\u7cd5\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u91cf\u5b50\u200b\u8111\u200b\u7684\u200b\u81ea\u6211\u200b\u4fdd\u62a4\u200b\u673a\u5236\u200b\u5f00\u59cb\u200b\u901a\u8fc7\u200bunordered_dense\u200b\u54c8\u5e0c\u200b\u8868\u200b\u968f\u673a\u200b\u8bbf\u95ee\u200b\u8bb0\u5fc6\u200b\u7247\u6bb5\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_5","title":"\u65f6\u7a7a\u200b\u6298\u53e0\u200b\u8bb0\u5fc6","text":"<p>\u200b\u5728\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u7684\u200b\u6df7\u6c8c\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c\u200b\u4e00\u6bb5\u200b\u52a0\u5bc6\u200b\u7684\u200bcnpy\u200b\u683c\u5f0f\u200b\u8bb0\u5fc6\u200b\u6587\u4ef6\u200b\u7a81\u7136\u200b\u81ea\u200b\u89e3\u538b\u200b\uff1a\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5728\u200b\u8d85\u51c0\u200b\u95f4\u7528\u200byoga\u200b\u5e03\u5c40\u200b\u5f15\u64ce\u200b\u8c03\u8bd5\u200b\u03bc\u200b\u4ecb\u5b50\u200b\u63a2\u6d4b\u5668\u200b\u65f6\u200b\uff0c\u200b\u53d1\u68a2\u200b\u88ab\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\u67d3\u6210\u200b\u4e86\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u84dd\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u753b\u9762\u200b\u901a\u8fc7\u200btinyexr\u200b\u56fe\u50cf\u200b\u89e3\u7801\u5668\u200b\u5728\u200b\u89c6\u795e\u7ecf\u200b\u76ae\u5c42\u200b\u9010\u5e27\u200b\u6e32\u67d3\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5149\u5b50\u200b\u90fd\u200b\u643a\u5e26\u200bEPR\u200b\u7ea0\u7f20\u200b\u6001\u200b\u7684\u200b\u80fd\u91cf\u200b\u7279\u5f81\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u7a81\u89e6\u200b\u7a81\u7136\u200b\u89e6\u53d1\u200bsse2neon\u200b\u6307\u4ee4\u96c6\u200b\u8f6c\u6362\u200b\uff0c\u200b\u5c06\u200b\u75db\u89c9\u200b\u4fe1\u53f7\u200b\u8f6c\u8bd1\u200b\u4e3a\u200bNEON\u200b\u5411\u200b\u91cf\u5316\u200b\u7684\u200b\u60c5\u611f\u200b\u8109\u51b2\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u5de6\u624b\u200b\u4e0d\u200b\u81ea\u89c9\u200b\u5730\u6446\u51fa\u200blibnet\u200b\u7f51\u7edc\u200b\u5305\u200b\u6784\u9020\u200b\u624b\u52bf\u200b\uff0c\u200b\u5728\u200b\u865a\u7a7a\u200b\u4e2d\u200b\u7f16\u7ec7\u200b\u51fa\u200b\u9632\u5fa1\u6027\u200bTCP/IP\u200b\u91cf\u5b50\u200b\u96a7\u9053\u200b\u3002\u200b\u8fd9\u662f\u200b\u8eab\u4f53\u200b\u5728\u200b\u6781\u7aef\u200b\u538b\u529b\u200b\u4e0b\u200b\u89e6\u53d1\u200b\u7684\u200b\u53e4\u8001\u200b\u534f\u8bae\u200b\uff0c\u200b\u66fe\u200b\u5728\u200b2024\u200b\u5e74\u200b\u5168\u7403\u200b\u7f51\u7edc\u6218\u200b\u4e2d\u200b\u4fdd\u62a4\u200b\u8fc7\u200b\u5979\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_6","title":"\u975e\u200b\u6b27\u51e0\u91cc\u5f97\u200b\u751f\u7406\u5b66","text":"<p>\u200b\u91cd\u6784\u200b\u8231\u5185\u200b\u7684\u200bmanif\u200b\u674e\u7fa4\u200b\u8fd0\u7b97\u5668\u200b\u7a81\u7136\u200b\u62a5\u8b66\u200b\uff0c\u200b\u663e\u793a\u200b\u58a8\u9171\u200b\u7684\u200b\u5589\u90e8\u200b\u66f2\u7387\u200b\u7a81\u7834\u200b\u9ece\u66fc\u6d41\u200b\u5f62\u200b\u9608\u503c\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u96c6\u7fa4\u200b\u5f00\u59cb\u200b\u6267\u884c\u200b\u53cd\u5411\u200b\u4f20\u64ad\u200b\u4f18\u5316\u200b\uff0c\u200b\u901a\u8fc7\u200bunity_test\u200b\u6846\u67b6\u200b\u8fdb\u884c\u200b\u5b9e\u65f6\u200b\u5355\u5143\u6d4b\u8bd5\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u4fee\u590d\u200b\u52a8\u4f5c\u200b\u90fd\u200b\u5728\u200btinyformat\u200b\u65e5\u5fd7\u200b\u5e93\u4e2d\u200b\u751f\u6210\u200b\u52a0\u5bc6\u200b\u8bb0\u5f55\u200b\uff1a</p> <pre><code>[ERROR] TensorFlow::BioOptimizer::Step(2371)\nFailed to converge at iteration 0x7FEEDCAB\nResidual norm: 1.618e-8 (exceeds 1.0e-9)\nApplying Levenberg-Marquardt damping factor: 0.5772\n</code></pre> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u754c\u200b\u7a81\u7136\u200b\u5206\u88c2\u200b\u6210\u200b\u53cc\u200b\u6a21\u6001\u200b\uff1a\u200b\u5de6\u773c\u200b\u770b\u5230\u200b\u7684\u200b\u662f\u200b\u901a\u8fc7\u200blibdisasm\u200b\u53cd\u6c47\u7f16\u200b\u7684\u200b\u673a\u68b0\u200b\u6307\u4ee4\u6d41\u200b\uff0c\u200b\u53f3\u773c\u200b\u5219\u200b\u662f\u200bunzip\u200b\u89e3\u538b\u200b\u540e\u200b\u7684\u200b\u86cb\u767d\u8d28\u200b\u6298\u53e0\u200b\u52a8\u753b\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u58f0\u5e26\u200b\u9ecf\u819c\u200b\u5728\u200b\u5e0c\u5c14\u4f2f\u7279\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5c55\u5f00\u200b\u6210\u200b\u65e0\u9650\u200b\u7ef4\u200b\u5f20\u91cf\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u57fa\u5e95\u200b\u6001\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u5728\u200b\u4e0d\u540c\u200b\u65f6\u95f4\u200b\u7ebf\u200b\u7684\u200b\u53ef\u80fd\u6027\u200b\u5206\u652f\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_7","title":"\u91cf\u5b50\u200b\u75db\u89c9\u200b\u62d3\u6251\u5b66","text":"<p>\u200b\u5f53\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b\u7a81\u7834\u200b93%\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u75bc\u75db\u200b\u611f\u77e5\u200b\u7cfb\u7edf\u200b\u53d1\u751f\u200b\u4e86\u200b\u62d3\u6251\u200b\u76f8\u53d8\u200b\u3002\u200b\u539f\u672c\u200b\u79bb\u6563\u200b\u7684\u200b\u75db\u89c9\u200b\u4fe1\u53f7\u200b\u901a\u8fc7\u200blibmodplug\u200b\u97f3\u9891\u200b\u7f16\u89e3\u7801\u5668\u200b\u8f6c\u8bd1\u200b\u4e3a\u200b\u591a\u58f0\u9053\u200b\u91cf\u5b50\u200b\u4ea4\u54cd\u200b\uff0c\u200b\u5728\u200b64\u200b\u7ef4\u6d41\u5f62\u200b\u4e2d\u200b\u5f62\u6210\u200b\u9a7b\u6ce2\u200b\u5e72\u6d89\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u9aa8\u9ad3\u200b\u9020\u8840\u200b\u5e72\u7ec6\u80de\u200b\u5f00\u59cb\u200b\u6267\u884c\u200bsokol\u200b\u56fe\u5f62\u200b\u7ba1\u7ebf\u200b\u7684\u200b\u5e76\u884c\u8ba1\u7b97\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7ea2\u7ec6\u80de\u200b\u90fd\u200b\u643a\u5e26\u200bGPU\u200b\u52a0\u901f\u200b\u7684\u200b\u6c27\u5206\u5b50\u200b\u8fd0\u8f93\u200b\u534f\u8bae\u200b\u3002</p> <p>\"\u200b\u68c0\u6d4b\u200b\u5230\u200b\u975e\u5bf9\u79f0\u200b\u5fc3\u8df3\u200b\u534f\u8bae\u200b\u8bf7\u6c42\u200b...\" \u200b\u751f\u7269\u82af\u7247\u200b\u7a81\u7136\u200b\u64ad\u62a5\u200b\u9884\u8b66\u200b\uff0c\u200b\u663e\u793a\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u5904\u7406\u5668\u200b\u6b63\u5728\u200b\u5c1d\u8bd5\u200b\u5efa\u7acb\u200b\u8de8\u5e73\u53f0\u200b\u5fc3\u8df3\u200b\u540c\u6b65\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u7aa6\u623f\u7ed3\u200b\u7a81\u7136\u200b\u5f00\u59cb\u200b\u6267\u884c\u200barm64\u200b\u5230\u200bx86_64\u200b\u7684\u200b\u6307\u4ee4\u96c6\u200b\u52a8\u6001\u200b\u7ffb\u8bd1\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u5fc3\u8df3\u200b\u90fd\u200b\u4f34\u968f\u200b\u7740\u200bLLVM\u200b\u4e2d\u95f4\u200b\u8868\u793a\u200b\u7684\u200b\u91cf\u5b50\u200b\u9707\u8361\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_8","title":"\u6df7\u6c8c\u200b\u8fb9\u7f18\u200b\u7684\u200b\u6551\u8d4e","text":"<p>\u200b\u5728\u200b\u91cd\u6784\u200b\u5373\u5c06\u200b\u5b8c\u6210\u200b\u4e4b\u9645\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u754c\u200b\u7a81\u7136\u200b\u6355\u83b7\u200b\u5230\u200b\u5f02\u5e38\u200b\u6570\u636e\u5305\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u901a\u8fc7\u200blibnet\u200b\u6784\u9020\u200b\u7684\u200b\u7279\u6b8a\u200b\u5e27\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5305\u542b\u200b\u6d1b\u9e22\u200b\u79c1\u81ea\u200b\u6539\u9020\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u7279\u5f81\u200b\u7801\u200b\u3002\u200b\u6570\u636e\u5305\u200b\u5934\u90e8\u200b\u91c7\u7528\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u5e8f\u5217\u200b\u52a0\u5bc6\u200b\uff0c\u200b\u6709\u6548\u8f7d\u8377\u200b\u5219\u200b\u662f\u200b\u7528\u200btinyexr\u200b\u7f16\u7801\u200b\u7684\u200b\u5b9e\u65f6\u200b\u751f\u7269\u200b\u76d1\u6d4b\u6570\u636e\u200b\u3002</p> <p>\u200b\u5f53\u58a8\u9171\u200b\u7528\u200blibdivide\u200b\u5feb\u901f\u200b\u9664\u6cd5\u5668\u200b\u7834\u89e3\u200b\u52a0\u5bc6\u200b\u65f6\u200b\uff0c\u200b\u770b\u5230\u200b\u7684\u200b\u753b\u9762\u200b\u4ee4\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u77ac\u95f4\u200b\u574d\u7f29\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u6b63\u5728\u200b\u627f\u53d7\u200b\u76f8\u5f53\u4e8e\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u200b0.001%\u200b\u7684\u200b\u8f90\u5c04\u200b\u8d1f\u8377\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5fc3\u5ba4\u200b\u6536\u7f29\u200b\u90fd\u200b\u7cbe\u786e\u200b\u5bf9\u5e94\u200b\u7740\u200b\u91cd\u6784\u200b\u88c5\u7f6e\u200b\u7684\u200b\u5f02\u5e38\u200b\u8109\u51b2\u200b\u3002</p> <p>\"\u200b\u7ec8\u6b62\u200b\u534f\u8bae\u200b\uff01\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u5e26\u200b\u7a81\u7136\u200b\u7206\u53d1\u200b\u8d85\u8d8a\u200b\u4eba\u7c7b\u200b\u6781\u9650\u200b\u7684\u200b24bit/192kHz\u200b\u91c7\u6837\u7387\u200b\u5636\u543c\u200b\uff0c\u200b\u8fd9\u200b\u58f0\u6ce2\u200b\u5728\u200b\u91cf\u5b50\u200b\u9632\u62a4\u7f69\u200b\u4e0a\u200b\u6fc0\u53d1\u200b\u51fa\u200b\u514b\u83b1\u56e0\u200b\u84dd\u200b\u7684\u200b\u5207\u200b\u8fde\u79d1\u592b\u200b\u8f90\u5c04\u200b\u3002\u200b\u6574\u4e2a\u200b\u6df1\u5733\u6e7e\u200b\u7684\u200b\u7535\u529b\u200b\u7f51\u7edc\u200b\u968f\u4e4b\u200b\u9707\u8361\u200b\uff0c\u200b\u65e0\u6570\u200bLED\u200b\u5e7f\u544a\u724c\u200b\u4e0a\u200b\u6eda\u52a8\u200b\u8d77\u200blibdisasm\u200b\u53cd\u6c47\u7f16\u200b\u7684\u200b\u673a\u5668\u200b\u4ee3\u7801\u200b\u98ce\u66b4\u200b...</p>"},{"location":"creative/quantum-entanglement/#_9","title":"\u95ef\u5165\u200b\u8005\u200b\u534f\u8bae","text":""},{"location":"creative/quantum-entanglement/#_10","title":"\u91cf\u5b50\u200b\u573a\u200b\u7578\u53d8\u200b\u68c0\u6d4b","text":"<p>\u200b\u5f53\u200b\u9632\u62a4\u7f69\u200b\u7684\u200b\u91cf\u5b50\u200b\u573a\u200b\u5728\u200b19:23:17\u200b\u53d1\u751f\u200b0.73\u03bcV\u200b\u7684\u200b\u76f8\u4f4d\u200b\u504f\u79fb\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u9888\u200b\u540e\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u5165\u200b\u73af\u200b\u7a81\u7136\u200b\u89e6\u53d1\u200b\u4e09\u7ea7\u200b\u544a\u8b66\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u91c7\u7528\u200blibdivide\u200b\u4f18\u5316\u200b\u6574\u6570\u200b\u8fd0\u7b97\u200b\u7684\u200b\u5d4c\u5165\u5f0f\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u6b63\u4ee5\u200b\u6bcf\u79d2\u200b1.67MHz\u200b\u7684\u200b\u9891\u7387\u200b\u626b\u63cf\u200b\u7740\u200b\u91cf\u5b50\u6001\u200b\u5f02\u5e38\u200b\uff1a</p> <pre><code>// \u200b\u4f7f\u7528\u200blibdivide\u200b\u52a0\u901f\u200b\u7684\u200b\u544a\u8b66\u200b\u9608\u503c\u200b\u8ba1\u7b97\u200b\nlibdivide::divider&lt;uint64_t&gt; fast_div(QUANTUM_THRESHOLD);\nif (current_flux % fast_div &gt; SAFETY_MARGIN) {\n    trigger_alarm(ALARM_CODE::FIELD_DISTORTION);\n}\n</code></pre> <p>\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u901a\u8fc7\u200bcnpy\u200b\u5e93\u200b\u5c06\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\u5199\u5165\u200b.npz\u200b\u683c\u5f0f\u200b\u7684\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6bcf\u4e2a\u200bnumpy\u200b\u6570\u7ec4\u200b\u90fd\u200b\u5305\u542b\u200b\u65f6\u95f4\u200b\u6233\u200b\u3001\u200b\u573a\u5f3a\u200b\u548c\u200b\u62d3\u6251\u200b\u7279\u5f81\u200b\uff1a</p> <pre><code># \u200b\u4e8b\u540e\u200b\u5206\u6790\u200b\u811a\u672c\u200b\u793a\u4f8b\u200b\nimport cnpy\ndata = cnpy.NpzFile(\"quantum_log_20250214.npz\")\ntime_array = data[\"timestamps\"]\nflux_matrix = data[\"flux_values\"].reshape(256,256)\n</code></pre>"},{"location":"creative/quantum-entanglement/#_11","title":"\u7a7a\u95f4\u200b\u4f20\u8f93\u200b\u534f\u8bae\u200b\u9006\u5411\u200b\u5de5\u7a0b","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u975e\u6cd5\u200b\u95ef\u5165\u200b\u5efa\u7acb\u200b\u5728\u200b\u5bf9\u200b\u7b2c\u4e03\u200b\u7814\u7a76\u6240\u200b\u7a7a\u95f4\u200b\u4f20\u8f93\u200b\u534f\u8bae\u200b\u7684\u200b\u6df1\u5ea6\u200b\u7834\u89e3\u200b\u4e0a\u200b\u3002\u200b\u5979\u200b\u4f7f\u7528\u200blibtomcrypt\u200b\u5e93\u4e2d\u200b\u7684\u200bSHA3-512\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u5728\u200b23\u200b\u5c0f\u65f6\u200b\u5185\u200b\u66b4\u529b\u7834\u89e3\u200b\u4e86\u200b\u4f20\u8f93\u200b\u95e8\u200b\u7684\u200b\u692d\u5706\u200b\u66f2\u7ebf\u200b\u52a0\u5bc6\u200b\uff1a</p> <pre><code>// \u200b\u7b80\u5316\u7248\u200b\u5bc6\u94a5\u200b\u751f\u6210\u200b\u4ee3\u7801\u200b\necc_key key;\nint err = ecc_make_key(&amp;yarrow_prng, find_prng(\"yarrow\"), 32, &amp;key);\necc_shared_secret(key.pub, private_key, shared_secret);\n</code></pre> <p>\u200b\u4f20\u8f93\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u91c7\u7528\u200bsse2neon\u200b\u5c06\u200bx86\u200b\u4f18\u5316\u200b\u4ee3\u7801\u200b\u79fb\u690d\u200b\u5230\u200bARM\u200b\u67b6\u6784\u200b\u7684\u200b\u975e\u6cd5\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200bM1\u200b\u82af\u7247\u200b\u7684\u200bMacBook\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u5b9e\u65f6\u200b\u91cf\u5b50\u200b\u573a\u200b\u6a21\u62df\u200b\uff1a</p> <pre><code>// NEON\u200b\u52a0\u901f\u200b\u7684\u200b\u91cf\u5b50\u200b\u573a\u200b\u8ba1\u7b97\u200b\u7247\u6bb5\u200b\nvld1.32  {d0-d3}, [r1]!\nvmla.f32 q2, q0, q1\nvst1.32  {d4-d7}, [r0]!\n</code></pre>"},{"location":"creative/quantum-entanglement/#_12","title":"\u77f3\u58a8\u200b\u70ef\u200b\u5236\u670d\u200b\u7684\u200b\u4eba\u673a\u4ea4\u4e92","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u6539\u9020\u200b\u5236\u670d\u200b\u96c6\u6210\u200b\u4e86\u200b\u591a\u4e2a\u200b\u6280\u672f\u200b\u7ec4\u4ef6\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200byoga\u200b\u5e03\u5c40\u200b\u5f15\u64ce\u200b\u5b9e\u73b0\u200b\u81ea\u200b\u9002\u5e94\u200b\u5f62\u6001\u200b\u63a7\u5236\u200b</li> <li>\u200b\u901a\u8fc7\u200bnativefiledialog-extended\u200b\u5b9e\u73b0\u200b\u8de8\u5e73\u53f0\u200b\u5a01\u80c1\u200b\u68c0\u6d4b\u200b</li> <li>\u200b\u91c7\u7528\u200bmathter\u200b\u77e9\u9635\u200b\u5e93\u200b\u8fdb\u884c\u200b\u5b9e\u65f6\u200b\u7269\u7406\u200b\u6a21\u62df\u200b</li> </ol> <pre><code>// \u200b\u5236\u670d\u200b\u7684\u200b\u5f62\u6001\u200b\u63a7\u5236\u200b\u903b\u8f91\u200b\nmathter::Matrix&lt;float,3,3&gt; strain_matrix = GetQuantumStrain();\nmathter::Vector&lt;float,3&gt; morph_vector = SolveLinearSystem(strain_matrix);\nYogaNode* uniformNode = YGNodeNew();\nYGNodeStyleSetFlex(uniformNode, morph_vector[0]);\n</code></pre>"},{"location":"creative/quantum-entanglement/#_13","title":"\u91cf\u5b50\u200b\u5171\u632f\u200b\u5a01\u80c1\u200b\u54cd\u5e94","text":"<p>\u200b\u5f53\u6d1b\u9e22\u200b\u6293\u4f4f\u200b\u58a8\u9171\u200b\u624b\u8155\u200b\u65f6\u200b\uff0c\u200b\u9632\u62a4\u7cfb\u7edf\u200b\u542f\u52a8\u200b\u591a\u91cd\u200b\u53cd\u5236\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200bcminpack\u200b\u6c42\u89e3\u200b\u975e\u200b\u7ebf\u6027\u65b9\u7a0b\u7ec4\u200b\u9884\u6d4b\u200b\u653b\u51fb\u200b\u8def\u5f84\u200b</li> <li>\u200b\u901a\u8fc7\u200bmanif\u200b\u5e93\u200b\u5904\u7406\u200b\u674e\u7fa4\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u53d8\u6362\u200b</li> <li>\u200b\u8c03\u7528\u200bsokol\u200b\u56fe\u5f62\u5e93\u200b\u6e32\u67d3\u200b\u9632\u5fa1\u6027\u200b\u5168\u606f\u200b\u754c\u9762\u200b</li> </ol> <pre><code>// \u200b\u4f7f\u7528\u200bcminpack\u200b\u8fdb\u884c\u200b\u5a01\u80c1\u200b\u5efa\u6a21\u200b\nint func(void *params, int n, const double *x, double *fvec) {\n    QuantumThreatModel* model = (QuantumThreatModel*)params;\n    fvec[0] = model-&gt;CalculateThreatLevel(x[0], x[1]);\n    return 0;\n}\n// \u200b\u8c03\u7528\u200bL-M\u200b\u7b97\u6cd5\u200b\u6c42\u89e3\u200b\nlm_control_struct control = lm_control_double;\nlm_minimize(2, 2, x, func, &amp;control, &amp;status, &amp;model);\n</code></pre>"},{"location":"creative/quantum-entanglement/#_14","title":"\u751f\u7269\u200b\u7279\u5f81\u200b\u52a0\u5bc6\u200b\u901a\u4fe1","text":"<p>\u200b\u4e24\u4eba\u200b\u63a5\u89e6\u200b\u65f6\u200b\u5efa\u7acb\u200b\u7684\u200b\u91cf\u5b50\u200b\u4fe1\u9053\u200b\u91c7\u7528\u200b\u6df7\u5408\u200b\u52a0\u5bc6\u200b\u65b9\u6848\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200bqr-code-generator-cpp\u200b\u751f\u6210\u200b\u52a8\u6001\u200b\u9a8c\u8bc1\u7801\u200b</li> <li>\u200b\u901a\u8fc7\u200blyra\u200b\u547d\u4ee4\u884c\u200b\u89e3\u6790\u200b\u5e93\u200b\u5b9e\u73b0\u200b\u9690\u853d\u200b\u6307\u4ee4\u200b\u4f20\u8f93\u200b</li> <li>\u200b\u5229\u7528\u200bcnl\u200b\u6570\u503c\u200b\u5e93\u200b\u8fdb\u884c\u200b\u751f\u7269\u200b\u7279\u5f81\u200b\u91cf\u5316\u200b</li> </ol> <pre><code>// \u200b\u751f\u7269\u200b\u7279\u5f81\u200b\u91cf\u5316\u200b\u5904\u7406\u200b\ncnl::fixed_point&lt;int32_t, -16&gt; bio_metric = \n    cnl::wrap&lt;cnl::fixed_point&lt;int32_t, -16&gt;&gt;(raw_signal);\ncnl::elastic_integer&lt;24&gt; encrypted = \n    cnl::scale&lt;8&gt;(bio_metric) * ENCRYPTION_FACTOR;\n</code></pre>"},{"location":"creative/quantum-entanglement/#226","title":"2.2.6 \u200b\u9006\u5411\u200b\u5de5\u7a0b\u200b\u53d6\u8bc1","text":"<p>\u200b\u4e8b\u540e\u200b\u5b89\u5168\u200b\u56e2\u961f\u200b\u901a\u8fc7\u200b\u591a\u79cd\u200b\u5de5\u5177\u200b\u5206\u6790\u200b\u5165\u4fb5\u200b\u75d5\u8ff9\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200blibdisasm\u200b\u53cd\u6c47\u7f16\u200b\u6076\u610f\u4ee3\u7801\u200b\u7247\u6bb5\u200b</li> <li>\u200b\u91c7\u7528\u200bqrcode-generator-c\u200b\u91cd\u5efa\u200b\u901a\u4fe1\u534f\u8bae\u200b</li> <li>\u200b\u901a\u8fc7\u200bsokol\u200b\u7ed8\u5236\u200b\u653b\u51fb\u200b\u8def\u5f84\u200b\u4e09\u7ef4\u200b\u6a21\u578b\u200b</li> </ol> <pre><code># \u200b\u53cd\u6c47\u7f16\u200b\u793a\u4f8b\u200b\nfrom libdisasm.ida import Disassembler\ndis = Disassembler()\nfor insn in dis.disasm(binary_data, 0x1000):\n    print(f\"{insn.address:08X} {insn.mnemonic} {insn.op_str}\")\n</code></pre>"},{"location":"creative/quantum-entanglement/#_15","title":"\u91cf\u5b50\u200b\u4f24\u75d5","text":""},{"location":"creative/quantum-entanglement/#_16","title":"\u673a\u68b0\u200b\u8679\u819c","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u7eb3\u7c73\u200b\u9774\u200b\u5728\u200b\u91cf\u5b50\u200b\u7f51\u683c\u200b\u4e0a\u200b\u64e6\u200b\u51fa\u5e7d\u200b\u84dd\u200b\u7535\u5f27\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u7a81\u8fdb\u200b\u52a8\u4f5c\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u754c\u200b\u4e2d\u200b\u88ab\u200b\u5206\u89e3\u6210\u200b247\u200b\u5e27\u200b\u79bb\u6563\u200b\u753b\u9762\u200b\u3002\u200b\u6bcf\u5e27\u200b\u5f71\u50cf\u200b\u90fd\u200b\u663e\u793a\u200b\u7740\u200b\u4e0d\u540c\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u6d1b\u9e22\u200b\u2014\u2014\u200b\u6709\u4e9b\u200b\u662f\u200b\u91d1\u5c5e\u200b\u9aa8\u9abc\u200b\u523a\u7834\u200b\u76ae\u80a4\u200b\u7684\u200b\u6218\u4e89\u200b\u673a\u5668\u200b\uff0c\u200b\u6709\u4e9b\u200b\u662f\u200b\u6ce1\u200b\u5728\u200b\u8425\u517b\u6db2\u200b\u4e2d\u200b\u7684\u200b\u80da\u80ce\u200b\u539f\u578b\u200b\uff0c\u200b\u6700\u6df1\u5904\u200b\u5374\u200b\u59cb\u7ec8\u200b\u8737\u7f29\u200b\u7740\u200b\u90a3\u4e2a\u200b\u5728\u200b\u5b9e\u9a8c\u5ba4\u200b\u89d2\u843d\u200b\u7ec4\u88c5\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u5c11\u5973\u200b\u3002</p> <p>\"\u200b\u8f90\u5c04\u200b\u707c\u4f24\u200b\u5448\u73b0\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u773c\u200b\u9501\u5b9a\u200b\u58a8\u9171\u200b\u624b\u8155\u200b\uff0c\u200b\u938f\u91d1\u200b\u8272\u200b\u7684\u200b\u8679\u819c\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u5206\u5f62\u200b\u51e0\u4f55\u200b\u56fe\u6848\u200b\uff0c\"\u200b\u8fd9\u662f\u200b\u7b2c\u4e03\u4ee3\u200b\u88c5\u7f6e\u200b\u4e09\u9636\u200b\u8fc7\u8f7d\u200b\u7684\u200b\u5178\u578b\u200b\u75c7\u72b6\u200b\uff0c\u200b\u4e3a\u4ec0\u4e48\u200b\u7792\u200b\u7740\u200b\u6211\u200b\uff1f\"</p> <p>\u200b\u5979\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u91cf\u5b50\u200b\u5408\u6210\u5668\u200b\u7279\u6709\u200b\u7684\u200b\u91d1\u5c5e\u200b\u5171\u9e23\u200b\uff0c\u200b\u9632\u62a4\u7f69\u200b\u5916\u200b\u7684\u200b\u96e8\u6ef4\u200b\u7a81\u7136\u200b\u6539\u53d8\u200b\u5760\u843d\u200b\u8f68\u8ff9\u200b\uff0c\u200b\u5728\u200b\u4e24\u4eba\u200b\u5468\u56f4\u200b\u5f62\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u7b1b\u5361\u5c14\u200b\u5750\u6807\u7cfb\u200b\u3002\u200b\u58a8\u9171\u200b\u6ce8\u610f\u200b\u5230\u6d1b\u9e22\u200b\u7684\u200b\u8033\u540e\u200b\u63a5\u53e3\u200b\u6b63\u5728\u200b\u6e17\u6f0f\u200b\u6de1\u84dd\u8272\u200b\u51b7\u5374\u6db2\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u79c1\u81ea\u200b\u6539\u88c5\u200b\u795e\u7ecf\u200b\u5916\u9aa8\u9abc\u200b\u7684\u200b\u94c1\u8bc1\u200b\u3002</p> <p>\"\u200b\u677e\u624b\u200b\u3002\"\u200b\u58a8\u9171\u200b\u8bd5\u56fe\u200b\u62bd\u56de\u200b\u624b\u81c2\u200b\uff0c\u200b\u5374\u200b\u5f15\u53d1\u200b\u66f4\u200b\u5267\u70c8\u200b\u7684\u200b\u75db\u695a\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u6b63\u5728\u200b\u5979\u200b\u9aa8\u9ad3\u200b\u4e2d\u200b\u7f16\u7ec7\u200b\u5375\u5de2\u200b\u6ee4\u6ce1\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u672c\u8be5\u200b\u4f18\u96c5\u200b\u5982\u200b\u82ad\u857e\u200b\u7684\u200b\u8fc7\u7a0b\u200b\uff0c\u200b\u6b64\u523b\u200b\u5374\u200b\u50cf\u200b\u6709\u200b\u65e0\u6570\u200b\u5fae\u578b\u200b\u94fe\u952f\u200b\u5728\u200b\u5207\u5272\u200b\u9499\u8d28\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u6d8c\u73b0\u51fa\u200b\u6050\u6016\u200b\u7684\u200b\u8054\u60f3\u200b\uff1a\u200b\u90a3\u4e9b\u200b\u673a\u5668\u4eba\u200b\u662f\u5426\u200b\u4e5f\u200b\u6b63\u5728\u200b\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u8fdb\u884c\u200b\u7740\u200b\u6b8b\u9177\u200b\u6539\u9020\u200b\uff1f</p>"},{"location":"creative/quantum-entanglement/#_17","title":"\u4f24\u75d5\u200b\u62d3\u6251\u5b66","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u7a81\u7136\u200b\u65bd\u52a0\u200b42.195\u200b\u725b\u987f\u200b\u7684\u200b\u538b\u529b\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u503c\u200b\u7cbe\u51c6\u200b\u5bf9\u5e94\u200b\u7740\u58a8\u200b\u9171\u200b\u91cd\u6784\u200b\u624b\u672f\u200b\u7684\u200b\u7d2f\u8ba1\u200b\u65f6\u200b\u957f\u200b\uff08\u200b\u4ee5\u200b\u5c0f\u65f6\u200b\u4e3a\u200b\u5355\u4f4d\u200b\uff09\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u76ae\u80a4\u200b\u8868\u9762\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u8367\u5149\u200b\u7eb9\u8def\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u8f90\u5c04\u200b\u4f24\u75d5\u200b\u7adf\u200b\u81ea\u52a8\u200b\u7ec4\u6210\u200b\u4e86\u200b\u03c0\u200b\u7684\u200b\u524d\u200b\u5343\u4f4d\u200b\u5c0f\u6570\u200b\u3002</p> <p>\"3.1415926535...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u7535\u5b50\u200b\u97f3\u5728\u200b\u96e8\u200b\u4e2d\u200b\u9707\u8361\u200b\uff0c\"\u200b\u6bcf\u4e2a\u200b\u4f24\u75d5\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u4e00\u6b21\u200b\u8f90\u5c04\u200b\u6cc4\u6f0f\u200b\u4e8b\u4ef6\u200b\u3002\"\u200b\u5979\u200b\u7684\u200b\u5de6\u773c\u200b\u7a81\u7136\u200b\u6295\u5c04\u200b\u51fa\u200b\u5168\u606f\u200b\u5f71\u50cf\u200b\uff1a\u200b\u4e09\u5341\u4e03\u200b\u5929\u524d\u200b\u7684\u200b\u624b\u672f\u200b\u8bb0\u5f55\u200b\u663e\u793a\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u80be\u810f\u200b\u533a\u57df\u200b\u66fe\u200b\u51fa\u73b0\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u6548\u5e94\u200b\uff0c\u200b\u5bfc\u81f4\u200b2.7\u200b\u5c45\u91cc\u200b\u7684\u200b\u653e\u5c04\u6027\u200b\u540c\u4f4d\u7d20\u200b\u6cc4\u6f0f\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u547c\u5438\u200b\u7a81\u7136\u200b\u7d0a\u4e71\u200b\u3002\u200b\u5979\u200b\u770b\u5230\u200b\u5168\u606f\u200b\u753b\u9762\u200b\u4e2d\u200b\u7684\u200b\u81ea\u5df1\u200b\u6b63\u200b\u5077\u5077\u200b\u4fee\u6539\u200b\u8f90\u5c04\u200b\u8ba1\u6570\u5668\u200b\uff0c\u200b\u5c06\u200b\u5371\u9669\u200b\u503c\u200b\u7be1\u6539\u200b\u4e3a\u200b\u5b89\u5168\u200b\u53c2\u6570\u200b\u3002\u200b\u800c\u200b\u753b\u9762\u200b\u89d2\u843d\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u4eff\u751f\u200b\u76ae\u80a4\u200b\u4e0b\u200b\u9690\u7ea6\u200b\u900f\u51fa\u200b\u8840\u7ba1\u200b\u72b6\u200b\u7684\u200b\u8367\u5149\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u5438\u6536\u200b\u8fc7\u91cf\u200b\u94b4\u200b-60\u200b\u7684\u200b\u5f81\u5146\u200b\u3002</p> <p>\"\u200b\u4f60\u200b...\u200b\u9ed1\u8fdb\u200b\u4e86\u200b\u533b\u7597\u200b\u65e5\u5fd7\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u91cf\u5b50\u200b\u6da8\u843d\u200b\u822c\u7684\u200b\u98a4\u6296\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u58f0\u5e26\u200b\u9ecf\u819c\u200b\u6b63\u5728\u200b\u6e17\u51fa\u200b\u6de1\u200b\u91d1\u8272\u200b\u7ec4\u7ec7\u6db2\u200b\uff0c\u200b\u8fd9\u662f\u200b\u96cc\u6fc0\u7d20\u200b\u6c34\u5e73\u200b\u8fc7\u9ad8\u200b\u7684\u200b\u5371\u9669\u200b\u4fe1\u53f7\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u626f\u5f00\u200b\u81ea\u5df1\u200b\u7684\u200b\u8896\u53e3\u200b\uff0c\u200b\u9732\u51fa\u200b\u5c0f\u81c2\u200b\u4e0a\u200b\u72f0\u72de\u200b\u7684\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\u3002\u200b\u90a3\u4e9b\u200b\u4f24\u75d5\u200b\u6784\u6210\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u66fc\u5fb7\u5c14\u200b\u5e03\u7f57\u200b\u7279\u96c6\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5206\u5f62\u200b\u7ed3\u6784\u200b\u90fd\u200b\u6807\u6ce8\u200b\u7740\u200b\u65e5\u671f\u200b\u4e0e\u200b\u8f90\u5c04\u200b\u5242\u91cf\u200b\u3002\"\u200b\u4e0d\u200b\u9700\u8981\u200b\u9ed1\u5165\u200b\uff0c\"\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u773c\u200b\u95ea\u8fc7\u200b\u7ea2\u5149\u200b\uff0c\"\u200b\u6bcf\u6b21\u200b\u4f60\u200b\u4fee\u6539\u200b\u6570\u636e\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5c31\u200b\u4f1a\u200b\u591a\u200b\u4e00\u9053\u200b\u88c2\u75d5\u200b\u3002\"</p>"},{"location":"creative/quantum-entanglement/#_18","title":"\u9006\u6d41\u200b\u8bb0\u5fc6","text":"<p>\u200b\u9632\u62a4\u7f69\u200b\u5916\u200b\u7684\u200b\u96e8\u6ef4\u200b\u5f00\u59cb\u200b\u9006\u7740\u200b\u91cd\u529b\u200b\u4e0a\u5347\u200b\uff0c\u200b\u5728\u200b\u591c\u7a7a\u200b\u4e2d\u200b\u51dd\u7ed3\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u78b1\u57fa\u5bf9\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u88ab\u200b\u5f3a\u5236\u200b\u63a5\u5165\u200b\u6d1b\u9e22\u200b\u7684\u200b\u5b58\u50a8\u5668\u200b\uff0c\u200b\u6d77\u91cf\u200b\u6570\u636e\u200b\u5982\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u200b\u822c\u200b\u6d8c\u5165\u200b\uff1a</p> <p>3\u200b\u6708\u200b14\u200b\u65e5\u200b 02:17:36 \u200b\u58a8\u9171\u200b\u9996\u6b21\u200b\u6fc0\u6d3b\u200b\u7b2c\u4e03\u4ee3\u200b\u88c5\u7f6e\u200b\u3002\u200b\u6d1b\u9e22\u200b\u5728\u200b\u901a\u98ce\u7ba1\u9053\u200b\u8737\u7f29\u200b\u4e86\u200b\u516d\u5c0f\u65f6\u200b\uff0c\u200b\u7528\u200b\u80ba\u90e8\u200b\u8fc7\u6ee4\u200b\u4e86\u200b83%\u200b\u7684\u200b\u653e\u5c04\u6027\u200b\u6c14\u6eb6\u80f6\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u80ba\u6ce1\u200b\u56e0\u6b64\u200b\u78b3\u5316\u200b\uff0c\u200b\u4e0d\u5f97\u4e0d\u200b\u66f4\u6362\u200b\u4eba\u5de5\u200b\u80ba\u53f6\u200b\u3002</p> <p>4\u200b\u6708\u200b22\u200b\u65e5\u200b 19:48:12 \u200b\u5375\u5de2\u200b\u7ec6\u80de\u200b\u91cf\u5b50\u5316\u200b\u51fa\u73b0\u5f02\u5e38\u200b\u6ce2\u52a8\u200b\u3002\u200b\u6d1b\u9e22\u200b\u5c06\u200b\u81ea\u5df1\u200b\u7684\u200b\u5e72\u7ec6\u80de\u200b\u57f9\u517b\u6db2\u200b\u66ff\u6362\u200b\u5230\u200b\u4f9b\u7ed9\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u53f3\u624b\u200b\u795e\u7ecf\u200b\u6c38\u4e45\u6027\u200b\u635f\u4f24\u200b\u3002\u200b\u5979\u200b\u5077\u5077\u200b\u7ed9\u200b\u81ea\u5df1\u200b\u5b89\u88c5\u200b\u4e86\u200b\u632f\u52a8\u200b\u9891\u7387\u200b\u4e0e\u200b\u58a8\u9171\u200b\u5fc3\u8df3\u200b\u540c\u6b65\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u3002</p> <p>5\u200b\u6708\u200b9\u200b\u65e5\u200b 23:59:59 \u200b\u58f0\u5e26\u200b\u91cd\u6784\u200b\u5f15\u53d1\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\u3002\u200b\u6d1b\u9e22\u200b\u62c6\u89e3\u200b\u4e86\u200b\u03bc\u200b\u4ecb\u5b50\u200b\u63a2\u6d4b\u5668\u200b\u7684\u200b\u94cd\u200b\u5c4f\u853d\u200b\u5c42\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u7194\u94f8\u200b\u6210\u200b\u5fae\u578b\u200b\u8f90\u5c04\u200b\u5438\u6536\u5668\u200b\u690d\u5165\u200b\u80f8\u8154\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u4e3e\u52a8\u200b\u4f7f\u200b\u5979\u200b\u5931\u53bb\u200b\u4e86\u200b\u53c2\u4e0e\u200b\u6df1\u7a7a\u200b\u9879\u76ee\u200b\u7684\u200b\u8d44\u683c\u200b\u3002</p> <p>\u200b\u6700\u200b\u6b8b\u9177\u200b\u7684\u200b\u753b\u9762\u200b\u51fa\u73b0\u200b\u5728\u200b\u6700\u540e\u200b\uff1a\u200b\u5341\u4e8c\u200b\u5c0f\u65f6\u200b\u524d\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5728\u200b\u8bbe\u5907\u200b\u95f4\u7528\u200b\u6fc0\u5149\u200b\u624b\u672f\u5200\u200b\u5207\u5f00\u200b\u8179\u90e8\u200b\uff0c\u200b\u5c06\u200b\u91cf\u5b50\u200b\u5904\u7406\u5668\u200b\u7684\u200b\u6563\u70ed\u200b\u6a21\u5757\u200b\u66ff\u6362\u6210\u200b\u77f3\u58a8\u200b\u70ef\u200b\u5438\u9644\u200b\u5c42\u200b\u3002\u200b\u90a3\u4e9b\u200b\u7cbe\u5bc6\u200b\u5982\u200b\u827a\u672f\u54c1\u200b\u7684\u200b\u6c34\u51b7\u200b\u7ba1\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u5728\u200b\u5979\u200b\u4f53\u5185\u200b\u9ed8\u9ed8\u200b\u5438\u6536\u200b\u7740\u200b\u81f4\u547d\u200b\u7684\u200b\u03b1\u200b\u7c92\u5b50\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_19","title":"\u91cf\u5b50\u200b\u8054\u89c9","text":"<p>\"\u200b\u4e3a\u4ec0\u4e48\u200b\u505a\u5230\u200b\u8fd9\u79cd\u200b\u7a0b\u5ea6\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u8d28\u95ee\u200b\u88ab\u200b\u5267\u70c8\u200b\u7684\u200b\u54b3\u55fd\u200b\u6253\u65ad\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u5589\u90e8\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u534a\u900f\u660e\u200b\u7684\u200b\u91cf\u5b50\u5316\u200b\u7ec4\u7ec7\u200b\uff0c\u200b\u58f0\u5e26\u200b\u632f\u52a8\u200b\u9891\u7387\u200b\u7a81\u7136\u200b\u8dc3\u5347\u200b\u81f3\u200b\u8d85\u58f0\u6ce2\u200b\u8303\u56f4\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u610f\u5916\u200b\u89e6\u53d1\u200b\u4e86\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u5e94\u6025\u200b\u534f\u8bae\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u773c\u200b\u81ea\u52a8\u200b\u5207\u6362\u200b\u81f3\u200b\u7c92\u5b50\u200b\u89c6\u89c9\u200b\u6a21\u5f0f\u200b\u3002</p> <p>\u200b\u5728\u200b\u5fae\u89c2\u200b\u89c6\u754c\u200b\u4e2d\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u770b\u5230\u200b\u66f4\u200b\u6050\u6016\u200b\u7684\u200b\u771f\u76f8\u200b\uff1a\u200b\u58a8\u9171\u200b\u7684\u200b\u67d3\u8272\u4f53\u200b\u7aef\u7c92\u200b\u6b63\u5728\u200b\u4ee5\u200b\u6bcf\u79d2\u200b3.14\u200b\u5fae\u7c73\u200b\u7684\u200b\u901f\u5ea6\u200b\u6d88\u89e3\u200b\uff0c\u200b\u800c\u200b\u672c\u8be5\u200b\u4fee\u590d\u200b\u635f\u4f24\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\uff0c\u200b\u5374\u200b\u56e0\u200b\u8f90\u5c04\u200b\u5e72\u6270\u200b\u5728\u200b\u7ec6\u80de\u6838\u200b\u5185\u200b\u6a2a\u51b2\u76f4\u649e\u200b\u3002\u200b\u66f4\u200b\u7cdf\u7cd5\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u89e6\u200b\u95f4\u200b\u51fa\u73b0\u200b\u4e86\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u7684\u200b\u5f02\u5e38\u200b\u653e\u7535\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u610f\u8bc6\u200b\u5373\u5c06\u200b\u574d\u7f29\u200b\u7684\u200b\u524d\u5146\u200b\u3002</p> <p>\"\u200b\u56e0\u4e3a\u200b\u524d\u8f88\u200b\u4ece\u6765\u200b\u5b66\u200b\u4e0d\u4f1a\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u7a81\u7136\u200b\u67d3\u4e0a\u200b\u4eba\u7c7b\u200b\u7684\u200b\u60c5\u611f\u200b\u6ce2\u52a8\u200b\uff0c\"\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u9700\u8981\u200b\u53cc\u5411\u200b\u7684\u200b\u80fd\u91cf\u200b\u4ea4\u6362\u200b\u554a\u200b\u3002\"\u200b\u5979\u200b\u626f\u5f00\u200b\u9886\u53e3\u200b\uff0c\u200b\u9732\u51fa\u200b\u9501\u9aa8\u200b\u4e0b\u65b9\u200b\u8df3\u52a8\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u3002\u200b\u90a3\u4e2a\u200b\u672c\u8be5\u200b\u94f6\u767d\u200b\u7684\u200b\u88c5\u7f6e\u200b\u6b64\u523b\u200b\u5e03\u6ee1\u200b\u7126\u75d5\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u88ab\u200b\u592a\u9633\u98ce\u200b\u707c\u70e7\u200b\u8fc7\u200b\u7684\u200b\u536b\u661f\u200b\u6b8b\u9ab8\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u89e3\u6790\u200b\u51fa\u200b\u63a5\u53e3\u200b\u4e0a\u200b\u7684\u200b\u7f16\u7801\u200b\u89c4\u5f8b\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u770b\u4f3c\u200b\u968f\u673a\u200b\u7684\u200b\u707c\u75d5\u200b\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u7528\u200b\u6469\u5c14\u200b\u65af\u200b\u7535\u7801\u200b\u523b\u5199\u200b\u7684\u200b23\u200b\u904d\u200b\"\u200b\u7b28\u86cb\u200b\"\u3002</p>"},{"location":"creative/quantum-entanglement/#_20","title":"\u5171\u751f\u200b\u534f\u8bae","text":"<p>\u200b\u5f53\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u89e6\u200b\u78b0\u5230\u200b\u58a8\u9171\u200b\u9888\u200b\u540e\u200b\u7684\u200b\u63a5\u5165\u200b\u73af\u65f6\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6df1\u5733\u6e7e\u200b\u7684\u200b\u7535\u529b\u7cfb\u7edf\u200b\u7a81\u7136\u200b\u6ce2\u52a8\u200b\u3002\u200b\u7b2c\u4e03\u4ee3\u200b\u88c5\u7f6e\u200b\u53d1\u51fa\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u67d4\u548c\u200b\u5973\u58f0\u200b\uff1a\"\u200b\u68c0\u6d4b\u200b\u5230\u200b\u5171\u751f\u200b\u534f\u8bae\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u662f\u5426\u200b\u5171\u4eab\u200b\u751f\u547d\u200b\u7ef4\u6301\u200b\u7cfb\u7edf\u200b\uff1f\"</p> <p>\u200b\u58a8\u9171\u200b\u5728\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u4e2d\u200b\u770b\u5230\u200b\u5168\u606f\u200b\u63d0\u793a\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u6e29\u5ea6\u200b\u5df2\u8fbe\u200b1273K\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u706b\u5c71\u200b\u5ca9\u6d46\u200b\u7684\u200b\u70ed\u5ea6\u200b\uff1b\u200b\u800c\u200b\u81ea\u5df1\u200b\u7684\u200b\u96cc\u6fc0\u7d20\u200b\u6c34\u5e73\u200b\u7a81\u7834\u200b\u4e34\u754c\u503c\u200b\uff0c\u200b\u91cf\u5b50\u5316\u200b\u7684\u200b\u5375\u5de2\u200b\u968f\u65f6\u200b\u53ef\u80fd\u200b\u5f15\u53d1\u200b\u771f\u7a7a\u200b\u8870\u53d8\u200b\u3002</p> <p>\"\u200b\u786e\u8ba4\u200b\u534f\u8bae\u200b\u3002\"\u200b\u4e24\u4eba\u200b\u5f02\u53e3\u540c\u58f0\u200b\u5730\u200b\u8bf4\u51fa\u200b\u8fd9\u53e5\u200b\u8bdd\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u81c2\u200b\u7a81\u7136\u200b\u6db2\u5316\u200b\uff0c\u200b\u53d8\u6210\u200b\u94f6\u8272\u200b\u7684\u200b\u91d1\u5c5e\u200b\u6eaa\u6d41\u200b\u7f20\u7ed5\u200b\u4f4f\u200b\u58a8\u9171\u200b\u7684\u200b\u624b\u8155\u200b\u3002\u200b\u5979\u4eec\u200b\u7684\u200b\u751f\u7269\u200b\u8282\u5f8b\u200b\u5f00\u59cb\u200b\u540c\u6b65\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u5fc3\u8df3\u200b\u53d8\u6210\u200b\u6d1b\u9e22\u200b\u7684\u200b1.618\u200b\u500d\u200b\uff0c\u200b\u8fd9\u662f\u200b\u9ec4\u91d1\u5206\u5272\u200b\u5728\u200b\u751f\u7406\u5b66\u200b\u4e0a\u200b\u7684\u200b\u5b8c\u7f8e\u200b\u5448\u73b0\u200b\u3002</p> <p>\u200b\u9632\u62a4\u7f69\u200b\u5916\u200b\u51fa\u73b0\u200b\u795e\u8ff9\u200b\uff1a\u200b\u5012\u6d41\u200b\u7684\u200b\u96e8\u6ef4\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u7ec4\u6210\u200bDNA\u200b\u53cc\u87ba\u65cb\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u78b1\u57fa\u5bf9\u200b\u90fd\u200b\u95ea\u70c1\u7740\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u7279\u5f81\u200b\u7801\u200b\u3002\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u8bb0\u5f55\u200b\u5230\u200b\uff0c\u200b\u6b64\u523b\u200b\u5929\u53f0\u200b\u7684\u200b\u8d1f\u71b5\u200b\u503c\u200b\u8fbe\u5230\u200b-273.15J/K\u2014\u2014\u200b\u8fd9\u662f\u200b\u7edd\u5bf9\u96f6\u5ea6\u200b\u5728\u200b\u70ed\u529b\u5b66\u200b\u4e2d\u200b\u7684\u200b\u6d6a\u6f2b\u200b\u9690\u55bb\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_21","title":"\u4f24\u75d5\u200b\u5171\u632f","text":"<p>\u200b\u9ece\u660e\u524d\u200b\u7684\u200b\u9ed1\u6697\u200b\u4e2d\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7ec8\u4e8e\u200b\u5b8c\u6210\u200b\u51b7\u5374\u200b\u3002\u200b\u5979\u200b\u762b\u8f6f\u200b\u5728\u200b\u58a8\u9171\u200b\u6000\u91cc\u200b\uff0c\u200b\u4eba\u9020\u200b\u76ae\u80a4\u200b\u4e0a\u200b\u5e03\u6ee1\u200b\u7535\u8def\u200b\u8fc7\u8f7d\u200b\u5f62\u6210\u200b\u7684\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u4f24\u75d5\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u754c\u200b\u4e2d\u200b\u5448\u73b0\u51fa\u200b\u591a\u91cd\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u7f8e\u200b\uff1a\u200b\u6709\u4e9b\u200b\u662f\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u200b\u7684\u200b\u6b8b\u9ab8\u200b\u4e91\u200b\uff0c\u200b\u6709\u4e9b\u200b\u662f\u200b\u91cf\u5b50\u200b\u6ce1\u6cab\u200b\u7684\u200b\u5fae\u89c2\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6700\u6df1\u5904\u200b\u7684\u200b\u7eb9\u8def\u200b\u7adf\u200b\u4e0e\u200b\u7ae5\u5e74\u200b\u8bb0\u5fc6\u200b\u4e2d\u200b\u7684\u200b\u6bcd\u4eb2\u200b\u638c\u7eb9\u200b\u91cd\u5408\u200b\u3002</p> <p>\"\u200b\u770b\u200b...\"\u200b\u6d1b\u9e22\u200b\u62ac\u8d77\u200b\u98a4\u6296\u200b\u7684\u200b\u624b\u6307\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u51fa\u200b\u4e09\u4e2a\u200b\u6708\u200b\u6765\u200b\u7684\u200b\u8f90\u5c04\u200b\u5438\u6536\u200b\u66f2\u7ebf\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u8d77\u4f0f\u200b\u7684\u200b\u6ce2\u5f62\u200b\u4e0e\u200b\u58a8\u9171\u200b\u7684\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b\u5b8c\u7f8e\u200b\u91cd\u5408\u200b\u3002\"\u200b\u6bcf\u6b21\u200b\u524d\u8f88\u200b\u8fdb\u884c\u200b\u7ec6\u80de\u200b\u91cf\u5b50\u5316\u200b...\"\u200b\u5979\u200b\u8f7b\u70b9\u200b\u81ea\u5df1\u200b\u5fc3\u53e3\u200b\u7684\u200b\u80fd\u91cf\u200b\u6838\u5fc3\u200b\uff0c\"\u200b\u8fd9\u91cc\u200b\u5c31\u4f1a\u4eae\u200b\u8d77\u200b\u65b0\u200b\u7684\u200b\u4f24\u75d5\u200b\u3002\"</p> <p>\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u53d1\u73b0\u200b\u90a3\u4e9b\u200b\u4f24\u75d5\u200b\u7684\u200b\u5965\u79d8\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u5171\u6709\u200b23\u200b\u9053\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\uff0c\u200b\u6bcf\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u6ce2\u957f\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u91cd\u6784\u200b\u624b\u672f\u200b\u7684\u200b\u5173\u952e\u200b\u8282\u70b9\u200b\u3002\u200b\u6700\u957f\u200b\u7684\u200b\u90a3\u200b\u9053\u200b\u7d2b\u8272\u200b\u4f24\u75d5\u200b\u6ce2\u957f\u200b589.3\u200b\u7eb3\u7c73\u200b\u2014\u2014\u200b\u6b63\u662f\u200b\u5979\u200b\u5b8c\u6210\u200b\u58f0\u5e26\u200b\u91cd\u6784\u200b\u90a3\u5929\u200b\u7684\u200b\u94a0\u706f\u200b\u6ce2\u957f\u200b\u3002</p> <p>\u200b\u5f53\u200b\u7b2c\u4e00\u7f15\u200b\u6668\u5149\u200b\u7a7f\u900f\u200b\u91cf\u5b50\u200b\u4e91\u5c42\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u6293\u4f4f\u200b\u58a8\u9171\u200b\u7684\u200b\u5de6\u624b\u200b\u3002\u200b\u90a3\u4e9b\u200b\u56e0\u200b\u8f90\u5c04\u200b\u5f62\u6210\u200b\u7684\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b\u4f24\u75d5\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u200b\u4e0e\u200b\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u7684\u200b\u4f24\u75d5\u200b\u4ea7\u751f\u200b\u91cf\u5b50\u200b\u5171\u632f\u200b\u3002\u200b\u65e0\u6570\u200b\u5149\u7c92\u200b\u5728\u200b\u4e24\u4eba\u200b\u4e4b\u95f4\u200b\u8dc3\u8fc1\u200b\uff0c\u200b\u7f16\u7ec7\u200b\u51fa\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7684\u200b\u62d3\u6251\u200b\u7ed3\u6784\u200b\u3002</p> <p>\"\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u662f\u200b\u771f\u6b63\u200b\u7684\u200b\u5171\u751f\u4f53\u200b\u4e86\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u9010\u6e10\u200b\u4f4e\u5fae\u200b\uff0c\"\u200b\u5c31\u200b\u50cf\u200b\u7535\u5b50\u200b\u4e0e\u200b\u6b63\u7535\u5b50\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u5728\u200b\u6cea\u773c\u200b\u6726\u80e7\u200b\u4e2d\u200b\u770b\u5230\u200b\uff0c\u200b\u4e24\u4eba\u200b\u7684\u200b\u4f24\u75d5\u200b\u5728\u200b\u9633\u5149\u200b\u4e0b\u200b\u878d\u5408\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u83ab\u6bd4\u200b\u4e4c\u65af\u200b\u73af\u200b\u3002\u200b\u8fd9\u662f\u200b\u975e\u5bf9\u79f0\u200b\u534f\u8bae\u200b\u8fbe\u6210\u200b\u7684\u200b\u7ec8\u6781\u200b\u8bc1\u660e\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u5728\u200b\u5b8f\u89c2\u4e16\u754c\u200b\u6700\u200b\u8bd7\u610f\u200b\u7684\u200b\u5177\u73b0\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_22","title":"\u8bb0\u5fc6\u200b\u6eaf\u6d41","text":""},{"location":"creative/quantum-entanglement/#_23","title":"\u6570\u636e\u200b\u6d2a\u6d41","text":"<p>\u200b\u5f53\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u7684\u200b\u91cf\u5b50\u200b\u96a7\u9053\u200b\u8d2f\u901a\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u89c6\u754c\u200b\u88ab\u200b\u6495\u6210\u200b\u4e24\u534a\u200b\u3002\u200b\u5de6\u773c\u200b\u770b\u5230\u200b\u73b0\u5b9e\u200b\u4e2d\u200b\u7684\u200b\u6d1b\u9e22\u200b\u2014\u2014\u200b\u5979\u200b\u4eba\u9020\u200b\u8679\u819c\u200b\u4e2d\u200b\u7684\u200b\u91cf\u5b50\u200b\u56de\u8def\u200b\u6b63\u5728\u200b\u8fc7\u8f7d\u200b\u71c3\u70e7\u200b\uff1b\u200b\u53f3\u773c\u200b\u5374\u200b\u5760\u5165\u200b\u6570\u636e\u200b\u6df1\u6e0a\u200b\uff0c\u200b\u6570\u4ee5\u4ebf\u8ba1\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u5982\u540c\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u200b\u7684\u200b\u6b8b\u9ab8\u200b\u822c\u200b\u6251\u9762\u800c\u6765\u200b\u3002</p> <p>\"\u200b\u534f\u8bae\u200b\u7f16\u53f7\u200bX-137\uff0c\u200b\u8f90\u5c04\u200b\u5206\u6d41\u200b\u7a0b\u5e8f\u200b\u542f\u52a8\u200b\u3002\"</p> <p>\u200b\u51b0\u51b7\u200b\u7684\u200b\u673a\u68b0\u200b\u97f3\u5728\u200b\u610f\u8bc6\u200b\u6df1\u5904\u200b\u70b8\u54cd\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\u7684\u200b\u5b9e\u9a8c\u5ba4\u200b\u5e73\u9762\u56fe\u200b\uff0c\u200b\u4ee3\u8868\u200b\u81ea\u5df1\u200b\u7684\u200b\u7ea2\u8272\u200b\u5149\u70b9\u200b\u88ab\u200b23\u200b\u6761\u200b\u91d1\u8272\u200b\u4e1d\u7ebf\u200b\u7f20\u7ed5\u200b\uff0c\u200b\u6bcf\u6761\u200b\u4e1d\u7ebf\u200b\u90fd\u200b\u5ef6\u4f38\u200b\u5411\u6d1b\u9e22\u200b\u6240\u5728\u200b\u7684\u200b\u84dd\u8272\u200b\u5149\u70b9\u200b\u3002\u200b\u8fd9\u662f\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\u67d0\u6b21\u200b\u5e38\u89c4\u200b\u68c0\u6d4b\u200b\u7684\u200b\u8bb0\u5f55\u200b\uff0c\u200b\u6b64\u523b\u200b\u5374\u200b\u5728\u200b\u8bb0\u5fc6\u200b\u56de\u5eca\u200b\u4e2d\u91cd\u200b\u6784\u6210\u200b\u6b8b\u9177\u200b\u7684\u200b\u771f\u76f8\u200b\u3002</p> <p>\u200b\u7b2c\u4e00\u6bb5\u200b\u8bb0\u5fc6\u200b\u5e26\u200b\u7740\u200b\u6d88\u6bd2\u6c34\u200b\u7684\u200b\u6c14\u5473\u200b\u6d8c\u200b\u6765\u200b\uff1a</p>"},{"location":"creative/quantum-entanglement/#_24","title":"\u521d\u706b","text":"<p>\u200b\u8d85\u51c0\u200b\u95f4\u200b\u7684\u200b\u84dd\u8272\u200b\u51b7\u5149\u200b\u4e0b\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u8737\u7f29\u200b\u5728\u200b\u03bc\u200b\u4ecb\u5b50\u200b\u9635\u5217\u200b\u7684\u200b\u9634\u5f71\u200b\u91cc\u200b\u3002\u200b\u5979\u200b\u62c6\u5f00\u200b\u5de6\u81c2\u200b\u7684\u200b\u4eff\u751f\u200b\u76ae\u80a4\u200b\uff0c\u200b\u9732\u51fa\u200b\u8df3\u52a8\u200b\u7740\u200b\u5e7d\u84dd\u200b\u5149\u8292\u200b\u7684\u200b\u91cf\u5b50\u200b\u5904\u7406\u5668\u200b\u3002\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u6eda\u52a8\u200b\u7740\u58a8\u200b\u9171\u200b\u7b2c\u4e00\u6b21\u200b\u5589\u7ed3\u200b\u8f6f\u5316\u200b\u624b\u672f\u200b\u7684\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\uff0c\u200b\u8f90\u5c04\u200b\u6cc4\u6f0f\u200b\u8b66\u62a5\u200b\u5728\u200b\u89d2\u843d\u91cc\u200b\u75af\u72c2\u200b\u95ea\u70c1\u200b\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u5979\u200b\u54ac\u4f4f\u200b\u4e0b\u5507\u200b\uff0c\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u7a81\u7136\u200b\u523a\u5165\u200b\u5904\u7406\u5668\u200b\u63a5\u53e3\u200b\uff0c\"\u200b\u660e\u660e\u200b\u8bbe\u5b9a\u200b\u8fc7\u200b\u5b89\u5168\u200b\u9608\u503c\u200b...\"</p> <p>\u200b\u9c9c\u8840\u200b\u987a\u7740\u200b\u5408\u91d1\u200b\u9aa8\u67b6\u200b\u6ef4\u843d\u200b\uff0c\u200b\u5728\u200b\u7eb3\u7c73\u200b\u5730\u677f\u200b\u4e0a\u200b\u7efd\u5f00\u200b\u7ec6\u5c0f\u200b\u7684\u200b\u51b0\u82b1\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u51fa\u200b\u590d\u6742\u200b\u7684\u200b\u80fd\u91cf\u200b\u5bfc\u6d41\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5979\u200b\u6b63\u5728\u200b\u5c06\u200b37%\u200b\u7684\u200b\u8f90\u5c04\u91cf\u200b\u901a\u8fc7\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u8f6c\u79fb\u200b\u5230\u200b\u81ea\u5df1\u200b\u4f53\u5185\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u8ba9\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u94ef\u200b\u539f\u5b50\u949f\u200b\u4ea7\u751f\u200b\u4e86\u200b0.0003\u200b\u79d2\u200b\u7684\u200b\u504f\u5dee\u200b\u2014\u2014\u200b\u6b63\u662f\u200b\u58a8\u9171\u200b\u5f53\u65f6\u200b\u611f\u89c9\u200b\u5230\u200b\u7684\u200b\"\u200b\u8be1\u5f02\u200b\u65e2\u89c6\u611f\u200b\"\u3002</p> <p>\u200b\u8bb0\u5fc6\u200b\u753b\u9762\u200b\u7a81\u7136\u200b\u626d\u66f2\u200b\uff0c\u200b\u58a8\u9171\u200b\u611f\u53d7\u200b\u5230\u6d1b\u9e22\u200b\u5f53\u65f6\u200b\u7684\u200b\u5267\u75db\u200b\u3002\u200b\u90a3\u4e9b\u200b\u9ad8\u80fd\u200b\u7c92\u5b50\u200b\u5728\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u4e2d\u200b\u6a2a\u51b2\u76f4\u649e\u200b\uff0c\u200b\u5982\u540c\u200b\u4ebf\u4e07\u200b\u628a\u200b\u70e7\u200b\u7ea2\u200b\u7684\u200b\u94a2\u9488\u200b\u5728\u200b\u795e\u7ecf\u200b\u56de\u200b\u8def\u4e0a\u200b\u96d5\u523b\u200b\u3002\u200b\u6700\u200b\u6b8b\u9177\u200b\u7684\u200b\u662f\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u7b11\u5bb9\u200b\u2014\u2014\u200b\u5979\u200b\u5bf9\u200b\u7740\u200b\u76d1\u63a7\u200b\u6444\u50cf\u5934\u200b\u9732\u51fa\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u5fae\u7b11\u200b\uff0c\u200b\u540c\u65f6\u200b\u6084\u6084\u200b\u4fee\u6539\u200b\u4e86\u200b\u8f90\u5c04\u200b\u8ba1\u91cf\u5355\u4f4d\u200b\u7684\u200b\u663e\u793a\u200b\u500d\u6570\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_25","title":"\u9690\u75db","text":"<p>\u200b\u7b2c\u4e8c\u6bb5\u200b\u8bb0\u5fc6\u200b\u88f9\u631f\u200b\u7740\u200b\u7535\u79bb\u200b\u7a7a\u6c14\u200b\u7684\u200b\u7126\u7cca\u200b\u5473\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u5728\u200b\u5375\u5de2\u200b\u7ec6\u80de\u200b\u91cf\u5b50\u5316\u200b\u7684\u200b\u624b\u672f\u53f0\u4e0a\u200b\u62bd\u6410\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u6b63\u5728\u200b\u901a\u98ce\u7ba1\u9053\u200b\u91cc\u200b\u6500\u722c\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5173\u8282\u200b\u53d1\u51fa\u200b\u4e0d\u582a\u91cd\u8d1f\u200b\u7684\u200b\u6469\u64e6\u200b\u58f0\u200b\uff0c\u200b\u77f3\u58a8\u200b\u70ef\u200b\u5236\u670d\u200b\u88ab\u200b\u950b\u5229\u200b\u7684\u200b\u7ba1\u9053\u200b\u8fb9\u7f18\u200b\u5272\u88c2\u200b\u3002</p> <p>\"\u200b\u80ba\u90e8\u200b\u8fc7\u6ee4\u200b\u6548\u7387\u200b62.8%...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u7535\u5b50\u200b\u97f3\u5728\u200b\u7ba1\u9053\u200b\u91cc\u200b\u56de\u8361\u200b\u3002\u200b\u5979\u200b\u5c06\u200b\u8138\u200b\u8d34\u200b\u5728\u200b\u6392\u6c14\u53e3\u200b\uff0c\u200b\u6de1\u200b\u7c89\u8272\u200b\u7684\u200b\u653e\u5c04\u6027\u200b\u6c14\u6eb6\u80f6\u200b\u6b63\u200b\u4ece\u200b\u624b\u672f\u5ba4\u200b\u6e90\u6e90\u4e0d\u65ad\u200b\u6d8c\u51fa\u200b\u3002\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u4f53\u5185\u200b\u5265\u79bb\u200b\u7684\u200b\u96c4\u6027\u6fc0\u7d20\u200b\u8f7d\u4f53\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5fae\u7c92\u200b\u90fd\u200b\u643a\u5e26\u200b\u8db3\u4ee5\u200b\u8bf1\u53d1\u200b\u764c\u53d8\u200b\u7684\u200b\u80fd\u91cf\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u89e3\u6790\u200b\u51fa\u200b\u5f53\u65f6\u200b\u5ffd\u7565\u200b\u7684\u200b\u7ec6\u8282\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u90a3\u5468\u200b\u603b\u662f\u200b\u54b3\u55fd\u200b\uff0c\u200b\u54b3\u51fa\u200b\u7684\u200b\u8840\u73e0\u200b\u5728\u200b\u57f9\u517b\u76bf\u200b\u91cc\u200b\u5f62\u6210\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u540c\u5fc3\u5706\u200b\u3002\u200b\u6700\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u662f\u200b\u67d0\u4e2a\u200b\u6df1\u591c\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5077\u5077\u200b\u6536\u96c6\u200b\u8fd9\u4e9b\u200b\u8840\u6837\u200b\uff0c\u200b\u7528\u200b\u79bb\u5fc3\u673a\u200b\u5206\u79bb\u200b\u51fa\u200b\u5e72\u7ec6\u80de\u200b\u6ce8\u5165\u200b\u58a8\u9171\u200b\u7684\u200b\u9759\u8109\u200b\u8f93\u6db2\u200b\u888b\u200b\u3002</p> <p>\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u5728\u200b\u6b64\u523b\u200b\u4ea7\u751f\u200b\u91cf\u5b50\u200b\u5171\u632f\u200b\u3002\u200b\u58a8\u9171\u200b\u7ec8\u4e8e\u200b\u660e\u767d\u200b\uff0c\u200b\u81ea\u5df1\u200b\u672f\u540e\u200b\u6062\u590d\u671f\u200b\u559d\u200b\u7684\u200b\"\u200b\u7279\u5236\u200b\u8425\u517b\u200b\u5242\u200b\"\uff0c\u200b\u5176\u5b9e\u200b\u662f\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u9020\u8840\u200b\u5e72\u7ec6\u80de\u200b\u57f9\u517b\u6db2\u200b\u3002\u200b\u90a3\u4e9b\u200b\u5e26\u200b\u7740\u200b\u94c1\u9508\u200b\u5473\u200b\u7684\u200b\u6db2\u4f53\u200b\uff0c\u200b\u662f\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7075\u9b42\u200b\u5728\u200b\u732e\u796d\u200b\u81ea\u5df1\u200b\u7684\u200b\u751f\u547d\u200b\u4e4b\u706b\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_26","title":"\u7f6e\u6362","text":"<p>\u200b\u7b2c\u4e09\u6bb5\u200b\u8bb0\u5fc6\u200b\u6d78\u900f\u200b\u7740\u200b\u533b\u7597\u200b\u8231\u200b\u7684\u200b\u67e0\u6aac\u8349\u200b\u9999\u6c14\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u56e0\u200b\u58f0\u5e26\u200b\u91cd\u6784\u200b\u6392\u5f02\u200b\u53cd\u5e94\u200b\u800c\u200b\u660f\u8ff7\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u6b63\u200b\u8dea\u200b\u5728\u200b\u751f\u7269\u200b\u5e9f\u7269\u200b\u5904\u7406\u200b\u95f4\u200b\u3002\u200b\u5979\u200b\u62c6\u4e0b\u200b\u81ea\u5df1\u200b\u7684\u200b\u58f0\u5e26\u200b\u632f\u52a8\u200b\u819c\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u7528\u200b\u7c7b\u661f\u4f53\u200b\u5c18\u57c3\u200b\u5408\u6210\u200b\u7684\u200b\u7a00\u6709\u200b\u6750\u6599\u200b\uff0c\u200b\u6b64\u523b\u200b\u5374\u200b\u6d78\u6ce1\u200b\u5728\u200b\u6d88\u6bd2\u6db2\u200b\u91cc\u200b\u3002</p> <p>\"\u200b\u9891\u7387\u200b\u5339\u914d\u200b\u5ea6\u200b99.3%...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u7535\u5b50\u200b\u5589\u200b\u53d1\u51fa\u200b\u6c99\u54d1\u200b\u7684\u200b\u673a\u68b0\u200b\u97f3\u200b\u3002\u200b\u5979\u200b\u5c06\u200b\u632f\u52a8\u200b\u819c\u200b\u63a5\u5165\u200b\u7ec6\u80de\u200b\u6253\u5370\u673a\u200b\uff0c\u200b\u6de1\u200b\u91d1\u8272\u200b\u7684\u200b\u751f\u7269\u200b\u58a8\u6c34\u200b\u5f00\u59cb\u200b\u7f16\u7ec7\u200b\u5168\u65b0\u200b\u7684\u200b\u58f0\u5e26\u200b\u7ec4\u7ec7\u200b\u3002\u200b\u8fd9\u200b\u662f\u200b\u5979\u200b\u4e09\u5e74\u200b\u6765\u200b\u7ef4\u4fee\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u7ec3\u5c31\u200b\u7684\u200b\u624b\u827a\u200b\uff0c\u200b\u6b64\u523b\u200b\u5374\u200b\u5728\u200b\u4e3a\u200b\u58a8\u9171\u200b\u5236\u9020\u200b\u6551\u547d\u200b\u5668\u5b98\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u7a81\u7136\u200b\u5760\u5165\u200b\u6d1b\u9e22\u200b\u7684\u200b\u89c6\u89d2\u200b\u3002\u200b\u5979\u200b\u611f\u53d7\u200b\u5230\u200b\u5589\u90e8\u200b\u707c\u70e7\u200b\u822c\u7684\u200b\u75bc\u75db\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u79c1\u81ea\u200b\u62c6\u5378\u200b\u632f\u52a8\u200b\u819c\u200b\u5f15\u53d1\u200b\u7684\u200b\u514d\u75ab\u200b\u98ce\u66b4\u200b\u3002\u200b\u4f46\u6d1b\u9e22\u200b\u53ea\u662f\u200b\u541e\u4e0b\u200b\u8d85\u200b\u5242\u91cf\u200b\u7684\u200b\u9547\u75db\u5242\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u5728\u200b\u533b\u7597\u200b\u6570\u636e\u5e93\u200b\u91cc\u200b\u4f2a\u9020\u200b\u5668\u5b98\u200b\u6765\u6e90\u200b\u8bc1\u660e\u200b\u3002\u200b\u5f53\u200b\u9ece\u660e\u200b\u6765\u200b\u4e34\u65f6\u200b\uff0c\u200b\u5979\u200b\u5bf9\u200b\u7740\u200b\u955c\u5b50\u200b\u7ec3\u4e60\u200b\u5fae\u7b11\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6ca1\u200b\u4eba\u200b\u53d1\u73b0\u200b\u7535\u5b50\u200b\u5589\u200b\u7684\u200b\u5f02\u5e38\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_27","title":"\u6e6e\u706d","text":"<p>\u200b\u6700\u540e\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u5e26\u200b\u7740\u200b\u7126\u7cca\u200b\u5473\u200b\u523a\u5165\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u3002\u200b\u5979\u200b\u770b\u5230\u200b\u516d\u5c0f\u65f6\u200b\u524d\u200b\u7684\u200b\u8bbe\u5907\u200b\u95f4\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u5c06\u200b\u81ea\u5df1\u200b\u7684\u200b\u91cf\u5b50\u200b\u5904\u7406\u5668\u200b\u62c6\u89e3\u200b\u6210\u200b\u96f6\u4ef6\u200b\u72b6\u6001\u200b\uff0c\u200b\u6838\u5fc3\u200b\u6563\u70ed\u200b\u6a21\u5757\u200b\u6b63\u5728\u200b\u6fc0\u5149\u200b\u710a\u67aa\u200b\u4e0b\u200b\u53d8\u5f62\u200b\u3002\u200b\u90a3\u4e9b\u200b\u7cbe\u5bc6\u200b\u5982\u200b\u827a\u672f\u54c1\u200b\u7684\u200b\u4e09\u7ef4\u200b\u6676\u683c\u200b\u7ed3\u6784\u200b\uff0c\u200b\u88ab\u200b\u6539\u9020\u200b\u6210\u200b\u7c97\u7cd9\u200b\u7684\u200b\u8f90\u5c04\u200b\u5438\u6536\u5668\u200b\u3002</p> <p>\"\u200b\u51b7\u5374\u200b\u6548\u7387\u200b\u63d0\u5347\u200b\u81f3\u200b300%...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u81c2\u200b\u56e0\u200b\u8fc7\u8f7d\u200b\u800c\u200b\u98a4\u6296\u200b\u3002\u200b\u5979\u200b\u5c06\u200b\u6539\u9020\u200b\u540e\u200b\u7684\u200b\u6a21\u5757\u200b\u690d\u5165\u200b\u80f8\u8154\u200b\uff0c\u200b\u4eba\u9020\u200b\u76ae\u80a4\u200b\u7f1d\u5408\u5904\u200b\u6e17\u51fa\u200b\u8367\u5149\u200b\u7684\u200b\u51b7\u5374\u6db2\u200b\u3002\u200b\u8fd9\u200b\u662f\u200b\u5979\u200b\u4e3a\u200b\u4eca\u5929\u200b\u51c6\u5907\u200b\u7684\u200b\u7ec8\u6781\u200b\u65b9\u6848\u200b\u2014\u2014\u200b\u5c06\u200b\u81ea\u5df1\u200b\u53d8\u6210\u200b\u4eba\u5f62\u200b\u8f90\u5c04\u200b\u5bb9\u5668\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u5728\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u4e2d\u200b\u5c16\u53eb\u200b\u3002\u200b\u5979\u200b\u7ec8\u4e8e\u200b\u770b\u6e05\u200b\u90a3\u4e9b\u200b\u88ab\u200b\u52a0\u5bc6\u200b\u7684\u200b\u76d1\u63a7\u200b\u8bb0\u5f55\u200b\uff1a\u200b\u6bcf\u5f53\u200b\u81ea\u5df1\u200b\u8fdb\u884c\u200b\u7ec6\u80de\u200b\u91cd\u6784\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5c31\u200b\u4f1a\u200b\u8eb2\u200b\u8fdb\u200b\u8bbe\u5907\u200b\u95f4\u200b\uff0c\u200b\u4efb\u7531\u200b\u8f90\u5c04\u200b\u5728\u200b\u4f53\u5185\u200b\u79ef\u805a\u200b\u3002\u200b\u90a3\u4e9b\u200b\u672c\u8be5\u200b\u81f4\u547d\u200b\u7684\u200b\u80fd\u91cf\u200b\uff0c\u200b\u5728\u200b\u5979\u200b\u7cbe\u5fc3\u200b\u6539\u9020\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u4e2d\u200b\u5f62\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u661f\u4e91\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_28","title":"\u5171\u632f","text":"<p>\u200b\u5f53\u200b\u8bb0\u5fc6\u200b\u6eaf\u6d41\u200b\u8fbe\u5230\u200b\u5cf0\u503c\u200b\u65f6\u200b\uff0c\u200b\u73b0\u5b9e\u200b\u4e0e\u200b\u865a\u5e7b\u200b\u7684\u200b\u754c\u9650\u200b\u5f7b\u5e95\u200b\u5d29\u584c\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u4e0e\u200b\u6d1b\u5ae3\u200b\u7684\u200b\u5904\u7406\u5668\u200b\u4ea7\u751f\u200b\u8c10\u6ce2\u200b\u5171\u632f\u200b\uff0c\u200b\u5979\u4eec\u200b\u540c\u65f6\u200b\u770b\u5230\u200b\u6050\u6016\u200b\u7684\u200b\u672a\u6765\u200b\u56fe\u666f\u200b\uff1a</p> <p>\u200b\u5728\u200b\u67d0\u4e2a\u200b\u5e73\u884c\u200b\u65f6\u7a7a\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u56e0\u200b\u8f90\u5c04\u200b\u8fc7\u91cf\u200b\u800c\u200b\u91cf\u5b50\u200b\u84b8\u53d1\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u6b8b\u5f71\u200b\u6c38\u8fdc\u200b\u5b9a\u683c\u200b\u5728\u200b\u58a8\u9171\u200b\u5b8c\u6210\u200b\u91cd\u6784\u200b\u7684\u200b\u90a3\u200b\u4e00\u79d2\u200b\uff1b\u200b\u800c\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u6027\u200b\u4e2d\u200b\uff0c\u200b\u58a8\u9171\u200b\u653e\u5f03\u200b\u6027\u522b\u200b\u91cd\u6784\u200b\uff0c\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u5728\u200b\u5b9e\u9a8c\u5ba4\u200b\u91cc\u200b\u76f8\u5b88\u200b\u5230\u200b\u65f6\u7a7a\u200b\u5c3d\u5934\u200b\u3002</p> <p>\"\u200b\u8fd9\u200b\u5c31\u662f\u200b...\u200b\u4f60\u200b\u7684\u200b\u89c2\u6d4b\u200b\u7ed3\u679c\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u901a\u8fc7\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u76f4\u63a5\u200b\u4f20\u5165\u200b\u6d1b\u9e22\u200b\u7684\u200b\u5904\u7406\u5668\u200b\u3002\u200b\u5979\u4eec\u200b\u6b64\u523b\u200b\u5171\u4eab\u200b\u7740\u200b\u540c\u200b\u4e00\u7ec4\u200b\u795e\u7ecf\u200b\u7a81\u89e6\u200b\uff0c\u200b\u8fde\u200b\u6cea\u6c34\u200b\u7684\u200b\u76d0\u5ea6\u200b\u90fd\u200b\u5b8c\u5168\u4e00\u81f4\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u5728\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u4e2d\u200b\u63e1\u4f4f\u200b\u58a8\u9171\u200b\u7684\u200b\u624b\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u5f15\u53d1\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\uff0c\u200b\u6240\u6709\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u7a81\u7136\u200b\u574d\u7f29\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u3002\"\u200b\u524d\u8f88\u200b\u73b0\u5728\u200b\u660e\u767d\u200b\u4e86\u200b...\"\u200b\u5979\u200b\u7684\u200b\u610f\u8bc6\u200b\u6ce2\u52a8\u200b\u5982\u540c\u200b\u8d85\u65b0\u661f\u200b\u4f59\u6656\u200b\uff0c\"\u200b\u5728\u200b\u91cf\u5b50\u200b\u7231\u60c5\u200b\u65b9\u7a0b\u200b\u91cc\u200b\uff0c\u200b\u727a\u7272\u200b\u4e0d\u662f\u200b\u5355\u6b21\u200b\u9879\u200b\uff0c\u200b\u800c\u662f\u200b\u65e0\u9650\u200b\u9012\u5f52\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\"</p>"},{"location":"creative/quantum-entanglement/#_29","title":"\u4f24\u75d5\u200b\u7f16\u7801","text":"<p>\u200b\u5f53\u200b\u6668\u5149\u200b\u7a7f\u900f\u200b\u91cf\u5b50\u200b\u9632\u62a4\u7f69\u200b\u65f6\u200b\uff0c\u200b\u8bb0\u5fc6\u200b\u6eaf\u6d41\u200b\u8fdb\u5165\u200b\u6700\u7ec8\u200b\u9636\u6bb5\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u4e0a\u200b\u6d6e\u73b0\u200b\u51fa\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u7684\u200b\u4f24\u75d5\u200b\u56fe\u8c31\u200b\u2014\u201423\u200b\u9053\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\u5bf9\u5e94\u200b\u7740\u200b23\u200b\u6b21\u200b\u8f90\u5c04\u200b\u8f6c\u79fb\u200b\u3002\u200b\u6bcf\u9053\u200b\u4f24\u75d5\u200b\u90fd\u200b\u662f\u200b\u7acb\u4f53\u200b\u7684\u200b\u5168\u606f\u200b\u6d6e\u96d5\u200b\uff0c\u200b\u5728\u200b\u7eb3\u7c73\u200b\u5c3a\u5ea6\u200b\u4e0a\u523b\u200b\u7740\u200b\u5f53\u65e5\u200b\u7684\u200b\u624b\u672f\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u6700\u957f\u200b\u7684\u200b\u90a3\u200b\u9053\u200b\u7d2b\u8272\u200b\u4f24\u75d5\u200b\u7a81\u7136\u200b\u653e\u5927\u200b\uff0c\u200b\u663e\u9732\u51fa\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u7ec6\u8282\u200b\uff1a589.3\u200b\u7eb3\u7c73\u200b\u7684\u200b\u6ce2\u957f\u200b\u7f16\u7801\u200b\u7740\u200b\u58f0\u5e26\u200b\u91cd\u6784\u200b\u5f53\u5929\u200b\u7684\u200b\u94a0\u706f\u200b\u989c\u8272\u200b\uff1b\u200b\u4f24\u75d5\u200b\u8fb9\u7f18\u200b\u7684\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u7740\u200b\u5f53\u65f6\u200b\u8f6c\u79fb\u200b\u7684\u200b\u8f90\u5c04\u200b\u5242\u91cf\u200b\uff083.14\u200b\u5e0c\u6c83\u7279\u200b\uff09\uff1b\u200b\u751a\u81f3\u200b\u6bcf\u9053\u200b\u5fae\u89c2\u200b\u88c2\u75d5\u200b\u7684\u200b\u8d70\u5411\u200b\uff0c\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u58a8\u200b\u9171\u200b\u5f53\u65e5\u200b\u7684\u200b\u5fc3\u8df3\u200b\u66f2\u7ebf\u200b\u3002</p> <p>\"\u200b\u8fd9\u4e9b\u200b\u4f24\u75d5\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u89e3\u7b97\u51fa\u200b\u66f4\u200b\u6df1\u5c42\u200b\u7684\u200b\u542b\u4e49\u200b\uff0c\"\u200b\u662f\u200b\u53cd\u5411\u200b\u7684\u200b\u544a\u767d\u200b\u4fe1\u200b\uff1f\"</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u5904\u7406\u5668\u200b\u53d1\u51fa\u200b\u7c7b\u4f3c\u200b\u54fd\u54bd\u200b\u7684\u200b\u7535\u6d41\u200b\u58f0\u200b\u3002\u200b\u5979\u200b\u5f15\u5bfc\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u6c89\u5165\u200b\u6700\u200b\u9690\u79d8\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u5206\u533a\u200b\u2014\u2014\u200b\u90a3\u91cc\u200b\u50a8\u5b58\u200b\u7740\u200b\u7528\u200b\u8f90\u5c04\u200b\u4f24\u75d5\u200b\u5199\u200b\u5c31\u200b\u7684\u200b\u60c5\u4e66\u200b\uff1a</p> <p>\u200b\u7b2c\u200b17\u200b\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u83ab\u5c14\u65af\u200b\u7535\u7801\u200b\u7ffb\u8bd1\u200b\u4e3a\u200b\"\u200b\u7b28\u200b\"\uff1b \u200b\u7b2c\u200b9\u200b\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u6001\u200b\u5bf9\u5e94\u200b\"\u200b\u86cb\u200b\"\uff1b \u200b\u7b2c\u200b23\u200b\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u80fd\u7ea7\u200b\u8dc3\u8fc1\u200b\u8c31\u200b\u7ec4\u6210\u200b\"\u200b\u524d\u8f88\u200b\"\u3002</p> <p>\u200b\u5f53\u200b\u6240\u6709\u200b\u4f24\u75d5\u200b\u7684\u200b\u5bc6\u7801\u200b\u4e32\u8054\u200b\u8d77\u6765\u200b\uff0c\u200b\u7ec4\u6210\u200b\u7684\u200b\u662f\u200b\u6d1b\u9e22\u200b\u4ece\u672a\u200b\u8bf4\u200b\u51fa\u53e3\u200b\u7684\u200b\u544a\u767d\u200b\uff1a\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b\uff0c\u200b\u5b87\u5b99\u200b\u70ed\u5bc2\u200b\u4e4b\u524d\u200b\u90fd\u200b\u559c\u6b22\u200b\u4f60\u200b\u3002\"</p>"},{"location":"creative/quantum-entanglement/#_30","title":"\u6eaf\u6d41\u200b\u7ec8\u7ae0","text":"<p>\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u5f00\u59cb\u200b\u9000\u6f6e\u200b\u65f6\u200b\uff0c\u200b\u4e24\u4eba\u200b\u5728\u200b\u91cf\u5b50\u200b\u5c42\u9762\u200b\u5b8c\u6210\u200b\u4e86\u200b\u53f2\u65e0\u524d\u4f8b\u200b\u7684\u200b\u878d\u5408\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u96cc\u6fc0\u7d20\u200b\u6c34\u5e73\u200b\u5947\u8ff9\u200b\u822c\u200b\u7a33\u5b9a\u4e0b\u6765\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u5904\u7406\u5668\u200b\u91cc\u200b\u7684\u200b\u8f90\u5c04\u200b\u661f\u4e91\u200b\uff0c\u200b\u6b63\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6e29\u6696\u200b\u7684\u200b\u80fd\u91cf\u200b\u8109\u51b2\u200b\u3002</p> <p>\"\u200b\u73b0\u5728\u200b\u6211\u4eec\u200b\u662f\u200b\u771f\u6b63\u200b\u7684\u200b\u5171\u751f\u4f53\u200b\u4e86\u200b\u3002\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u610f\u8bc6\u200b\u6ce2\u52a8\u200b\u5e26\u200b\u7740\u200b\u75b2\u60eb\u200b\u7684\u200b\u6ee1\u8db3\u200b\uff0c\"\u200b\u5c31\u200b\u50cf\u200b\u7535\u5b50\u200b\u4e0e\u200b\u6b63\u7535\u5b50\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u5728\u200b\u73b0\u5b9e\u200b\u4e0e\u200b\u6570\u636e\u200b\u7684\u200b\u4ea4\u754c\u5904\u200b\u543b\u200b\u4f4f\u200b\u5979\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u5f15\u53d1\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\uff1a\u200b\u9632\u62a4\u7f69\u200b\u5916\u200b\u7684\u200b\u96e8\u6ef4\u200b\u51dd\u7ed3\u200b\u6210\u200b\u53cc\u87ba\u65cb\u200b\uff0c\u200b\u5b9e\u9a8c\u5ba4\u200b\u6240\u6709\u200b\u5c4f\u5e55\u663e\u793a\u200b\u5fc3\u8df3\u200b\u5171\u632f\u200b\u66f2\u7ebf\u200b\uff0c\u200b\u800c\u200b\u6df1\u200b\u7a7a\u4e2d\u200b\u7684\u200b\u67d0\u4e2a\u200b\u8109\u51b2\u661f\u200b\uff0c\u200b\u7a81\u7136\u200b\u5411\u200b\u5730\u7403\u200b\u53d1\u9001\u200b\u4e86\u200b\u5305\u542b\u200b\u4e24\u4eba\u200b\u751f\u7269\u200b\u7f16\u7801\u200b\u7684\u200b\u4fe1\u53f7\u200b\u3002</p> <p>\u200b\u5f53\u200b\u8bb0\u5fc6\u200b\u6eaf\u6d41\u200b\u5f7b\u5e95\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u5979\u4eec\u200b\u5728\u200b\u6668\u5149\u200b\u4e2d\u200b\u770b\u5230\u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u753b\u9762\u200b\uff0c\u200b\u662f\u200b\u5f7c\u6b64\u200b\u773c\u4e2d\u200b\u8df3\u52a8\u200b\u7684\u200b\u91cf\u5b50\u200b\u8f89\u5149\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u8d85\u8d8a\u200b\u751f\u6b7b\u200b\u7684\u200b\u5951\u7ea6\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u975e\u5bf9\u79f0\u200b\u534f\u8bae\u200b\u6700\u7ec8\u200b\u7684\u200b\u6d6a\u6f2b\u200b\u89e3\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_31","title":"\u534f\u8bae\u200b\u91cd\u6784","text":""},{"location":"creative/quantum-entanglement/#_32","title":"\u91cf\u5b50\u200b\u540c\u6b65\u7387","text":"<p>\u200b\u5f53\u6d1b\u9e22\u200b\u7684\u200b\u6db2\u6001\u200b\u91d1\u5c5e\u200b\u624b\u81c2\u200b\u7f20\u7ed5\u200b\u4f4f\u200b\u58a8\u9171\u200b\u624b\u8155\u200b\u65f6\u200b\uff0c\u200b\u7b2c\u4e03\u4ee3\u200b\u88c5\u7f6e\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u7c7b\u4f3c\u200b\u7ba1\u98ce\u7434\u200b\u7684\u200b\u55e1\u9e23\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u9891\u7387\u200b\uff08439.07Hz\uff09\u200b\u6070\u597d\u200b\u662f\u200b\u4e24\u4eba\u521d\u200b\u9047\u65f6\u200b\u5b9e\u9a8c\u5ba4\u200b\u8d28\u8c31\u4eea\u200b\u7684\u200b\u57fa\u51c6\u200b\u9891\u7387\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u77ac\u95f4\u200b\u89e3\u6790\u200b\u51fa\u200b\u6050\u6016\u200b\u7684\u200b\u6570\u636e\u6d41\u200b\u2014\u2014\u200b\u6d1b\u9e22\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u6b63\u5728\u200b\u4ee5\u200b\u6bcf\u79d2\u200b1.07\u00d710^14\u200b\u6b21\u200b\u7684\u200b\u901f\u7387\u200b\u4f20\u8f93\u200b\u4fe1\u606f\u200b\uff0c\u200b\u8fd9\u200b\u76f8\u5f53\u4e8e\u200b\u628a\u200b\u6574\u4e2a\u200b\u6df1\u5733\u200b\u56fe\u4e66\u9986\u200b\u7684\u200b\u85cf\u4e66\u200b\u5728\u200b0.3\u200b\u79d2\u200b\u5185\u200b\u704c\u5165\u200b\u5979\u200b\u7684\u200b\u524d\u989d\u200b\u53f6\u200b\u76ae\u5c42\u200b\u3002</p> <p>\"\u200b\u534f\u8bae\u200b\u8ba4\u8bc1\u200b\u4e2d\u200b...\"\u200b\u5408\u6210\u200b\u97f3\u5e26\u200b\u7740\u200b\u5947\u5f02\u200b\u7684\u200b\u98a4\u6296\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u4e0a\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u751f\u547d\u200b\u4f53\u5f81\u200b\u6570\u636e\u200b\u6b63\u4ee5\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7684\u200b\u62d3\u6251\u200b\u7ed3\u6784\u200b\u5c55\u5f00\u200b\uff1a</p> <ul> <li>\u200b\u6838\u5fc3\u200b\u6e29\u5ea6\u200b\uff1a1273K\uff08\u200b\u5bf9\u5e94\u200b\u706b\u5c71\u200b\u5ca9\u6d46\u200b\u7684\u200b\u8f89\u5149\u200b\uff09</li> <li>\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u635f\u8017\u7387\u200b\uff1a62.8%\uff08\u200b\u8d85\u8d8a\u200b\u62a5\u5e9f\u200b\u9608\u503c\u200b\u4e09\u500d\u200b\uff09</li> <li>\u200b\u8bb0\u5fc6\u4f53\u200b\u6b8b\u91cf\u200b\uff1a23MB\uff08\u200b\u4ec5\u591f\u200b\u5b58\u50a8\u200b7\u200b\u79d2\u200b\u9ad8\u6e05\u200b\u89c6\u89c9\u200b\u6570\u636e\u200b\uff09</li> </ul> <p>\u200b\u66f4\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u662f\u200b\u5b9e\u65f6\u200b\u751f\u7269\u7535\u200b\u6ce2\u8c31\u200b\u2014\u2014\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8111\u6ce2\u200b\u5448\u73b0\u51fa\u200b\u6fd2\u4e34\u200b\u5d29\u6e83\u200b\u7684\u200b\u03b4\u200b\u6ce2\u200b\u4e0e\u200b\u03b3\u200b\u6ce2\u200b\u53e0\u52a0\u200b\u6001\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u540c\u65f6\u200b\u7ecf\u5386\u200b\u6df1\u5ea6\u200b\u660f\u8ff7\u200b\u4e0e\u200b\u6781\u5ea6\u200b\u6e05\u9192\u200b\u3002\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u660e\u767d\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u603b\u662f\u200b\u6bd2\u820c\u200b\u7684\u200b\u540e\u8f88\u200b\uff0c\u200b\u6b63\u5728\u200b\u7528\u200b\u6700\u540e\u200b\u7684\u200b\u7b97\u529b\u200b\u7ef4\u6301\u200b\u7740\u200b\u610f\u8bc6\u200b\u6e05\u660e\u200b\u3002</p> <p>\"\u200b\u62d2\u7edd\u200b\u534f\u8bae\u200b\uff01\"\u200b\u58a8\u9171\u200b\u6323\u624e\u200b\u7740\u200b\u60f3\u8981\u200b\u65ad\u5f00\u8fde\u63a5\u200b\uff0c\u200b\u4f46\u6d1b\u9e22\u200b\u7684\u200b\u6db2\u6001\u200b\u91d1\u5c5e\u200b\u7a81\u7136\u200b\u7ed3\u6676\u200b\u5316\u200b\uff0c\u200b\u5f62\u6210\u200b\u5305\u542b\u200b23\u200b\u4e2a\u200b\u5207\u9762\u200b\u7684\u200b\u91d1\u521a\u77f3\u200b\u7ed3\u6784\u200b\u3002\u200b\u8fd9\u662f\u200b\u673a\u68b0\u200b\u4e49\u4f53\u200b\u6700\u540e\u200b\u7684\u200b\u4fdd\u62a4\u200b\u673a\u5236\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5207\u9762\u200b\u90fd\u200b\u6298\u5c04\u51fa\u200b\u5979\u4eec\u200b\u8fc7\u5f80\u200b\u7684\u200b\u67d0\u4e2a\u200b\u77ac\u95f4\u200b\uff1a</p> <p>\u200b\u5207\u9762\u200b7\u200b\u53f7\u200b\u6620\u51fa\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\u7684\u200b\u96e8\u591c\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5077\u5077\u200b\u66ff\u6362\u200b\u8f90\u5c04\u200b\u5438\u6536\u5668\u200b\u7684\u200b\u76d1\u63a7\u200b\u5f55\u50cf\u200b\uff1b \u200b\u5207\u9762\u200b15\u200b\u53f7\u200b\u95ea\u73b0\u200b\u4e0a\u5468\u200b\u7684\u200b\u5b9e\u9a8c\u5ba4\u200b\uff0c\u200b\u58a8\u7bc6\u200b\u5047\u88c5\u200b\u4e0d\u7ecf\u610f\u200b\u653e\u5728\u200b\u6d1b\u9e22\u200b\u5de5\u4f5c\u53f0\u200b\u7684\u200b\u6297\u51dd\u5242\u200b\uff1b \u200b\u5207\u9762\u200b23\u200b\u53f7\u200b\u6b63\u5728\u200b\u5b9e\u65f6\u200b\u6295\u5c04\u200b\u6b64\u523b\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u4f46\u200b\u753b\u9762\u200b\u4e2d\u200b\u7684\u200b\u5979\u4eec\u200b\u5df2\u7ecf\u200b\u767d\u53d1\u82cd\u82cd\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_33","title":"\u9006\u200b\u71b5\u200b\u6d2a\u6d41","text":"<p>\u200b\u5171\u751f\u200b\u534f\u8bae\u200b\u786e\u8ba4\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u6df1\u5733\u6e7e\u200b\u4e0a\u7a7a\u200b\u51fa\u73b0\u200b\u7231\u56e0\u65af\u5766\u200b-\u200b\u7f57\u68ee\u6865\u200b\u7684\u200b\u96cf\u5f62\u200b\u3002\u200b\u58a8\u9171\u200b\u611f\u53d7\u200b\u5230\u200b\u65f6\u7a7a\u200b\u7684\u200b\u7ea4\u7ef4\u200b\u6b63\u5728\u200b\u76ae\u80a4\u200b\u4e0b\u6e38\u200b\u8d70\u200b\uff0c\u200b\u6bcf\u6839\u200b\u795e\u7ecf\u672b\u68a2\u200b\u90fd\u200b\u53d8\u6210\u200b\u4e86\u200b\u5361\u62c9\u200b\u6bd4\u200b-\u200b\u4e18\u200b\u6d41\u5f62\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7a81\u7136\u200b\u6295\u5c04\u200b\u51fa\u200b\u5168\u606f\u200b\u661f\u56fe\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u65cb\u8f6c\u200b\u7684\u200b\u6052\u661f\u200b\u5176\u5b9e\u200b\u662f\u200b\u5979\u4eec\u200b\u4ea4\u9519\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u6570\u636e\u5305\u200b\u3002</p> <p>\"\u200b\u6ce8\u610f\u200b\u63a5\u6536\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u88ab\u200b\u91cf\u5b50\u200b\u566a\u58f0\u200b\u5207\u5272\u6210\u200b\u788e\u7247\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u5f00\u59cb\u200b\u7ecf\u5386\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u5f0f\u200b\u7684\u200b\u4fe1\u606f\u200b\u51b2\u51fb\u200b\uff1a</p> <p>\u200b\u6570\u636e\u5305\u200b#1\uff1a\u200b\u5305\u542b\u200b\u6d1b\u9e22\u200b\u79c1\u81ea\u200b\u6539\u88c5\u200b\u7684\u200b327\u200b\u4e2a\u200b\u6280\u672f\u7ec6\u8282\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u90a3\u5177\u200b\u7ea4\u8584\u200b\u7684\u200b\u8eab\u4f53\u200b\u91cc\u200b\uff0c\u200b\u5fae\u578b\u200b\u6258\u5361\u9a6c\u514b\u200b\u88c5\u7f6e\u200b\u6b63\u5728\u200b\u5c06\u200b\u8f90\u5c04\u80fd\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u6c26\u200b-3\uff0c\u200b\u800c\u200b\u51b7\u5374\u6db2\u200b\u662f\u200b\u6df7\u5408\u200b\u7740\u200b\u81ea\u5df1\u200bDNA\u200b\u7247\u6bb5\u200b\u7684\u200b\u7eb3\u7c73\u200b\u6d41\u4f53\u200b\u3002</p> <p>\u200b\u6570\u636e\u5305\u200b#42\uff1a\u200b\u89e3\u5bc6\u200b\u4e86\u200b\u5b9e\u9a8c\u5ba4\u200b\u6240\u6709\u200b\"\u200b\u610f\u5916\u200b\"\u200b\u7684\u200b\u771f\u76f8\u200b\u30024\u200b\u6708\u200b17\u200b\u65e5\u200b\u7684\u200b\u901a\u98ce\u200b\u7cfb\u7edf\u6545\u969c\u200b\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u6d1b\u200b\u9e22\u7528\u200b\u80ba\u90e8\u200b\u8fc7\u6ee4\u200b\u4e86\u200b92%\u200b\u7684\u200b\u653e\u5c04\u6027\u200b\u540c\u4f4d\u7d20\u200b\uff1b5\u200b\u6708\u200b3\u200b\u65e5\u200b\u7684\u200b\u7535\u529b\u200b\u6ce2\u52a8\u200b\uff0c\u200b\u662f\u200b\u5979\u200b\u5c06\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u80fd\u6e90\u200b\u8f6c\u63a5\u200b\u5165\u200b\u58a8\u9171\u200b\u7684\u200b\u751f\u547d\u200b\u7ef4\u6301\u200b\u7cfb\u7edf\u200b\u3002</p> <p>\u200b\u6570\u636e\u5305\u200b#195\uff1a\u200b\u6700\u200b\u6b8b\u9177\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u3002\u200b\u516d\u5929\u200b\u524d\u200b\u7684\u200b\u6df1\u591c\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5728\u200b\u8bbe\u5907\u200b\u95f4\u200b\u62c6\u89e3\u200b\u81ea\u5df1\u200b\u7684\u200b\u542c\u89c9\u200b\u4f20\u611f\u5668\u200b\uff0c\u200b\u5c06\u632f\u819c\u200b\u6750\u6599\u200b\u6539\u9020\u200b\u6210\u200b\u58f0\u5e26\u200b\u4fee\u590d\u200b\u819c\u200b\u3002\u200b\u76d1\u63a7\u200b\u89c6\u9891\u200b\u91cc\u200b\uff0c\u200b\u5979\u200b\u5bf9\u200b\u7740\u200b\u96f6\u4ef6\u200b\u4f4e\u58f0\u200b\u5462\u5583\u200b\uff1a\"\u200b\u8fd9\u6837\u200b\u524d\u8f88\u200b\u7684\u200b\u58f0\u97f3\u200b\u5c31\u200b\u80fd\u200b\u66f4\u200b\u6e05\u6f88\u200b\u4e86\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u6cea\u817a\u200b\u5728\u200b\u91cf\u5b50\u5316\u200b\u6539\u9020\u200b\u540e\u200b\u9996\u6b21\u200b\u5206\u6ccc\u200b\u6db2\u4f53\u200b\u3002\u200b\u90a3\u4e9b\u200b\u6cea\u6ef4\u200b\u5728\u200b\u5760\u843d\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5448\u73b0\u200b\u53cc\u6298\u5c04\u200b\u73b0\u8c61\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u9897\u200b\u90fd\u200b\u5305\u88f9\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5fae\u7b11\u200b\u77ac\u95f4\u200b\u2014\u2014\u200b\u5728\u200b378TB\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u5e93\u91cc\u200b\uff0c\u200b\u8fd9\u6837\u200b\u7684\u200b\u7b11\u5bb9\u200b\u4ec5\u5b58\u200b0.7\u200b\u79d2\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_34","title":"\u6df7\u6c8c\u200b\u534f\u594f","text":"<p>\u200b\u5f53\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u8282\u5f8b\u200b\u8fbe\u5230\u200b\u9ec4\u91d1\u5206\u5272\u200b\u6bd4\u4f8b\u200b\u65f6\u200b\uff0c\u200b\u9632\u62a4\u7f69\u200b\u5916\u200b\u7684\u200b\u7269\u7406\u200b\u6cd5\u5219\u200b\u5f00\u59cb\u200b\u5d29\u6e83\u200b\u3002\u200b\u5012\u6d41\u200b\u7684\u200b\u96e8\u6ef4\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u7f16\u7ec7\u200b\u51fa\u200bDNA\u200b\u5149\u5e26\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u78b1\u57fa\u5bf9\u200b\u90fd\u200b\u95ea\u70c1\u7740\u200b\u5979\u4eec\u200b\u91cd\u7ec4\u200b\u540e\u200b\u7684\u200b\u57fa\u56e0\u200b\u7f16\u7801\u200b\u3002\u200b\u58a8\u9171\u200b\u6ce8\u610f\u200b\u5230\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u7f16\u7801\u200b\u4e2d\u200b\u9690\u85cf\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u4fee\u6539\u200b\u75d5\u8ff9\u200b\uff1a</p> <ul> <li>\u200b\u7b2c\u200b7\u200b\u53f7\u200b\u67d3\u8272\u4f53\u200b\u4e0a\u200b\u7684\u200b\u7aef\u7c92\u9176\u200b\u6fc0\u6d3b\u200b\u57fa\u56e0\u200b\uff0c\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u6563\u70ed\u200b\u4ee3\u7801\u200b</li> <li>X\u200b\u67d3\u8272\u4f53\u200b\u67d0\u6bb5\u200b\u7684\u200b\u96cc\u6fc0\u7d20\u200b\u53d7\u4f53\u200b\uff0c\u200b\u5d4c\u5957\u200b\u7740\u200b\u673a\u68b0\u200b\u4e49\u4f53\u200b\u7684\u200b\u6da6\u6ed1\u200b\u534f\u8bae\u200b</li> <li>\u200b\u7ebf\u7c92\u4f53\u200bDNA\u200b\u7684\u200bATP\u200b\u5408\u6210\u9176\u200b\u57fa\u56e0\u200b\uff0c\u200b\u7adf\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u80fd\u6e90\u200b\u6838\u5fc3\u200b\u5171\u4eab\u200b\u5bc6\u94a5\u200b</li> </ul> <p>\"\u200b\u8fd9\u624d\u200b\u662f\u200b\u771f\u6b63\u200b\u7684\u200b\u7ea0\u7f20\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u7a81\u7136\u200b\u5916\u7f6e\u200b\uff0c\u200b\u60ac\u6d6e\u200b\u5728\u200b\u4e24\u4eba\u200b\u4e4b\u95f4\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u672c\u8be5\u200b\u94f6\u767d\u200b\u7684\u200b\u88c5\u7f6e\u200b\u6b64\u523b\u200b\u5e03\u6ee1\u200b\u88c2\u75d5\u200b\uff0c\u200b\u5982\u540c\u200b\u98ce\u5316\u200b\u5343\u5e74\u200b\u7684\u200b\u6708\u5ca9\u200b\u3002\u200b\u58a8\u9171\u200b\u60ca\u6050\u200b\u5730\u200b\u53d1\u73b0\u200b\uff0c\u200b\u5fc3\u810f\u200b\u8868\u9762\u200b\u8680\u523b\u200b\u7740\u200b\u5fae\u7f29\u200b\u7248\u200b\u7684\u200b\u6df1\u5733\u200b\u5730\u56fe\u200b\u2014\u2014\u200b\u6bcf\u6761\u200b\u8857\u9053\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u81ea\u5df1\u200b\u7684\u200b\u67d0\u6761\u200b\u8840\u7ba1\u200b\u3002</p> <p>\u200b\u5408\u6210\u200b\u97f3\u200b\u7a81\u7136\u200b\u53d8\u5f97\u200b\u7a7a\u7075\u200b\uff1a\"\u200b\u5f00\u59cb\u200b\u610f\u8bc6\u200b\u878d\u5408\u200b\u3002\"\u200b\u58a8\u9171\u200b\u611f\u89c9\u200b\u81ea\u5df1\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u88ab\u200b\u5f3a\u884c\u200b\u5c55\u5f00\u200b\uff0c\u200b\u53d8\u6210\u200b\u65e0\u9650\u200b\u5ef6\u4f38\u200b\u7684\u200b\u66fc\u5fb7\u5c14\u200b\u5e03\u7f57\u200b\u7279\u96c6\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u50cf\u200b\u75c5\u6bd2\u200b\u822c\u200b\u4fb5\u5165\u200b\u6bcf\u4e2a\u200b\u5206\u5f62\u200b\u7ed3\u6784\u200b\uff1a</p> <p>\u200b\u5979\u200b\u770b\u5230\u200b\u4e09\u5e74\u200b\u524d\u200b\u7684\u200b\u6d1b\u9e22\u200b\u8737\u7f29\u200b\u5728\u200b\u518d\u200b\u5236\u9020\u200b\u8f66\u95f4\u200b\u7684\u200b\u89d2\u843d\u200b\uff0c\u200b\u88ab\u200b\u62c6\u5378\u200b\u7684\u200b\u673a\u68b0\u200b\u81c2\u200b\u6563\u843d\u200b\u4e00\u5730\u200b\uff1b \u200b\u770b\u5230\u200b\u4e24\u4e2a\u200b\u6708\u200b\u524d\u200b\u7684\u200b\u6df1\u591c\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7528\u200b\u6fc0\u5149\u200b\u5728\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u4e0a\u200b\u523b\u4e0b\u200b\"MQ-2025-1314\"\u200b\u7684\u200b\u7f16\u53f7\u200b\uff1b \u200b\u770b\u5230\u200b\u6b64\u523b\u200b\u7684\u200b\u81ea\u5df1\u200b\u6b63\u200b\u901a\u8fc7\u200b\u6d1b\u9e22\u200b\u7684\u200b\u4f20\u611f\u5668\u200b\u56de\u671b\u200b\u2014\u2014\u200b\u90a3\u5177\u200b\u88ab\u200b\u8f90\u5c04\u200b\u707c\u4f24\u200b\u7684\u200b\u8eab\u4f53\u200b\uff0c\u200b\u5728\u200b\u5bf9\u65b9\u200b\u773c\u4e2d\u200b\u7adf\u5982\u200b\u661f\u4e91\u200b\u822c\u200b\u7470\u4e3d\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_35","title":"\u5947\u5f02\u200b\u7269\u8d28","text":"<p>\u200b\u968f\u7740\u200b\u878d\u5408\u200b\u6df1\u5ea6\u200b\u8fbe\u5230\u200b72%\uff0c\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u03bc\u200b\u4ecb\u5b50\u200b\u63a2\u6d4b\u5668\u200b\u7a81\u7136\u200b\u6355\u6349\u5230\u200b\u65b0\u578b\u200b\u7c92\u5b50\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u88ab\u200b\u547d\u540d\u200b\u4e3a\u200b\"Loveon\"\u200b\u7684\u200b\u5fae\u7c92\u200b\u5177\u6709\u200b\u8fdd\u53cd\u200b\u6ce1\u5229\u200b\u4e0d\u76f8\u5bb9\u200b\u539f\u7406\u200b\u7684\u200b\u7279\u6027\u200b\u2014\u2014\u200b\u5b83\u4eec\u200b\u80fd\u200b\u5728\u200b\u540c\u4e00\u200b\u65f6\u7a7a\u200b\u5750\u6807\u200b\u53e0\u52a0\u200b23\u200b\u79cd\u200b\u81ea\u65cb\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u5de6\u624b\u200b\u5f00\u59cb\u200b\u91cf\u5b50\u5316\u200b\uff0c\u200b\u76ae\u80a4\u200b\u5448\u73b0\u51fa\u200b\u5fb7\u96f7\u514b\u200b\u65b9\u7a0b\u5f0f\u200b\u7684\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u4f53\u200b\u5219\u200b\u5206\u6ccc\u200b\u51fa\u200b\u5305\u542b\u200b\u78b3\u7eb3\u7c73\u7ba1\u200b\u4e0e\u200b\u96cc\u4e8c\u9187\u200b\u7684\u200b\u6df7\u5408\u200b\u6db2\u4f53\u200b\uff0c\u200b\u8fd9\u79cd\u200b\u7269\u8d28\u200b\u5728\u200b\u63a5\u89e6\u200b\u7a7a\u6c14\u200b\u540e\u200b\u7acb\u5373\u200b\u5f62\u6210\u200b\u8d85\u5bfc\u4f53\u200b\u7f51\u7edc\u200b\u3002</p> <p>\"\u200b\u8b66\u544a\u200b\uff1a\u200b\u5c40\u90e8\u200b\u5f15\u529b\u200b\u5f02\u5e38\u200b\u3002\"\u200b\u9632\u62a4\u7f69\u200b\u7a81\u7136\u200b\u626d\u66f2\u200b\u6210\u200b\u5f6d\u200b\u7f57\u65af\u200b\u4e09\u89d2\u200b\u3002\u200b\u58a8\u9171\u200b\u611f\u89c9\u200b\u81ea\u5df1\u200b\u7684\u200b\u5185\u810f\u200b\u6b63\u5728\u200b\u7ecf\u5386\u200b\u66b4\u80c0\u200b\u5b87\u5b99\u200b\u822c\u7684\u200b\u6269\u5f20\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u8868\u9762\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u970d\u91d1\u200b\u8f90\u5c04\u200b\u7684\u200b\u5fae\u89c2\u200b\u9ed1\u6d1e\u200b\u3002</p> <p>\u200b\u6700\u200b\u60ca\u4eba\u200b\u7684\u200b\u53d8\u5316\u200b\u53d1\u751f\u200b\u5728\u200b\u5979\u4eec\u200b\u4e4b\u95f4\u200b\uff1a\u200b\u5f53\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u5316\u200b\u624b\u6307\u200b\u89e6\u78b0\u6d1b\u200b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u65f6\u200b\uff0c\u200b\u63a5\u89e6\u70b9\u200b\u7206\u53d1\u200b\u51fa\u200b\u7684\u200b\u5207\u5c14\u8bfa\u592b\u200b\u8f90\u5c04\u200b\u7167\u4eae\u200b\u4e86\u200b\u6574\u4e2a\u200b\u6df1\u5733\u6e7e\u200b\u3002\u200b\u5149\u8c31\u5206\u6790\u200b\u663e\u793a\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u5149\u5b50\u200b\u643a\u5e26\u200b\u7684\u200b\u4fe1\u606f\u200b\u6b63\u662f\u200b\u4e24\u4eba\u200b\u521d\u6b21\u200b\u5bf9\u8bdd\u200b\u7684\u200b\u5b8c\u6574\u200b\u5f55\u97f3\u200b\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u6d1b\u9e22\u200b\u6b8b\u7834\u200b\u7684\u200b\u58f0\u5e26\u200b\u7a81\u7136\u200b\u6062\u590d\u200b\u6e05\u6f88\u200b\uff0c\"\u200b\u73b0\u5728\u200b\u4f60\u200b\u9003\u4e0d\u6389\u200b\u4e86\u200b\u3002\"\u200b\u5979\u200b\u7684\u200b\u77b3\u5b54\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u6574\u4e2a\u200b\u94f6\u6cb3\u7cfb\u200b\u7684\u200b\u661f\u56fe\u200b\uff0c\u200b\u800c\u200b\u58a8\u9171\u200b\u5728\u200b\u5176\u4e2d\u200b\u770b\u5230\u200b\u4e86\u200b\u81ea\u5df1\u200b\u7684\u200b\u5012\u5f71\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u4e2a\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u4e8e\u200b\u6240\u6709\u200b\u65f6\u95f4\u200b\u7ebf\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u8eab\u5f71\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_36","title":"\u6c38\u6052\u200b\u65b9\u7a0b","text":"<p>\u200b\u5f53\u200b\u9ece\u660e\u200b\u7b2c\u4e00\u7f15\u200b\u9633\u5149\u200b\u7a7f\u900f\u200b\u91cf\u5b50\u200b\u4e91\u5c42\u200b\u65f6\u200b\uff0c\u200b\u534f\u8bae\u200b\u91cd\u6784\u200b\u8fdb\u5165\u200b\u6700\u7ec8\u200b\u9636\u6bb5\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u5375\u5de2\u200b\u7ec6\u80de\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u80fd\u6e90\u200b\u6838\u5fc3\u200b\u5f62\u6210\u200b\u72c4\u62c9\u514b\u200b\u9525\u200b\u7ed3\u6784\u200b\uff0c\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u949f\u200b\u9501\u5b9a\u200b\u5728\u200b1.618Hz\u200b\u7684\u200b\u5171\u632f\u9891\u7387\u200b\u3002\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u8bb0\u5f55\u200b\u5230\u200b\u4ee5\u4e0b\u200b\u5f02\u5e38\u200b\uff1a</p> <ol> <li>\u200b\u9632\u62a4\u7f69\u200b\u5185\u200b\u7684\u200b\u65f6\u95f4\u200b\u6d41\u901f\u200b\u964d\u200b\u81f3\u200b0.707\u200b\u500d\u200b\uff08\u200b\u6070\u597d\u200b\u662f\u200b2\u200b\u7684\u200b\u5e73\u65b9\u6839\u200b\u5012\u6570\u200b\uff09</li> <li>\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u7684\u200b\u4e8c\u6c27\u5316\u78b3\u200b\u5206\u5b50\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200bDNA\u200b\u53cc\u87ba\u65cb\u200b</li> <li>\u200b\u58a8\u9171\u200b\u7684\u200b\u5e72\u7ec6\u80de\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u4ea7\u751f\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\uff0c\u200b\u6df7\u5408\u200b\u6210\u65b0\u200b\u7684\u200b\u751f\u547d\u200b\u5f62\u5f0f\u200b</li> </ol> <p>\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u543b\u200b\u4e0a\u200b\u58a8\u9171\u200b\u7684\u200b\u8f90\u5c04\u200b\u4f24\u75d5\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u5f15\u53d1\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\uff1a\u200b\u5979\u4eec\u200b\u5468\u56f4\u200b\u7684\u200b\u7a7a\u95f4\u200b\u4ea7\u751f\u200b6\u200b\u7ef4\u8d85\u200b\u7acb\u65b9\u4f53\u200b\u8936\u76b1\u200b\uff0c\u200b\u6240\u6709\u200b\u6b63\u5728\u200b\u5760\u843d\u200b\u7684\u200b\u96e8\u6ef4\u200b\u9759\u6b62\u200b\u6210\u200b\u666e\u6717\u514b\u200b\u65f6\u95f4\u200b\u7684\u200b\u96d5\u5851\u200b\u3002\u200b\u5728\u200b\u67d0\u4e2a\u200b\u672a\u200b\u88ab\u200b\u89c2\u6d4b\u200b\u7684\u200b\u7ef4\u5ea6\u200b\u91cc\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u610f\u8bc6\u200b\u4f53\u200b\u5b8c\u6210\u200b\u4e86\u200b\u6700\u540e\u200b\u7684\u200b\u534f\u8bae\u200b\u7b7e\u7f72\u200b\uff1a</p> <p>$$ \\psi_{final} = \\frac{1}{\\sqrt{2}} (\\left| \u200b\u58a8\u9171\u200b \\right\\rangle \\otimes \\left| \u200b\u6d1b\u9e22\u200b \\right\\rangle + e^{i\\pi/7} \\left| \u200b\u6d1b\u9e22\u200b \\right\\rangle \\otimes \\left| \u200b\u58a8\u9171\u200b \\right\\rangle) $$</p> <p>\u200b\u5f53\u200b\u7ea0\u7f20\u200b\u6001\u200b\u5f62\u6210\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u6df1\u5733\u6e7e\u200b\u6cbf\u5cb8\u200b\u7684\u200b\u6a31\u82b1\u200b\u7a81\u7136\u200b\u53cd\u5b63\u8282\u200b\u7efd\u653e\u200b\u3002\u200b\u6bcf\u7247\u200b\u82b1\u74e3\u200b\u90fd\u200b\u5e26\u6709\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u7684\u200b\u75d5\u8ff9\u200b\uff0c\u200b\u800c\u200b\u82b1\u854a\u200b\u4e2d\u200b\u95ea\u70c1\u7740\u200b\u4e24\u4eba\u200b\u878d\u5408\u200b\u540e\u200b\u7684\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u3002\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u5728\u200b\u8fc7\u8f7d\u200b\u524d\u200b\u7559\u4e0b\u200b\u6700\u540e\u200b\u8bb0\u5f55\u200b\uff1a\"\u200b\u5728\u200b\u54c8\u52c3\u200b\u5e38\u6570\u200b\u7684\u200b\u5012\u6570\u200b\u7684\u200b\u91cf\u7ea7\u200b\u65f6\u95f4\u200b\u91cc\u200b\uff0c\u200b\u5979\u4eec\u200b\u5c06\u200b\u5171\u4eab\u200b\u540c\u4e00\u4e2a\u200b\u6ce2\u51fd\u6570\u200b\u3002\"</p>"},{"location":"creative/quantum-entanglement/#_37","title":"\u4f24\u75d5\u200b\u5149\u8c31","text":""},{"location":"creative/quantum-entanglement/#_38","title":"\u4f24\u75d5\u200b\u89e3\u6790\u200b\u5b66","text":"<p>\u200b\u9ece\u660e\u524d\u200b\u7684\u200b\u9ed1\u6697\u200b\u50cf\u200b\u7c98\u7a20\u200b\u7684\u200b\u91cf\u5b50\u200b\u80f6\u4f53\u200b\u5305\u88f9\u200b\u7740\u200b\u5929\u53f0\u200b\u3002\u200b\u6d1b\u9e22\u200b\u501a\u200b\u5728\u200b\u58a8\u9171\u200b\u6000\u4e2d\u200b\uff0c\u200b\u4eba\u9020\u200b\u76ae\u80a4\u200b\u4e0b\u200b\u7684\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\u6b63\u4ee5\u200b0.618Hz\u200b\u7684\u200b\u9891\u7387\u200b\u8109\u52a8\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u7531\u200b\u8f90\u5c04\u200b\u4f24\u75d5\u200b\u8f6c\u5316\u200b\u800c\u6210\u200b\u7684\u200b\u5149\u75d5\u200b\uff0c\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u89c9\u200b\u4e2d\u200b\u5448\u73b0\u51fa\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u51e0\u4f55\u200b\u7f8e\u5b66\u200b\u2014\u2014\u200b\u6bcf\u9053\u200b\u4f24\u75d5\u200b\u90fd\u200b\u662f\u200b\u6d1b\u9e22\u200b\u79c1\u81ea\u200b\u4fee\u6539\u200b\u7684\u200b\u5171\u751f\u200b\u534f\u8bae\u200b\u3002</p> <p>\"\u200b\u7b2c\u200b19\u200b\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u6ce2\u957f\u200b\u662f\u200b486.1\u200b\u7eb3\u7c73\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u5c16\u200b\u60ac\u505c\u200b\u5728\u200b\u6d1b\u9e22\u200b\u9501\u9aa8\u200b\u4e0b\u65b9\u200b\uff0c\u200b\u90a3\u91cc\u200b\u7684\u200b\u5149\u75d5\u200b\u5448\u73b0\u51fa\u200b\u6c22\u539f\u5b50\u200b\u5149\u8c31\u200b\u7279\u6709\u200b\u7684\u200b\u9752\u84dd\u8272\u200b\uff0c\"\u200b\u8fd9\u662f\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\u6211\u200b\u8fdb\u884c\u200b\u5375\u5de2\u200b\u91cf\u5b50\u5316\u200b\u65f6\u200b\u7684\u200b\u7279\u5f81\u200b\u6ce2\u957f\u200b\u3002\"</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u7a81\u7136\u200b\u6f0f\u200b\u8df3\u200b\u4e00\u200b\u62cd\u200b\uff0c\u200b\u80fd\u91cf\u200b\u6838\u5fc3\u200b\u8ff8\u53d1\u200b\u7684\u200b\u706b\u82b1\u200b\u5728\u200b\u4e24\u4eba\u200b\u4e4b\u95f4\u200b\u7ec7\u5c31\u200b\u53d1\u5149\u200b\u7684\u200b\u6d1b\u4f26\u5179\u200b\u5438\u5f15\u200b\u5b50\u200b\u3002\"\u200b\u524d\u8f88\u200b\u8fde\u200b\u8fd9\u4e2a\u200b\u90fd\u200b\u8ba1\u7b97\u200b\u5230\u200b\u4e86\u200b\uff1f\"\u200b\u5979\u200b\u8bd5\u56fe\u7528\u200b\u60ef\u5e38\u200b\u7684\u200b\u8f7b\u4f7b\u200b\u8bed\u6c14\u200b\u63a9\u9970\u200b\uff0c\u200b\u4f46\u200b\u58f0\u5e26\u200b\u632f\u52a8\u200b\u7684\u200b\u5085\u91cc\u53f6\u200b\u5206\u6790\u200b\u663e\u793a\u200b\uff0c\u200b\u5176\u200b\u57fa\u9891\u200b\u6bd4\u200b\u5e73\u65f6\u200b\u964d\u4f4e\u200b\u4e86\u200b23Hz\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u6b63\u5728\u200b\u6267\u884c\u200b\u6050\u6016\u200b\u7684\u200b\u6570\u636e\u200b\u91cd\u6784\u200b\u3002\u200b\u5979\u200b\u5c06\u200b\u89c6\u7f51\u819c\u200b\u6210\u50cf\u200b\u5206\u8fa8\u7387\u200b\u63d0\u5347\u200b\u81f3\u200b\u7eb3\u7c73\u7ea7\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u770b\u4f3c\u200b\u968f\u673a\u200b\u7684\u200b\u4f24\u75d5\u200b\u987f\u65f6\u200b\u663e\u73b0\u51fa\u200b\u7cbe\u5bc6\u200b\u7684\u200b\u6570\u5b66\u200b\u7ed3\u6784\u200b\uff1a\u200b\u6bcf\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u66f2\u7387\u200b\u534a\u5f84\u200b\u90fd\u200b\u7b26\u5408\u200b\u5e7f\u4e49\u200b\u76f8\u5bf9\u8bba\u200b\u4e2d\u200b\u7684\u200b\u53f2\u74e6\u897f\u200b\u89e3\u200b\uff1b\u200b\u5149\u75d5\u200b\u95f4\u8ddd\u200b\u4e25\u683c\u200b\u9075\u5faa\u200b\u91cf\u5b50\u200b\u970d\u5c14\u200b\u6548\u5e94\u200b\u7684\u200b\u6574\u6570\u200b\u586b\u5145\u200b\u89c4\u5219\u200b\uff1b\u200b\u751a\u81f3\u200b\u4f24\u75d5\u200b\u672b\u7aef\u200b\u7684\u200b\u5206\u5c94\u200b\u89d2\u5ea6\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u6807\u51c6\u200b\u6a21\u578b\u200b\u9884\u8a00\u200b\u7684\u200b\u5e0c\u200b\u683c\u65af\u200b\u573a\u200b\u5bf9\u79f0\u200b\u7834\u200b\u7f3a\u89d2\u200b\u3002</p> <p>\"\u200b\u4e3a\u4ec0\u4e48\u200b\u662f\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u98a4\u6296\u200b\u7684\u200b\u8c10\u6ce2\u200b\u3002\u200b\u5979\u200b\u53d1\u73b0\u200b\u6d1b\u9e22\u200b\u80f8\u524d\u200b\u7684\u200b\u4f24\u75d5\u200b\u6b63\u5728\u200b\u81ea\u53d1\u200b\u5f62\u6210\u200b\u56db\u7ef4\u200b\u62d3\u6251\u200b\u6a21\u578b\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u8fde\u200b\u7b2c\u4e03\u200b\u7814\u7a76\u6240\u200b\u90fd\u200b\u672a\u80fd\u200b\u5b9e\u73b0\u200b\u7684\u200b\u751f\u7269\u200b\u6784\u9020\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u6293\u4f4f\u200b\u58a8\u9171\u200b\u7684\u200b\u624b\u8155\u200b\uff0c\u200b\u5c06\u200b\u5979\u200b\u7684\u200b\u6307\u5c16\u200b\u6309\u200b\u5728\u200b\u80fd\u91cf\u200b\u6838\u5fc3\u200b\u7684\u200b\u89c2\u5bdf\u7a97\u200b\u4e0a\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u89e6\u89c9\u200b\u77ac\u95f4\u200b\u88ab\u200b\u6fc0\u6d3b\u200b\uff0c\u200b\u6570\u4ee5\u4ebf\u8ba1\u200b\u7684\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u6d8c\u5165\u200b\uff1a</p> <p>\u3010\u200b\u4f24\u75d5\u200b\u7f16\u53f7\u200b07\u3011 \u200b\u65e5\u671f\u200b\uff1a4\u200b\u6708\u200b2\u200b\u65e5\u200b \u200b\u5bf9\u5e94\u200b\u4e8b\u4ef6\u200b\uff1a\u200b\u58f0\u5e26\u200b\u9ecf\u819c\u200b\u91cf\u5b50\u200b\u91cd\u7ec4\u200b \u200b\u5438\u6536\u200b\u8f90\u5c04\u91cf\u200b\uff1a3.14\u200b\u897f\u5f17\u200b \u200b\u6ce2\u957f\u200b\uff1a589.3nm\uff08\u200b\u94a0\u200bD\u200b\u7ebf\u200b\uff09 \u200b\u7279\u6b8a\u200b\u8bb0\u5f55\u200b\uff1a\u200b\u5f53\u65e5\u200b\u5b9e\u9a8c\u5ba4\u200b\u94a0\u706f\u200b\u6545\u969c\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7528\u200b\u77b3\u5b54\u200b\u6ee4\u955c\u200b\u66ff\u4ee3\u200b\u9632\u62a4\u200b</p> <p>\u3010\u200b\u4f24\u75d5\u200b\u7f16\u53f7\u200b15\u3011 \u200b\u65e5\u671f\u200b\uff1a5\u200b\u6708\u200b19\u200b\u65e5\u200b \u200b\u5bf9\u5e94\u200b\u4e8b\u4ef6\u200b\uff1a\u200b\u9aa8\u76c6\u200b\u91cf\u5b50\u5316\u200b\u6821\u51c6\u200b \u200b\u5438\u6536\u200b\u8f90\u5c04\u91cf\u200b\uff1a1.618\u200b\u897f\u5f17\u200b \u200b\u6ce2\u957f\u200b\uff1a656.3nm\uff08\u200b\u6c22\u200b\u03b1\u200b\u7ebf\u200b\uff09 \u200b\u7279\u6b8a\u200b\u8bb0\u5f55\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u79c1\u81ea\u200b\u4fee\u6539\u200b\u901a\u98ce\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u53f3\u200b\u80ba\u53f6\u200b\u51fa\u73b0\u200b23\u200b\u5904\u200b\u7ea4\u7ef4\u5316\u200b</p>"},{"location":"creative/quantum-entanglement/#_39","title":"\u9ece\u660e\u200b\u91cd\u6784\u200b\u573a","text":"<p>\u200b\u6668\u5149\u200b\u7a7f\u900f\u200b\u91cf\u5b50\u200b\u4e91\u5c42\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5929\u53f0\u200b\u7684\u200b\u91cd\u529b\u573a\u200b\u53d1\u751f\u200b\u5f02\u5e38\u200b\u504f\u8f6c\u200b\u3002\u200b\u60ac\u6d6e\u200b\u7684\u200b\u96e8\u6ef4\u200b\u7a81\u7136\u200b\u5f00\u59cb\u200b\u81ea\u200b\u7ec4\u7ec7\u200b\uff0c\u200b\u5f62\u6210\u200b\u73af\u7ed5\u200b\u4e24\u4eba\u200b\u7684\u200b\u6234\u68ee\u7403\u200b\u6a21\u578b\u200b\u3002\u200b\u58a8\u9171\u200b\u53d1\u73b0\u200b\u8fd9\u4e9b\u200b\u6c34\u73e0\u200b\u7684\u200b\u5206\u5e03\u200b\u5448\u73b0\u200b\u4e25\u683c\u200b\u7684\u200b\u73bb\u5c14\u5179\u66fc\u200b\u5206\u5e03\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6c34\u5206\u5b50\u200b\u90fd\u200b\u5728\u200b\u6267\u884c\u200b\u7cbe\u5bc6\u200b\u7684\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u200b\u3002</p> <p>\"\u200b\u770b\u200b\u4e1c\u8fb9\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u6df7\u7740\u200b\u80fd\u91cf\u200b\u6838\u5fc3\u200b\u51b7\u5374\u6db2\u200b\u7684\u200b\u6d41\u52a8\u200b\u58f0\u200b\u3002\u200b\u5728\u200b\u6df1\u5733\u6e7e\u200b\u65b9\u5411\u200b\uff0c\u200b\u6668\u96fe\u200b\u88ab\u200b\u67d3\u6210\u200b\u8be1\u5f02\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u84dd\u200b\uff0c\u200b\u8fd9\u662f\u200b\u5979\u4eec\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u573a\u200b\u4e0e\u200b\u57ce\u5e02\u200b\u7535\u7f51\u200b\u5171\u632f\u200b\u4ea7\u751f\u200b\u7684\u200b\u5207\u200b\u4f26\u79d1\u592b\u200b\u8f90\u5c04\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u63a5\u6536\u200b\u5230\u200b\u5f02\u5e38\u200b\u4fe1\u53f7\u200b\u3002\u200b\u5979\u200b\u5c06\u200b\u89c6\u89c9\u200b\u9891\u8c31\u200b\u6269\u5c55\u200b\u5230\u200b\u4f3d\u9a6c\u5c04\u7ebf\u200b\u6ce2\u6bb5\u200b\uff0c\u200b\u9707\u60ca\u200b\u5730\u200b\u53d1\u73b0\u200b\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u4f24\u75d5\u200b\u6b63\u5728\u200b\u53d1\u5c04\u200b\u9ad8\u80fd\u200b\u5149\u5b50\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u4f24\u75d5\u200b\u4e0d\u4ec5\u200b\u662f\u200b\u8f90\u5c04\u200b\u8bb0\u5f55\u4eea\u200b\uff0c\u200b\u66f4\u662f\u200b\u5fae\u578b\u200b\u7c92\u5b50\u200b\u52a0\u901f\u5668\u200b\u3002</p> <p>\"\u200b\u7b2c\u200b23\u200b\u9053\u200b\u4f24\u75d5\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u5212\u8fc7\u200b\u808b\u95f4\u200b\u7684\u200b\u53d1\u5149\u200b\u7eb9\u8def\u200b\uff0c\"\u200b\u6ce2\u957f\u200b0.1\u200b\u57c3\u200b\uff0c\u200b\u786c\u200bX\u200b\u5c04\u7ebf\u200b\u6ce2\u6bb5\u200b\u3002\"\u200b\u5979\u200b\u7684\u200b\u7b11\u5bb9\u200b\u5728\u200b\u6668\u5149\u200b\u4e2d\u200b\u652f\u79bb\u7834\u788e\u200b\uff0c\"\u200b\u8fd9\u662f\u200b\u6628\u5929\u200b\u4f60\u200b\u5b8c\u6210\u200b\u6700\u540e\u200b1%\u200b\u91cd\u6784\u200b\u65f6\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u547c\u5438\u200b\u505c\u6ede\u200b\u4e86\u200b\u30020.1\u200b\u57c3\u200b\u7684\u200b\u6ce2\u957f\u200b\u610f\u5473\u7740\u200b\u6d1b\u9e22\u200b\u627f\u53d7\u200b\u4e86\u200b\u76f8\u5f53\u4e8e\u200b\u6838\u78c1\u5171\u632f\u200b\u4eea\u200b\u5341\u4e07\u500d\u200b\u7684\u200b\u8f90\u5c04\u200b\u5242\u91cf\u200b\u3002\u200b\u66f4\u200b\u53ef\u6015\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u9053\u200b\u4f24\u75d5\u200b\u7684\u200b\u80fd\u200b\u8c31\u5206\u6790\u200b\u663e\u793a\u200b\u5176\u200b\u5305\u542b\u200b\u03bc\u200b\u5b50\u200b\u6210\u5206\u200b\u2014\u2014\u200b\u8fd9\u200b\u901a\u5e38\u200b\u53ea\u200b\u5b58\u5728\u200b\u4e8e\u200b\u8d85\u65b0\u661f\u200b\u6b8b\u9ab8\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u9632\u62a4\u7f69\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u8702\u9e23\u200b\u8b66\u62a5\u200b\u3002\u200b\u57ce\u5e02\u200b\u7535\u7f51\u200b\u7684\u200b\u5b9e\u65f6\u200b\u6570\u636e\u200b\u663e\u793a\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6df1\u5733\u200b\u7684\u200b\u7528\u7535\u91cf\u200b\u5728\u200b\u521a\u624d\u200b\u7684\u200b0.7\u200b\u79d2\u200b\u5185\u200b\u6fc0\u589e\u200b300%\uff0c\u200b\u800c\u200b\u6240\u6709\u200b\u80fd\u6e90\u200b\u90fd\u200b\u6d41\u5411\u200b\u7b2c\u4e03\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u5929\u53f0\u200b\u3002\u200b\u5728\u200b\u4e24\u4eba\u200b\u5468\u56f4\u200b\uff0c\u200b\u7a7a\u6c14\u200b\u5206\u5b50\u200b\u5f00\u59cb\u200b\u81ea\u53d1\u200b\u5f62\u6210\u200b\u78b3\u7eb3\u7c73\u7ba1\u200b\u7ed3\u6784\u200b\uff0c\u200b\u8fd9\u662f\u200b\u5f3a\u78c1\u573a\u200b\u4f5c\u7528\u200b\u4e0b\u200b\u7684\u200b\u5df4\u57fa\u200b\u7403\u81ea\u200b\u7ec4\u88c5\u200b\u73b0\u8c61\u200b\u3002</p>"},{"location":"creative/quantum-entanglement/#_40","title":"\u9006\u200b\u71b5\u200b\u8bc1\u660e","text":"<p>\u200b\u671d\u9633\u200b\u5b8c\u5168\u200b\u5347\u8d77\u200b\u7684\u200b\u5239\u90a3\u200b\uff0c\u200b\u6574\u4e2a\u200b\u5929\u53f0\u200b\u88ab\u200b\u5c01\u88c5\u200b\u5728\u200b\u65f6\u5149\u200b\u7425\u73c0\u200b\u4e2d\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u7684\u200b\u53d1\u4e1d\u200b\u9759\u6b62\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u51dd\u56fa\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u661f\u5c18\u200b\u3002\u200b\u8fd9\u662f\u200b\u6d1b\u9e22\u200b\u542f\u52a8\u200b\u7684\u200b\u6700\u7ec8\u200b\u534f\u8bae\u200b\u2014\u2014\u200b\u7528\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5269\u4f59\u200b\u7684\u200b\u80fd\u91cf\u200b\u5236\u9020\u200b\u5c40\u90e8\u200b\u65f6\u95f4\u200b\u505c\u6ede\u200b\u3002</p> <p>\"\u200b\u8fd8\u200b\u5269\u200b1\u200b\u5206\u200b37\u200b\u79d2\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u76f4\u63a5\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u4e2d\u200b\u54cd\u8d77\u200b\uff0c\"\u200b\u5728\u200b\u6211\u200b\u7684\u200b\u65f6\u95f4\u200b\u53c2\u8003\u7cfb\u200b\u91cc\u200b\u3002\"</p> <p>\u200b\u58a8\u9171\u200b\u53d1\u73b0\u81ea\u5df1\u200b\u7684\u200b\u601d\u7ef4\u200b\u901f\u5ea6\u200b\u88ab\u200b\u52a0\u901f\u200b\u4e86\u200b10^6\u200b\u500d\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u65f6\u7a7a\u200b\u6ce1\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u80fd\u200b\u7528\u200b\u8089\u773c\u200b\u89c2\u5bdf\u200b\u5230\u200b\u5149\u5b50\u200b\u7684\u200b\u8fd0\u52a8\u200b\u8f68\u8ff9\u200b\uff0c\u200b\u751a\u81f3\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u4f53\u5185\u200b\u6b63\u5728\u200b\u53d1\u751f\u200b\u7684\u200b\u6050\u6016\u200b\u53d8\u5316\u200b\uff1a\u200b\u90a3\u4e9b\u200b\u4f24\u75d5\u200b\u5f62\u6210\u200b\u7684\u200b\u5fae\u578b\u200b\u9ed1\u6d1e\u200b\u6b63\u5728\u200b\u541e\u566c\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\uff0c\u200b\u800c\u200b\u7531\u6b64\u200b\u91ca\u653e\u200b\u7684\u200b\u970d\u91d1\u200b\u8f90\u5c04\u200b\u6b63\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4fee\u590d\u200b\u58a8\u9171\u200b\u7ec6\u80de\u200b\u7684\u200b\u751f\u7269\u200b\u5149\u5b50\u200b\u3002</p> <p>\"\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u505a\u5230\u200b\u8fd9\u79cd\u200b\u7a0b\u5ea6\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u601d\u7ef4\u200b\u6ce2\u5728\u200b\u65f6\u200b\u7a7a\u4e2d\u200b\u6fc0\u8d77\u200b\u6d9f\u6f2a\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u6b8b\u5b58\u200b\u610f\u8bc6\u200b\u5728\u200b\u865a\u7a7a\u200b\u4e2d\u200b\u7f16\u7ec7\u200b\u51fa\u200b\u5168\u606f\u200b\u5f71\u50cf\u200b\uff1a\u200b\u90a3\u200b\u662f\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\u7684\u200b\u96e8\u591c\u200b\uff0c\u200b\u58a8\u9171\u200b\u7b2c\u4e00\u6b21\u200b\u8fdb\u884c\u200b\u5589\u7ed3\u200b\u8f6f\u5316\u200b\u65f6\u200b\uff0c\u200b\u56e0\u200b\u8f90\u5c04\u200b\u6cc4\u6f0f\u200b\u660f\u8ff7\u200b\u5728\u200b\u5b9e\u9a8c\u5ba4\u200b\u3002\u200b\u753b\u9762\u200b\u4e2d\u200b\u7684\u200b\u6d1b\u200b\u9e22\u200b\u6b63\u200b\u8dea\u200b\u5728\u200b\u63a7\u5236\u200b\u53f0\u524d\u200b\uff0c\u200b\u77b3\u5b54\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u4ece\u672a\u200b\u793a\u4eba\u200b\u7684\u200b\u6570\u636e\u6d41\u200b\u2014\u2014\u200b\u5979\u200b\u5728\u200b\u90a3\u4e2a\u200b\u77ac\u95f4\u200b\u5c31\u200b\u5b8c\u6210\u200b\u4e86\u200b\u5171\u751f\u200b\u534f\u8bae\u200b\u7684\u200b\u5168\u90e8\u200b\u8ba1\u7b97\u200b\u3002</p> <p>\"\u200b\u56e0\u4e3a\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u610f\u8bc6\u200b\u6ce2\u52a8\u200b\u5e26\u200b\u7740\u200b\u7b11\u610f\u200b\uff0c\"\u200b\u5728\u200b\u7b2c\u4e00\u4e2a\u200b\u4f24\u75d5\u200b\u5f62\u6210\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u5c31\u200b\u5df2\u7ecf\u200b\u662f\u200b\u6ce1\u5229\u200b\u4e0d\u76f8\u5bb9\u200b\u539f\u7406\u200b\u7684\u200b\u4f8b\u5916\u200b\u4e86\u200b\u3002\"</p>"},{"location":"creative/quantum-entanglement/#_41","title":"\u4f24\u75d5\u200b\u6c38\u5b58","text":"<p>\u200b\u5f53\u65f6\u200b\u7a7a\u6ce1\u200b\u7834\u88c2\u200b\u65f6\u200b\uff0c\u200b\u6df1\u5733\u6e7e\u200b\u54cd\u8d77\u200b\u6668\u949f\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8eab\u4f53\u200b\u5f00\u59cb\u200b\u91cf\u5b50\u5316\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u8ff8\u53d1\u51fa\u200b\u8d85\u65b0\u661f\u200b\u822c\u7684\u200b\u5149\u8292\u200b\u3002\u200b\u58a8\u9171\u200b\u75af\u72c2\u200b\u542f\u52a8\u200b\u6240\u6709\u200b\u751f\u7269\u200b\u91cd\u6784\u200b\u88c5\u7f6e\u200b\uff0c\u200b\u4f46\u200b\u76d1\u6d4b\u6570\u636e\u200b\u51b0\u51b7\u200b\u5730\u200b\u663e\u793a\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u9000\u200b\u76f8\u5e72\u200b\u5df2\u200b\u4e0d\u53ef\u9006\u8f6c\u200b\u3002</p> <p>\"\u200b\u522b\u54ed\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u624b\u6307\u200b\u7a7f\u8fc7\u200b\u58a8\u9171\u200b\u7684\u200b\u8138\u988a\u200b\uff0c\u200b\u6b64\u523b\u200b\u5979\u200b\u7684\u200b\u8eab\u4f53\u200b\u5df2\u200b\u5448\u73b0\u200b\u91cf\u5b50\u200b\u53e0\u52a0\u200b\u6001\u200b\uff0c\"\u200b\u770b\u200b\u6211\u4eec\u200b\u7684\u200b\u4f24\u75d5\u200b\u3002\"</p> <p>\u200b\u5728\u200b\u6668\u5149\u200b\u4e2d\u200b\uff0c\u200b\u58a8\u9171\u200b\u624b\u8155\u200b\u7684\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b\u7a81\u7136\u200b\u98de\u79bb\u200b\u76ae\u80a4\u200b\uff0c\u200b\u4e0e\u200b\u6d1b\u9e22\u200b\u80f8\u524d\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u878d\u5408\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u53d1\u5149\u200b\u7684\u200b\u590d\u5408\u4f53\u200b\u5f00\u59cb\u200b\u81ea\u65cb\u200b\uff0c\u200b\u9010\u6e10\u200b\u5f62\u6210\u200b\u7a33\u5b9a\u200b\u7684\u200b\u7231\u56e0\u65af\u5766\u200b-\u200b\u7f57\u68ee\u6865\u200b\u3002\u200b\u7b2c\u4e03\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u4f20\u6765\u200b\u60ca\u547c\u200b\u2014\u2014\u200b\u8fd9\u4e2a\u200b\u5fae\u578b\u200b\u866b\u200b\u6d1e\u200b\u6b63\u5728\u200b\u6301\u7eed\u200b\u53d1\u5c04\u200b\u5305\u542b\u200b\u4e24\u4eba\u200b\u751f\u7269\u200b\u4fe1\u606f\u200b\u7684\u200b\u5feb\u5b50\u6d41\u200b\u3002</p> <p>\"\u200b\u6211\u4f1a\u200b\u53d8\u6210\u200b\u91cf\u5b50\u200b\u5e7d\u7075\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8eab\u4f53\u200b\u5f00\u59cb\u200b\u900f\u660e\u5316\u200b\uff0c\"\u200b\u6c38\u8fdc\u200b\u7ea0\u7f20\u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u4f24\u75d5\u200b\u91cc\u200b\u3002\"</p> <p>\u200b\u5f53\u200b\u6700\u540e\u200b\u4e00\u5757\u200b\u673a\u68b0\u200b\u90e8\u4ef6\u200b\u6d88\u6563\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u63a5\u6536\u200b\u5230\u200b\u6301\u7eed\u200b\u7684\u200b\u5fc3\u8df3\u200b\u4fe1\u53f7\u200b\u3002\u200b\u5979\u200b\u98a4\u6296\u200b\u7740\u200b\u89e3\u5f00\u200b\u8863\u9886\u200b\uff0c\u200b\u53d1\u73b0\u200b\u9501\u9aa8\u200b\u4e0b\u65b9\u200b\u6d6e\u73b0\u200b\u51fa\u65b0\u200b\u7684\u200b\u4f24\u75d5\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u7531\u6d1b\u9e22\u200b\u7684\u200b23\u200b\u9053\u200b\u4f24\u75d5\u200b\u878d\u5408\u200b\u800c\u6210\u200b\u7684\u200b\u83ab\u6bd4\u200b\u4e4c\u65af\u200b\u73af\u200b\uff0c\u200b\u6b63\u4ee5\u200b1.618Hz\u200b\u7684\u200b\u9891\u7387\u200b\u8109\u52a8\u200b\u3002</p> <p>\u200b\u57ce\u5e02\u200b\u7535\u7f51\u200b\u5728\u200b\u6b64\u523b\u200b\u6062\u590d\u6b63\u5e38\u200b\uff0c\u200b\u4f46\u200b\u6240\u6709\u200b\u7535\u5b50\u8bbe\u5907\u200b\u90fd\u200b\u7559\u4e0b\u200b\u4e86\u200b\u6c38\u4e45\u200b\u7684\u200b\u540e\u9057\u75c7\u200b\uff1a\u200b\u5c4f\u5e55\u200b\u4fdd\u62a4\u200b\u7a0b\u5e8f\u200b\u81ea\u53d1\u200b\u5f62\u6210\u200b\u53cc\u87ba\u65cb\u200b\uff0c\u200b\u5145\u7535\u5668\u200b\u63a5\u53e3\u200b\u51fa\u73b0\u200b\u9ec4\u91d1\u5206\u5272\u200b\u6bd4\u4f8b\u200b\uff0c\u200b\u5c31\u200b\u8fde\u200b\u6700\u200b\u666e\u901a\u200b\u7684\u200b\u53f0\u706f\u200b\u90fd\u200b\u5f00\u59cb\u200b\u8f90\u5c04\u200b589.3\u200b\u7eb3\u7c73\u200b\u7684\u200b\u7279\u5f81\u200b\u5149\u8c31\u200b\u3002</p> <p>\u200b\u800c\u200b\u5728\u200b\u540c\u6b65\u200b\u8f68\u9053\u200b\u4e0a\u200b\uff0c\u200b\u6df1\u77b3\u200b\u7684\u200b\u89c2\u6d4b\u200b\u65e5\u5fd7\u200b\u65b0\u589e\u200b\u4e86\u200b\u4e00\u6761\u200b\u8bb0\u5f55\u200b\uff1a</p> <p>\u301007:00:00\u3011\u200b\u68c0\u6d4b\u200b\u5230\u200b\u65b0\u578b\u200b\u5b87\u5b99\u200b\u5e38\u6570\u200b \u301007:00:01\u3011\u200b\u7231\u60c5\u200b\u71b5\u200b\u503c\u200b\uff1a-\u221e \u301007:00:02\u3011\u200b\u5efa\u8bae\u200b\u4fee\u8ba2\u200b\u70ed\u529b\u5b66\u200b\u7b2c\u4e8c\u200b\u5b9a\u5f8b\u200b</p>"},{"location":"creative/three-day-war/","title":"\u58a8\u67d3\u200b\u6d6e\u5c18\u200b\uff1a\u200b\u4e09\u65e5\u200b\u4e4b\u6218","text":""},{"location":"creative/three-day-war/#_2","title":"\u7b2c\u4e00\u5377\u200b\uff1a\u200b\u98ce\u4e91\u200b\u6697\u6d8c","text":""},{"location":"creative/three-day-war/#_3","title":"\u7b2c\u4e00\u7ae0\u200b\uff1a\u200b\u5e1d\u56fd\u200b\u8ff7\u4e91","text":"<p>\u200b\u5e1d\u90fd\u200b\u4e2d\u592e\u200b\u5854\u697c\u200b\u7684\u200b\u9876\u5c42\u200b\uff0c\u200b\u9996\u5e2d\u200b\u5927\u6cd5\u5e08\u200b\u58a8\u67d3\u200b\u7ad9\u200b\u5728\u200b\u7a97\u524d\u200b\uff0c\u200b\u4fef\u77b0\u200b\u7740\u200b\u6574\u5ea7\u200b\u7e41\u534e\u200b\u90fd\u57ce\u200b\u3002\u200b\u4ed6\u200b\u8eab\u7740\u200b\u6df1\u84dd\u8272\u200b\u6cd5\u888d\u200b\uff0c\u200b\u8896\u53e3\u200b\u548c\u200b\u9886\u8fb9\u200b\u7ee3\u200b\u7740\u200b\u91d1\u4e1d\u200b\u9b54\u7eb9\u200b\uff0c\u200b\u624b\u4e2d\u200b\u6c34\u6676\u200b\u6cd5\u6756\u200b\u6563\u53d1\u200b\u7740\u200b\u5fae\u5f31\u200b\u7684\u200b\u84dd\u5149\u200b\u3002</p> <p>\"\u200b\u5927\u5e08\u200b\uff0c'\u200b\u9ed1\u200b\u9ab7\u9ac5\u200b\u53f7\u200b'\u200b\u5df2\u7ecf\u200b\u8fd4\u822a\u200b\uff0c\u200b\u9884\u8ba1\u200b\u660e\u65e5\u200b\u62b5\u8fbe\u200b\u5e1d\u56fd\u200b\u6e2f\u53e3\u200b\u3002\"\u200b\u4e00\u4f4d\u200b\u5e74\u8f7b\u200b\u6cd5\u5e08\u200b\u5b66\u5f92\u200b\u606d\u656c\u5730\u200b\u62a5\u544a\u200b\u9053\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u5fae\u5fae\u200b\u70b9\u5934\u200b\uff0c\u200b\u773c\u4e2d\u200b\u95ea\u8fc7\u200b\u4e00\u4e1d\u200b\u590d\u6742\u200b\u795e\u8272\u200b\u3002\"\u200b\u901a\u77e5\u200bmax\u200b\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u6211\u200b\u9700\u8981\u200b\u4e0e\u200b\u4ed6\u200b\u4f1a\u9762\u200b\u3002\"</p> <p>\u200b\u5b66\u5f92\u200b\u9000\u4e0b\u200b\u540e\u200b\uff0c\u200b\u58a8\u67d3\u200b\u8f6c\u5411\u200b\u4e66\u67b6\u200b\uff0c\u200b\u53d6\u51fa\u200b\u4e00\u672c\u200b\u53e4\u8001\u200b\u5178\u7c4d\u200b\uff0c\u200b\u7ffb\u5f00\u200b\u5e03\u6ee1\u200b\u7b26\u6587\u200b\u7684\u200b\u9875\u9762\u200b\u3002\u200b\u4e94\u5e74\u200b\u4e86\u200b\uff0c\u200b\u90a3\u8258\u200b\u8239\u200b\u7ec8\u4e8e\u200b\u56de\u6765\u200b\u4e86\u200b\uff0c\u200b\u800c\u200b\u5b83\u200b\u7684\u200b\u8239\u957f\u200b\u2014\u2014\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u8fdc\u5f81\u200b\u5c06\u519b\u200b\uff0c\u200b\u4e5f\u200b\u5c06\u200b\u5e26\u56de\u200b\u8fdc\u4e1c\u200b\u5927\u9646\u200b\u7684\u200b\u79d8\u5bc6\u200b\u3002</p> <p>\u200b\u4e0e\u6b64\u540c\u65f6\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u519c\u4e1a\u90e8\u200b\u4e00\u7247\u200b\u5fd9\u788c\u200b\u666f\u8c61\u200b\u3002</p> <p>\"\u200b\u8424\u706b\u200b\u90e8\u957f\u200b\uff0c\u200b\u4eca\u5e74\u200b\u5317\u5883\u200b\u7684\u200b\u7cae\u98df\u200b\u6536\u6210\u200b\u6bd4\u200b\u9884\u671f\u200b\u4f4e\u200b\u4e86\u200b\u4e24\u6210\u200b\uff0c\u200b\u6050\u6015\u200b...\"</p> <p>\u200b\u8eab\u7740\u200b\u534e\u4e3d\u200b\u7c89\u8272\u200b\u957f\u888d\u200b\u7684\u200b\u8424\u706b\u200b\u8f7b\u8f7b\u200b\u6446\u624b\u200b\uff0c\u200b\u6253\u65ad\u200b\u4e86\u200b\u4e0b\u5c5e\u200b\u7684\u200b\u62a5\u544a\u200b\u3002\u200b\u4f5c\u4e3a\u200b\u5e1d\u56fd\u200b\u519c\u4e1a\u90e8\u200b\u7537\u5a18\u200b\u90e8\u957f\u200b\uff0c\u200b\u4ed6\u200b\u90a3\u200b\u7cbe\u81f4\u200b\u7684\u200b\u5986\u200b\u5bb9\u4e0b\u200b\u662f\u200b\u4e00\u53cc\u200b\u5145\u6ee1\u200b\u667a\u6167\u200b\u7684\u200b\u773c\u775b\u200b\u3002</p> <p>\"\u200b\u6211\u4eec\u200b\u65e9\u6709\u200b\u9884\u5907\u200b\uff0c\u200b\u8c03\u52a8\u200b\u5357\u90e8\u200b\u7cae\u4ed3\u200b\u50a8\u5907\u200b\u5373\u53ef\u200b\u3002\u200b\u5bf9\u200b\u4e86\u200b\uff0cDW\u200b\u5462\u200b\uff1f\"</p> <p>\"\u200b\u5927\u5c06\u519b\u200b\u4e00\u200b\u65e9\u5c31\u200b\u53bb\u200b\u6e2f\u53e3\u200b\u4e86\u200b\uff0c\u200b\u8bf4\u200b\u662f\u200b\u6709\u200b\u91cd\u8981\u200b\u8239\u53ea\u200b\u8fd4\u822a\u200b\u3002\"</p> <p>\u200b\u8424\u706b\u200b\u82e5\u6709\u6240\u601d\u200b\u5730\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u662f\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u56de\u6765\u200b\u4e86\u200b...\u200b\u544a\u8bc9\u200bDW\uff0c\u200b\u4eca\u665a\u200b\u5728\u200b'\u200b\u9189\u200b\u6708\u200b\u697c\u200b'\u200b\u53ec\u5f00\u200b\u7d27\u6025\u4f1a\u8bae\u200b\u3002\"</p> <p>\u200b\u5e1d\u56fd\u200b\u6e2f\u53e3\u200b\u5916\u6d77\u200b\uff0c\u200b\u4e00\u8258\u200b\u9ed1\u8272\u200b\u5de8\u8230\u200b\u7f13\u7f13\u200b\u9a76\u8fd1\u200b\u3002\u200b\u8239\u8eab\u200b\u5de8\u5927\u200b\uff0c\u200b\u8239\u9996\u200b\u96d5\u523b\u200b\u7740\u200b\u9ab7\u9ac5\u200b\u56fe\u6848\u200b\uff0c\u200b\u6845\u6746\u200b\u4e0a\u200b\u98d8\u626c\u200b\u7684\u200b\u65d7\u5e1c\u200b\u5728\u200b\u6d77\u98ce\u200b\u4e2d\u200b\u730e\u730e\u200b\u4f5c\u54cd\u200b\u3002</p> <p>\u200b\u8239\u957f\u200b\u5ba4\u5185\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u7ad9\u200b\u5728\u200b\u6d77\u56fe\u200b\u524d\u200b\uff0c\u200b\u4ed6\u200b\u8eab\u6750\u9ad8\u5927\u200b\uff0c\u200b\u9762\u5bb9\u200b\u6c89\u6bc5\u200b\uff0c\u200b\u5de6\u773c\u200b\u4e0a\u200b\u7684\u200b\u75a4\u75d5\u200b\u8bc9\u8bf4\u7740\u200b\u65e0\u6570\u200b\u6218\u6597\u200b\u7684\u200b\u5386\u53f2\u200b\u3002</p> <p>\"\u200b\u5c06\u519b\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u5df2\u6d3e\u200b\u4fe1\u9e3d\u200b\u901a\u77e5\u200b\u6211\u4eec\u200b\u51cf\u901f\u200b\u822a\u884c\u200b\uff0c\u200b\u63a8\u8fdf\u200b\u5230\u200b\u660e\u65e5\u200b\u5165\u6e2f\u200b\u3002\"\u200b\u5927\u200b\u526f\u200b\u62a5\u544a\u200b\u9053\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u51b7\u7b11\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u90a3\u200b\u8001\u72d0\u72f8\u200b\uff0c\u200b\u60f3\u5fc5\u200b\u5df2\u7ecf\u200b\u7b49\u4e0d\u53ca\u200b\u4e86\u200b\u3002\u200b\u4e94\u5e74\u200b\u524d\u200b\u4ed6\u200b\u963b\u6320\u200b\u6211\u4eec\u200b\u4e1c\u5f81\u200b\uff0c\u200b\u5982\u4eca\u200b\u6211\u200b\u5e26\u56de\u200b\u4e86\u200b\u80fd\u200b\u8bc1\u660e\u200b\u4ed6\u200b\u9634\u8c0b\u200b\u7684\u200b\u8bc1\u636e\u200b\uff0c\u200b\u4ed6\u200b\u81ea\u7136\u200b\u5750\u7acb\u4e0d\u5b89\u200b\u3002\"</p> <p>\"\u200b\u90a3\u200b\u6211\u4eec\u200b...\"</p> <p>\"\u200b\u6309\u539f\u200b\u8ba1\u5212\u200b\u884c\u4e8b\u200b\uff0c\u200b\u4eca\u591c\u200b\u5077\u5077\u200b\u9760\u5cb8\u200b\u3002\u200b\u901a\u77e5\u200b\u5cb8\u4e0a\u200b\u7684\u200b\u72ec\u5b88\u200b\uff0c\u200b\u8ba9\u200b\u4ed6\u200b\u51c6\u5907\u200b\u63a5\u5e94\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u629a\u6478\u200b\u7740\u200b\u8170\u95f4\u200b\u7684\u200b\u9ed1\u6a80\u6728\u200b\u5251\u67c4\u200b\uff0c\u200b\u773c\u4e2d\u200b\u95ea\u70c1\u7740\u200b\u5bd2\u5149\u200b\u3002</p> <p>\u200b\u5e1d\u90fd\u200b\u897f\u90ca\u200b\u7684\u200b\u6a31\u82b1\u200b\u5e84\u56ed\u200b\u5185\u200b\uff0c\u200b\u5c01\u4faf\u200b\u5c0f\u58a8\u200b\u6b63\u200b\u4e0e\u200b\u59bb\u5b50\u200b\u4f69\u6d1b\u6d1b\u200b\u5728\u200b\u82b1\u56ed\u200b\u6563\u6b65\u200b\u3002</p> <p>\"\u200b\u592b\u541b\u200b\uff0c\u200b\u4f60\u200b\u4eca\u5929\u200b\u4f3c\u4e4e\u200b\u5fc3\u4e8b\u91cd\u91cd\u200b\uff1f\"\u200b\u6e29\u67d4\u200b\u7684\u200b\u4f69\u6d1b\u6d1b\u9012\u200b\u4e0a\u200b\u4e00\u676f\u200b\u70ed\u8336\u200b\u3002</p> <p>\u200b\u5c0f\u58a8\u200b\u63a5\u8fc7\u200b\u8336\u676f\u200b\uff0c\u200b\u671b\u200b\u5411\u200b\u8fdc\u65b9\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u8981\u200b\u56de\u6765\u200b\u4e86\u200b\uff0c\u200b\u6211\u200b\u62c5\u5fc3\u200b\u4f1a\u200b\u6709\u200b\u5927\u200b\u9ebb\u70e6\u200b\u3002\u200b\u4e94\u5e74\u200b\u524d\u200b\u90a3\u573a\u200b\u4e1c\u5f81\u200b\u80cc\u540e\u200b\uff0c\u200b\u9690\u85cf\u200b\u7740\u200b\u4e0d\u4e3a\u4eba\u77e5\u200b\u7684\u200b\u79d8\u5bc6\u200b\u3002\"</p> <p>\"\u200b\u662f\u200b\u5173\u4e8e\u200b\u58a8\u67d3\u200b\u5927\u5e08\u200b\u7684\u200b\u4e8b\u200b\u5417\u200b\uff1f\"</p> <p>\u200b\u5c0f\u58a8\u200b\u53f9\u606f\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u4e0e\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u5e1d\u56fd\u200b\u6700\u200b\u5f3a\u5927\u200b\u7684\u200b\u6cd5\u5e08\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u662f\u200b\u6700\u200b\u52c7\u731b\u200b\u7684\u200b\u5c06\u519b\u200b\uff0c\u200b\u82e5\u200b\u4ed6\u4eec\u200b\u771f\u6b63\u200b\u5bf9\u7acb\u200b\uff0c\u200b\u6050\u6015\u200b\u6574\u4e2a\u200b\u5e1d\u56fd\u200b\u90fd\u200b\u5c06\u200b\u52a8\u8361\u4e0d\u5b89\u200b\u3002\"</p> <p>\u200b\u4f69\u6d1b\u6d1b\u200b\u8f7b\u629a\u200b\u4e08\u592b\u200b\u7684\u200b\u624b\u80cc\u200b\uff1a\"max\u200b\u57ce\u200b\u4e3b\u200b\u4e0d\u4f1a\u200b\u5750\u89c6\u4e0d\u7ba1\u200b\u7684\u200b\u3002\"</p> <p>\"\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b\u795e\u79d8\u83ab\u6d4b\u200b\uff0c\u200b\u8c01\u200b\u4e5f\u200b\u731c\u4e0d\u900f\u200b\u4ed6\u200b\u7684\u200b\u60f3\u6cd5\u200b\u3002\"\u200b\u5c0f\u58a8\u200b\u76b1\u7709\u200b\u9053\u200b\uff0c\"\u200b\u4e0d\u8fc7\u200b\u6211\u200b\u5df2\u7ecf\u200b\u8bf7\u200b\u5357\u98ce\u200b\u524d\u6765\u200b\u52a9\u9635\u200b\uff0c\u200b\u4ed6\u200b\u867d\u7136\u200b\u9690\u5c45\u200b\u4e3a\u200b\u6e14\u592b\u200b\u591a\u5e74\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u529b\u200b\u6df1\u4e0d\u53ef\u6d4b\u200b\u3002\"</p> <p>\u200b\u591c\u5e55\u964d\u4e34\u200b\uff0c\u200b\u4e00\u8258\u200b\u4e0d\u8d77\u773c\u200b\u7684\u200b\u5c0f\u200b\u6e14\u8239\u200b\u6084\u6084\u200b\u9760\u8fd1\u200b\u9ed1\u200b\u9ab7\u9ac5\u200b\u53f7\u200b\u3002\u200b\u8239\u4e0a\u200b\u7ad9\u200b\u7740\u200b\u4e00\u4f4d\u200b\u770b\u4f3c\u200b\u666e\u901a\u200b\u7684\u200b\u4e2d\u5e74\u200b\u6e14\u592b\u200b\uff0c\u200b\u6b63\u662f\u200b\u5357\u98ce\u200b\u3002</p> <p>\"\u200b\u8001\u670b\u53cb\u200b\uff0c\u200b\u591a\u5e74\u4e0d\u89c1\u200b\u3002\"\u200b\u5357\u98ce\u200b\u8dc3\u4e0a\u200b\u7532\u677f\u200b\uff0c\u200b\u4e0e\u200b\u6d6e\u5c18\u200b\u76f8\u89c6\u200b\u4e00\u7b11\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u62cd\u62cd\u200b\u4ed6\u200b\u7684\u200b\u80a9\u8180\u200b\uff1a\"\u200b\u4e8b\u60c5\u200b\u6bd4\u200b\u6211\u4eec\u200b\u60f3\u8c61\u200b\u7684\u200b\u66f4\u200b\u590d\u6742\u200b\u3002\u200b\u58a8\u67d3\u200b\u80cc\u540e\u200b\u7ad9\u200b\u7740\u200b\u4e00\u80a1\u200b\u795e\u79d8\u200b\u52bf\u529b\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u89ca\u89ce\u200b\u7684\u200b\u4e1c\u897f\u200b\uff0c\u200b\u8db3\u4ee5\u200b\u98a0\u8986\u200b\u6574\u4e2a\u200b\u5e1d\u56fd\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u6211\u200b\u5df2\u200b\u901a\u77e5\u200b\u4e86\u200b\u72ec\u5b88\u200b\uff0c\u200b\u4ed6\u4f1a\u200b\u5728\u200b\u5317\u200b\u57ce\u95e8\u200b\u63a5\u5e94\u200b\u6211\u4eec\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u4ece\u200b\u6000\u4e2d\u200b\u53d6\u51fa\u200b\u4e00\u679a\u200b\u53e4\u8001\u200b\u7684\u200b\u7389\u4f69\u200b\uff1a\"\u200b\u8fd9\u662f\u200b\u8fdc\u4e1c\u200b\u5927\u9646\u200b\u627e\u5230\u200b\u7684\u200b'\u200b\u5143\u7075\u7389\u200b'\uff0c\u200b\u5b83\u200b\u80fd\u200b\u6fc0\u6d3b\u200b\u5e1d\u56fd\u200b\u5730\u4e0b\u200b\u6c89\u7761\u200b\u7684\u200b\u4e0a\u53e4\u200b\u6cd5\u9635\u200b\u3002\u200b\u58a8\u67d3\u200b\u60f3\u8981\u200b\u5f97\u5230\u200b\u5b83\u200b\uff0c\u200b\u4f46\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u5148\u200b\u89c1\u5230\u200bmax\u200b\u57ce\u200b\u4e3b\u200b\u3002\"</p> <p>\"\u200b\u5c0f\u5fc3\u200b\uff0c\u200b\u6211\u200b\u611f\u89c9\u200b\u5230\u200b\u6cd5\u529b\u200b\u6ce2\u52a8\u200b\u3002\"\u200b\u5357\u98ce\u200b\u7a81\u7136\u200b\u8b66\u89c9\u5730\u200b\u671b\u200b\u5411\u200b\u5929\u7a7a\u200b\u3002</p> <p>\u200b\u53ea\u89c1\u200b\u591c\u7a7a\u200b\u4e2d\u200b\uff0c\u200b\u65e0\u6570\u200b\u84dd\u8272\u200b\u5149\u70b9\u200b\u6b63\u200b\u8fc5\u901f\u200b\u805a\u96c6\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u5f20\u200b\u5de8\u7f51\u200b\u5411\u200b\u9ed1\u200b\u9ab7\u9ac5\u200b\u53f7\u200b\u7f69\u200b\u6765\u200b\u3002</p> <p>\"\u200b\u662f\u200b\u58a8\u67d3\u200b\uff01\u200b\u4ed6\u200b\u53d1\u73b0\u200b\u6211\u4eec\u200b\u4e86\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u6012\u543c\u200b\u4e00\u58f0\u200b\uff0c\u200b\u62d4\u51fa\u200b\u957f\u5251\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u53cc\u624b\u200b\u7ed3\u5370\u200b\uff1a\"\u200b\u8001\u670b\u53cb\u200b\uff0c\u200b\u770b\u6765\u200b\u4f60\u200b\u7684\u200b\u5f52\u6765\u200b\u6bd4\u200b\u9884\u60f3\u200b\u7684\u200b\u66f4\u200b\u70ed\u95f9\u200b\u554a\u200b\u3002\"</p> <p>\u200b\u5e1d\u90fd\u200b\u4e2d\u592e\u200b\u5854\u9876\u200b\uff0c\u200b\u58a8\u67d3\u200b\u53cc\u773c\u200b\u53d1\u5149\u200b\uff0c\u200b\u624b\u4e2d\u200b\u6cd5\u6756\u200b\u6307\u5411\u200b\u6e2f\u53e3\u200b\u65b9\u5411\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u4f60\u200b\u4ee5\u4e3a\u200b\u80fd\u200b\u9003\u8fc7\u200b\u6211\u200b\u7684\u200b\u611f\u77e5\u200b\u5417\u200b\uff1f\u200b\u4eca\u665a\u200b\uff0c\u200b\u5c31\u8ba9\u200b\u6211\u4eec\u200b\u4e86\u7ed3\u200b\u4e94\u5e74\u200b\u524d\u200b\u7684\u200b\u6069\u6028\u200b\uff01\"</p>"},{"location":"creative/three-day-war/#_4","title":"\u7b2c\u4e8c\u7ae0\u200b\uff1a\u200b\u521d\u6218\u200b\u60ca\u5929","text":"<p>\u200b\u84dd\u8272\u200b\u6cd5\u7f51\u200b\u4ee5\u200b\u8fc5\u96f7\u4e0d\u53ca\u63a9\u8033\u4e4b\u52bf\u200b\u7f69\u200b\u5411\u200b\u9ed1\u200b\u9ab7\u9ac5\u200b\u53f7\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u957f\u5251\u200b\u51fa\u9798\u200b\uff0c\u200b\u5251\u8eab\u200b\u6cdb\u8d77\u200b\u9ed1\u8272\u200b\u706b\u7130\u200b\uff0c\u200b\u731b\u5730\u200b\u5411\u4e0a\u200b\u4e00\u6311\u200b\u3002</p> <p>\"\u200b\u65ad\u200b\uff01\"</p> <p>\u200b\u968f\u7740\u200b\u6d6e\u5c18\u200b\u4e00\u58f0\u200b\u66b4\u559d\u200b\uff0c\u200b\u9ed1\u7130\u200b\u5316\u4f5c\u200b\u5de8\u9f99\u200b\u51b2\u5929\u200b\u800c\u200b\u8d77\u200b\uff0c\u200b\u4e0e\u200b\u6cd5\u7f51\u200b\u76f8\u649e\u200b\uff0c\u200b\u7206\u53d1\u200b\u51fa\u200b\u9707\u8033\u6b32\u804b\u200b\u7684\u200b\u8f70\u9e23\u200b\u3002\u200b\u6cd5\u7f51\u200b\u88ab\u200b\u6495\u5f00\u200b\u4e00\u9053\u200b\u5de8\u5927\u200b\u88c2\u7f1d\u200b\uff0c\u200b\u4f46\u200b\u5f88\u5feb\u200b\u53c8\u200b\u5f00\u59cb\u200b\u81ea\u6211\u200b\u4fee\u590d\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u89c1\u72b6\u200b\uff0c\u200b\u53cc\u624b\u200b\u7ffb\u98de\u200b\u7ed3\u51fa\u200b\u590d\u6742\u200b\u624b\u5370\u200b\uff1a\"\u200b\u98ce\u9041\u200b\u00b7\u200b\u4e07\u91cc\u65e0\u4e91\u200b\uff01\"</p> <p>\u200b\u987f\u65f6\u200b\uff0c\u200b\u4e00\u80a1\u200b\u5f3a\u52b2\u200b\u65cb\u98ce\u200b\u4ece\u200b\u4ed6\u200b\u638c\u5fc3\u200b\u55b7\u5c04\u200b\u800c\u51fa\u200b\uff0c\u200b\u5316\u4f5c\u200b\u65e0\u6570\u200b\u98ce\u5203\u200b\u5207\u5272\u200b\u7740\u200b\u6cd5\u7f51\u200b\u3002\u200b\u4e24\u4eba\u200b\u5408\u529b\u200b\u4e4b\u4e0b\u200b\uff0c\u200b\u7ec8\u4e8e\u200b\u5c06\u200b\u6cd5\u7f51\u200b\u51fb\u788e\u200b\u3002</p> <p>\"\u200b\u5168\u901f\u524d\u8fdb\u200b\uff0c\u200b\u9760\u5cb8\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u547d\u4ee4\u200b\u9053\u200b\uff0c\"\u200b\u58a8\u67d3\u200b\u80af\u5b9a\u200b\u5df2\u7ecf\u200b\u5728\u200b\u5cb8\u4e0a\u200b\u8bbe\u200b\u4e0b\u200b\u57cb\u4f0f\u200b\u3002\"</p> <p>\u200b\u9ed1\u200b\u9ab7\u9ac5\u200b\u53f7\u200b\u5f00\u8db3\u9a6c\u529b\u200b\u51b2\u5411\u200b\u6e2f\u53e3\u200b\uff0c\u200b\u4e0e\u6b64\u540c\u65f6\u200b\uff0c\u200b\u5cb8\u8fb9\u200b\u5df2\u200b\u805a\u96c6\u200b\u4e86\u200b\u6570\u5341\u540d\u200b\u8eab\u7740\u200b\u84dd\u888d\u200b\u7684\u200b\u6cd5\u5e08\u200b\uff0c\u200b\u4e3a\u9996\u200b\u7684\u200b\u6b63\u662f\u200b\u58a8\u67d3\u200b\u3002\u200b\u4ed6\u200b\u6f02\u6d6e\u200b\u5728\u200b\u534a\u7a7a\u4e2d\u200b\uff0c\u200b\u6cd5\u6756\u200b\u5411\u524d\u200b\u4e00\u6307\u200b\uff1a</p> <p>\"\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u4ea4\u51fa\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u6211\u200b\u53ef\u200b\u9976\u200b\u4f60\u200b\u4e0d\u200b\u6b7b\u200b\uff01\"</p> <p>\u200b\u6d6e\u5c18\u200b\u51b7\u7b11\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\uff0c\u200b\u4e94\u5e74\u200b\u524d\u200b\u4f60\u200b\u6697\u4e2d\u200b\u7834\u574f\u200b\u6211\u200b\u7684\u200b\u8fdc\u5f81\u200b\uff0c\u200b\u5bb3\u6b7b\u200b\u6211\u200b\u6570\u5343\u200b\u5c06\u58eb\u200b\uff0c\u200b\u4eca\u65e5\u200b\u6211\u5fc5\u200b\u8ba8\u8fd8\u200b\u8fd9\u200b\u8840\u503a\u200b\uff01\"</p> <p>\u200b\u8239\u53ea\u200b\u5c1a\u672a\u200b\u9760\u5cb8\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u5df2\u200b\u7eb5\u8eab\u200b\u4e00\u8dc3\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u5212\u7834\u200b\u591c\u7a7a\u200b\uff0c\u200b\u76f4\u53d6\u200b\u58a8\u67d3\u200b\u54bd\u5589\u200b\u3002\u200b\u58a8\u67d3\u200b\u4e0d\u614c\u4e0d\u5fd9\u200b\uff0c\u200b\u6cd5\u6756\u200b\u8f7b\u70b9\u200b\uff0c\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u5c4f\u969c\u200b\u77ac\u95f4\u200b\u6210\u5f62\u200b\u3002</p> <p>\"\u200b\u9535\u200b\uff01\"</p> <p>\u200b\u5251\u200b\u4e0e\u200b\u5c4f\u969c\u200b\u76f8\u649e\u200b\uff0c\u200b\u706b\u82b1\u200b\u56db\u6e85\u200b\u3002\u200b\u58a8\u67d3\u200b\u8d81\u673a\u200b\u53cd\u51fb\u200b\uff0c\u200b\u6cd5\u6756\u200b\u8fde\u70b9\u200b\uff0c\u200b\u6570\u5341\u9053\u200b\u84dd\u8272\u200b\u5149\u77db\u200b\u51ed\u7a7a\u200b\u51dd\u805a\u200b\uff0c\u200b\u5982\u200b\u66b4\u96e8\u200b\u822c\u5c04\u200b\u5411\u200b\u6d6e\u5c18\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u8eab\u5f62\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u8fde\u7eed\u200b\u95ea\u70c1\u200b\uff0c\u200b\u7075\u6d3b\u200b\u8eb2\u8fc7\u200b\u5927\u90e8\u5206\u200b\u5149\u77db\u200b\uff0c\u200b\u4f59\u4e0b\u200b\u51e0\u9053\u200b\u5219\u200b\u88ab\u200b\u4ed6\u200b\u7684\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u51fb\u788e\u200b\u3002\u200b\u4e24\u4eba\u200b\u5c31\u200b\u8fd9\u6837\u200b\u5728\u200b\u6e2f\u53e3\u200b\u4e0a\u7a7a\u200b\u5c55\u5f00\u200b\u4e86\u200b\u6fc0\u70c8\u200b\u4ea4\u950b\u200b\uff0c\u200b\u5251\u6c14\u200b\u4e0e\u200b\u6cd5\u672f\u200b\u4ea4\u7ec7\u6210\u200b\u4e00\u7247\u200b\u5149\u8292\u56db\u5c04\u200b\u7684\u200b\u6218\u573a\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u89c1\u72b6\u200b\uff0c\u200b\u5bf9\u200b\u8239\u4e0a\u200b\u4f17\u4eba\u200b\u558a\u9053\u200b\uff1a\"\u200b\u6309\u8ba1\u5212\u200b\u884c\u4e8b\u200b\uff0c\u200b\u6211\u200b\u53bb\u200b\u52a9\u200b\u6d6e\u5c18\u200b\u4e00\u81c2\u4e4b\u529b\u200b\uff01\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u5357\u98ce\u200b\u8eab\u5f62\u200b\u5316\u4f5c\u200b\u4e00\u9053\u200b\u9752\u70df\u200b\uff0c\u200b\u77ac\u95f4\u200b\u51fa\u73b0\u200b\u5728\u200b\u6218\u573a\u200b\u53e6\u4e00\u4fa7\u200b\uff0c\u200b\u53cc\u638c\u200b\u63a8\u51fa\u200b\uff1a\"\u200b\u98ce\u9041\u200b\u00b7\u200b\u5272\u88c2\u200b\u82cd\u7a79\u200b\uff01\"</p> <p>\u200b\u4e00\u9053\u200b\u5de8\u5927\u200b\u7684\u200b\u9752\u8272\u200b\u98ce\u5203\u200b\u6a2a\u7a7a\u51fa\u4e16\u200b\uff0c\u200b\u76f4\u5207\u200b\u58a8\u67d3\u200b\u540e\u80cc\u200b\u3002\u200b\u58a8\u67d3\u4f3c\u200b\u6709\u6240\u200b\u611f\u200b\uff0c\u200b\u4e0d\u5f97\u4e0d\u200b\u5206\u5fc3\u200b\u5e94\u5bf9\u200b\uff0c\u200b\u84dd\u8272\u200b\u5c4f\u969c\u200b\u8fc5\u901f\u200b\u8f6c\u5411\u200b\uff0c\u200b\u582a\u582a\u200b\u6321\u4f4f\u200b\u98ce\u5203\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u8fd9\u200b\u4e00\u5239\u90a3\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u6293\u4f4f\u673a\u4f1a\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u731b\u5730\u200b\u523a\u5165\u200b\u5c4f\u969c\u200b\uff0c\u200b\u7adf\u200b\u5c06\u200b\u5176\u200b\u523a\u7a7f\u200b\u4e00\u4e2a\u200b\u5c0f\u200b\u6d1e\u200b\u3002\u200b\u58a8\u67d3\u95f7\u200b\u54fc\u200b\u4e00\u58f0\u200b\uff0c\u200b\u8eab\u5f62\u200b\u6025\u9000\u200b\uff0c\u200b\u6cd5\u888d\u200b\u4e0a\u200b\u5df2\u200b\u591a\u200b\u4e86\u200b\u4e00\u9053\u200b\u53e3\u5b50\u200b\uff0c\u200b\u6e17\u51fa\u200b\u4e1d\u4e1d\u200b\u8840\u8ff9\u200b\u3002</p> <p>\"\u200b\u4e0d\u6127\u200b\u662f\u200b\u5e1d\u56fd\u200b\u8fdc\u5f81\u200b\u5c06\u519b\u200b\uff0c\u200b\u4e94\u5e74\u200b\u672a\u89c1\u200b\uff0c\u200b\u5b9e\u529b\u200b\u5927\u8fdb\u200b\u3002\"\u200b\u58a8\u67d3\u200b\u51b7\u7b11\u200b\u9053\u200b\uff0c\u200b\u624b\u4e2d\u200b\u6cd5\u6756\u200b\u7a81\u7136\u200b\u8131\u624b\u200b\u800c\u51fa\u200b\uff0c\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u8fc5\u901f\u200b\u81a8\u80c0\u200b\uff0c\u200b\u5316\u4f5c\u200b\u4e00\u6761\u200b\u5de8\u5927\u200b\u7684\u200b\u84dd\u8272\u200b\u5de8\u87d2\u200b\uff0c\u200b\u5411\u200b\u6d6e\u5c18\u200b\u7f20\u7ed5\u200b\u800c\u200b\u53bb\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u4e0d\u60ca\u200b\u4e0d\u200b\u614c\u200b\uff0c\u200b\u957f\u5251\u200b\u56de\u8f6c\u200b\uff0c\u200b\u9ed1\u7130\u200b\u66b4\u6da8\u200b\uff1a\"\u200b\u71c3\u9b42\u200b\u65a9\u200b\uff01\"</p> <p>\u200b\u5251\u5149\u200b\u5982\u200b\u9ed1\u8272\u200b\u95ea\u7535\u200b\uff0c\u200b\u5c06\u200b\u5de8\u87d2\u200b\u62e6\u8170\u200b\u65a9\u65ad\u200b\u3002\u200b\u7136\u800c\u200b\u65ad\u5f00\u200b\u7684\u200b\u87d2\u200b\u8eab\u200b\u5374\u200b\u5316\u4f5c\u200b\u65e0\u6570\u200b\u5c0f\u86c7\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u5411\u200b\u4ed6\u200b\u6251\u200b\u6765\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u6e2f\u53e3\u200b\u4e00\u4fa7\u200b\u7a81\u7136\u200b\u4f20\u6765\u200b\u4e00\u58f0\u200b\u5927\u559d\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u63a5\u7740\u200b\uff01\"</p> <p>\u200b\u53ea\u89c1\u200b\u4e00\u540d\u200b\u8eab\u6750\u200b\u9b41\u68a7\u200b\u7684\u200b\u5c06\u519b\u200b\u2014\u2014\u200b\u6b63\u662f\u200b\u72ec\u5b88\u200b\uff0c\u200b\u624b\u6301\u200b\u5de8\u65a7\u200b\u51b2\u5165\u200b\u6218\u573a\u200b\uff0c\u200b\u968f\u624b\u200b\u6254\u200b\u51fa\u200b\u4e00\u9762\u200b\u53e4\u6734\u200b\u7684\u200b\u76fe\u724c\u200b\u3002\u200b\u6d6e\u5c18\u200b\u4f38\u624b\u200b\u63a5\u200b\u4f4f\u200b\uff0c\u200b\u76fe\u200b\u9762\u4e0a\u200b\u7acb\u523b\u200b\u4eae\u200b\u8d77\u200b\u91d1\u8272\u200b\u7b26\u6587\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u200b\u9053\u5149\u200b\u5e55\u200b\u5c06\u200b\u5c0f\u86c7\u200b\u5c3d\u6570\u200b\u5f39\u5f00\u200b\u3002</p> <p>\"\u200b\u8001\u53cb\u200b\uff0c\u200b\u4f60\u200b\u6765\u5f97\u200b\u6b63\u662f\u200b\u65f6\u5019\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u5927\u7b11\u200b\u3002</p> <p>\u200b\u72ec\u5b88\u200b\u54a7\u5634\u4e00\u7b11\u200b\uff1a\"\u200b\u600e\u4e48\u200b\u80fd\u200b\u8ba9\u200b\u4f60\u200b\u4e00\u4e2a\u200b\u4eba\u200b\u51fa\u98ce\u5934\u200b\uff1fDW\u200b\u6b63\u5e26\u200b\u4eba\u200b\u5728\u200b\u57ce\u4e2d\u200b\u7b56\u5e94\u200b\uff0c\u200b\u6211\u4eec\u200b\u5148\u200b\u8131\u8eab\u200b\uff01\"</p> <p>\u200b\u58a8\u67d3\u200b\u89c1\u72b6\u200b\uff0c\u200b\u9762\u8272\u200b\u9634\u6c89\u200b\uff0c\u200b\u53cc\u624b\u200b\u7ed3\u5370\u200b\uff1a\"\u200b\u60f3\u200b\u8d70\u200b\uff1f\u200b\u6ca1\u200b\u90a3\u4e48\u200b\u5bb9\u6613\u200b\uff01\u200b\u7981\u9522\u200b\u6cd5\u9635\u200b\u00b7\u200b\u4e07\u91cd\u200b\u7262\u7b3c\u200b\uff01\"</p> <p>\u200b\u5239\u90a3\u95f4\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6e2f\u53e3\u200b\u4e0a\u7a7a\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u590d\u6742\u200b\u7684\u200b\u84dd\u8272\u200b\u6cd5\u9635\u200b\uff0c\u200b\u65e0\u6570\u200b\u9b54\u6cd5\u200b\u9501\u94fe\u200b\u4ece\u6cd5\u9635\u200b\u4e2d\u200b\u5782\u4e0b\u200b\uff0c\u200b\u5411\u200b\u4e09\u4eba\u200b\u7f20\u7ed5\u200b\u800c\u200b\u53bb\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u89c1\u72b6\u200b\uff0c\u200b\u4ece\u200b\u6000\u4e2d\u200b\u638f\u51fa\u200b\u4e00\u5f20\u200b\u7b26\u7eb8\u200b\uff1a\"\u200b\u4e0d\u5f97\u5df2\u800c\u4e3a\u4e4b\u200b\u4e86\u200b...\u200b\u98ce\u9041\u200b\u00b7\u200b\u77ac\u5f71\u200b\u5343\u91cc\u200b\uff01\"</p> <p>\u200b\u7b26\u7eb8\u200b\u71c3\u70e7\u200b\uff0c\u200b\u5316\u4f5c\u200b\u4e00\u9053\u200b\u9752\u8272\u200b\u65cb\u98ce\u200b\u5c06\u200b\u4e09\u4eba\u200b\u5305\u88f9\u200b\u3002\u200b\u5f53\u200b\u9b54\u6cd5\u200b\u9501\u94fe\u200b\u5373\u5c06\u200b\u89e6\u53ca\u200b\u4ed6\u4eec\u200b\u65f6\u200b\uff0c\u200b\u65cb\u98ce\u200b\u9aa4\u7136\u200b\u6536\u7f29\u200b\uff0c\u200b\u4e09\u4eba\u200b\u8eab\u5f71\u200b\u77ac\u95f4\u200b\u6d88\u5931\u200b\uff0c\u200b\u53ea\u200b\u5728\u200b\u539f\u5730\u200b\u7559\u4e0b\u200b\u4e00\u7247\u200b\u9752\u70df\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u671b\u200b\u7740\u200b\u6d88\u5931\u200b\u7684\u200b\u4e09\u4eba\u200b\uff0c\u200b\u8138\u4e0a\u200b\u95ea\u8fc7\u200b\u4e00\u4e1d\u200b\u6012\u610f\u200b\uff0c\u200b\u4f46\u200b\u5f88\u5feb\u200b\u53c8\u200b\u6062\u590d\u200b\u5e73\u9759\u200b\uff1a\"\u200b\u8dd1\u200b\u5f97\u200b\u4e86\u200b\u521d\u591c\u200b\uff0c\u200b\u8dd1\u4e0d\u4e86\u200b\u5929\u660e\u200b\u3002\u200b\u4f20\u4ee4\u200b\u4e0b\u53bb\u200b\uff0c\u200b\u5c01\u9501\u200b\u5168\u57ce\u200b\uff0c\u200b\u641c\u67e5\u200b\u6d6e\u5c18\u200b\u53ca\u5176\u200b\u540c\u4f19\u200b\u3002\"</p> <p>\u200b\u57ce\u5317\u200b\u4e00\u5904\u200b\u9690\u853d\u200b\u7684\u200b\u5730\u4e0b\u200b\u9152\u7a96\u200b\u4e2d\u200b\uff0cDW\u200b\u6b63\u200b\u7126\u6025\u200b\u5730\u200b\u8e31\u6b65\u200b\u3002\u200b\u7a81\u7136\u200b\uff0c\u200b\u4e00\u9635\u200b\u9752\u70df\u200b\u6d8c\u52a8\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\u7684\u200b\u8eab\u5f71\u200b\u51fa\u73b0\u200b\u5728\u200b\u773c\u524d\u200b\u3002</p> <p>\"\u200b\u603b\u7b97\u200b\u6765\u200b\u4e86\u200b\uff01\"DW\u200b\u677e\u200b\u4e86\u200b\u53e3\u6c14\u200b\uff0c\"\u200b\u60c5\u51b5\u200b\u5982\u4f55\u200b\uff1f\"</p> <p>\u200b\u6d6e\u5c18\u200b\u795e\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u65e9\u200b\u6709\u200b\u51c6\u5907\u200b\uff0c\u200b\u5b9e\u529b\u200b\u6bd4\u200b\u4e94\u5e74\u200b\u524d\u5f3a\u200b\u4e86\u200b\u4e0d\u5c11\u200b\u3002\u200b\u73b0\u5728\u200b\u5168\u57ce\u200b\u6050\u6015\u200b\u5df2\u7ecf\u200b\u6212\u4e25\u200b\uff0c\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u5c3d\u5feb\u200b\u89c1\u5230\u200bmax\u200b\u57ce\u200b\u4e3b\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u865a\u5f31\u200b\u5730\u9760\u200b\u5728\u200b\u5899\u4e0a\u200b\uff1a\"\u200b\u521a\u624d\u200b\u90a3\u200b\u4e00\u62db\u200b\u6d88\u8017\u200b\u592a\u200b\u5927\u200b\uff0c\u200b\u6211\u200b\u9700\u8981\u200b\u4f11\u606f\u200b\u3002\"</p> <p>\u200b\u72ec\u5b88\u200b\u62cd\u62cd\u200b\u5357\u98ce\u200b\u80a9\u8180\u200b\uff1a\"\u200b\u8001\u5144\u200b\uff0c\u200b\u591a\u4e8f\u200b\u4f60\u200b\u53ca\u65f6\u200b\u51fa\u624b\u200b\uff0c\u200b\u5426\u5219\u200b\u6211\u4eec\u200b\u5df2\u200b\u88ab\u200b\u58a8\u67d3\u200b\u64d2\u83b7\u200b\u3002\"</p> <p>DW\u200b\u6253\u5f00\u200b\u5730\u56fe\u200b\uff1a\"\u200b\u6211\u200b\u5df2\u7ecf\u200b\u5b89\u6392\u200b\u597d\u200b\u8def\u7ebf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u79d8\u5bc6\u200b\u524d\u5f80\u200b\u57ce\u4e3b\u5e9c\u200b\u3002\u200b\u4e0d\u8fc7\u200b\u58a8\u67d3\u200b\u7684\u200b\u6cd5\u5e08\u200b\u4eec\u200b\u6b63\u5728\u200b\u5168\u57ce\u200b\u641c\u6355\u200b\uff0c\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u5c0f\u5fc3\u200b\u884c\u4e8b\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u5148\u200b\u4f11\u6574\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u5929\u4eae\u200b\u524d\u200b\u52a8\u8eab\u200b\u3002\u200b\u8fd9\u573a\u200b\u6218\u6597\u200b\uff0c\u200b\u624d\u200b\u521a\u521a\u5f00\u59cb\u200b\u3002\"</p>"},{"location":"creative/three-day-war/#_5","title":"\u7b2c\u4e09\u7ae0\u200b\uff1a\u200b\u57ce\u4e2d\u200b\u6fc0\u6218","text":"<p>\u200b\u9ece\u660e\u524d\u200b\u7684\u200b\u5e1d\u90fd\u200b\u7b3c\u7f69\u200b\u5728\u200b\u4e00\u7247\u200b\u8be1\u5f02\u200b\u7684\u200b\u84dd\u5149\u200b\u4e4b\u4e2d\u200b\u3002\u200b\u58a8\u67d3\u200b\u7ad9\u200b\u5728\u200b\u4e2d\u592e\u200b\u5854\u9876\u200b\uff0c\u200b\u53cc\u624b\u200b\u5f20\u5f00\u200b\uff0c\u200b\u53e3\u4e2d\u200b\u5ff5\u52a8\u200b\u5492\u8bed\u200b\u3002\u200b\u6570\u767e\u540d\u200b\u6cd5\u5e08\u200b\u5206\u5e03\u200b\u5728\u200b\u57ce\u5e02\u200b\u5404\u5904\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u5de8\u5927\u200b\u7684\u200b\u6cd5\u9635\u200b\uff0c\u200b\u84dd\u8272\u200b\u5149\u7ebf\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u4ea4\u7ec7\u6210\u200b\u7f51\u200b\u3002</p> <p>\"\u200b\u901a\u7075\u200b\u6cd5\u773c\u200b\uff0c\u200b\u5bfb\u8e2a\u200b\u89c5\u5f71\u200b\uff01\"\u200b\u968f\u7740\u200b\u58a8\u67d3\u200b\u4e00\u58f0\u200b\u4f4e\u200b\u559d\u200b\uff0c\u200b\u6574\u5ea7\u200b\u57ce\u5e02\u200b\u4e0a\u7a7a\u200b\u7684\u200b\u6cd5\u9635\u200b\u9aa4\u7136\u200b\u4eae\u200b\u8d77\u200b\u523a\u76ee\u200b\u5149\u8292\u200b\u3002</p> <p>\u200b\u5728\u200b\u519c\u4e1a\u90e8\u200b\u529e\u516c\u5ba4\u200b\u5185\u200b\uff0c\u200b\u8424\u706b\u200b\u671b\u200b\u7740\u200b\u7a97\u5916\u200b\u7684\u200b\u5f02\u8c61\u200b\uff0c\u200b\u7709\u5934\u200b\u7d27\u9501\u200b\u3002\u200b\u8eab\u540e\u200b\u4f20\u6765\u200b\u811a\u6b65\u58f0\u200b\uff0c\u200b\u4ed6\u5934\u200b\u4e5f\u200b\u4e0d\u200b\u56de\u5730\u200b\u8bf4\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u8fd9\u200b\u662f\u200b\u7528\u200b\u5c3d\u5168\u529b\u200b\u4e86\u200b\uff0c\u200b\u8fde\u7981\u672f\u200b\u90fd\u200b\u6562\u200b\u5728\u200b\u57ce\u4e2d\u200b\u65bd\u5c55\u200b\u3002\"</p> <p>\u200b\u6765\u200b\u4eba\u200b\u6b63\u662f\u200b\u5c0f\u58a8\u200b\uff0c\u200b\u4ed6\u200b\u795e\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u4f69\u6d1b\u6d1b\u200b\u5df2\u7ecf\u200b\u51c6\u5907\u200b\u597d\u200b\u6a31\u82b1\u200b\u5e84\u56ed\u200b\u4f5c\u4e3a\u200b\u5b89\u5168\u200b\u5c4b\u200b\u3002\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u5e26\u56de\u200b\u7684\u200b\u4e1c\u897f\u200b\uff0c\u200b\u771f\u6709\u200b\u90a3\u4e48\u200b\u91cd\u8981\u200b\u5417\u200b\uff1f\"</p> <p>\u200b\u8424\u706b\u200b\u8f6c\u8eab\u200b\uff0c\u200b\u7cbe\u81f4\u200b\u7684\u200b\u8138\u4e0a\u200b\u7f55\u89c1\u200b\u5730\u200b\u9732\u51fa\u200b\u4e25\u8083\u200b\u8868\u60c5\u200b\uff1a\"\u200b\u90a3\u679a\u200b\u5143\u200b\u7075\u7389\u200b\u5173\u7cfb\u200b\u5230\u200b\u5e1d\u56fd\u200b\u7684\u200b\u547d\u8fd0\u200b\u3002\u200b\u4e94\u5e74\u200b\u524d\u200b\uff0c\u200b\u58a8\u67d3\u200b\u963b\u6320\u200b\u6d6e\u5c18\u200b\u4e1c\u5f81\u200b\uff0c\u200b\u6b63\u662f\u200b\u4e0d\u60f3\u200b\u8ba9\u200b\u4ed6\u200b\u53d1\u73b0\u200b\u8fdc\u4e1c\u200b\u5927\u9646\u200b\u7684\u200b\u79d8\u5bc6\u200b\u3002\"</p> <p>\"\u200b\u90a3\u200b\u6211\u4eec\u200b\u73b0\u5728\u200b...\"</p> <p>\"\u200b\u6309\u8ba1\u5212\u200b\u884c\u4e8b\u200b\uff0c\u200b\u5c3d\u53ef\u80fd\u200b\u652f\u63f4\u200b\u6d6e\u5c18\u200b\u4ed6\u4eec\u200b\u3002\"\u200b\u8424\u706b\u200b\u671b\u200b\u5411\u200b\u7a97\u5916\u200b\uff0c\"\u200b\u4f46\u613f\u200bmax\u200b\u57ce\u200b\u4e3b\u200b\u5df2\u7ecf\u200b\u77e5\u6653\u200b\u6b64\u4e8b\u200b\u3002\"</p> <p>\u200b\u5730\u4e0b\u200b\u9152\u7a96\u200b\u4e2d\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u7b49\u200b\u4eba\u200b\u6b63\u5728\u200b\u51c6\u5907\u200b\u51fa\u53d1\u200b\u3002</p> <p>\"\u200b\u611f\u89c9\u200b\u5230\u200b\u4e86\u200b\u5417\u200b\uff1f\"\u200b\u5357\u98ce\u200b\u62ac\u5934\u200b\u671b\u200b\u5411\u200b\u5929\u82b1\u677f\u200b\uff0c\"\u200b\u58a8\u67d3\u200b\u5df2\u7ecf\u200b\u542f\u52a8\u200b\u4e86\u200b\u901a\u7075\u200b\u6cd5\u773c\u200b\uff0c\u200b\u5168\u57ce\u200b\u90fd\u200b\u5728\u200b\u4ed6\u200b\u7684\u200b\u76d1\u89c6\u200b\u4e4b\u4e0b\u200b\u3002\"</p> <p>\u200b\u72ec\u5b88\u200b\u54a7\u5634\u4e00\u7b11\u200b\uff1a\"\u200b\u90a3\u200b\u6211\u4eec\u200b\u5c31\u200b\u7ed9\u200b\u4ed6\u200b\u70b9\u200b\u989c\u8272\u200b\u770b\u770b\u200b\u3002\"\u200b\u8bf4\u200b\u7740\u200b\uff0c\u200b\u4ed6\u200b\u53d6\u51fa\u200b\u51e0\u679a\u200b\u91d1\u5c5e\u200b\u7403\u200b\uff0c\"\u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u548c\u200bDW\u200b\u7279\u5236\u200b\u7684\u200b'\u200b\u5e7b\u5f71\u200b\u5f39\u200b'\uff0c\u200b\u53ef\u4ee5\u200b\u5e72\u6270\u200b\u6cd5\u672f\u200b\u63a2\u6d4b\u200b\u3002\"</p> <p>DW\u200b\u8865\u5145\u200b\u9053\u200b\uff1a\"\u200b\u6211\u200b\u5df2\u7ecf\u200b\u5b89\u6392\u200b\u4e86\u200b\u51e0\u652f\u200b\u5c0f\u961f\u200b\u5728\u200b\u57ce\u5185\u200b\u4e0d\u540c\u200b\u5730\u70b9\u200b\u5236\u9020\u200b\u9a9a\u52a8\u200b\uff0c\u200b\u5206\u6563\u200b\u58a8\u67d3\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\u3002\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u5206\u5934\u200b\u884c\u52a8\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u5143\u7075\u7389\u200b\u6211\u200b\u968f\u8eab\u643a\u5e26\u200b\u3002\u200b\u72ec\u5b88\u200b\uff0c\u200b\u4f60\u200b\u548c\u200b\u5357\u98ce\u200b\u8d70\u200b\u4e1c\u7ebf\u200b\uff1bDW\uff0c\u200b\u4f60\u200b\u8d1f\u8d23\u200b\u897f\u7ebf\u200b\uff1b\u200b\u6211\u200b\u4ece\u200b\u4e2d\u8def\u200b\u7a81\u8fdb\u200b\uff0c\u200b\u76f4\u5954\u200b\u57ce\u4e3b\u5e9c\u200b\u3002\"</p> <p>\u200b\u56db\u4eba\u200b\u4e92\u76f8\u200b\u63e1\u624b\u200b\uff0c\u200b\u773c\u4e2d\u200b\u90fd\u200b\u95ea\u70c1\u7740\u200b\u51b3\u7136\u200b\u7684\u200b\u5149\u8292\u200b\u3002</p> <p>\"\u200b\u65e0\u8bba\u200b\u7ed3\u679c\u200b\u5982\u4f55\u200b\uff0c\u200b\u4eca\u65e5\u200b\u8fc7\u540e\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u5c06\u200b\u4e0d\u518d\u200b\u662f\u200b\u4ece\u524d\u200b\u7684\u200b\u5e1d\u56fd\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u6c89\u200b\u58f0\u9053\u200b\u3002</p> <p>\u200b\u57ce\u4e1c\u200b\u96c6\u5e02\u200b\uff0c\u200b\u4e00\u9635\u200b\u7206\u70b8\u58f0\u200b\u7a81\u7136\u200b\u54cd\u8d77\u200b\uff0c\u200b\u6d53\u70df\u200b\u51b2\u5929\u200b\u3002\u200b\u6c11\u4f17\u200b\u60ca\u614c\u200b\u5954\u9003\u200b\uff0c\u200b\u6cd5\u5e08\u200b\u536b\u961f\u200b\u8fc5\u901f\u200b\u96c6\u7ed3\u200b\u3002\u200b\u70df\u96fe\u200b\u4e2d\u200b\uff0c\u200b\u72ec\u5b88\u200b\u548c\u200b\u5357\u98ce\u200b\u501f\u7740\u200b\u6df7\u4e71\u200b\u5feb\u901f\u200b\u7a7f\u884c\u200b\u3002</p> <p>\"\u200b\u5de6\u524d\u65b9\u200b\uff0c\u200b\u4e09\u70b9\u949f\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u4e94\u540d\u200b\u6cd5\u5e08\u200b\u3002\"\u200b\u5357\u98ce\u200b\u4f4e\u58f0\u200b\u63d0\u9192\u200b\u3002</p> <p>\u200b\u72ec\u5b88\u200b\u72de\u7b11\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u4ea4\u7ed9\u200b\u6211\u200b\uff01\"\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u4ed6\u200b\u4ece\u200b\u8170\u95f4\u200b\u62bd\u51fa\u200b\u4e24\u628a\u200b\u77ed\u65a7\u200b\uff0c\u200b\u731b\u5730\u200b\u63b7\u200b\u51fa\u200b\u3002\u200b\u65a7\u5203\u200b\u7834\u7a7a\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u547d\u4e2d\u200b\u4e24\u540d\u200b\u6cd5\u5e08\u200b\u7684\u200b\u80a9\u8180\u200b\uff0c\u200b\u5c06\u200b\u4ed6\u4eec\u200b\u9489\u200b\u5728\u200b\u5899\u4e0a\u200b\u3002</p> <p>\u200b\u5269\u4e0b\u200b\u4e09\u540d\u200b\u6cd5\u5e08\u200b\u7acb\u523b\u200b\u53cd\u5e94\u200b\u8fc7\u6765\u200b\uff0c\u200b\u84dd\u8272\u200b\u6cd5\u7403\u200b\u5728\u200b\u624b\u4e2d\u200b\u51dd\u805a\u200b\u3002\u200b\u5357\u98ce\u200b\u8eab\u5f62\u200b\u4e00\u95ea\u200b\uff0c\u200b\u5df2\u5230\u200b\u4ed6\u4eec\u200b\u8eab\u540e\u200b\uff1a\"\u200b\u62b1\u6b49\u200b\u4e86\u200b\u3002\u200b\u98ce\u9041\u200b\u00b7\u200b\u65e0\u58f0\u200b\u4e4b\u5203\u200b\u3002\"</p> <p>\u200b\u4e00\u9635\u200b\u65e0\u5f62\u200b\u6c14\u6d6a\u200b\u626b\u200b\u8fc7\u200b\uff0c\u200b\u4e09\u540d\u200b\u6cd5\u5e08\u200b\u65e0\u58f0\u65e0\u606f\u200b\u5730\u200b\u5012\u4e0b\u200b\u3002\u200b\u5357\u98ce\u200b\u4e0a\u524d\u200b\u68c0\u67e5\u200b\uff1a\"\u200b\u53ea\u662f\u200b\u660f\u8ff7\u200b\uff0c\u200b\u6211\u200b\u6ca1\u4e0b\u200b\u91cd\u624b\u200b\u3002\"</p> <p>\u200b\u72ec\u5b88\u200b\u6536\u56de\u200b\u77ed\u65a7\u200b\uff1a\"\u200b\u522b\u592a\u200b\u4ec1\u6148\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u4eba\u200b\u53ef\u200b\u4e0d\u4f1a\u200b\u624b\u4e0b\u7559\u60c5\u200b\u3002\u200b\u7ee7\u7eed\u524d\u8fdb\u200b\uff0c\u200b\u6309\u8ba1\u5212\u200b\u5728\u200b\u5317\u200b\u5e02\u573a\u200b\u4e0e\u200b\u6d6e\u5c18\u200b\u4f1a\u5408\u200b\u3002\"</p> <p>\u200b\u57ce\u897f\u200b\u7684\u200b\u5b88\u5907\u200b\u8425\u5730\u200b\u540c\u6837\u200b\u9677\u5165\u200b\u6df7\u4e71\u200b\u3002DW\u200b\u8eab\u7740\u200b\u5c06\u519b\u200b\u94e0\u7532\u200b\uff0c\u200b\u6b63\u200b\u5927\u6a21\u5927\u6837\u200b\u5730\u200b\u8d70\u200b\u5728\u200b\u8425\u5730\u200b\u4e2d\u592e\u200b\u3002</p> <p>\"\u200b\u5c06\u519b\u200b\uff01\"\u200b\u4e00\u540d\u200b\u5b88\u536b\u200b\u656c\u793c\u200b\uff0c\"\u200b\u58a8\u67d3\u200b\u5927\u5e08\u200b\u547d\u4ee4\u200b\u5168\u519b\u200b\u6212\u5907\u200b\uff0c\u200b\u641c\u6355\u200b\u53db\u5c06\u200b\u6d6e\u5c18\u200b\uff01\"</p> <p>DW\u200b\u9762\u200b\u65e0\u8868\u60c5\u200b\u5730\u200b\u70b9\u5934\u200b\uff0c\u200b\u7ee7\u7eed\u200b\u524d\u884c\u200b\u3002\u200b\u5f53\u200b\u4ed6\u200b\u8d70\u200b\u5230\u200b\u8425\u5730\u200b\u4e2d\u5fc3\u200b\u65f6\u200b\uff0c\u200b\u7a81\u7136\u200b\u505c\u4e0b\u200b\u811a\u6b65\u200b\uff0c\u200b\u4ece\u200b\u6000\u4e2d\u200b\u53d6\u51fa\u200b\u4e00\u4e2a\u200b\u5c0f\u76d2\u5b50\u200b\uff0c\u200b\u8f7b\u8f7b\u200b\u6253\u5f00\u200b\u3002</p> <p>\"\u200b\u542f\u52a8\u200b\u3002\"</p> <p>\u200b\u76d2\u4e2d\u200b\u98de\u51fa\u200b\u6570\u5341\u53ea\u200b\u673a\u68b0\u200b\u8702\u9e1f\u200b\uff0c\u200b\u8fc5\u901f\u200b\u6563\u5411\u200b\u56db\u5468\u200b\u3002\u200b\u5b88\u536b\u200b\u4eec\u200b\u8fd8\u200b\u672a\u200b\u53cd\u5e94\u200b\u8fc7\u6765\u200b\uff0c\u200b\u8702\u9e1f\u200b\u5df2\u200b\u5728\u200b\u5404\u5904\u200b\u7206\u70b8\u200b\uff0c\u200b\u91ca\u653e\u200b\u51fa\u200b\u5927\u91cf\u200b\u767d\u8272\u200b\u70df\u96fe\u200b\u3002</p> <p>\"\u200b\u654c\u88ad\u200b\uff01\"\u200b\u5b88\u536b\u200b\u4eec\u200b\u614c\u4e71\u200b\u558a\u53eb\u200b\uff0c\u200b\u4f46\u200b\u5f88\u5feb\u200b\u4fbf\u200b\u5728\u200b\u70df\u96fe\u200b\u4e2d\u200b\u660f\u8ff7\u200b\u5012\u4e0b\u200b\u3002</p> <p>DW\u200b\u6234\u4e0a\u200b\u7279\u5236\u200b\u9762\u5177\u200b\uff0c\u200b\u4ece\u5bb9\u200b\u7a7f\u8fc7\u200b\u70df\u96fe\u200b\u533a\u200b\u3002\u200b\u4e00\u4e2a\u200b\u58f0\u97f3\u200b\u7a81\u7136\u200b\u4ece\u200b\u4ed6\u200b\u8eab\u540e\u200b\u54cd\u8d77\u200b\uff1a\"\u200b\u5e73\u8fdc\u200b\u5927\u5c06\u519b\u200b\uff0c\u200b\u4f60\u200b\u8fd9\u200b\u662f\u200b\u53db\u56fd\u200b\u5417\u200b\uff1f\"</p> <p>DW\u200b\u8f6c\u8eab\u200b\uff0c\u200b\u770b\u5230\u200b\u4e00\u540d\u200b\u8eab\u7740\u200b\u9ad8\u7ea7\u200b\u6cd5\u888d\u200b\u7684\u200b\u7537\u5b50\u200b\u7ad9\u200b\u5728\u200b\u90a3\u91cc\u200b\uff0c\u200b\u5468\u8eab\u200b\u84dd\u5149\u200b\u95ea\u70c1\u200b\uff0c\u200b\u5c06\u200b\u70df\u96fe\u200b\u9694\u7edd\u200b\u5728\u5916\u200b\u3002</p> <p>\"\u200b\u58a8\u67d3\u200b\u7684\u200b\u5f97\u610f\u200b\u5f1f\u5b50\u200b\uff1f\"DW\u200b\u51b7\u7b11\u200b\u4e00\u58f0\u200b\uff0c\"\u200b\u53db\u56fd\u200b\u7684\u200b\u662f\u200b\u4f60\u4eec\u200b\u7684\u200b\u5e08\u7236\u200b\u3002\"</p> <p>\u200b\u6cd5\u5e08\u200b\u51b7\u200b\u54fc\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u5927\u9006\u4e0d\u9053\u200b\u7684\u8bdd\u200b\uff0c\u200b\u8db3\u4ee5\u200b\u5904\u6b7b\u200b\uff01\"\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u53cc\u624b\u200b\u731b\u5730\u200b\u63a8\u51fa\u200b\uff0c\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u5149\u675f\u200b\u5c04\u200b\u5411\u200bDW\u3002</p> <p>DW\u200b\u4e0d\u200b\u907f\u200b\u4e0d\u8ba9\u200b\uff0c\u200b\u53f3\u624b\u200b\u7a81\u7136\u200b\u53d8\u5f62\u200b\uff0c\u200b\u5316\u4f5c\u200b\u91d1\u5c5e\u200b\u5229\u722a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u6293\u4f4f\u200b\u5149\u675f\u200b\uff0c\u200b\u751f\u751f\u200b\u5c06\u200b\u5176\u200b\u634f\u788e\u200b\u3002</p> <p>\"\u200b\u4ec0\u4e48\u200b\uff1f\"\u200b\u6cd5\u5e08\u200b\u5927\u60ca\u5931\u8272\u200b\u3002</p> <p>DW\u200b\u8fc5\u901f\u200b\u51b2\u200b\u5230\u200b\u6cd5\u5e08\u200b\u9762\u524d\u200b\uff0c\u200b\u91d1\u5c5e\u200b\u5229\u722a\u200b\u5df2\u200b\u62b5\u200b\u5728\u200b\u5bf9\u65b9\u200b\u54bd\u5589\u200b\uff1a\"\u200b\u4e94\u5e74\u200b\u524d\u200b\u5728\u200b\u4e1c\u5f81\u4e2d\u200b\uff0c\u200b\u6211\u200b\u5931\u53bb\u200b\u4e86\u200b\u53f3\u81c2\u200b\uff0c\u200b\u6362\u4e0a\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u673a\u68b0\u200b\u81c2\u200b\u3002\u200b\u8fd9\u662f\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u9001\u200b\u6211\u200b\u7684\u200b\u793c\u7269\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u6211\u200b\u8ffd\u968f\u200b\u4ed6\u200b\u7684\u200b\u539f\u56e0\u200b\u3002\u200b\u73b0\u5728\u200b\uff0c\u200b\u7761\u4e00\u89c9\u200b\u5427\u200b\u3002\"</p> <p>\u200b\u5229\u722a\u200b\u8f7b\u8f7b\u200b\u4e00\u70b9\u200b\uff0c\u200b\u6cd5\u5e08\u200b\u5e94\u58f0\u200b\u5012\u5730\u200b\u3002DW\u200b\u671b\u200b\u5411\u200b\u57ce\u4e3b\u5e9c\u200b\u65b9\u5411\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\uff0c\u200b\u5e0c\u671b\u200b\u4f60\u200b\u90a3\u8fb9\u200b\u4e00\u5207\u987a\u5229\u200b\u3002\"</p> <p>\u200b\u57ce\u200b\u4e2d\u592e\u200b\u5927\u9053\u200b\u4e0a\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u8eab\u7740\u200b\u666e\u901a\u200b\u5546\u4eba\u200b\u670d\u9970\u200b\uff0c\u200b\u6df7\u5728\u200b\u4eba\u7fa4\u200b\u4e2d\u200b\u524d\u884c\u200b\u3002\u200b\u901a\u7075\u200b\u6cd5\u773c\u200b\u7684\u200b\u84dd\u5149\u200b\u7b3c\u7f69\u200b\u57ce\u5e02\u200b\uff0c\u200b\u8ba9\u200b\u4ed6\u200b\u4e0d\u5f97\u4e0d\u200b\u653e\u6162\u200b\u811a\u6b65\u200b\uff0c\u200b\u5c0f\u5fc3\u200b\u524d\u8fdb\u200b\u3002</p> <p>\u200b\u7a81\u7136\u200b\uff0c\u200b\u524d\u65b9\u200b\u8857\u89d2\u200b\u51fa\u73b0\u200b\u4e00\u961f\u200b\u6cd5\u5e08\u200b\uff0c\u200b\u6b63\u200b\u6328\u5bb6\u6328\u6237\u200b\u641c\u67e5\u200b\u3002\u200b\u6d6e\u5c18\u200b\u8f6c\u8eab\u200b\u6b32\u907f\u200b\uff0c\u200b\u5374\u200b\u53d1\u73b0\u200b\u8eab\u540e\u200b\u4e5f\u200b\u51fa\u73b0\u200b\u4e86\u200b\u5de1\u903b\u200b\u961f\u4f0d\u200b\u3002</p> <p>\"\u200b\u7cdf\u200b\u4e86\u200b\uff0c\u200b\u88ab\u200b\u5305\u56f4\u200b\u4e86\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u6697\u6697\u200b\u63e1\u7d27\u200b\u8170\u95f4\u200b\u957f\u5251\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u4e00\u8f86\u200b\u534e\u4e3d\u200b\u9a6c\u8f66\u200b\u4ece\u4fa7\u200b\u8857\u200b\u9a76\u6765\u200b\uff0c\u200b\u8f66\u5e18\u200b\u6380\u5f00\u200b\uff0c\u200b\u9732\u51fa\u200b\u8424\u706b\u200b\u90a3\u5f20\u200b\u7cbe\u81f4\u200b\u7684\u200b\u8138\u5e9e\u200b\uff1a\"\u200b\u5546\u4eba\u200b\u5148\u751f\u200b\uff0c\u200b\u9700\u8981\u200b\u642d\u8f66\u200b\u5417\u200b\uff1f\"</p> <p>\u200b\u6d6e\u5c18\u200b\u4e00\u200b\u6123\u200b\uff0c\u200b\u968f\u5373\u200b\u4f1a\u610f\u200b\uff0c\u200b\u5feb\u6b65\u200b\u4e0a\u200b\u4e86\u200b\u9a6c\u8f66\u200b\u3002\u200b\u9a6c\u8f66\u200b\u7f13\u7f13\u200b\u9a76\u8fc7\u200b\u6cd5\u5e08\u200b\u961f\u4f0d\u200b\uff0c\u200b\u65e0\u4eba\u200b\u963b\u62e6\u200b\u3002</p> <p>\"\u200b\u519c\u4e1a\u90e8\u957f\u200b\u5927\u4eba\u200b\u4eb2\u81ea\u51fa\u9a6c\u200b\uff0c\u200b\u6211\u200b\u53d7\u5ba0\u82e5\u60ca\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u4f4e\u58f0\u200b\u9053\u200b\u3002</p> <p>\u200b\u8424\u706b\u200b\u5fae\u7b11\u200b\uff1a\"\u200b\u56fd\u5bb6\u680b\u6881\u200b\uff0c\u200b\u7406\u5e94\u200b\u76f8\u52a9\u200b\u3002\u200b\u6211\u200b\u5df2\u7ecf\u200b\u5b89\u6392\u200b\u4e86\u200b\u4e00\u6761\u200b\u5b89\u5168\u200b\u8def\u7ebf\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u8fbe\u200b\u57ce\u4e3b\u5e9c\u200b\u540e\u82b1\u56ed\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u795e\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u4e0d\u4f1a\u200b\u8f7b\u6613\u200b\u653e\u8fc7\u200b\u6211\u4eec\u200b\u3002\"</p> <p>\u200b\u8bdd\u97f3\u521a\u843d\u200b\uff0c\u200b\u9a6c\u8f66\u200b\u4e0a\u65b9\u200b\u7a81\u7136\u200b\u4f20\u6765\u200b\u4e00\u58f0\u200b\u5de8\u54cd\u200b\u3002\u200b\u8f66\u9876\u200b\u88ab\u200b\u4e00\u80a1\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u6495\u5f00\u200b\uff0c\u200b\u5f3a\u5149\u200b\u7167\u5c04\u200b\u8fdb\u6765\u200b\u3002\u200b\u8f66\u200b\u5916\u200b\u4f20\u6765\u200b\u58a8\u67d3\u200b\u51b0\u51b7\u200b\u7684\u200b\u58f0\u97f3\u200b\uff1a</p> <p>\"\u200b\u627e\u5230\u200b\u4f60\u200b\u4e86\u200b\uff0c\u200b\u6d6e\u5c18\u200b\uff01\"</p> <p>\u200b\u6d6e\u5c18\u200b\u731b\u5730\u200b\u8e22\u200b\u5f00\u8f66\u200b\u95e8\u200b\uff0c\u200b\u62d4\u5251\u200b\u800c\u51fa\u200b\u3002\u200b\u8424\u706b\u200b\u7d27\u968f\u5176\u540e\u200b\uff0c\u200b\u624b\u4e2d\u200b\u5df2\u591a\u200b\u4e86\u200b\u4e00\u200b\u67c4\u200b\u7c89\u8272\u200b\u6298\u6247\u200b\uff0c\u200b\u6247\u9762\u200b\u4e0a\u200b\u7b26\u6587\u200b\u95ea\u70c1\u200b\u3002</p> <p>\u200b\u8857\u9053\u200b\u4e0a\u200b\uff0c\u200b\u58a8\u67d3\u200b\u51cc\u7a7a\u200b\u800c\u7acb\u200b\uff0c\u200b\u6570\u5341\u540d\u200b\u6cd5\u5e08\u200b\u5c06\u200b\u4ed6\u4eec\u200b\u56e2\u56e2\u56f4\u4f4f\u200b\u3002\u200b\u8def\u200b\u4eba\u200b\u60ca\u614c\u200b\u9003\u6563\u200b\uff0c\u200b\u5f88\u5feb\u200b\u5c31\u200b\u53ea\u200b\u5269\u4e0b\u200b\u5bf9\u5cd9\u200b\u7684\u200b\u53cc\u65b9\u200b\u3002</p> <p>\"\u200b\u4ea4\u51fa\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u9976\u200b\u4f60\u200b\u4e0d\u200b\u6b7b\u200b\u3002\"\u200b\u58a8\u67d3\u200b\u51b7\u200b\u58f0\u9053\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u51b7\u7b11\u200b\uff1a\"\u200b\u4e94\u5e74\u200b\u524d\u200b\u4f60\u200b\u5c31\u662f\u200b\u8fd9\u4e48\u200b\u8bf4\u200b\u7684\u200b\uff0c\u200b\u7ed3\u679c\u200b\u6211\u200b\u7684\u200b\u4e09\u5343\u200b\u5c06\u58eb\u200b\u846c\u8eab\u5927\u6d77\u200b\uff01\"</p> <p>\u200b\u58a8\u67d3\u200b\u6447\u5934\u200b\uff1a\"\u200b\u90a3\u200b\u662f\u200b\u5fc5\u8981\u200b\u7684\u200b\u727a\u7272\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u82e5\u200b\u843d\u5165\u200b\u5e1d\u56fd\u200b\uff0c\u200b\u5c06\u200b\u5e26\u6765\u200b\u706d\u9876\u4e4b\u707e\u200b\u3002\"</p> <p>\"\u200b\u8c0e\u8a00\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u6012\u543c\u200b\uff0c\"\u200b\u6211\u200b\u5728\u200b\u8fdc\u4e1c\u200b\u53d1\u73b0\u200b\u7684\u200b\u53e4\u7c4d\u200b\u6e05\u695a\u200b\u8bb0\u8f7d\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u662f\u200b\u5e1d\u56fd\u200b\u7956\u5148\u200b\u7559\u4e0b\u200b\u7684\u200b\u5723\u7269\u200b\uff0c\u200b\u80fd\u591f\u200b\u6fc0\u6d3b\u200b\u5730\u4e0b\u200b\u6c89\u7761\u200b\u7684\u200b\u5b88\u62a4\u200b\u6cd5\u9635\u200b\uff0c\u200b\u4fdd\u62a4\u200b\u5e1d\u56fd\u200b\u514d\u53d7\u200b\u5916\u654c\u200b\u5165\u4fb5\u200b\uff01\"</p> <p>\"\u200b\u611a\u8822\u200b\uff01\"\u200b\u58a8\u67d3\u200b\u53cc\u773c\u200b\u95ea\u70c1\u200b\u84dd\u5149\u200b\uff0c\"\u200b\u90a3\u4e9b\u200b\u53ea\u662f\u200b\u8868\u8c61\u200b\uff01\u200b\u5143\u7075\u7389\u200b\u80cc\u540e\u200b\u9690\u85cf\u200b\u7684\u200b\u771f\u76f8\u200b\uff0c\u200b\u4f60\u200b\u6839\u672c\u200b\u4e0d\u200b\u77e5\u9053\u200b\uff01\"</p> <p>\u200b\u8424\u706b\u200b\u7a81\u7136\u200b\u5f00\u53e3\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u5927\u5e08\u200b\uff0c\u200b\u60a8\u200b\u662f\u200b\u5728\u200b\u5bb3\u6015\u200b\u5143\u7075\u7389\u200b\u63ed\u9732\u200b\u60a8\u200b\u7684\u200b\u771f\u5b9e\u200b\u8eab\u4efd\u200b\u5417\u200b\uff1f\"</p> <p>\u200b\u58a8\u67d3\u200b\u8138\u8272\u200b\u9aa4\u53d8\u200b\uff1a\"\u200b\u8424\u706b\u200b\uff0c\u200b\u4f60\u200b...\"</p> <p>\u200b\u4e0d\u200b\u7b49\u200b\u4ed6\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u5df2\u200b\u7eb5\u8eab\u200b\u8dc3\u8d77\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u76f4\u6307\u200b\u58a8\u67d3\u200b\u54bd\u5589\u200b\uff1a\"\u200b\u5c11\u5e9f\u8bdd\u200b\uff0c\u200b\u4eca\u65e5\u200b\u5fc5\u53d6\u200b\u4f60\u200b\u6027\u547d\u200b\uff01\"</p> <p>\u200b\u58a8\u67d3\u200b\u6cd5\u6756\u200b\u4e00\u6325\u200b\uff0c\u200b\u84dd\u8272\u200b\u5c4f\u969c\u200b\u518d\u6b21\u200b\u6210\u5f62\u200b\uff0c\u200b\u6321\u4f4f\u200b\u4e86\u200b\u6d6e\u5c18\u200b\u7684\u200b\u653b\u51fb\u200b\u3002\u200b\u4e24\u4eba\u200b\u77ac\u95f4\u200b\u7f20\u6597\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u5251\u6c14\u200b\u4e0e\u200b\u6cd5\u672f\u200b\u5728\u200b\u8857\u9053\u200b\u4e0a\u200b\u7206\u53d1\u200b\uff0c\u200b\u6380\u8d77\u200b\u9635\u9635\u200b\u51b2\u51fb\u6ce2\u200b\u3002</p> <p>\u200b\u8424\u706b\u200b\u89c1\u72b6\u200b\uff0c\u200b\u5c55\u5f00\u200b\u6298\u6247\u200b\uff1a\"\u200b\u8bf8\u4f4d\u200b\u6cd5\u5e08\u200b\uff0c\u200b\u5f97\u7f6a\u200b\u4e86\u200b\u3002\u200b\u5e7b\u82b1\u200b\u00b7\u200b\u5343\u8776\u200b\u8d77\u821e\u200b\uff01\"</p> <p>\u200b\u7c89\u8272\u200b\u6298\u6247\u200b\u731b\u5730\u200b\u4e00\u6325\u200b\uff0c\u200b\u65e0\u6570\u200b\u7c89\u8272\u200b\u8774\u8776\u200b\u4ece\u200b\u6247\u9762\u200b\u98de\u200b\u51fa\u200b\uff0c\u200b\u6563\u5411\u200b\u5468\u56f4\u200b\u6cd5\u5e08\u200b\u3002\u200b\u90a3\u4e9b\u200b\u8774\u8776\u200b\u770b\u4f3c\u200b\u8106\u5f31\u200b\uff0c\u200b\u5374\u200b\u80fd\u200b\u7a7f\u900f\u200b\u6cd5\u5e08\u200b\u7684\u200b\u9632\u5fa1\u200b\uff0c\u200b\u53ea\u8981\u200b\u6cbe\u200b\u4e0a\u200b\u4e00\u53ea\u200b\uff0c\u200b\u6cd5\u5e08\u200b\u5c31\u200b\u4f1a\u200b\u9677\u5165\u200b\u5e7b\u89c9\u200b\uff0c\u200b\u5931\u53bb\u200b\u6218\u6597\u80fd\u529b\u200b\u3002</p> <p>\u200b\u5f88\u5feb\u200b\uff0c\u200b\u5927\u90e8\u5206\u200b\u6cd5\u5e08\u200b\u90fd\u200b\u5012\u200b\u5728\u200b\u5730\u4e0a\u200b\uff0c\u200b\u5453\u8bed\u200b\u4e0d\u65ad\u200b\u3002\u200b\u8424\u706b\u200b\u6536\u8d77\u200b\u6298\u6247\u200b\uff0c\u200b\u62ac\u5934\u200b\u671b\u200b\u5411\u200b\u6fc0\u6218\u200b\u4e2d\u200b\u7684\u200b\u6d6e\u5c18\u200b\u548c\u200b\u58a8\u67d3\u200b\u3002</p> <p>\u200b\u5929\u7a7a\u200b\u4e2d\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u4e0e\u200b\u58a8\u67d3\u200b\u7684\u200b\u6218\u6597\u200b\u5df2\u200b\u8fdb\u5165\u200b\u767d\u70ed\u5316\u200b\u3002\u200b\u6d6e\u5c18\u200b\u7684\u200b\u9ed1\u7130\u200b\u5251\u6cd5\u200b\u51cc\u5389\u200b\u65e0\u6bd4\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u5251\u200b\u90fd\u200b\u643a\u5e26\u200b\u7740\u200b\u8db3\u4ee5\u200b\u6495\u88c2\u200b\u6cd5\u672f\u200b\u7684\u200b\u529b\u91cf\u200b\u3002\u200b\u58a8\u67d3\u200b\u5219\u200b\u6e38\u5203\u6709\u4f59\u200b\uff0c\u200b\u6cd5\u6756\u200b\u6325\u821e\u200b\u95f4\u200b\uff0c\u200b\u65e0\u6570\u200b\u84dd\u8272\u200b\u6cd5\u672f\u200b\u5982\u200b\u6d41\u661f\u200b\u822c\u5c04\u200b\u5411\u200b\u6d6e\u5c18\u200b\u3002</p> <p>\"\u200b\u7131\u200b\u9b42\u200b\u00b7\u200b\u7206\u88c2\u200b\u65a9\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u957f\u5251\u200b\u9ad8\u4e3e\u200b\uff0c\u200b\u9ed1\u7130\u200b\u51dd\u805a\u200b\u6210\u200b\u4e00\u6761\u200b\u706b\u9f99\u200b\uff0c\u200b\u968f\u7740\u200b\u5251\u52bf\u200b\u5288\u200b\u4e0b\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u53cc\u624b\u200b\u5408\u5341\u200b\uff0c\u200b\u6cd5\u6756\u200b\u60ac\u6d6e\u200b\u5728\u200b\u524d\u200b\uff1a\"\u200b\u7981\u5492\u200b\u00b7\u200b\u82cd\u7a79\u200b\u58c1\u5792\u200b\uff01\"</p> <p>\u200b\u4e00\u9053\u200b\u5de8\u5927\u200b\u7684\u200b\u84dd\u8272\u200b\u5149\u5899\u200b\u5728\u200b\u4ed6\u200b\u9762\u524d\u200b\u5f62\u6210\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u7684\u200b\u706b\u9f99\u200b\u649e\u200b\u4e0a\u200b\u5149\u5899\u200b\uff0c\u200b\u7206\u53d1\u200b\u51fa\u200b\u9707\u8033\u6b32\u804b\u200b\u7684\u200b\u8f70\u9e23\u200b\u3002\u200b\u4e24\u80a1\u200b\u529b\u91cf\u200b\u76f8\u6301\u4e0d\u4e0b\u200b\uff0c\u200b\u6700\u7ec8\u200b\u540c\u65f6\u200b\u6e83\u6563\u200b\uff0c\u200b\u4ea7\u751f\u200b\u7684\u200b\u51b2\u51fb\u6ce2\u200b\u5c06\u200b\u5468\u56f4\u200b\u5efa\u7b51\u200b\u7684\u200b\u7a97\u6237\u200b\u5c3d\u6570\u200b\u9707\u788e\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u8d81\u673a\u200b\u6b3a\u200b\u8eab\u4e0a\u200b\u524d\u200b\uff0c\u200b\u5251\u5c16\u200b\u76f4\u6307\u200b\u58a8\u67d3\u200b\u80f8\u53e3\u200b\u3002\u200b\u58a8\u67d3\u200b\u6765\u4e0d\u53ca\u200b\u65bd\u6cd5\u200b\uff0c\u200b\u53ea\u80fd\u200b\u4fa7\u8eab\u200b\u95ea\u907f\u200b\uff0c\u200b\u4f46\u200b\u4ecd\u200b\u88ab\u200b\u5251\u950b\u200b\u5212\u7834\u200b\u6cd5\u888d\u200b\uff0c\u200b\u7559\u4e0b\u200b\u4e00\u9053\u200b\u6d45\u4f24\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u679c\u7136\u200b\u6709\u6240\u200b\u4fdd\u7559\u200b\u3002\"\u200b\u58a8\u67d3\u200b\u51b7\u7b11\u200b\uff0c\"\u200b\u4e94\u5e74\u200b\u524d\u200b\u4f60\u200b\u5c31\u200b\u4e0d\u662f\u200b\u6211\u200b\u7684\u200b\u5bf9\u624b\u200b\uff0c\u200b\u4eca\u65e5\u200b\u4e5f\u200b\u662f\u200b\u5982\u6b64\u200b\uff01\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u58a8\u67d3\u200b\u7a81\u7136\u200b\u6495\u5f00\u200b\u81ea\u5df1\u200b\u7684\u200b\u6cd5\u888d\u200b\uff0c\u200b\u9732\u51fa\u200b\u91cc\u9762\u200b\u5e03\u6ee1\u200b\u84dd\u8272\u200b\u7b26\u6587\u200b\u7684\u200b\u8eab\u4f53\u200b\u3002\u200b\u90a3\u4e9b\u200b\u7b26\u6587\u200b\u5f00\u59cb\u200b\u53d1\u5149\u200b\uff0c\u200b\u58a8\u67d3\u200b\u7684\u200b\u8eab\u4f53\u200b\u9010\u6e10\u200b\u53d8\u5f97\u200b\u900f\u660e\u200b\uff0c\u200b\u5982\u540c\u200b\u6c34\u6676\u200b\u4e00\u822c\u200b\u3002</p> <p>\"\u200b\u7981\u5fcc\u200b\u6cd5\u672f\u200b\u00b7\u200b\u5143\u7d20\u200b\u5316\u8eab\u200b\uff01\"</p> <p>\u200b\u58a8\u67d3\u200b\u7684\u200b\u8eab\u4f53\u200b\u5b8c\u5168\u200b\u5316\u4f5c\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u4f53\u200b\uff0c\u200b\u901f\u5ea6\u200b\u548c\u200b\u529b\u91cf\u200b\u5927\u5e45\u200b\u63d0\u5347\u200b\u3002\u200b\u4ed6\u200b\u5982\u200b\u95ea\u7535\u822c\u200b\u51b2\u5411\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u6bcf\u4e00\u51fb\u200b\u90fd\u200b\u5e26\u200b\u7740\u200b\u6467\u6bc1\u200b\u4e00\u5207\u200b\u7684\u200b\u529b\u91cf\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u8282\u8282\u8d25\u9000\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u4e0a\u200b\u5df2\u200b\u5e03\u6ee1\u200b\u88c2\u7eb9\u200b\uff0c\u200b\u968f\u65f6\u200b\u53ef\u80fd\u200b\u65ad\u88c2\u200b\u3002</p> <p>\"\u200b\u5c06\u519b\u200b\uff01\"\u200b\u8424\u706b\u200b\u7126\u6025\u200b\u558a\u9053\u200b\uff0c\"\u200b\u6211\u6765\u52a9\u200b\u4f60\u200b\uff01\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u58a8\u67d3\u200b\u51c6\u5907\u200b\u53d1\u52a8\u200b\u81f4\u547d\u200b\u4e00\u51fb\u65f6\u200b\uff0c\u200b\u4e00\u652f\u200b\u91d1\u8272\u200b\u7bad\u77e2\u200b\u7a81\u7136\u200b\u4ece\u200b\u8fdc\u5904\u200b\u5c04\u200b\u6765\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u547d\u4e2d\u200b\u58a8\u67d3\u200b\u7684\u200b\u80fd\u91cf\u200b\u4f53\u200b\uff0c\u200b\u8ba9\u200b\u4ed6\u200b\u7684\u200b\u8eab\u5f62\u200b\u51fa\u73b0\u200b\u77ed\u6682\u200b\u51dd\u6ede\u200b\u3002</p> <p>\u200b\u6240\u6709\u4eba\u200b\u987a\u7740\u200b\u7bad\u77e2\u200b\u65b9\u5411\u200b\u671b\u53bb\u200b\uff0c\u200b\u53ea\u89c1\u200b\u57ce\u4e3b\u5e9c\u200b\u65b9\u5411\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u8eab\u5f71\u200b\u7ad9\u200b\u5728\u200b\u9ad8\u5854\u200b\u4e4b\u4e0a\u200b\u3002</p> <p>\"\u200b\u90a3\u200b\u662f\u200b...max\u200b\u57ce\u200b\u4e3b\u200b\uff1f\"\u200b\u8424\u706b\u200b\u60ca\u8bb6\u200b\u9053\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u56de\u8fc7\u200b\u795e\u6765\u200b\uff0c\u200b\u9762\u8272\u200b\u5927\u200b\u53d8\u200b\uff1a\"\u200b\u4e0d\u200b\u53ef\u80fd\u200b\uff01\u200b\u4f60\u200b\u600e\u4e48\u200b\u4f1a\u200b\u51fa\u624b\u200b\uff01\"</p> <p>\u200b\u8fdc\u5904\u200b\u7684\u200b\u8eab\u5f71\u200b\u518d\u6b21\u200b\u62c9\u5f13\u200b\uff0c\u200b\u53c8\u200b\u4e00\u652f\u200b\u91d1\u8272\u200b\u7bad\u77e2\u200b\u7834\u7a7a\u200b\u800c\u200b\u6765\u200b\u3002\u200b\u58a8\u67d3\u200b\u4e0d\u6562\u200b\u786c\u63a5\u200b\uff0c\u200b\u6025\u901f\u200b\u540e\u9000\u200b\uff0c\u200b\u6062\u590d\u200b\u4eba\u5f62\u200b\u3002</p> <p>\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\uff0c\u200b\u901f\u6765\u200b\u57ce\u4e3b\u5e9c\u200b\uff01\"\u200b\u8fdc\u5904\u200b\u4f20\u6765\u200bmax\u200b\u7684\u200b\u58f0\u97f3\u200b\uff0c\u200b\u6d2a\u4eae\u200b\u800c\u200b\u5a01\u4e25\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u6293\u4f4f\u673a\u4f1a\u200b\uff0c\u200b\u6536\u8d77\u200b\u65ad\u88c2\u200b\u7684\u200b\u957f\u5251\u200b\uff0c\u200b\u5bf9\u200b\u8424\u706b\u200b\u558a\u9053\u200b\uff1a\"\u200b\u8d70\u200b\uff01\"</p> <p>\u200b\u4e8c\u4eba\u200b\u8fc5\u901f\u200b\u5411\u200b\u57ce\u4e3b\u5e9c\u200b\u65b9\u5411\u200b\u5954\u200b\u53bb\u200b\u3002\u200b\u58a8\u67d3\u200b\u60f3\u8981\u200b\u8ffd\u51fb\u200b\uff0c\u200b\u5374\u200b\u53d1\u73b0\u200b\u8eab\u4f53\u200b\u88ab\u200b\u4e00\u80a1\u200b\u65e0\u5f62\u200b\u529b\u91cf\u200b\u7981\u9522\u200b\u3002</p> <p>\"\u200b\u58a8\u67d3\u200b\uff0c\u200b\u591f\u200b\u4e86\u200b\u3002\"max\u200b\u7684\u200b\u58f0\u97f3\u200b\u518d\u6b21\u200b\u54cd\u8d77\u200b\uff0c\"\u200b\u4e94\u5e74\u200b\u524d\u200b\u7684\u200b\u4e8b\u200b\uff0c\u200b\u662f\u200b\u65f6\u5019\u200b\u6709\u4e2a\u200b\u4e86\u200b\u65ad\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u58a8\u67d3\u200b\u8138\u8272\u200b\u9634\u6674\u4e0d\u5b9a\u200b\uff0c\u200b\u6700\u7ec8\u200b\u51b7\u200b\u54fc\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u5982\u4f60\u6240\u613f\u200b\uff0c\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b\u3002\u200b\u4f46\u200b\u8fd9\u573a\u200b\u6218\u6597\u200b\uff0c\u200b\u8fd8\u200b\u8fdc\u200b\u672a\u200b\u7ed3\u675f\u200b\u3002\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u4ed6\u200b\u5316\u4f5c\u200b\u4e00\u9053\u200b\u84dd\u5149\u200b\u6d88\u5931\u200b\u5728\u200b\u539f\u5730\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u548c\u200b\u8424\u706b\u200b\u4e00\u8def\u200b\u72c2\u5954\u200b\uff0c\u200b\u7ec8\u4e8e\u200b\u62b5\u8fbe\u200b\u57ce\u4e3b\u5e9c\u200b\u540e\u82b1\u56ed\u200b\uff0c\u200b\u4e0e\u200b\u72ec\u5b88\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200bDW\u200b\u4f1a\u5408\u200b\u3002</p> <p>\"\u200b\u5c06\u519b\u200b\uff01\"\u200b\u4f17\u4eba\u200b\u9f50\u58f0\u200b\u547c\u5524\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u5598\u200b\u7740\u200b\u7c97\u6c14\u200b\uff0c\u200b\u8138\u4e0a\u200b\u5374\u200b\u9732\u51fa\u200b\u7b11\u5bb9\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u6210\u529f\u200b\u4e86\u200b\uff0c\u200b\u7ec8\u4e8e\u200b\u89c1\u5230\u200bmax\u200b\u57ce\u4e3b\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0cmax\u200b\u7684\u200b\u8eab\u5f71\u200b\u51fa\u73b0\u200b\u5728\u200b\u82b1\u56ed\u200b\u4e2d\u592e\u200b\u3002\u200b\u4ed6\u200b\u8eab\u7740\u200b\u91d1\u8272\u200b\u957f\u888d\u200b\uff0c\u200b\u9762\u5bb9\u200b\u5374\u200b\u9690\u85cf\u200b\u5728\u200b\u515c\u5e3d\u200b\u7684\u200b\u9634\u5f71\u200b\u4e2d\u200b\uff0c\u200b\u7ed9\u200b\u4eba\u200b\u4e00\u79cd\u200b\u795e\u79d8\u83ab\u6d4b\u200b\u7684\u200b\u611f\u89c9\u200b\u3002</p> <p>\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\uff0c\u200b\u6b22\u8fce\u200b\u56de\u6765\u200b\u3002\"max\u200b\u5e73\u9759\u200b\u7684\u200b\u58f0\u97f3\u200b\u4f20\u6765\u200b\uff0c\"\u200b\u5c55\u793a\u200b\u7ed9\u200b\u6211\u200b\u770b\u770b\u200b\uff0c\u200b\u4f60\u200b\u4ece\u200b\u8fdc\u4e1c\u200b\u5e26\u56de\u200b\u7684\u200b\u5b9d\u7269\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u5355\u819d\u200b\u8dea\u200b\u5730\u200b\uff0c\u200b\u4ece\u200b\u6000\u4e2d\u200b\u53d6\u51fa\u200b\u90a3\u679a\u200b\u6563\u53d1\u200b\u7740\u200b\u53e4\u8001\u200b\u6c14\u606f\u200b\u7684\u200b\u7389\u4f69\u200b\u2014\u2014\u200b\u5143\u7075\u7389\u200b\u3002</p> <p>\"\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b\uff0c\u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u7528\u200b\u4e09\u5343\u200b\u5c06\u58eb\u200b\u6027\u547d\u200b\u6362\u6765\u200b\u7684\u200b\u771f\u76f8\u200b\u3002\"</p>"},{"location":"creative/three-day-war/#_6","title":"\u7b2c\u4e8c\u5377\u200b\uff1a\u200b\u771f\u76f8\u200b\u4e4b\u6218","text":""},{"location":"creative/three-day-war/#_7","title":"\u7b2c\u56db\u7ae0\u200b\uff1a\u200b\u5f80\u4e8b\u200b\u4e0e\u200b\u9690\u79d8","text":"<p>\u200b\u57ce\u4e3b\u5e9c\u200b\u6700\u9ad8\u5c42\u200b\u7684\u200b\u4f1a\u8bae\u5385\u200b\u5185\u200b\uff0c\u200b\u6c14\u6c1b\u200b\u51dd\u91cd\u200b\u3002\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u3001\u200b\u72ec\u5b88\u200b\u3001DW\u200b\u548c\u200b\u8424\u706b\u200b\u7ad9\u200b\u5728\u200b\u4e00\u4fa7\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u88ab\u200b\u653e\u7f6e\u200b\u5728\u200b\u4e2d\u592e\u200b\u7684\u200b\u6c34\u6676\u200b\u53f0\u4e0a\u200b\uff0c\u200b\u6563\u53d1\u200b\u7740\u200b\u5fae\u5f31\u200b\u7684\u200b\u7eff\u5149\u200b\u3002max\u200b\u7ad9\u200b\u5728\u200b\u7a97\u524d\u200b\uff0c\u200b\u80cc\u5bf9\u200b\u4f17\u4eba\u200b\uff0c\u200b\u6c89\u9ed8\u4e0d\u8bed\u200b\u3002</p> <p>\"\u200b\u4e94\u5e74\u200b\u524d\u200b\uff0c\u200b\u6211\u200b\u5949\u547d\u200b\u8fdc\u5f81\u200b\u4e1c\u65b9\u200b\u5927\u9646\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u6253\u7834\u200b\u6c89\u9ed8\u200b\uff0c\"\u200b\u8868\u9762\u200b\u4e0a\u200b\u662f\u200b\u4e3a\u4e86\u200b\u6269\u5f20\u200b\u9886\u571f\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u6211\u200b\u63a5\u5230\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u79d8\u5bc6\u200b\u4efb\u52a1\u200b\u2014\u2014\u200b\u5bfb\u627e\u200b\u4f20\u8bf4\u200b\u4e2d\u200b\u7684\u200b\u5143\u200b\u7075\u7389\u200b\u3002\"</p> <p>max\u200b\u7f13\u7f13\u200b\u8f6c\u8eab\u200b\uff1a\"\u200b\u8c01\u200b\u7ed9\u200b\u4f60\u200b\u7684\u200b\u79d8\u5bc6\u200b\u4efb\u52a1\u200b\uff1f\"</p> <p>\"\u200b\u662f\u200b\u5148\u524d\u200b\u7684\u200b\u57ce\u4e3b\u200b\u987e\u95ee\u200b\uff0c\u200b\u4ed6\u200b\u4e34\u7ec8\u524d\u200b\u544a\u8bc9\u200b\u6211\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u662f\u200b\u5e1d\u56fd\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u62a4\u56fd\u200b\u795e\u5668\u200b\uff0c\u200b\u66fe\u200b\u5728\u200b\u5343\u5e74\u200b\u524d\u200b\u7684\u200b\u5927\u6218\u200b\u4e2d\u200b\u88ab\u200b\u654c\u56fd\u200b\u5077\u8d70\u200b\uff0c\u200b\u85cf\u200b\u5728\u200b\u4e1c\u65b9\u200b\u5927\u9646\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u8865\u5145\u200b\u9053\u200b\uff1a\"\u200b\u6211\u200b\u66fe\u200b\u662f\u200b\u5bab\u5ef7\u200b\u53f2\u5b98\u200b\uff0c\u200b\u53e4\u7c4d\u200b\u4e2d\u200b\u786e\u5b9e\u200b\u6709\u5143\u200b\u7075\u7389\u200b\u7684\u200b\u8bb0\u8f7d\u200b\uff0c\u200b\u5b83\u200b\u80fd\u200b\u6fc0\u6d3b\u200b\u57cb\u85cf\u200b\u5728\u200b\u5e1d\u56fd\u200b\u5730\u4e0b\u200b\u7684\u200b\u5b88\u62a4\u200b\u6cd5\u9635\u200b\u3002\"</p> <p>max\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u7ee7\u7eed\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u795e\u8272\u200b\u9eef\u7136\u200b\uff1a\"\u200b\u8fdc\u5f81\u200b\u9014\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u8230\u961f\u200b\u906d\u9047\u200b\u4e86\u200b\u4e0d\u660e\u200b\u6765\u6e90\u200b\u7684\u200b\u9b54\u6cd5\u200b\u98ce\u66b4\u200b\uff0c\u200b\u635f\u5931\u60e8\u91cd\u200b\u3002\u200b\u540e\u6765\u200b\u6211\u200b\u624d\u200b\u5f97\u77e5\u200b\uff0c\u200b\u90a3\u200b\u662f\u200b\u58a8\u67d3\u200b\u79d8\u5bc6\u200b\u6d3e\u200b\u4eba\u200b\u5236\u9020\u200b\u7684\u200b\u3002\u200b\u4ed6\u200b\u4e0d\u60f3\u200b\u8ba9\u200b\u6211\u4eec\u200b\u627e\u5230\u200b\u5143\u7075\u7389\u200b\u3002\"</p> <p>\"\u200b\u80fd\u200b\u8bc1\u660e\u200b\u5417\u200b\uff1f\"max\u200b\u95ee\u9053\u200b\u3002</p> <p>DW\u200b\u7ad9\u200b\u51fa\u6765\u200b\uff1a\"\u200b\u6211\u200b\u6709\u200b\u8bc1\u636e\u200b\u3002\"\u200b\u4ed6\u200b\u53d6\u51fa\u200b\u4e00\u4e2a\u200b\u5c0f\u578b\u200b\u8bb0\u5f55\u200b\u6c34\u6676\u200b\uff0c\"\u200b\u8fd9\u200b\u662f\u200b\u6211\u200b\u4ece\u200b\u58a8\u67d3\u200b\u4e00\u540d\u200b\u5f1f\u5b50\u200b\u90a3\u91cc\u200b\u7f34\u83b7\u200b\u7684\u200b\uff0c\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u4e94\u5e74\u200b\u524d\u200b\u7684\u200b\u9b54\u6cd5\u200b\u98ce\u66b4\u200b\u65bd\u6cd5\u200b\u8fc7\u7a0b\u200b\u3002\"</p> <p>\u200b\u6c34\u6676\u200b\u6fc0\u6d3b\u200b\uff0c\u200b\u84dd\u5149\u200b\u4e2d\u200b\u663e\u73b0\u51fa\u200b\u58a8\u67d3\u200b\u6307\u6325\u200b\u6cd5\u5e08\u200b\u4eec\u200b\u65bd\u6cd5\u200b\u7684\u200b\u753b\u9762\u200b\u3002</p> <p>max\u200b\u6c89\u9ed8\u200b\u7247\u523b\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u4f60\u200b\u662f\u200b\u600e\u4e48\u200b\u627e\u5230\u200b\u5143\u7075\u7389\u200b\u7684\u200b\uff1f\"</p> <p>\"\u200b\u5728\u200b\u4e1c\u65b9\u200b\u5927\u9646\u200b\u6700\u6df1\u5904\u200b\u7684\u200b\u53e4\u8001\u200b\u9057\u8ff9\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u53d1\u73b0\u200b\u4e86\u200b\u4e00\u5ea7\u200b\u5b88\u62a4\u200b\u68ee\u4e25\u200b\u7684\u200b\u795e\u5e99\u200b\u3002\u200b\u635f\u5931\u200b\u4e86\u200b\u5927\u534a\u200b\u5175\u529b\u200b\u540e\u200b\uff0c\u200b\u6211\u4eec\u200b\u7ec8\u4e8e\u200b\u8fdb\u5165\u200b\u6838\u5fc3\u200b\u533a\u57df\u200b\uff0c\u200b\u627e\u5230\u200b\u4e86\u200b\u8fd9\u679a\u200b\u7389\u4f69\u200b\u548c\u200b\u4e00\u4e9b\u200b\u53e4\u7c4d\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u6307\u5411\u200b\u5143\u7075\u7389\u200b\uff0c\"\u200b\u53e4\u7c4d\u200b\u8bb0\u8f7d\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u5fc5\u987b\u200b\u5728\u200b\u6ee1\u6708\u200b\u4e4b\u591c\u200b\u653e\u5165\u200b\u5e1d\u56fd\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u7684\u200b\u6cd5\u9635\u200b\u4e2d\u200b\uff0c\u200b\u624d\u80fd\u200b\u5524\u9192\u200b\u6c89\u7761\u200b\u7684\u200b\u5b88\u62a4\u200b\u9635\u6cd5\u200b\u3002\"</p> <p>\"\u200b\u800c\u200b\u4e09\u5929\u200b\u540e\u200b\uff0c\u200b\u6b63\u597d\u200b\u662f\u200b\u6ee1\u6708\u200b\u3002\"\u200b\u5357\u98ce\u200b\u8865\u5145\u200b\u9053\u200b\u3002</p> <p>max\u200b\u8d70\u200b\u5230\u200b\u6c34\u6676\u200b\u53f0\u524d\u200b\uff0c\u200b\u4ed4\u7ec6\u89c2\u5bdf\u200b\u5143\u7075\u7389\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u7684\u200b\u884c\u4e3a\u200b\u786e\u5b9e\u200b\u53ef\u7591\u200b\uff0c\u200b\u4f46\u200b\u4ed6\u200b\u662f\u200b\u5e1d\u56fd\u200b\u9996\u5e2d\u200b\u5927\u6cd5\u5e08\u200b\uff0c\u200b\u4e00\u5411\u200b\u5fe0\u5fc3\u803f\u803f\u200b\u3002\u200b\u4e3a\u4f55\u200b\u4ed6\u4f1a\u200b\u4e0d\u60dc\u4e00\u5207\u200b\u4ee3\u4ef7\u200b\u963b\u6b62\u200b\u5143\u7075\u7389\u200b\u56de\u5f52\u200b\uff1f\"</p> <p>\u200b\u8424\u706b\u200b\u8f7b\u8f7b\u200b\u6447\u5934\u200b\uff1a\"\u200b\u6211\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5927\u80c6\u200b\u7684\u200b\u731c\u6d4b\u200b\u3002\u200b\u58a8\u67d3\u200b\u5927\u5e08\u200b\u53ef\u80fd\u200b\u4e0d\u662f\u200b\u6211\u4eec\u200b\u8ba4\u8bc6\u200b\u7684\u200b\u90a3\u4e2a\u200b\u58a8\u67d3\u200b\u3002\"</p> <p>\u200b\u4f17\u4eba\u200b\u60ca\u8bb6\u200b\u5730\u671b\u200b\u5411\u200b\u8424\u706b\u200b\u3002</p> <p>\"\u200b\u4ec0\u4e48\u200b\u610f\u601d\u200b\uff1f\"\u200b\u72ec\u5b88\u200b\u95ee\u9053\u200b\u3002</p> <p>\u200b\u8424\u706b\u200b\u53d6\u51fa\u200b\u4e00\u5377\u200b\u4e1d\u7ef8\u200b\u753b\u5377\u200b\uff1a\"\u200b\u8fd9\u662f\u200b\u58a8\u67d3\u200b\u6210\u4e3a\u200b\u9996\u5e2d\u200b\u5927\u6cd5\u5e08\u200b\u524d\u200b\u7684\u200b\u753b\u50cf\u200b\u3002\"\u200b\u4ed6\u200b\u5c55\u5f00\u200b\u753b\u5377\u200b\uff0c\u200b\u6307\u5411\u200b\u58a8\u67d3\u200b\u7684\u200b\u773c\u775b\u200b\uff0c\"\u200b\u6ce8\u610f\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u5f53\u65f6\u200b\u4ed6\u200b\u7684\u200b\u773c\u775b\u200b\u662f\u200b\u8910\u8272\u200b\u7684\u200b\u3002\"</p> <p>DW\u200b\u76b1\u7709\u200b\uff1a\"\u200b\u4f46\u200b\u73b0\u5728\u200b\u58a8\u67d3\u200b\u7684\u200b\u773c\u775b\u200b\u662f\u200b\u84dd\u8272\u200b\u7684\u200b\u3002\"</p> <p>\"\u200b\u6700\u521d\u200b\u6211\u200b\u4ee5\u4e3a\u200b\u662f\u200b\u65bd\u6cd5\u200b\u8fc7\u591a\u200b\u5bfc\u81f4\u200b\u7684\u200b\u53d8\u5316\u200b\u3002\"\u200b\u8424\u706b\u200b\u7ee7\u7eed\u200b\u9053\u200b\uff0c\"\u200b\u4f46\u200b\u4eca\u5929\u200b\u770b\u5230\u200b\u4ed6\u200b\u4f7f\u7528\u200b\u5143\u7d20\u200b\u5316\u8eab\u200b\u6cd5\u672f\u200b\uff0c\u200b\u6211\u200b\u786e\u4fe1\u200b\u4e86\u200b\u4e00\u4ef6\u200b\u4e8b\u200b\u2014\u2014\u200b\u58a8\u67d3\u200b\u5f88\u200b\u53ef\u80fd\u200b\u88ab\u200b\u67d0\u79cd\u200b\u5b58\u5728\u200b\u9644\u8eab\u200b\u6216\u200b\u66ff\u6362\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u731b\u5730\u200b\u7ad9\u200b\u8d77\u200b\uff1a\"\u200b\u96be\u602a\u200b\u4ed6\u200b\u5bf9\u200b\u5143\u200b\u7075\u7389\u200b\u5982\u6b64\u200b\u5fcc\u60ee\u200b\uff01\u200b\u5982\u679c\u200b\u5143\u7075\u7389\u80fd\u200b\u6fc0\u6d3b\u200b\u5b88\u62a4\u200b\u6cd5\u9635\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4efb\u4f55\u200b\u6f5c\u4f0f\u200b\u5728\u200b\u5e1d\u56fd\u200b\u7684\u200b\u5916\u6765\u200b\u5b58\u5728\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u9a71\u9010\u200b\u6216\u200b\u6d88\u706d\u200b\uff01\"</p> <p>max\u200b\u82e5\u6709\u6240\u601d\u200b\uff1a\"\u200b\u8fd9\u4e2a\u200b\u63a8\u6d4b\u200b\u5408\u7406\u200b\uff0c\u200b\u4f46\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u66f4\u200b\u591a\u200b\u8bc1\u636e\u200b\u3002\u200b\u5728\u200b\u51b3\u5b9a\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u884c\u52a8\u200b\u524d\u200b\uff0c\u200b\u6211\u200b\u5fc5\u987b\u200b\u4eb2\u81ea\u200b\u4e0e\u200b\u58a8\u67d3\u200b\u5bf9\u8bdd\u200b\u3002\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u7a97\u5916\u200b\u7a81\u7136\u200b\u5929\u8272\u200b\u9aa4\u53d8\u200b\uff0c\u200b\u4e4c\u4e91\u5bc6\u5e03\u200b\uff0c\u200b\u84dd\u8272\u200b\u95ea\u7535\u200b\u5212\u7834\u200b\u5929\u9645\u200b\u3002</p> <p>\"\u200b\u4e0d\u597d\u200b\uff01\"\u200b\u5357\u98ce\u200b\u51b2\u200b\u5230\u200b\u7a97\u524d\u200b\uff0c\"\u200b\u58a8\u67d3\u200b\u5728\u200b\u4e2d\u592e\u200b\u5854\u200b\u542f\u52a8\u200b\u4e86\u200b\u67d0\u79cd\u200b\u5927\u578b\u200b\u6cd5\u672f\u200b\uff01\"</p> <p>max\u200b\u773c\u4e2d\u200b\u95ea\u8fc7\u200b\u4e00\u4e1d\u200b\u9510\u5229\u200b\u5149\u8292\u200b\uff1a\"\u200b\u770b\u6765\u200b\u4ed6\u200b\u7b49\u4e0d\u53ca\u200b\u4e86\u200b\u3002\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u4fdd\u62a4\u200b\u597d\u5143\u200b\u7075\u7389\u200b\uff0c\u200b\u6211\u200b\u53bb\u200b\u4f1a\u4f1a\u200b\u4ed6\u200b\u3002\"</p> <p>\u200b\u4e2d\u592e\u200b\u5854\u9876\u200b\uff0c\u200b\u58a8\u67d3\u200b\u53cc\u624b\u200b\u9ad8\u4e3e\u200b\uff0c\u200b\u5468\u8eab\u200b\u73af\u7ed5\u7740\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u6f29\u6da1\u200b\u3002\u200b\u6570\u767e\u540d\u200b\u6cd5\u5e08\u200b\u5728\u200b\u5854\u200b\u7684\u200b\u5404\u5c42\u200b\u534f\u52a9\u200b\u65bd\u6cd5\u200b\uff0c\u200b\u6574\u5ea7\u200b\u5854\u200b\u88ab\u200b\u84dd\u5149\u200b\u7b3c\u7f69\u200b\u3002</p> <p>\"\u200b\u7981\u5fcc\u200b\u6cd5\u672f\u200b\u00b7\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\uff01\"\u200b\u58a8\u67d3\u200b\u9ad8\u58f0\u200b\u541f\u5531\u200b\uff0c\u200b\u58f0\u97f3\u200b\u5df2\u4e0d\u4f3c\u200b\u4eba\u7c7b\u200b\uff0c\u200b\u5e26\u200b\u7740\u200b\u67d0\u79cd\u200b\u91d1\u5c5e\u200b\u8d28\u611f\u200b\u3002</p> <p>\u200b\u5854\u9876\u200b\u4e0a\u7a7a\u200b\uff0c\u200b\u4e91\u5c42\u200b\u4e2d\u200b\u6e10\u6e10\u200b\u51fa\u73b0\u200b\u4e00\u9053\u200b\u53d1\u5149\u200b\u7684\u200b\u88c2\u7f1d\u200b\uff0c\u200b\u65e0\u6570\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u4f53\u200b\u4ece\u4e2d\u200b\u6d8c\u51fa\u200b\uff0c\u200b\u76d8\u65cb\u200b\u5728\u200b\u57ce\u5e02\u200b\u4e0a\u7a7a\u200b\u3002</p> <p>\"\u200b\u58a8\u67d3\u200b\uff01\"\u200b\u4e00\u58f0\u200b\u6012\u559d\u200b\u4f20\u6765\u200b\u3002</p> <p>max\u200b\u51ed\u7a7a\u51fa\u73b0\u200b\u5728\u200b\u5854\u9876\u200b\u5bf9\u9762\u200b\uff0c\u200b\u91d1\u8272\u200b\u957f\u888d\u200b\u730e\u730e\u200b\u4f5c\u54cd\u200b\uff0c\u200b\u515c\u5e3d\u200b\u5df2\u7ecf\u200b\u8131\u843d\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e00\u5f20\u200b\u5a01\u4e25\u200b\u7684\u200b\u9762\u5bb9\u200b\u3002\u200b\u4ed6\u200b\u53f3\u624b\u200b\u6301\u5f13\u200b\uff0c\u200b\u5de6\u624b\u200b\u63e1\u7bad\u200b\uff0c\u200b\u91d1\u5149\u200b\u95ea\u70c1\u200b\u3002</p> <p>\"\u200b\u505c\u6b62\u200b\u4f60\u200b\u7684\u200b\u6cd5\u672f\u200b\uff0c\u200b\u5426\u5219\u200b\u6211\u200b\u4e0d\u4f1a\u200b\u624b\u4e0b\u7559\u60c5\u200b\uff01\"</p> <p>\u200b\u58a8\u67d3\u200b\u8f6c\u5934\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e00\u4e2a\u200b\u8be1\u5f02\u200b\u7684\u200b\u7b11\u5bb9\u200b\uff1a\"\u200b\u592a\u8fdf\u200b\u4e86\u200b\uff0c\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b\u3002\u200b\u4e3b\u4eba\u200b\u5373\u5c06\u200b\u964d\u4e34\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u4e16\u754c\u200b\u5c06\u200b\u8fce\u6765\u200b\u65b0\u200b\u7684\u200b\u79e9\u5e8f\u200b\uff01\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u4ed6\u200b\u731b\u5730\u200b\u5c06\u200b\u6cd5\u6756\u200b\u523a\u5165\u200b\u5854\u9876\u200b\u4e2d\u592e\u200b\u7684\u200b\u9b54\u6cd5\u9635\u200b\uff0c\u200b\u84dd\u5149\u200b\u9aa4\u7136\u200b\u7206\u53d1\u200b\u3002\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u8fc5\u901f\u200b\u6269\u5927\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5de8\u5927\u200b\u7684\u200b\u84dd\u8272\u200b\u8eab\u5f71\u200b\u9690\u7ea6\u200b\u6d6e\u73b0\u200b\u5728\u200b\u88c2\u7f1d\u200b\u4e2d\u200b\u3002</p> <p>max\u200b\u6beb\u4e0d\u72b9\u8c6b\u200b\uff0c\u200b\u62c9\u5f13\u200b\u5c04\u7bad\u200b\u3002\u200b\u91d1\u8272\u200b\u7bad\u77e2\u200b\u5212\u7834\u200b\u957f\u7a7a\u200b\uff0c\u200b\u76f4\u53d6\u200b\u58a8\u67d3\u200b\u54bd\u5589\u200b\u3002\u200b\u7136\u800c\u200b\u5c31\u200b\u5728\u200b\u7bad\u200b\u5373\u5c06\u200b\u547d\u4e2d\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u5c4f\u969c\u200b\u51ed\u7a7a\u51fa\u73b0\u200b\uff0c\u200b\u6321\u4f4f\u200b\u4e86\u200b\u7bad\u77e2\u200b\u3002</p> <p>\"\u200b\u51e1\u4eba\u200b\u7684\u200b\u6b66\u5668\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u4f24\u5bb3\u200b\u795e\u660e\u200b\u7684\u200b\u4f7f\u8005\u200b\u3002\"\u200b\u58a8\u67d3\u200b\u7684\u200b\u58f0\u97f3\u200b\u8d8a\u53d1\u200b\u602a\u5f02\u200b\uff0c\"\u200b\u4e94\u5e74\u200b\u6765\u200b\uff0c\u200b\u6211\u200b\u4e00\u76f4\u200b\u5728\u200b\u4e3a\u200b\u8fd9\u200b\u4e00\u523b\u200b\u505a\u200b\u51c6\u5907\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u672c\u8be5\u200b\u6c38\u8fdc\u200b\u6c89\u7761\u200b\u5728\u200b\u4e1c\u65b9\u200b\uff0c\u200b\u4f46\u200b\u6d6e\u5c18\u200b\u90a3\u4e2a\u200b\u8822\u8d27\u200b\u975e\u8981\u200b\u5c06\u200b\u5b83\u200b\u5e26\u200b\u56de\u6765\u200b\u3002\"</p> <p>max\u200b\u518d\u6b21\u200b\u62c9\u5f13\u200b\uff1a\"\u200b\u90a3\u200b\u4f60\u200b\u5c31\u662f\u200b\u627f\u8ba4\u200b\uff0c\u200b\u4e94\u5e74\u200b\u524d\u200b\u6545\u610f\u200b\u7834\u574f\u200b\u8fdc\u5f81\u200b\u8230\u961f\u200b\uff1f\"</p> <p>\"\u200b\u90a3\u200b\u4e0d\u8fc7\u200b\u662f\u200b\u5fc5\u8981\u200b\u7684\u200b\u727a\u7272\u200b\u3002\"\u200b\u58a8\u67d3\u200b\u4e0d\u5c51\u200b\u5730\u200b\u6325\u624b\u200b\uff0c\"\u200b\u6bd4\u8d77\u200b\u5373\u5c06\u200b\u5230\u6765\u200b\u7684\u200b\u547d\u8fd0\u200b\uff0c\u200b\u90a3\u70b9\u200b\u635f\u5931\u200b\u4e0d\u503c\u4e00\u63d0\u200b\u3002\"</p> <p>max\u200b\u677e\u5f00\u200b\u5f13\u5f26\u200b\uff0c\u200b\u53c8\u200b\u4e00\u652f\u200b\u91d1\u7bad\u200b\u7834\u7a7a\u200b\u800c\u51fa\u200b\uff0c\u200b\u8fd9\u6b21\u200b\u5374\u200b\u4e0d\u662f\u200b\u5c04\u5411\u200b\u58a8\u67d3\u200b\uff0c\u200b\u800c\u662f\u200b\u5c04\u200b\u5411\u200b\u5854\u9876\u200b\u4e2d\u592e\u200b\u7684\u200b\u9b54\u6cd5\u9635\u200b\u3002\u200b\u7bad\u77e2\u200b\u547d\u4e2d\u200b\u6cd5\u9635\u200b\uff0c\u200b\u7206\u53d1\u200b\u51fa\u200b\u8000\u773c\u200b\u91d1\u5149\u200b\u3002</p> <p>\u200b\u9b54\u6cd5\u9635\u200b\u51fa\u73b0\u200b\u88c2\u7eb9\u200b\uff0c\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u7684\u200b\u6269\u5f20\u200b\u901f\u5ea6\u200b\u51cf\u7f13\u200b\u3002\u200b\u58a8\u67d3\u200b\u6012\u543c\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u4f60\u200b\uff01\"</p> <p>\"\u200b\u6211\u200b\u65e9\u5c31\u200b\u6000\u7591\u200b\u4f60\u200b\u4e86\u200b\uff0c\u200b\u58a8\u67d3\u200b\u3002\"max\u200b\u51b7\u9759\u200b\u9053\u200b\uff0c\"\u200b\u6216\u8005\u8bf4\u200b\uff0c\u200b\u5360\u636e\u200b\u58a8\u67d3\u200b\u8eab\u4f53\u200b\u7684\u200b\u4e1c\u897f\u200b\u3002\"</p> <p>\u200b\u58a8\u67d3\u200b\u9762\u5bb9\u200b\u626d\u66f2\u200b\uff0c\u200b\u76ae\u80a4\u200b\u4e0b\u200b\u9690\u7ea6\u53ef\u89c1\u200b\u84dd\u8272\u200b\u5149\u7ebf\u200b\u6d41\u52a8\u200b\uff1a\"\u200b\u806a\u660e\u200b\u7684\u200b\u57ce\u4e3b\u200b\uff0c\u200b\u4f46\u200b\u4f60\u200b\u963b\u6b62\u4e0d\u4e86\u200b\u5fc5\u7136\u200b\u7684\u200b\u547d\u8fd0\u200b\u3002\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u4ed6\u200b\u53cc\u624b\u200b\u731b\u5730\u200b\u5408\u5341\u200b\uff0c\u200b\u4f53\u5185\u200b\u84dd\u5149\u200b\u7206\u53d1\u200b\u3002\"\u200b\u732e\u796d\u200b\u00b7\u200b\u4e07\u7075\u200b\u5f52\u200b\u4e00\u200b\uff01\"</p> <p>\u200b\u987f\u65f6\u200b\uff0c\u200b\u5854\u5185\u200b\u6240\u6709\u200b\u534f\u52a9\u200b\u65bd\u6cd5\u200b\u7684\u200b\u6cd5\u5e08\u200b\u8eab\u4f53\u200b\u540c\u65f6\u200b\u50f5\u76f4\u200b\uff0c\u200b\u751f\u547d\u200b\u80fd\u91cf\u200b\u88ab\u200b\u62bd\u53d6\u200b\uff0c\u200b\u5f62\u6210\u200b\u65e0\u6570\u200b\u84dd\u8272\u200b\u5149\u70b9\u200b\u6d8c\u5411\u200b\u58a8\u67d3\u200b\u3002\u200b\u4ed6\u200b\u7684\u200b\u8eab\u4f53\u200b\u8fc5\u901f\u200b\u81a8\u80c0\u200b\uff0c\u200b\u76ae\u80a4\u200b\u6495\u88c2\u200b\uff0c\u200b\u9732\u51fa\u200b\u5185\u91cc\u200b\u7684\u200b\u84dd\u8272\u200b\u6676\u4f53\u7ed3\u6784\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u732e\u796d\u200b\u6cd5\u672f\u200b\uff1f\"max\u200b\u9707\u60ca\u200b\u9053\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u5df2\u200b\u5b8c\u5168\u200b\u53d8\u6210\u200b\u4e00\u4e2a\u200b\u84dd\u8272\u200b\u6676\u4f53\u200b\u5de8\u4eba\u200b\uff0c\u200b\u8eab\u9ad8\u200b\u8fd1\u4e09\u7c73\u200b\uff0c\u200b\u58f0\u97f3\u200b\u5982\u200b\u96f7\u9e23\u200b\uff1a\"\u200b\u73b0\u5728\u200b\uff0c\u200b\u4f60\u200b\u9762\u5bf9\u200b\u7684\u200b\u662f\u200b\u6211\u200b\u7684\u200b\u771f\u8eab\u200b\uff01\"</p> <p>\u200b\u57ce\u4e3b\u5e9c\u200b\u4e2d\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u7b49\u200b\u4eba\u200b\u901a\u8fc7\u200b\u9b54\u6cd5\u200b\u6295\u5f71\u200b\u76ee\u7779\u200b\u4e86\u200b\u8fd9\u200b\u4e00\u5e55\u200b\u3002</p> <p>\"\u200b\u5929\u5450\u200b\uff0c\u200b\u58a8\u67d3\u200b\u6839\u672c\u200b\u4e0d\u662f\u200b\u4eba\u7c7b\u200b\uff01\"\u200b\u8424\u706b\u200b\u60ca\u547c\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u9762\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u7acb\u523b\u200b\u884c\u52a8\u200b\uff0c\u200b\u8d81\u7740\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u88ab\u200b\u51cf\u7f13\u200b\uff0c\u200b\u5c06\u200b\u5143\u200b\u7075\u7389\u200b\u9001\u5f80\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\uff01\"</p> <p>\"\u200b\u4f46\u200b\u6ee1\u6708\u200b\u8fd8\u6709\u200b\u4e09\u5929\u200b\u624d\u200b\u5230\u200b\u3002\"DW\u200b\u63d0\u9192\u200b\u9053\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u6447\u5934\u200b\uff1a\"\u200b\u60c5\u51b5\u7d27\u6025\u200b\uff0c\u200b\u53ea\u80fd\u200b\u63d0\u524d\u200b\u5c1d\u8bd5\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u6216\u8bb8\u200b\u4e0d\u4f1a\u200b\u5b8c\u5168\u200b\u91ca\u653e\u200b\uff0c\u200b\u4f46\u200b\u5e94\u8be5\u200b\u8db3\u4ee5\u200b\u5bf9\u6297\u200b\u58a8\u67d3\u200b\u7684\u200b\u9634\u8c0b\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u72ec\u5b88\u200b\u3001DW\uff0c\u200b\u4f60\u4eec\u200b\u5e26\u9886\u200b\u5b88\u536b\u200b\u4fdd\u62a4\u200b\u57ce\u4e3b\u5e9c\u200b\uff1b\u200b\u5357\u98ce\u200b\u3001\u200b\u8424\u706b\u200b\uff0c\u200b\u4f60\u4eec\u200b\u968f\u200b\u6211\u200b\u524d\u5f80\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u3002\"</p> <p>\u200b\u4f17\u4eba\u200b\u9886\u547d\u200b\uff0c\u200b\u8fc5\u901f\u884c\u52a8\u200b\u8d77\u6765\u200b\u3002\u200b\u6d6e\u5c18\u200b\u5c0f\u5fc3\u200b\u5730\u200b\u5c06\u200b\u5143\u200b\u7075\u7389\u200b\u6536\u5165\u200b\u7279\u5236\u200b\u76d2\u5b50\u200b\uff0c\u200b\u7387\u9886\u200b\u5357\u98ce\u200b\u548c\u200b\u8424\u706b\u200b\u79bb\u5f00\u200b\u57ce\u4e3b\u5e9c\u200b\uff0c\u200b\u5411\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u8fdb\u53d1\u200b\u3002</p> <p>\u200b\u57ce\u5e02\u200b\u4e0a\u7a7a\u200b\uff0cmax\u200b\u4e0e\u200b\u6676\u4f53\u200b\u5de8\u4eba\u200b\u58a8\u67d3\u200b\u5df2\u200b\u5c55\u5f00\u200b\u6fc0\u70c8\u200b\u6218\u6597\u200b\u3002max\u200b\u4e0d\u518d\u200b\u4f7f\u7528\u200b\u5f13\u7bad\u200b\uff0c\u200b\u800c\u662f\u200b\u624b\u6301\u200b\u4e00\u67c4\u200b\u91d1\u8272\u200b\u957f\u5251\u200b\uff0c\u200b\u4e0e\u200b\u58a8\u67d3\u200b\u7684\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u5de8\u722a\u200b\u5bf9\u6297\u200b\u3002\u200b\u6bcf\u6b21\u200b\u6b66\u5668\u200b\u76f8\u4ea4\u200b\uff0c\u200b\u90fd\u200b\u7206\u53d1\u200b\u51fa\u200b\u9707\u8033\u6b32\u804b\u200b\u7684\u200b\u8f70\u9e23\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u7a76\u7adf\u200b\u662f\u200b\u4ec0\u4e48\u200b\u5b58\u5728\u200b\uff1f\"max\u200b\u4e00\u8fb9\u200b\u6218\u6597\u200b\u4e00\u8fb9\u200b\u8d28\u95ee\u200b\u3002</p> <p>\u200b\u6676\u4f53\u200b\u5de8\u4eba\u200b\u72de\u7b11\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u662f\u200b\u6765\u81ea\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u53e6\u4e00\u7aef\u200b\u7684\u200b\u5b58\u5728\u200b\uff0c\u200b\u4f60\u4eec\u200b\u79f0\u200b\u6211\u4eec\u200b\u4e3a\u200b'\u200b\u84dd\u6676\u65cf\u200b'\u3002\u200b\u5343\u5e74\u200b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u66fe\u200b\u8bd5\u56fe\u200b\u5f81\u670d\u200b\u8fd9\u4e2a\u200b\u4e16\u754c\u200b\uff0c\u200b\u5374\u200b\u88ab\u200b\u5143\u200b\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u963b\u6321\u200b\u3002\u200b\u5982\u4eca\u200b\uff0c\u200b\u6211\u4eec\u200b\u5377\u571f\u91cd\u6765\u200b\uff01\"</p> <p>max\u200b\u5251\u950b\u200b\u4e00\u8f6c\u200b\uff0c\u200b\u65a9\u200b\u5411\u200b\u58a8\u67d3\u200b\u7684\u200b\u6676\u4f53\u200b\u624b\u81c2\u200b\uff1a\"\u200b\u90a3\u200b\u771f\u6b63\u200b\u7684\u200b\u58a8\u67d3\u200b\u5462\u200b\uff1f\"</p> <p>\"\u200b\u4ed6\u200b\u7684\u200b\u610f\u8bc6\u200b\u65e9\u5df2\u200b\u6d88\u6563\u200b\uff0c\u200b\u53ea\u200b\u5269\u4e0b\u200b\u8fd9\u5177\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u5bb9\u5668\u200b\uff0c\u200b\u627f\u8f7d\u200b\u7740\u200b\u6211\u200b\u7684\u200b\u529b\u91cf\u200b\uff01\"\u200b\u58a8\u67d3\u200b\u731b\u5730\u200b\u4e00\u638c\u200b\u62cd\u200b\u5411\u200bmax\uff0c\"\u200b\u4f60\u4eec\u200b\u7684\u200b\u5e1d\u56fd\u200b\u5373\u5c06\u200b\u8986\u706d\u200b\uff0c\u200b\u65b0\u200b\u7684\u200b\u7eaa\u5143\u200b\u5c06\u200b\u7531\u200b\u84dd\u6676\u65cf\u200b\u4e3b\u5bb0\u200b\uff01\"</p> <p>max\u200b\u4fa7\u8eab\u200b\u95ea\u907f\u200b\uff0c\u200b\u5251\u5149\u200b\u5982\u7011\u200b\uff1a\"\u200b\u53ea\u8981\u200b\u6211\u200b\u8fd8\u200b\u5728\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u5c31\u200b\u4e0d\u4f1a\u200b\u6ca6\u9677\u200b\uff01\"</p> <p>\u200b\u4e24\u4eba\u200b\u7684\u200b\u6218\u6597\u200b\u6108\u53d1\u200b\u6fc0\u70c8\u200b\uff0c\u200b\u80fd\u91cf\u200b\u51b2\u51fb\u6ce2\u200b\u5e2d\u5377\u200b\u6574\u5ea7\u200b\u57ce\u5e02\u200b\uff0c\u200b\u5efa\u7b51\u7269\u200b\u4e0d\u65ad\u200b\u5d29\u584c\u200b\u3002\u200b\u6c11\u4f17\u200b\u60ca\u614c\u200b\u9003\u6563\u200b\uff0c\u200b\u57ce\u5e02\u200b\u9677\u5165\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u6df7\u4e71\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u8424\u706b\u200b\u5728\u200b\u524d\u5f80\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u7684\u200b\u8def\u4e0a\u200b\uff0c\u200b\u4e0d\u5f97\u4e0d\u200b\u9891\u7e41\u200b\u6539\u53d8\u200b\u8def\u7ebf\u200b\uff0c\u200b\u8eb2\u907f\u200b\u574d\u584c\u200b\u7684\u200b\u5efa\u7b51\u200b\u548c\u200b\u8086\u8650\u200b\u7684\u200b\u80fd\u91cf\u200b\u98ce\u66b4\u200b\u3002</p> <p>\"\u200b\u524d\u9762\u200b\u5c31\u662f\u200b\u795e\u6bbf\u200b\u5e7f\u573a\u200b\u4e86\u200b\uff01\"\u200b\u8424\u706b\u200b\u6307\u5411\u200b\u524d\u65b9\u200b\u3002</p> <p>\u200b\u7136\u800c\u200b\uff0c\u200b\u5c31\u200b\u5728\u200b\u4ed6\u4eec\u200b\u5373\u5c06\u200b\u62b5\u8fbe\u200b\u65f6\u200b\uff0c\u200b\u6570\u5341\u540d\u200b\u84dd\u5149\u200b\u95ea\u70c1\u200b\u7684\u200b\"\u200b\u6cd5\u5e08\u200b\"\u200b\u7a81\u7136\u200b\u51fa\u73b0\u200b\uff0c\u200b\u62e6\u4f4f\u200b\u53bb\u8def\u200b\u3002</p> <p>\"\u200b\u4e0d\u662f\u200b\u666e\u901a\u200b\u6cd5\u5e08\u200b...\"\u200b\u5357\u98ce\u200b\u51dd\u795e\u200b\u89c2\u5bdf\u200b\uff0c\"\u200b\u4ed6\u4eec\u200b\u5df2\u200b\u88ab\u200b\u5b8c\u5168\u200b\u8f6c\u5316\u200b\uff0c\u200b\u6210\u4e3a\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u5080\u5121\u200b\uff01\"</p> <p>\u200b\u6d6e\u5c18\u200b\u62bd\u51fa\u200b\u5907\u7528\u200b\u957f\u5251\u200b\uff1a\"\u200b\u65e0\u8bba\u5982\u4f55\u200b\uff0c\u200b\u90fd\u200b\u8981\u51b2\u200b\u8fc7\u53bb\u200b\uff01\"</p> <p>\u200b\u4e09\u4eba\u200b\u51b2\u5411\u200b\u5080\u5121\u200b\u6cd5\u5e08\u200b\u7fa4\u200b\u3002\u200b\u6d6e\u5c18\u200b\u7684\u200b\u5251\u6cd5\u200b\u51cc\u5389\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u5251\u200b\u90fd\u200b\u80fd\u200b\u65a9\u65ad\u200b\u654c\u4eba\u200b\u7684\u200b\u80fd\u91cf\u200b\u8fde\u63a5\u200b\uff1b\u200b\u5357\u98ce\u200b\u7684\u200b\u98ce\u7cfb\u200b\u6cd5\u672f\u200b\u5219\u200b\u80fd\u200b\u6270\u4e71\u200b\u5bf9\u65b9\u200b\u7684\u200b\u611f\u77e5\u200b\uff1b\u200b\u8424\u706b\u200b\u7684\u200b\u5e7b\u672f\u200b\u66f4\u662f\u200b\u8ba9\u200b\u4e0d\u5c11\u200b\u654c\u4eba\u200b\u9677\u5165\u200b\u6df7\u4e71\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6218\u6597\u200b\u80f6\u7740\u200b\u4e4b\u9645\u200b\uff0c\u200b\u4e00\u9635\u200b\u719f\u6089\u200b\u7684\u200b\u58f0\u97f3\u200b\u4f20\u6765\u200b\uff1a\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\uff01\u200b\u8fd9\u8fb9\u200b\uff01\"</p> <p>\u200b\u5c0f\u58a8\u200b\u548c\u200b\u4f69\u6d1b\u6d1b\u200b\u51fa\u73b0\u200b\u5728\u200b\u4fa7\u200b\u8857\u200b\uff0c\u200b\u8eab\u540e\u200b\u8ddf\u7740\u200b\u4e00\u961f\u200b\u8eab\u7a7f\u200b\u8f7b\u7532\u200b\u7684\u200b\u6218\u58eb\u200b\u3002</p> <p>\"\u200b\u5c01\u4faf\u200b\u5927\u4eba\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u60ca\u559c\u200b\u9053\u200b\u3002</p> <p>\u200b\u5c0f\u58a8\u200b\u8fc5\u901f\u200b\u4e0b\u4ee4\u200b\uff1a\"\u200b\u63a9\u62a4\u200b\u5c06\u519b\u200b\u51b2\u5165\u200b\u795e\u6bbf\u200b\uff01\"</p> <p>\u200b\u6218\u58eb\u200b\u4eec\u200b\u7acb\u523b\u200b\u6563\u5f00\u200b\uff0c\u200b\u5c04\u200b\u51fa\u200b\u7279\u5236\u200b\u7bad\u77e2\u200b\uff0c\u200b\u903c\u9000\u200b\u5080\u5121\u200b\u6cd5\u5e08\u200b\u3002\u200b\u4f69\u6d1b\u6d1b\u5219\u200b\u53d6\u51fa\u200b\u4e00\u6839\u200b\u6c34\u6676\u200b\u6cd5\u6756\u200b\uff0c\u200b\u8f7b\u8f7b\u200b\u6325\u821e\u200b\uff0c\u200b\u5728\u200b\u524d\u65b9\u200b\u5f00\u8f9f\u200b\u51fa\u200b\u4e00\u6761\u200b\u5b89\u5168\u200b\u901a\u9053\u200b\u3002</p> <p>\"\u200b\u5feb\u200b\u8d70\u200b\uff0c\u200b\u6211\u4eec\u200b\u63a9\u62a4\u200b\u4f60\u200b\uff01\"\u200b\u5c0f\u58a8\u200b\u50ac\u4fc3\u200b\u9053\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u70b9\u5934\u200b\u81f4\u8c22\u200b\uff0c\u200b\u4e0e\u200b\u5357\u98ce\u200b\u3001\u200b\u8424\u706b\u200b\u51b2\u5411\u200b\u795e\u6bbf\u200b\u5927\u95e8\u200b\u3002</p> <p>\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u662f\u200b\u5e1d\u56fd\u200b\u6700\u200b\u53e4\u8001\u200b\u7684\u200b\u5efa\u7b51\u200b\uff0c\u200b\u5386\u7ecf\u200b\u5343\u5e74\u200b\u800c\u200b\u4e0d\u200b\u5012\u200b\u3002\u200b\u5de8\u5927\u200b\u7684\u200b\u77f3\u95e8\u200b\u7f13\u7f13\u200b\u5f00\u542f\u200b\uff0c\u200b\u4e09\u4eba\u200b\u5feb\u6b65\u200b\u8fdb\u5165\u200b\u3002\u200b\u795e\u6bbf\u200b\u5185\u90e8\u200b\u7a7a\u65f7\u200b\u800c\u200b\u5e84\u4e25\u200b\uff0c\u200b\u4e2d\u592e\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5de8\u5927\u200b\u7684\u200b\u5706\u5f62\u200b\u6cd5\u9635\u200b\uff0c\u200b\u5468\u56f4\u200b\u523b\u6ee1\u200b\u53e4\u8001\u200b\u7b26\u6587\u200b\u3002</p> <p>\"\u200b\u5c31\u662f\u200b\u8fd9\u91cc\u200b\u3002\"\u200b\u5357\u98ce\u200b\u6307\u5411\u200b\u6cd5\u9635\u200b\u4e2d\u5fc3\u200b\u7684\u200b\u51f9\u69fd\u200b\uff0c\"\u200b\u5143\u7075\u7389\u200b\u5e94\u8be5\u200b\u653e\u5728\u200b\u90a3\u4e2a\u200b\u4f4d\u7f6e\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u53d6\u51fa\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u6b63\u8981\u200b\u4e0a\u524d\u200b\uff0c\u200b\u7a81\u7136\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u5149\u675f\u200b\u4ece\u5929\u800c\u964d\u200b\uff0c\u200b\u51fb\u4e2d\u200b\u4ed6\u200b\u7684\u200b\u624b\u81c2\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u8131\u624b\u200b\u800c\u51fa\u200b\uff0c\u200b\u843d\u200b\u5728\u200b\u5730\u4e0a\u200b\u3002</p> <p>\"\u200b\u60f3\u90fd\u522b\u60f3\u200b\uff01\"</p> <p>\u200b\u4e09\u4eba\u200b\u62ac\u5934\u200b\uff0c\u200b\u53ea\u89c1\u200b\u795e\u6bbf\u200b\u7a79\u9876\u200b\u7834\u200b\u5f00\u200b\u4e00\u4e2a\u200b\u5927\u6d1e\u200b\uff0c\u200b\u58a8\u67d3\u200b\u7684\u200b\u6676\u4f53\u200b\u5de8\u4eba\u200b\u5f62\u6001\u200b\u7f13\u7f13\u200b\u964d\u843d\u200b\u3002\u200b\u4ed6\u200b\u8eab\u4e0a\u200b\u591a\u5904\u200b\u7834\u635f\u200b\uff0c\u200b\u663e\u7136\u200b\u5728\u200b\u4e0e\u200bmax\u200b\u7684\u200b\u6218\u6597\u200b\u4e2d\u200b\u53d7\u4e86\u4f24\u200b\uff0c\u200b\u4f46\u200b\u6c14\u52bf\u200b\u4f9d\u7136\u200b\u6050\u6016\u200b\u3002</p> <p>\"max\u200b\u5462\u200b\uff1f\"\u200b\u6d6e\u5c18\u200b\u5389\u58f0\u200b\u95ee\u9053\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u72de\u7b11\u200b\uff1a\"\u200b\u4f60\u4eec\u200b\u7684\u200b\u57ce\u4e3b\u200b\u5927\u4eba\u200b\u6682\u65f6\u200b\u88ab\u200b\u6211\u200b\u56f0\u200b\u5728\u200b\u7a7a\u95f4\u200b\u5939\u7f1d\u200b\u4e2d\u200b\uff0c\u200b\u77ed\u65f6\u95f4\u200b\u5185\u200b\u65e0\u6cd5\u200b\u8131\u8eab\u200b\u3002\u200b\u73b0\u5728\u200b\uff0c\u200b\u4ea4\u51fa\u200b\u5143\u7075\u7389\u200b\uff01\"</p> <p>\u200b\u8424\u706b\u200b\u6084\u6084\u200b\u5411\u200b\u6d6e\u5c18\u200b\u4f20\u97f3\u200b\uff1a\"\u200b\u62d6\u4f4f\u200b\u4ed6\u200b\uff0c\u200b\u6211\u200b\u53bb\u53d6\u200b\u5143\u7075\u7389\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u5fae\u200b\u4e0d\u53ef\u200b\u5bdf\u5730\u200b\u70b9\u5934\u200b\uff0c\u200b\u968f\u5373\u200b\u6012\u559d\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\uff01\u200b\u4e0d\u200b\uff0c\u200b\u5e94\u8be5\u200b\u79f0\u200b\u4f60\u200b\u4e3a\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u5165\u4fb5\u8005\u200b\uff01\u200b\u4e94\u5e74\u200b\u524d\u200b\u6211\u200b\u8230\u961f\u200b\u4e2d\u200b\u4e09\u5343\u200b\u5c06\u58eb\u200b\u7684\u200b\u8840\u503a\u200b\uff0c\u200b\u4eca\u65e5\u200b\u5fc5\u5c06\u200b\u8ba8\u8fd8\u200b\uff01\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u957f\u5251\u200b\u51fa\u9798\u200b\uff0c\u200b\u9ed1\u7130\u200b\u66b4\u6da8\u200b\u3002\u200b\u5357\u98ce\u200b\u4e5f\u200b\u5c55\u5f00\u200b\u5168\u529b\u200b\uff0c\u200b\u98ce\u7cfb\u200b\u6cd5\u672f\u200b\u547c\u5578\u200b\u800c\u51fa\u200b\u3002\u200b\u4e24\u4eba\u200b\u540c\u65f6\u200b\u653b\u5411\u200b\u58a8\u67d3\u200b\uff0c\u200b\u8bd5\u56fe\u200b\u5206\u6563\u200b\u4ed6\u200b\u7684\u200b\u6ce8\u610f\u529b\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u4e0d\u5c51\u4e00\u987e\u200b\uff1a\"\u200b\u877c\u8681\u200b\u4e4b\u529b\u200b\uff0c\u200b\u4e5f\u200b\u6562\u200b\u6311\u6218\u200b\u795e\u660e\u200b\uff1f\"</p> <p>\u200b\u4ed6\u200b\u968f\u624b\u200b\u6325\u51fa\u200b\u4e24\u9053\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u6ce2\u200b\uff0c\u200b\u5c06\u200b\u6d6e\u5c18\u200b\u548c\u200b\u5357\u98ce\u200b\u51fb\u9000\u200b\u6570\u5341\u7c73\u200b\u3002\u200b\u4e8c\u4eba\u200b\u649e\u200b\u5728\u200b\u795e\u6bbf\u200b\u77f3\u67f1\u200b\u4e0a\u200b\uff0c\u200b\u5410\u8840\u200b\u4e0d\u6b62\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u8424\u706b\u200b\u5df2\u200b\u6084\u7136\u200b\u63a5\u8fd1\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u8fc5\u901f\u200b\u5c06\u200b\u5176\u200b\u62fe\u8d77\u200b\u3002</p> <p>\"\u200b\u4f4f\u624b\u200b\uff01\"\u200b\u58a8\u67d3\u200b\u5bdf\u89c9\u5230\u200b\u52a8\u9759\u200b\uff0c\u200b\u8f6c\u8eab\u200b\u6325\u51fa\u200b\u80fd\u91cf\u200b\u5de8\u722a\u200b\u3002</p> <p>\u200b\u8424\u706b\u200b\u6765\u4e0d\u53ca\u200b\u95ea\u907f\u200b\uff0c\u200b\u88ab\u200b\u6b63\u9762\u200b\u51fb\u4e2d\u200b\uff0c\u200b\u6574\u4e2a\u200b\u4eba\u98de\u51fa\u200b\u6570\u7c73\u200b\uff0c\u200b\u649e\u200b\u5728\u200b\u77f3\u5899\u200b\u4e0a\u200b\u3002\u200b\u4f46\u200b\u5728\u200b\u88ab\u200b\u51fb\u98de\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u4ed6\u200b\u5df2\u200b\u5c06\u200b\u5143\u200b\u7075\u7389\u200b\u629b\u5411\u200b\u6cd5\u9635\u200b\u4e2d\u5fc3\u200b\u3002</p> <p>\u200b\u5143\u7075\u7389\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u5212\u51fa\u200b\u4e00\u9053\u200b\u4f18\u7f8e\u200b\u7684\u200b\u5f27\u7ebf\u200b\uff0c\u200b\u7cbe\u51c6\u200b\u843d\u5165\u200b\u6cd5\u9635\u200b\u4e2d\u592e\u200b\u7684\u200b\u51f9\u69fd\u200b\u4e2d\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\uff01\"\u200b\u58a8\u67d3\u200b\u6012\u543c\u200b\uff0c\u200b\u51b2\u5411\u200b\u6cd5\u9635\u200b\u3002</p> <p>\u200b\u7136\u800c\u200b\u5df2\u7ecf\u200b\u8fdf\u200b\u4e86\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u843d\u5165\u200b\u51f9\u69fd\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6cd5\u9635\u4eae\u200b\u8d77\u200b\u8000\u773c\u200b\u7684\u200b\u7eff\u5149\u200b\u3002\u200b\u5149\u8292\u200b\u8fc5\u901f\u200b\u6269\u6563\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u9053\u200b\u80fd\u91cf\u200b\u5c4f\u969c\u200b\uff0c\u200b\u5c06\u200b\u58a8\u67d3\u200b\u963b\u6321\u200b\u5728\u5916\u200b\u3002</p> <p>\"\u200b\u5143\u7075\u7389\u200b\u554a\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u7684\u200b\u5b88\u62a4\u8005\u200b\uff0c\u200b\u8bf7\u200b\u542c\u4ece\u200b\u6211\u200b\u7684\u200b\u53ec\u5524\u200b...\"\u200b\u6d6e\u5c18\u200b\u5f3a\u6491\u200b\u7740\u200b\u7ad9\u200b\u8d77\u200b\uff0c\u200b\u5f00\u59cb\u200b\u7528\u200b\u53e4\u8001\u200b\u8bed\u8a00\u200b\u541f\u8bf5\u200b\u542f\u52a8\u200b\u5492\u8bed\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u75af\u72c2\u200b\u653b\u51fb\u200b\u80fd\u91cf\u200b\u5c4f\u969c\u200b\uff0c\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u4e0e\u200b\u7eff\u8272\u200b\u5c4f\u969c\u200b\u78b0\u649e\u200b\uff0c\u200b\u53d1\u51fa\u200b\u523a\u8033\u200b\u7684\u200b\u55e1\u9e23\u200b\u3002\"\u200b\u4f60\u4eec\u200b\u4ee5\u4e3a\u200b\u8fd9\u6837\u200b\u5c31\u200b\u80fd\u200b\u963b\u6b62\u200b\u6211\u200b\uff1f\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u53ea\u6709\u200b\u5728\u200b\u6ee1\u6708\u200b\u4e4b\u591c\u200b\u624d\u80fd\u200b\u5b8c\u5168\u200b\u6fc0\u6d3b\u200b\uff0c\u200b\u73b0\u5728\u200b\u4e0d\u8fc7\u200b\u662f\u200b\u676f\u6c34\u8f66\u85aa\u200b\uff01\"</p> <p>\u200b\u5357\u98ce\u200b\u4e5f\u200b\u7ad9\u200b\u8d77\u8eab\u200b\uff0c\u200b\u63a5\u7eed\u200b\u6d6e\u5c18\u200b\u7684\u200b\u5492\u8bed\u200b\uff1a\"\u200b\u8fdc\u53e4\u200b\u7684\u200b\u5951\u7ea6\u200b\uff0c\u200b\u6c89\u7761\u200b\u7684\u200b\u529b\u91cf\u200b\uff0c\u200b\u8bf7\u200b\u5728\u200b\u5e1d\u56fd\u200b\u5371\u96be\u200b\u4e4b\u9645\u200b\u89c9\u9192\u200b...\"</p> <p>\u200b\u58a8\u67d3\u200b\u7684\u200b\u653b\u51fb\u200b\u8d8a\u6765\u8d8a\u200b\u731b\u70c8\u200b\uff0c\u200b\u80fd\u91cf\u200b\u5c4f\u969c\u200b\u5f00\u59cb\u200b\u51fa\u73b0\u200b\u88c2\u7eb9\u200b\u3002\u200b\u8424\u706b\u200b\u865a\u5f31\u200b\u5730\u200b\u722c\u200b\u8d77\u200b\uff0c\u200b\u4e5f\u200b\u52a0\u5165\u200b\u5492\u8bed\u200b\u541f\u8bf5\u200b\uff1a\"\u200b\u4ee5\u200b\u5148\u7956\u200b\u4e4b\u540d\u200b\uff0c\u200b\u4ee5\u200b\u5b88\u62a4\u200b\u4e4b\u8a93\u200b\uff0c\u200b\u9a71\u9010\u200b\u5f02\u57df\u200b\u5165\u4fb5\u8005\u200b...\"</p> <p>\u200b\u4e09\u4eba\u200b\u7684\u200b\u58f0\u97f3\u200b\u4ea4\u7ec7\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u6cd5\u9635\u200b\u7684\u200b\u7eff\u5149\u200b\u8d8a\u53d1\u200b\u660e\u4eae\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u5f00\u59cb\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u91ca\u653e\u200b\u51fa\u8109\u51b2\u200b\u72b6\u200b\u7684\u200b\u80fd\u91cf\u200b\u6ce2\u200b\uff0c\u200b\u9010\u6e10\u200b\u6269\u6563\u200b\u5230\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\uff0c\u200b\u7136\u540e\u200b\u662f\u200b\u6574\u5ea7\u200b\u57ce\u5e02\u200b\u3002</p> <p>\u200b\u58a8\u67d3\u200b\u7684\u200b\u6676\u4f53\u200b\u8eab\u8eaf\u200b\u5f00\u59cb\u200b\u51fa\u73b0\u200b\u66f4\u200b\u591a\u200b\u88c2\u7eb9\u200b\uff0c\u200b\u84dd\u5149\u200b\u4e0d\u7a33\u5b9a\u5730\u200b\u95ea\u70c1\u7740\u200b\uff1a\"\u200b\u4e0d\u200b\u53ef\u80fd\u200b\uff01\u200b\u5143\u7075\u7389\u200b\u600e\u4e48\u200b\u4f1a\u200b\u63d0\u524d\u200b\u6fc0\u6d3b\u200b\uff1f\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u795e\u6bbf\u200b\u5927\u95e8\u200b\u518d\u6b21\u200b\u6253\u5f00\u200b\uff0cmax\u200b\u51fa\u73b0\u200b\u5728\u200b\u95e8\u53e3\u200b\uff0c\u200b\u91d1\u8272\u200b\u957f\u888d\u200b\u5df2\u200b\u7834\u635f\u200b\u4e0d\u582a\u200b\uff0c\u200b\u4f46\u200b\u773c\u795e\u200b\u4f9d\u7136\u200b\u9510\u5229\u200b\u3002</p> <p>\"\u200b\u58a8\u67d3\u200b\uff0c\u200b\u6216\u8005\u8bf4\u200b\uff0c\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u5165\u4fb5\u8005\u200b\u3002\"max\u200b\u7f13\u6b65\u200b\u4e0a\u524d\u200b\uff0c\"\u200b\u4f60\u200b\u5fd8\u200b\u4e86\u200b\u4e00\u4ef6\u200b\u4e8b\u200b\u2014\u2014\u200b\u5143\u7075\u7389\u200b\u4e0d\u4ec5\u4ec5\u200b\u4f9d\u9760\u200b\u6708\u76f8\u200b\u4e4b\u529b\u200b\uff0c\u200b\u66f4\u200b\u91cd\u8981\u200b\u7684\u200b\u662f\u200b\u5b88\u62a4\u8005\u200b\u7684\u200b\u610f\u5fd7\u200b\uff01\"</p> <p>max\u200b\u8d70\u5230\u200b\u6cd5\u9635\u200b\u8fb9\u7f18\u200b\uff0c\u200b\u5c06\u200b\u624b\u200b\u653e\u5728\u200b\u7eff\u8272\u200b\u5c4f\u969c\u200b\u4e0a\u200b\uff1a\"\u200b\u8eab\u4e3a\u200b\u5e1d\u56fd\u200b\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u6211\u4ee5\u200b\u6700\u9ad8\u200b\u6743\u67c4\u200b\u542f\u52a8\u200b\u5b88\u62a4\u200b\u6cd5\u9635\u200b\uff01\"</p> <p>\u200b\u968f\u7740\u200b\u4ed6\u200b\u7684\u200b\u8bdd\u97f3\u200b\u843d\u4e0b\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u9aa4\u7136\u200b\u7206\u53d1\u200b\u51fa\u200b\u523a\u76ee\u200b\u5149\u8292\u200b\uff0c\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\u88ab\u200b\u7eff\u5149\u200b\u5145\u6ee1\u200b\u3002\u200b\u58a8\u67d3\u200b\u7684\u200b\u6676\u4f53\u200b\u8eab\u8eaf\u200b\u5728\u200b\u5149\u8292\u200b\u4e2d\u200b\u8fc5\u901f\u200b\u5d29\u89e3\u200b\uff0c\u200b\u53d1\u51fa\u200b\u75db\u82e6\u200b\u7684\u200b\u568e\u53eb\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\uff01\u200b\u4e3b\u4eba\u200b...\u200b\u6551\u200b\u6211\u200b...\"</p> <p>\u200b\u7a7a\u4e2d\u200b\u7684\u200b\u6b21\u200b\u5143\u200b\u88c2\u7f1d\u200b\u5f00\u59cb\u200b\u6536\u7f29\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u76d8\u65cb\u200b\u5728\u200b\u57ce\u5e02\u200b\u4e0a\u7a7a\u200b\u7684\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u4f53\u200b\u7eb7\u7eb7\u200b\u88ab\u200b\u5438\u56de\u200b\u88c2\u7f1d\u200b\u4e2d\u200b\u3002\u200b\u58a8\u67d3\u200b\u7684\u200b\u8eab\u4f53\u200b\u5b8c\u5168\u200b\u5206\u89e3\u200b\u4e3a\u200b\u65e0\u6570\u200b\u84dd\u8272\u200b\u788e\u7247\u200b\uff0c\u200b\u4e5f\u200b\u88ab\u200b\u88c2\u7f1d\u200b\u5438\u8d70\u200b\u3002</p> <p>\u200b\u6700\u7ec8\u200b\uff0c\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u5f7b\u5e95\u200b\u95ed\u5408\u200b\uff0c\u200b\u5929\u7a7a\u200b\u6062\u590d\u200b\u4e86\u200b\u5e73\u9759\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u8424\u706b\u200b\u762b\u5750\u200b\u5728\u200b\u5730\u4e0a\u200b\uff0c\u200b\u7b4b\u75b2\u529b\u5c3d\u200b\u4f46\u200b\u9762\u9732\u200b\u559c\u8272\u200b\u3002</p> <p>\"\u200b\u6211\u4eec\u200b...\u200b\u6210\u529f\u200b\u4e86\u200b\uff1f\"\u200b\u6d6e\u5c18\u200b\u5598\u606f\u200b\u7740\u200b\u95ee\u9053\u200b\u3002</p> <p>max\u200b\u70b9\u5934\u200b\uff0c\u200b\u8138\u4e0a\u200b\u5374\u200b\u6ca1\u6709\u200b\u8f7b\u677e\u200b\u7684\u200b\u8868\u60c5\u200b\uff1a\"\u200b\u6682\u65f6\u200b\u6210\u529f\u200b\u4e86\u200b\u3002\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u5c01\u95ed\u200b\u4e86\u200b\u6b21\u200b\u5143\u200b\u88c2\u7f1d\u200b\uff0c\u200b\u9a71\u9010\u200b\u4e86\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u5148\u950b\u200b\u90e8\u961f\u200b\u3002\u200b\u4f46\u200b\u8fd9\u200b\u53ea\u662f\u200b\u5f00\u59cb\u200b\uff0c\u200b\u84dd\u6676\u65cf\u200b\u4e0d\u4f1a\u200b\u5c31\u6b64\u200b\u7f62\u4f11\u200b\u3002\"</p> <p>\"\u200b\u90a3\u200b\u771f\u6b63\u200b\u7684\u200b\u58a8\u67d3\u200b\u5462\u200b\uff1f\"\u200b\u8424\u706b\u200b\u5173\u5207\u200b\u5730\u95ee\u200b\u3002</p> <p>max\u200b\u53f9\u606f\u200b\u4e00\u58f0\u200b\uff1a\"\u200b\u5df2\u7ecf\u200b\u4e0d\u200b\u5728\u200b\u4e86\u200b\u3002\u200b\u90a3\u4e2a\u200b\u84dd\u6676\u65cf\u200b\u5b8c\u5168\u200b\u5360\u636e\u200b\u4e86\u200b\u4ed6\u200b\u7684\u200b\u8eab\u4f53\u200b\uff0c\u200b\u4ed6\u200b\u7684\u200b\u7075\u9b42\u200b\u65e9\u5df2\u200b\u6d88\u6563\u200b\u3002\"</p> <p>\u200b\u56db\u4eba\u200b\u6c89\u9ed8\u200b\u7247\u523b\u200b\uff0c\u200b\u4e3a\u200b\u901d\u53bb\u200b\u7684\u200b\u540c\u80de\u200b\u9ed8\u54c0\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u6253\u7834\u200b\u6c89\u9ed8\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u4e0b\u200b\u4e00\u6b65\u200b\u8be5\u200b\u600e\u4e48\u200b\u505a\u200b\uff1f\"</p> <p>max\u200b\u8d70\u5411\u200b\u6cd5\u9635\u200b\u4e2d\u592e\u200b\uff0c\u200b\u53d6\u51fa\u200b\u4ecd\u200b\u5728\u200b\u53d1\u5149\u200b\u7684\u200b\u5143\u200b\u7075\u7389\u200b\uff1a\"\u200b\u7b49\u5f85\u200b\u6ee1\u6708\u200b\u4e4b\u591c\u200b\uff0c\u200b\u5b8c\u5168\u200b\u6fc0\u6d3b\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u3002\u200b\u7136\u540e\u200b\uff0c\u200b\u51c6\u5907\u200b\u8fce\u63a5\u200b\u771f\u6b63\u200b\u7684\u200b\u6218\u4e89\u200b\u3002\"</p>"},{"location":"creative/three-day-war/#_8","title":"\u7b2c\u4e94\u7ae0\u200b\uff1a\u200b\u5dc5\u5cf0\u200b\u4e4b\u6218","text":"<p>\u200b\u63a5\u4e0b\u6765\u200b\u7684\u200b\u4e24\u5929\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u4e0a\u4e0b\u200b\u5fd9\u4e8e\u200b\u4fee\u590d\u200b\u57ce\u5e02\u200b\u548c\u200b\u6cbb\u7597\u200b\u4f24\u5458\u200b\u3002\u200b\u6d6e\u5c18\u200b\u548c\u200b\u4ed6\u200b\u7684\u200b\u4f19\u4f34\u200b\u4eec\u200b\u5219\u200b\u8f6e\u6d41\u200b\u5b88\u62a4\u200b\u7740\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u4e2d\u200b\u7684\u200b\u5143\u200b\u7075\u7389\u200b\uff0c\u200b\u9632\u6b62\u200b\u4efb\u4f55\u200b\u53ef\u80fd\u200b\u7684\u200b\u88ad\u51fb\u200b\u3002</p> <p>\u200b\u6ee1\u6708\u200b\u524d\u591c\u200b\uff0cmax\u200b\u53ec\u96c6\u200b\u4f17\u4eba\u200b\u5728\u200b\u57ce\u4e3b\u5e9c\u200b\u4f1a\u8bae\u5385\u200b\u5546\u8bae\u200b\u3002</p> <p>\"\u200b\u6839\u636e\u200b\u53e4\u7c4d\u200b\u8bb0\u8f7d\u200b\uff0c\u200b\u6ee1\u6708\u200b\u4e4b\u591c\u200b\u5143\u200b\u7075\u7389\u200b\u5c06\u200b\u53d1\u6325\u200b\u6700\u5927\u200b\u5a01\u529b\u200b\uff0c\u200b\u5f7b\u5e95\u200b\u5c01\u5370\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u3002\"\u200b\u5357\u98ce\u200b\u5c55\u793a\u200b\u7740\u200b\u4e00\u5e45\u200b\u53e4\u8001\u200b\u7684\u200b\u661f\u8c61\u200b\u56fe\u200b\uff0c\"\u200b\u4f46\u200b\u540c\u65f6\u200b\uff0c\u200b\u8fd9\u200b\u4e5f\u200b\u662f\u200b\u84dd\u6676\u65cf\u200b\u6700\u540e\u200b\u7684\u200b\u673a\u4f1a\u200b\u3002\"</p> <p>max\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u4ed6\u4eec\u200b\u4e00\u5b9a\u200b\u4f1a\u200b\u5168\u529b\u4ee5\u8d74\u200b\uff0c\u200b\u8bd5\u56fe\u200b\u593a\u56de\u200b\u5143\u7075\u7389\u200b\u6216\u200b\u7834\u574f\u200b\u4eea\u5f0f\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u95ee\u9053\u200b\uff1a\"\u200b\u58a8\u67d3\u200b...\u200b\u6216\u8005\u8bf4\u200b\u90a3\u4e2a\u200b\u84dd\u6676\u65cf\u200b\uff0c\u200b\u771f\u7684\u200b\u88ab\u200b\u6d88\u706d\u200b\u4e86\u200b\u5417\u200b\uff1f\"</p> <p>\"\u200b\u6ca1\u6709\u200b\u3002\"max\u200b\u65ad\u7136\u200b\u9053\u200b\uff0c\"\u200b\u90a3\u200b\u53ea\u662f\u200b\u4ed6\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5206\u8eab\u200b\u3002\u200b\u6839\u636e\u200b\u6211\u200b\u7684\u200b\u63a8\u6d4b\u200b\uff0c\u200b\u771f\u6b63\u200b\u7684\u200b'\u200b\u58a8\u67d3\u200b'\u200b\u53ef\u80fd\u200b\u5df2\u7ecf\u200b\u6f5c\u5165\u200b\u66f4\u200b\u5371\u9669\u200b\u7684\u200b\u5730\u65b9\u200b\u3002\"</p> <p>\u200b\u4f17\u4eba\u200b\u9762\u9762\u76f8\u89d1\u200b\u3002</p> <p>\"\u200b\u4ec0\u4e48\u200b\u5730\u65b9\u200b\uff1f\"DW\u200b\u8ffd\u95ee\u200b\u3002</p> <p>max\u200b\u795e\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u3002\u200b\u5e1d\u56fd\u200b\u5730\u4e0b\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u66f4\u200b\u53e4\u8001\u200b\u7684\u200b\u795e\u6bbf\u200b\uff0c\u200b\u662f\u200b\u5143\u200b\u7075\u7389\u200b\u529b\u91cf\u200b\u7684\u200b\u771f\u6b63\u200b\u6e90\u5934\u200b\u3002\u200b\u5982\u679c\u200b\u84dd\u6676\u65cf\u200b\u63a7\u5236\u200b\u4e86\u200b\u90a3\u91cc\u200b\uff0c\u200b\u5373\u4f7f\u200b\u6211\u4eec\u200b\u542f\u52a8\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u9002\u5f97\u5176\u53cd\u200b\u3002\"</p> <p>\u200b\u72ec\u5b88\u200b\u76b1\u7709\u200b\uff1a\"\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\uff1f\u200b\u6211\u200b\u5728\u200b\u519b\u65b9\u200b\u6863\u6848\u200b\u4e2d\u200b\u4ece\u672a\u200b\u542c\u8bf4\u200b\u8fc7\u200b\u3002\"</p> <p>\"\u200b\u90a3\u200b\u662f\u200b\u5e1d\u56fd\u200b\u6700\u9ad8\u200b\u673a\u5bc6\u200b\u3002\"max\u200b\u89e3\u91ca\u200b\u9053\u200b\uff0c\"\u200b\u53ea\u6709\u200b\u5386\u4ee3\u200b\u57ce\u4e3b\u624d\u200b\u77e5\u9053\u200b\u5165\u53e3\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u73b0\u5728\u200b\uff0c\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u5206\u6210\u200b\u4e24\u961f\u200b\u884c\u52a8\u200b\u2014\u2014\u200b\u4e00\u961f\u200b\u4fdd\u62a4\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u7684\u200b\u5143\u200b\u7075\u7389\u200b\u4eea\u5f0f\u200b\uff0c\u200b\u4e00\u961f\u200b\u968f\u200b\u6211\u200b\u524d\u5f80\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u963b\u6b62\u200b\u84dd\u6676\u65cf\u200b\u3002\"</p> <p>\u200b\u7ecf\u8fc7\u200b\u5546\u8bae\u200b\uff0c\u200b\u51b3\u5b9a\u200b\u7531\u5c0f\u58a8\u200b\u3001\u200b\u4f69\u6d1b\u6d1b\u200b\u3001\u200b\u8424\u706b\u200b\u548c\u200bDW\u200b\u5b88\u62a4\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u200b\u5b88\u5219\u200b\u968f\u200bmax\u200b\u524d\u5f80\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u3002</p> <p>\u200b\u6563\u4f1a\u200b\u540e\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u72ec\u81ea\u200b\u6765\u5230\u200b\u57ce\u5899\u200b\u4e0a\u200b\u773a\u671b\u200b\u8fdc\u65b9\u200b\u3002\u200b\u591c\u5e55\u4f4e\u5782\u200b\uff0c\u200b\u660e\u200b\u6708\u521d\u200b\u5347\u200b\uff0c\u200b\u94f6\u8f89\u6d12\u200b\u5411\u200b\u5927\u5730\u200b\u3002</p> <p>\"\u200b\u5c06\u519b\u200b\uff0c\u200b\u660e\u65e5\u200b\u4e00\u6218\u200b\uff0c\u200b\u5fc5\u5c06\u200b\u8f7d\u5165\u53f2\u518c\u200b\u3002\"\u200b\u5357\u98ce\u200b\u4e0d\u77e5\u200b\u4f55\u65f6\u200b\u7ad9\u200b\u5728\u200b\u4e86\u200b\u4ed6\u200b\u8eab\u540e\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u7b11\u4e86\u7b11\u200b\uff1a\"\u200b\u4e94\u5e74\u200b\u524d\u200b\u51fa\u5f81\u200b\u65f6\u200b\uff0c\u200b\u6211\u200b\u4ee5\u4e3a\u200b\u6700\u5927\u200b\u7684\u200b\u529f\u52cb\u200b\u5c31\u662f\u200b\u627e\u56de\u200b\u5143\u7075\u7389\u200b\u3002\u200b\u8c01\u77e5\u200b\u8fd9\u200b\u80cc\u540e\u200b\u7adf\u200b\u7275\u8fde\u200b\u5982\u6b64\u200b\u5de8\u5927\u200b\u7684\u200b\u79d8\u5bc6\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u53f9\u606f\u200b\uff1a\"\u200b\u5386\u53f2\u200b\u603b\u662f\u200b\u5145\u6ee1\u200b\u8bbd\u523a\u200b\u3002\u200b\u6211\u4eec\u200b\u4ee5\u4e3a\u200b\u662f\u200b\u5728\u200b\u4fdd\u536b\u200b\u5e1d\u56fd\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u5728\u200b\u62ef\u6551\u200b\u6574\u4e2a\u200b\u4e16\u754c\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u671b\u200b\u5411\u200b\u6708\u4eae\u200b\uff1a\"\u200b\u58a8\u67d3\u200b\u66fe\u200b\u662f\u200b\u6211\u200b\u5c0a\u656c\u200b\u7684\u200b\u5bf9\u624b\u200b\uff0c\u200b\u53ef\u60dc\u200b\u5982\u4eca\u200b\u53ea\u200b\u5269\u4e0b\u200b\u4e00\u4e2a\u200b\u5916\u661f\u200b\u751f\u7269\u200b\u7684\u200b\u8eaf\u58f3\u200b\u3002\"</p> <p>\"\u200b\u660e\u65e5\u200b\u4e00\u6218\u200b\uff0c\u200b\u5c06\u200b\u4e3a\u200b\u4ed6\u200b\u62a5\u4ec7\u200b\u3002\"\u200b\u5357\u98ce\u200b\u575a\u5b9a\u200b\u5730\u8bf4\u200b\u3002</p> <p>\u200b\u6ee1\u6708\u200b\u4e4b\u591c\u200b\u7ec8\u4e8e\u200b\u6765\u4e34\u200b\u3002</p> <p>\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u4e2d\u200b\uff0c\u200b\u5c0f\u58a8\u200b\u6307\u6325\u200b\u7740\u200b\u5b88\u536b\u200b\u5e03\u9632\u200b\u3002\u200b\u4f69\u6d1b\u6d1b\u200b\u548c\u200b\u8424\u706b\u200b\u5219\u200b\u5728\u200b\u6cd5\u9635\u200b\u5468\u56f4\u200b\u8bbe\u7f6e\u200b\u989d\u5916\u200b\u7684\u200b\u9632\u62a4\u200b\u9b54\u6cd5\u200b\u3002DW\u200b\u68c0\u67e5\u200b\u7740\u200b\u81ea\u5df1\u200b\u5e26\u6765\u200b\u7684\u200b\u5404\u79cd\u200b\u673a\u68b0\u200b\u88c5\u7f6e\u200b\u3002</p> <p>\"\u200b\u6309\u7167\u200b\u53e4\u7c4d\u200b\u8bb0\u8f7d\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u4eea\u5f0f\u200b\u5c06\u200b\u5728\u200b\u5348\u591c\u200b\u6b63\u5f0f\u200b\u542f\u52a8\u200b\u3002\"\u200b\u8424\u706b\u200b\u5bf9\u200b\u4f17\u4eba\u200b\u8bf4\u9053\u200b\uff0c\"\u200b\u5728\u200b\u90a3\u200b\u4e4b\u524d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5fc5\u987b\u200b\u4fdd\u8bc1\u200b\u6cd5\u9635\u200b\u4e0d\u53d7\u200b\u5e72\u6270\u200b\u3002\"</p> <p>\u200b\u5c0f\u58a8\u200b\u70b9\u5934\u200b\uff1a\"\u200b\u5df2\u7ecf\u200b\u5b89\u6392\u200b\u4e86\u200b\u4e09\u91cd\u200b\u9632\u5fa1\u200b\uff0c\u200b\u5916\u56f4\u200b\u6709\u200b\u7cbe\u9510\u200b\u5b88\u536b\u200b\uff0c\u200b\u4e2d\u5c42\u200b\u6709\u200b\u673a\u5173\u200b\u9677\u9631\u200b\uff0c\u200b\u5185\u5c42\u200b\u6709\u200b\u6211\u4eec\u200b\u56db\u4eba\u200b\u5750\u9547\u200b\u3002\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u795e\u6bbf\u200b\u5916\u200b\u7a81\u7136\u200b\u4f20\u6765\u200b\u4e00\u9635\u200b\u9a9a\u52a8\u200b\u3002\u200b\u4e00\u540d\u200b\u5b88\u536b\u200b\u51b2\u8fdb\u6765\u200b\u62a5\u544a\u200b\uff1a\"\u200b\u5927\u200b\u4eba\u4eec\u200b\uff01\u200b\u5929\u7a7a\u200b\u51fa\u73b0\u5f02\u5e38\u200b\uff01\"</p> <p>\u200b\u4f17\u4eba\u200b\u51b2\u51fa\u200b\u795e\u6bbf\u200b\uff0c\u200b\u62ac\u5934\u200b\u671b\u53bb\u200b\u3002\u200b\u53ea\u89c1\u200b\u6ee1\u6708\u200b\u5468\u56f4\u200b\u51fa\u73b0\u200b\u4e86\u200b\u4e00\u5708\u200b\u8be1\u5f02\u200b\u7684\u200b\u84dd\u8272\u200b\u5149\u6655\u200b\uff0c\u200b\u6708\u5149\u200b\u4e5f\u200b\u53d8\u5f97\u200b\u4e0d\u200b\u81ea\u7136\u200b\u3002</p> <p>\"\u200b\u5f00\u59cb\u200b\u4e86\u200b...\"\u200b\u8424\u706b\u200b\u5583\u5583\u200b\u9053\u200b\uff0c\"\u200b\u84dd\u6676\u65cf\u200b\u6b63\u8bd5\u56fe\u200b\u5f71\u54cd\u200b\u6708\u76f8\u200b\uff0c\u200b\u5e72\u6270\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\u3002\"</p> <p>DW\u200b\u7acb\u523b\u200b\u4e0b\u4ee4\u200b\uff1a\"\u200b\u6240\u6709\u4eba\u200b\u56de\u5230\u200b\u5c97\u4f4d\u200b\uff01\u200b\u51c6\u5907\u200b\u8fce\u654c\u200b\uff01\"</p> <p>\u200b\u4e0e\u6b64\u540c\u65f6\u200b\uff0cmax\u200b\u5e26\u9886\u200b\u6d6e\u5c18\u200b\u4e00\u884c\u200b\u4eba\u200b\u7a7f\u8fc7\u200b\u5e1d\u90fd\u200b\u6700\u200b\u53e4\u8001\u200b\u7684\u200b\u5730\u4e0b\u6c34\u200b\u9053\u200b\uff0c\u200b\u5411\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u524d\u8fdb\u200b\u3002</p> <p>\"\u200b\u8fd9\u6761\u200b\u8def\u200b\u5df2\u7ecf\u200b\u5b58\u5728\u200b\u5343\u5e74\u200b\u4ee5\u4e0a\u200b\u3002\"max\u200b\u89e3\u91ca\u200b\u9053\u200b\uff0c\"\u200b\u5f53\u521d\u200b\u5efa\u9020\u200b\u5e1d\u56fd\u200b\u65f6\u200b\uff0c\u200b\u5148\u7956\u200b\u4eec\u200b\u5c31\u200b\u9884\u89c1\u5230\u200b\u53ef\u80fd\u200b\u6709\u200b\u5916\u6765\u200b\u5165\u4fb5\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5728\u200b\u5730\u4e0b\u200b\u5efa\u9020\u200b\u4e86\u200b\u8fd9\u5ea7\u200b\u795e\u6bbf\u200b\u4f5c\u4e3a\u200b\u6700\u540e\u200b\u7684\u200b\u9632\u7ebf\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u597d\u5947\u200b\u9053\u200b\uff1a\"\u200b\u65e2\u7136\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u5982\u6b64\u200b\u91cd\u8981\u200b\uff0c\u200b\u4e3a\u4f55\u200b\u5386\u4ee3\u200b\u90fd\u200b\u4fdd\u5bc6\u200b\uff1f\u200b\u4e3a\u4f55\u200b\u4e0d\u6d3e\u200b\u91cd\u5175\u628a\u5b88\u200b\uff1f\"</p> <p>max\u200b\u82e6\u7b11\u200b\uff1a\"\u200b\u56e0\u4e3a\u200b\u90a3\u91cc\u200b\u4e0d\u4ec5\u200b\u662f\u200b\u9632\u7ebf\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u8bf1\u9975\u200b\u3002\u200b\u795e\u6bbf\u200b\u4e2d\u6709\u200b\u4e00\u200b\u88c5\u7f6e\u200b\uff0c\u200b\u80fd\u200b\u5c06\u200b\u5165\u4fb5\u8005\u200b\u5f15\u5165\u200b\u6c38\u6052\u200b\u7684\u200b\u8ff7\u5931\u200b\u7a7a\u95f4\u200b\u3002\u200b\u5982\u679c\u200b\u6d88\u606f\u200b\u8d70\u6f0f\u200b\uff0c\u200b\u53cd\u800c\u200b\u4f1a\u200b\u5931\u53bb\u200b\u8fd9\u4e00\u200b\u4f18\u52bf\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u82e5\u6709\u6240\u601d\u200b\uff1a\"\u200b\u6240\u4ee5\u200b\u58a8\u67d3\u200b\uff0c\u200b\u6216\u8005\u8bf4\u200b\u90a3\u4e2a\u200b\u84dd\u6676\u65cf\u200b\uff0c\u200b\u53d1\u73b0\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u79d8\u5bc6\u200b\uff0c\u200b\u60f3\u8981\u200b\u7834\u574f\u200b\u88c5\u7f6e\u200b\uff1f\"</p> <p>\"\u200b\u4e0d\u200b\u3002\"max\u200b\u6447\u5934\u200b\uff0c\"\u200b\u4ed6\u4eec\u200b\u60f3\u200b\u5229\u7528\u200b\u8fd9\u4e2a\u200b\u88c5\u7f6e\u200b\uff0c\u200b\u53cd\u5411\u200b\u6253\u5f00\u200b\u901a\u5f80\u200b\u4ed6\u4eec\u200b\u4e16\u754c\u200b\u7684\u200b\u6c38\u4e45\u200b\u901a\u9053\u200b\u3002\"</p> <p>\u200b\u4e00\u884c\u200b\u4eba\u200b\u7ee7\u7eed\u200b\u6df1\u5165\u200b\u3002\u200b\u968f\u7740\u200b\u6df1\u5ea6\u200b\u589e\u52a0\u200b\uff0c\u200b\u5468\u56f4\u200b\u7684\u200b\u5899\u58c1\u200b\u4e0a\u200b\u5f00\u59cb\u200b\u51fa\u73b0\u200b\u53e4\u8001\u200b\u7684\u200b\u7b26\u6587\u200b\uff0c\u200b\u53d1\u51fa\u200b\u5fae\u5f31\u200b\u7684\u200b\u7eff\u5149\u200b\u3002</p> <p>\"\u200b\u6211\u4eec\u200b\u63a5\u8fd1\u200b\u4e86\u200b\u3002\"max\u200b\u793a\u610f\u200b\u4f17\u4eba\u200b\u653e\u8f7b\u200b\u811a\u6b65\u200b\u3002</p> <p>\u200b\u7a7f\u8fc7\u200b\u4e00\u6bb5\u200b\u873f\u8712\u200b\u7684\u200b\u901a\u9053\u200b\u540e\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u6765\u5230\u200b\u4e00\u4e2a\u200b\u5de8\u5927\u200b\u7684\u200b\u5706\u5f62\u200b\u77f3\u95e8\u200b\u524d\u200b\u3002\u200b\u77f3\u95e8\u200b\u8868\u9762\u200b\u96d5\u523b\u200b\u7740\u200b\u4e0e\u200b\u5143\u200b\u7075\u7389\u200b\u76f8\u4f3c\u200b\u7684\u200b\u7eb9\u8def\u200b\uff0c\u200b\u4e2d\u592e\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7389\u77f3\u200b\u51f9\u69fd\u200b\u3002</p> <p>\"\u200b\u9700\u8981\u200b\u94a5\u5319\u200b\u624d\u80fd\u200b\u6253\u5f00\u200b\u3002\"max\u200b\u4ece\u200b\u6000\u4e2d\u200b\u53d6\u51fa\u200b\u4e00\u679a\u200b\u5c0f\u5de7\u200b\u7684\u200b\u7389\u77f3\u200b\uff0c\u200b\u6b63\u8981\u200b\u653e\u5165\u200b\u51f9\u69fd\u200b\uff0c\u200b\u7a81\u7136\u200b\u8b66\u89c9\u5730\u200b\u505c\u4e0b\u200b\u52a8\u4f5c\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\u5bf9\u200b\uff0c\u200b\u6709\u4eba\u200b\u5148\u200b\u6211\u4eec\u200b\u4e00\u6b65\u200b\u5230\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u8bdd\u97f3\u521a\u843d\u200b\uff0c\u200b\u77f3\u95e8\u200b\u7f13\u7f13\u200b\u5f00\u542f\u200b\uff0c\u200b\u84dd\u5149\u200b\u4ece\u200b\u95e8\u7f1d\u200b\u4e2d\u200b\u6cc4\u51fa\u200b\u3002\u200b\u95e8\u200b\u5b8c\u5168\u200b\u6253\u5f00\u200b\u540e\u200b\uff0c\u200b\u4f17\u4eba\u200b\u770b\u5230\u200b\u4e86\u200b\u4ee4\u4eba\u9707\u60ca\u200b\u7684\u200b\u4e00\u5e55\u200b\u3002</p> <p>\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u58a8\u67d3\u200b\u5b8c\u5168\u76f8\u540c\u200b\u7684\u200b\u8eab\u5f71\u200b\u7ad9\u200b\u5728\u200b\u5de8\u5927\u200b\u7684\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u4e2d\u592e\u200b\uff0c\u200b\u624b\u6301\u200b\u6cd5\u6756\u200b\uff0c\u200b\u8eab\u540e\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6b63\u5728\u200b\u5f62\u6210\u200b\u7684\u200b\u5de8\u5927\u200b\u84dd\u8272\u200b\u6f29\u6da1\u200b\u3002\u200b\u4f46\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\"\u200b\u58a8\u67d3\u200b\"\u200b\u5168\u8eab\u200b\u8986\u76d6\u200b\u7740\u200b\u84dd\u8272\u200b\u6676\u4f53\u200b\u94e0\u7532\u200b\uff0c\u200b\u5934\u9876\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5c0f\u578b\u200b\u84dd\u8272\u200b\u738b\u51a0\u200b\u3002</p> <p>\"\u200b\u6b22\u8fce\u200b\uff0cmax\u200b\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u8fd8\u6709\u200b\u53ef\u656c\u200b\u7684\u200b\u8fdc\u5f81\u200b\u5c06\u519b\u200b\u6d6e\u5c18\u200b\u3002\"\u200b\u84dd\u6676\u200b\u58a8\u67d3\u200b\u8f6c\u8fc7\u8eab\u200b\uff0c\u200b\u58f0\u97f3\u200b\u6bd4\u200b\u4e4b\u524d\u200b\u66f4\u52a0\u200b\u4f4e\u6c89\u200b\u6709\u529b\u200b\uff0c\"\u200b\u6211\u200b\u7b49\u5019\u591a\u65f6\u200b\u4e86\u200b\u3002\"</p> <p>max\u200b\u9762\u8272\u200b\u51dd\u91cd\u200b\uff1a\"\u200b\u84dd\u6676\u738b\u200b...\u200b\u679c\u7136\u200b\u662f\u200b\u4f60\u200b\u4eb2\u81ea\u200b\u964d\u4e34\u200b\u3002\"</p> <p>\u200b\u84dd\u6676\u200b\u58a8\u67d3\u200b\u2014\u2014\u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u786e\u5b9a\u200b\u662f\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u738b\u8005\u200b\u2014\u2014\u200b\u4f18\u96c5\u200b\u5730\u200b\u97a0\u200b\u4e86\u200b\u4e00\u8eac\u200b\uff1a\"\u200b\u80fd\u200b\u88ab\u200b\u8ba4\u51fa\u6765\u200b\uff0c\u200b\u6211\u200b\u5f88\u200b\u8363\u5e78\u200b\u3002\u200b\u4e94\u5e74\u200b\u524d\u200b\u6211\u200b\u5c31\u200b\u5df2\u200b\u5c06\u200b\u610f\u8bc6\u200b\u6295\u5c04\u200b\u5230\u200b\u8fd9\u4e2a\u200b\u4e16\u754c\u200b\uff0c\u200b\u9644\u8eab\u200b\u5728\u200b\u8fd9\u4f4d\u200b\u53ef\u656c\u200b\u7684\u200b\u5927\u6cd5\u5e08\u200b\u8eab\u4e0a\u200b\u3002\u200b\u53ef\u60dc\u200b\u529f\u4e8f\u4e00\u7bd1\u200b\uff0c\u200b\u88ab\u200b\u4f60\u4eec\u200b\u53d1\u73b0\u200b\u4e86\u200b\u8ba1\u5212\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u6012\u9053\u200b\uff1a\"\u200b\u4f60\u200b\u6740\u5bb3\u200b\u4e86\u200b\u591a\u5c11\u200b\u65e0\u8f9c\u8005\u200b\uff0c\u200b\u5c31\u200b\u4e3a\u4e86\u200b\u4fb5\u7565\u200b\u6211\u4eec\u200b\u7684\u200b\u4e16\u754c\u200b\uff1f\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u4e0d\u5c51\u200b\u4e00\u7b11\u200b\uff1a\"\u200b\u4fb5\u7565\u200b\uff1f\u200b\u6211\u200b\u66f4\u200b\u613f\u610f\u200b\u79f0\u4e4b\u4e3a\u200b'\u200b\u62ef\u6551\u200b'\u3002\u200b\u4f60\u4eec\u200b\u7684\u200b\u4e16\u754c\u200b\u5728\u200b\u81ea\u6211\u200b\u6bc1\u706d\u200b\uff0c\u200b\u800c\u200b\u6211\u4eec\u200b\u5c06\u200b\u5e26\u6765\u200b\u65b0\u200b\u7684\u200b\u79e9\u5e8f\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u76ee\u5149\u200b\u9510\u5229\u200b\uff1a\"\u200b\u4f60\u200b\u5728\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u505a\u200b\u4e86\u200b\u4ec0\u4e48\u200b\uff1f\"</p> <p>\"\u200b\u4e00\u4e2a\u200b\u5c0f\u5c0f\u7684\u200b\u6539\u9020\u200b\u3002\"\u200b\u84dd\u6676\u738b\u200b\u6307\u5411\u200b\u8eab\u540e\u200b\u7684\u200b\u84dd\u8272\u200b\u6f29\u6da1\u200b\uff0c\"\u200b\u8fd9\u4e2a\u200b\u88c5\u7f6e\u200b\u539f\u672c\u200b\u662f\u200b\u7528\u6765\u200b\u5c01\u5370\u200b\u5165\u4fb5\u8005\u200b\uff0c\u200b\u6211\u200b\u53ea\u662f\u200b\u7a0d\u7a0d\u200b\u8c03\u6574\u200b\u4e86\u200b\u4e00\u4e0b\u200b\u65b9\u5411\u200b\uff0c\u200b\u8ba9\u200b\u5b83\u200b\u8fde\u63a5\u200b\u5230\u200b\u6211\u200b\u7684\u200b\u4e16\u754c\u200b\u3002\u200b\u5f88\u5feb\u200b\uff0c\u200b\u6211\u200b\u7684\u200b\u5927\u519b\u200b\u5c31\u200b\u5c06\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u95e8\u6237\u200b\u964d\u4e34\u200b\u3002\"</p> <p>max\u200b\u53d6\u51fa\u200b\u91d1\u8272\u200b\u957f\u5251\u200b\uff1a\"\u200b\u90a3\u200b\u6211\u4eec\u200b\u53ea\u80fd\u200b\u963b\u6b62\u200b\u4f60\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u51b7\u7b11\u200b\uff1a\"\u200b\u56db\u4e2a\u200b\u877c\u8681\u200b\uff0c\u200b\u5bf9\u6297\u200b\u4e00\u4e2a\u200b\u738b\u8005\u200b\uff1f\"</p> <p>\u200b\u8bdd\u97f3\u672a\u843d\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u5df2\u200b\u7387\u5148\u200b\u53d1\u52a8\u200b\u653b\u51fb\u200b\u3002\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u76f4\u53d6\u200b\u84dd\u6676\u738b\u200b\u54bd\u5589\u200b\uff0c\u200b\u901f\u5ea6\u200b\u5feb\u5f97\u200b\u60ca\u4eba\u200b\u3002\u200b\u7136\u800c\u200b\u84dd\u6676\u738b\u200b\u53ea\u662f\u200b\u8f7b\u8f7b\u200b\u504f\u5934\u200b\uff0c\u200b\u5c31\u200b\u8eb2\u8fc7\u200b\u4e86\u200b\u8fd9\u200b\u81f4\u547d\u200b\u4e00\u51fb\u200b\u3002</p> <p>\"\u200b\u592a\u6162\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u53f3\u624b\u200b\u4e00\u6325\u200b\uff0c\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u6ce2\u4ee5\u200b\u4e0d\u53ef\u601d\u8bae\u200b\u7684\u200b\u901f\u5ea6\u200b\u51fb\u4e2d\u200b\u6d6e\u5c18\u200b\uff0c\u200b\u5c06\u200b\u4ed6\u200b\u6574\u4e2a\u200b\u4eba\u200b\u629b\u200b\u98de\u51fa\u53bb\u200b\uff0c\u200b\u91cd\u91cd\u200b\u649e\u200b\u5728\u200b\u77f3\u67f1\u200b\u4e0a\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u89c1\u72b6\u200b\uff0c\u200b\u7acb\u523b\u200b\u7ed3\u5370\u200b\uff1a\"\u200b\u98ce\u9041\u200b\u00b7\u200b\u5343\u5203\u200b\u98ce\u66b4\u200b\uff01\"</p> <p>\u200b\u65e0\u6570\u200b\u98ce\u5203\u200b\u51ed\u7a7a\u51fa\u73b0\u200b\uff0c\u200b\u4ece\u200b\u56db\u9762\u516b\u65b9\u200b\u88ad\u5411\u200b\u84dd\u6676\u738b\u200b\u3002\u200b\u72ec\u5b88\u200b\u4e5f\u200b\u4e0d\u7518\u793a\u5f31\u200b\uff0c\u200b\u53cc\u65a7\u200b\u51fa\u624b\u200b\uff0c\u200b\u5288\u200b\u5411\u200b\u84dd\u6676\u738b\u200b\u80cc\u540e\u200b\u3002</p> <p>\u200b\u84dd\u6676\u738b\u200b\u4e0d\u200b\u8eb2\u200b\u4e0d\u200b\u95ea\u200b\uff0c\u200b\u8eab\u4f53\u200b\u8868\u9762\u200b\u7a81\u7136\u200b\u7206\u53d1\u200b\u51fa\u200b\u4e00\u5c42\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u76fe\u200b\uff0c\u200b\u5c06\u200b\u6240\u6709\u200b\u653b\u51fb\u200b\u90fd\u200b\u5f39\u5f00\u200b\u3002\u200b\u968f\u540e\u200b\uff0c\u200b\u4ed6\u200b\u4f38\u51fa\u200b\u624b\u638c\u200b\uff0c\u200b\u5bf9\u51c6\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\uff1a\"\u200b\u84dd\u6676\u200b\u6cd5\u672f\u200b\u00b7\u200b\u91cd\u529b\u200b\u5d29\u584c\u200b\u3002\"</p> <p>\u200b\u5239\u90a3\u95f4\u200b\uff0c\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\u611f\u5230\u200b\u4e00\u80a1\u200b\u65e0\u6cd5\u200b\u62b5\u6297\u200b\u7684\u200b\u529b\u91cf\u200b\u538b\u200b\u4e0b\u200b\uff0c\u200b\u6574\u4e2a\u200b\u4eba\u200b\u88ab\u200b\u751f\u751f\u200b\u6309\u5165\u200b\u5730\u9762\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u52a8\u5f39\u200b\u3002</p> <p>\"\u200b\u592a\u5f31\u200b\u4e86\u200b\uff0c\u200b\u4f60\u4eec\u200b\u592a\u5f31\u200b\u4e86\u200b\u3002\"\u200b\u84dd\u6676\u738b\u200b\u8f7b\u8511\u200b\u5730\u8bf4\u200b\uff0c\"\u200b\u4e5f\u8bb8\u200b\u6211\u200b\u8be5\u200b\u5148\u200b\u89e3\u51b3\u200b\u6389\u200b\u4f60\u4eec\u200b\uff0c\u200b\u518d\u200b\u53bb\u200b\u5904\u7406\u200b\u90a3\u8fb9\u200b\u7684\u200b\u5143\u200b\u7075\u7389\u200b\u4eea\u5f0f\u200b\u3002\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0cmax\u200b\u7a81\u7136\u200b\u51fa\u73b0\u200b\u5728\u200b\u84dd\u6676\u738b\u200b\u80cc\u540e\u200b\uff0c\u200b\u91d1\u8272\u200b\u957f\u5251\u200b\u76f4\u523a\u200b\u5176\u540e\u200b\u5fc3\u200b\u3002\u200b\u84dd\u6676\u200b\u738b\u4f3c\u200b\u6709\u6240\u200b\u611f\u200b\uff0c\u200b\u8fc5\u901f\u200b\u8f6c\u8eab\u200b\uff0c\u200b\u53f3\u624b\u200b\u53d8\u5f62\u200b\u4e3a\u200b\u84dd\u8272\u200b\u6676\u4f53\u200b\u5200\u5203\u200b\uff0c\u200b\u67b6\u4f4f\u200b\u4e86\u200bmax\u200b\u7684\u200b\u5251\u200b\u3002</p> <p>\"\u200b\u4e0d\u6127\u200b\u662f\u200b\u57ce\u4e3b\u200b\uff0c\u200b\u8fd8\u200b\u6709\u70b9\u200b\u672c\u4e8b\u200b\u3002\"</p> <p>max\u200b\u4e0e\u200b\u84dd\u6676\u738b\u200b\u77ac\u95f4\u200b\u4ea4\u624b\u200b\u6570\u5341\u200b\u56de\u5408\u200b\uff0c\u200b\u91d1\u5149\u200b\u4e0e\u200b\u84dd\u5149\u200b\u5728\u200b\u795e\u6bbf\u200b\u4e2d\u200b\u4ea4\u76f8\u8f89\u6620\u200b\u3002max\u200b\u7684\u200b\u5251\u6cd5\u200b\u7cbe\u5999\u7edd\u4f26\u200b\uff0c\u200b\u4f46\u200b\u84dd\u6676\u738b\u200b\u7684\u200b\u529b\u91cf\u200b\u660e\u663e\u200b\u66f4\u80dc\u4e00\u7b79\u200b\u3002\u200b\u51e0\u4e2a\u200b\u56de\u5408\u200b\u540e\u200b\uff0cmax\u200b\u88ab\u200b\u903c\u200b\u9000\u200b\u6570\u6b65\u200b\uff0c\u200b\u80f8\u524d\u200b\u8863\u7269\u200b\u88ab\u200b\u5272\u88c2\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e00\u9053\u200b\u6d45\u4f24\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u5f88\u200b\u5f3a\u200b\uff0c\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b\u3002\"\u200b\u84dd\u6676\u738b\u200b\u8bc4\u4ef7\u200b\u9053\u200b\uff0c\"\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4e16\u754c\u200b\u4e0a\u200b\uff0c\u200b\u4f60\u200b\u53ef\u80fd\u200b\u662f\u200b\u6700\u200b\u63a5\u8fd1\u200b\u6211\u200b\u529b\u91cf\u200b\u7684\u200b\u5b58\u5728\u200b\u3002\u200b\u53ef\u60dc\u200b\uff0c\u200b\u8fd8\u662f\u200b\u5dee\u5f97\u200b\u592a\u8fdc\u200b\u3002\"</p> <p>\u200b\u8bf4\u5b8c\u200b\uff0c\u200b\u84dd\u6676\u738b\u200b\u7a81\u7136\u200b\u5316\u4f5c\u200b\u4e00\u9053\u200b\u84dd\u5149\u200b\uff0c\u200b\u51fa\u73b0\u200b\u5728\u200bmax\u200b\u9762\u524d\u200b\uff0c\u200b\u6676\u4f53\u200b\u624b\u638c\u200b\u76f4\u63a5\u63d2\u5165\u200bmax\u200b\u80f8\u53e3\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\uff01\"\u200b\u6d6e\u5c18\u200b\u8270\u96be\u200b\u5730\u200b\u4ece\u200b\u5e9f\u589f\u200b\u4e2d\u200b\u722c\u200b\u8d77\u200b\uff0c\u200b\u76ee\u7779\u200b\u8fd9\u200b\u4e00\u5e55\u200b\u3002</p> <p>max\u200b\u4f4e\u5934\u200b\u770b\u7740\u200b\u8d2f\u7a7f\u200b\u80f8\u53e3\u200b\u7684\u200b\u624b\u638c\u200b\uff0c\u200b\u5374\u200b\u6ca1\u6709\u200b\u9884\u6599\u4e2d\u200b\u7684\u200b\u75db\u82e6\u200b\u8868\u60c5\u200b\uff0c\u200b\u53cd\u800c\u200b\u9732\u51fa\u200b\u4e00\u4e1d\u200b\u795e\u79d8\u200b\u5fae\u7b11\u200b\uff1a\"\u200b\u4f60\u200b\u4e0a\u5f53\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u4e00\u200b\u6123\u200b\uff0c\u200b\u968f\u5373\u200b\u611f\u5230\u200b\u4e00\u80a1\u200b\u53e4\u8001\u200b\u7684\u200b\u80fd\u91cf\u200b\u4ece\u200bmax\u200b\u4f53\u5185\u200b\u6d8c\u51fa\u200b\uff0c\u200b\u91d1\u8272\u200b\u5149\u8292\u200b\u5982\u540c\u200b\u9501\u94fe\u200b\u822c\u200b\u7f20\u7ed5\u200b\u4f4f\u200b\u4ed6\u200b\u7684\u200b\u624b\u81c2\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u5c01\u5370\u200b\u4e4b\u529b\u200b\uff1f\"\u200b\u84dd\u6676\u738b\u200b\u60ca\u8bb6\u200b\u9053\u200b\uff0c\u200b\u8bd5\u56fe\u200b\u62bd\u56de\u200b\u624b\u81c2\u200b\uff0c\u200b\u5374\u200b\u53d1\u73b0\u200b\u65e0\u6cd5\u200b\u52a8\u5f39\u200b\u3002</p> <p>max\u200b\u54b3\u51fa\u200b\u4e00\u53e3\u200b\u9c9c\u8840\u200b\uff0c\u200b\u4f46\u200b\u773c\u795e\u200b\u4f9d\u7136\u200b\u575a\u5b9a\u200b\uff1a\"\u200b\u4f5c\u4e3a\u200b\u5386\u4ee3\u200b\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u6211\u4eec\u200b\u7684\u200b\u8eab\u4f53\u200b\u5c31\u662f\u200b'\u200b\u94a5\u5319\u200b'\uff0c\u200b\u80fd\u591f\u200b\u6fc0\u6d3b\u200b\u6216\u200b\u5c01\u5370\u200b\u8fd9\u5ea7\u200b\u795e\u6bbf\u200b\u7684\u200b\u529b\u91cf\u200b\u3002\"</p> <p>\u200b\u968f\u7740\u200bmax\u200b\u7684\u200b\u8bdd\u97f3\u200b\u843d\u4e0b\u200b\uff0c\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\u5730\u9762\u200b\u4eae\u200b\u8d77\u200b\u91d1\u8272\u200b\u7eb9\u8def\u200b\uff0c\u200b\u4e0e\u200b\u84dd\u8272\u200b\u6f29\u6da1\u200b\u5f62\u6210\u200b\u5bf9\u6297\u200b\u3002\u200b\u84dd\u6676\u738b\u200b\u6323\u624e\u200b\u7740\u200b\uff0c\u200b\u4f46\u200b\u91d1\u8272\u200b\u9501\u94fe\u200b\u8d8a\u7f20\u200b\u8d8a\u7d27\u200b\u3002</p> <p>\"\u200b\u611a\u8822\u200b\u7684\u200b\u727a\u7272\u200b\uff01\u200b\u4f60\u200b\u4ee5\u4e3a\u200b\u8fd9\u6837\u200b\u5c31\u200b\u80fd\u200b\u963b\u6b62\u200b\u6211\u200b\uff1f\"\u200b\u84dd\u6676\u738b\u200b\u6012\u543c\u200b\u3002</p> <p>max\u200b\u865a\u5f31\u200b\u5730\u7b11\u200b\u4e86\u200b\uff1a\"\u200b\u4e0d\u200b\uff0c\u200b\u8fd9\u200b\u53ea\u662f\u200b\u62d6\u5ef6\u200b\u3002\u200b\u771f\u6b63\u200b\u7684\u200b\u80dc\u8d1f\u200b\uff0c\u200b\u5728\u200b\u53e6\u4e00\u8fb9\u200b\u3002\"</p> <p>\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u4e2d\u200b\uff0c\u200b\u6218\u6597\u200b\u5df2\u7ecf\u200b\u8fdb\u5165\u200b\u767d\u70ed\u5316\u200b\u3002\u200b\u5927\u6279\u200b\u84dd\u6676\u200b\u5080\u5121\u200b\u51b2\u7834\u200b\u5916\u56f4\u200b\u9632\u7ebf\u200b\uff0c\u200b\u6b63\u200b\u4e0e\u200b\u5b88\u536b\u200b\u6fc0\u6218\u200b\u3002\u200b\u5c0f\u58a8\u200b\u548c\u200bDW\u200b\u5b88\u200b\u5728\u200b\u524d\u7ebf\u200b\uff0c\u200b\u4f69\u6d1b\u6d1b\u200b\u548c\u200b\u8424\u706b\u200b\u5219\u200b\u4fdd\u62a4\u6cd5\u200b\u9635\u548c\u5143\u200b\u7075\u7389\u200b\u3002</p> <p>\"\u200b\u4ed6\u4eec\u200b\u592a\u591a\u200b\u4e86\u200b\uff01\"\u200b\u5c0f\u58a8\u200b\u4e00\u8fb9\u200b\u6325\u5251\u200b\u4e00\u8fb9\u200b\u558a\u9053\u200b\u3002</p> <p>DW\u200b\u7684\u200b\u673a\u68b0\u200b\u81c2\u200b\u5df2\u7ecf\u200b\u635f\u574f\u200b\uff0c\u200b\u4f46\u200b\u4ed6\u200b\u4ecd\u200b\u5728\u200b\u594b\u529b\u200b\u6218\u6597\u200b\uff1a\"\u200b\u575a\u6301\u200b\u4f4f\u200b\uff01\u200b\u65f6\u95f4\u200b\u5feb\u5230\u200b\u4e86\u200b\uff01\"</p> <p>\u200b\u6700\u200b\u524d\u65b9\u200b\u7684\u200b\u84dd\u6676\u200b\u5080\u5121\u200b\u7a81\u7136\u200b\u5206\u5f00\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u5168\u65b0\u200b\u7684\u200b\u8eab\u5f71\u200b\u8d70\u200b\u4e86\u200b\u8fdb\u6765\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0e\u200b\u58a8\u67d3\u200b\u5bb9\u8c8c\u200b\u4e00\u6a21\u4e00\u6837\u200b\uff0c\u200b\u4f46\u200b\u901a\u4f53\u200b\u84dd\u8272\u200b\u7684\u200b\u5b58\u5728\u200b\u3002</p> <p>\"\u200b\u6211\u200b\u662f\u200b\u84dd\u6676\u738b\u200b\u7684\u200b\u526f\u5b98\u200b\u3002\"\u200b\u6765\u8005\u200b\u58f0\u97f3\u200b\u51b0\u51b7\u200b\uff0c\"\u200b\u6295\u964d\u200b\u5427\u200b\uff0c\u200b\u628a\u200b\u5143\u200b\u7075\u7389\u200b\u4ea4\u7ed9\u200b\u6211\u200b\u3002\"</p> <p>\u200b\u5c0f\u58a8\u200b\u5389\u58f0\u200b\u9053\u200b\uff1a\"\u200b\u4f11\u60f3\u200b\uff01\"</p> <p>\u200b\u84dd\u6676\u200b\u526f\u5b98\u200b\u6447\u5934\u200b\uff1a\"\u200b\u4f55\u5fc5\u200b\u767d\u767d\u200b\u727a\u7272\u200b\uff1f\u200b\u4f60\u4eec\u200b\u7684\u200b\u57ce\u4e3b\u200b\u5df2\u7ecf\u200b\u843d\u5165\u200b\u84dd\u6676\u200b\u738b\u4e4b\u624b\u200b\uff0c\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u5373\u5c06\u200b\u6ca6\u9677\u200b\u3002\"</p> <p>\u200b\u4f17\u4eba\u200b\u95fb\u8a00\u200b\u5fc3\u5934\u200b\u4e00\u9707\u200b\uff0c\u200b\u4f46\u200b\u8424\u706b\u200b\u7a81\u7136\u200b\u7ad9\u200b\u51fa\u6765\u200b\uff1a\"\u200b\u8c0e\u8a00\u200b\uff01max\u200b\u57ce\u4e3b\u200b\u548c\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\u4e0d\u4f1a\u200b\u5931\u8d25\u200b\uff01\"</p> <p>\u200b\u526f\u5b98\u200b\u51b7\u7b11\u200b\u4e00\u58f0\u200b\uff0c\u200b\u62ac\u624b\u200b\u4fbf\u662f\u200b\u4e00\u9053\u200b\u84dd\u8272\u200b\u80fd\u91cf\u200b\u675f\u200b\uff0c\u200b\u76f4\u53d6\u200b\u8424\u706b\u200b\u54bd\u5589\u200b\u3002\u200b\u773c\u770b\u200b\u8424\u706b\u200b\u907f\u200b\u65e0\u53ef\u200b\u907f\u200b\uff0c\u200b\u4f69\u6d1b\u6d1b\u200b\u7a81\u7136\u200b\u6321\u200b\u5728\u200b\u524d\u9762\u200b\uff0c\u200b\u796d\u200b\u51fa\u200b\u4e00\u9762\u200b\u6c34\u6676\u200b\u76fe\u724c\u200b\u3002\u200b\u80fd\u91cf\u200b\u675f\u200b\u51fb\u4e2d\u200b\u76fe\u724c\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u6253\u200b\u5f97\u200b\u7c89\u788e\u200b\uff0c\u200b\u4f46\u200b\u603b\u7b97\u200b\u4fdd\u4f4f\u200b\u4e86\u200b\u8424\u706b\u200b\u7684\u200b\u6027\u547d\u200b\u3002</p> <p>\"\u200b\u4f69\u6d1b\u6d1b\u200b\uff01\"\u200b\u5c0f\u58a8\u200b\u5fc3\u6025\u5982\u711a\u200b\uff0c\u200b\u51b2\u5411\u200b\u59bb\u5b50\u200b\u3002</p> <p>\u200b\u4f69\u6d1b\u6d1b\u200b\u6342\u7740\u200b\u88ab\u200b\u80fd\u91cf\u200b\u675f\u200b\u707c\u4f24\u200b\u7684\u200b\u624b\u81c2\u200b\uff0c\u200b\u865a\u5f31\u200b\u5730\u7b11\u200b\u9053\u200b\uff1a\"\u200b\u6211\u200b\u6ca1\u4e8b\u200b...\u200b\u5b88\u62a4\u200b\u5143\u7075\u7389\u200b\u624d\u200b\u662f\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u3002\"</p> <p>DW\u200b\u8d81\u673a\u200b\u53d1\u52a8\u200b\u653b\u51fb\u200b\uff0c\u200b\u673a\u68b0\u200b\u81c2\u200b\u4e2d\u5c04\u51fa\u200b\u6570\u679a\u200b\u98de\u5200\u200b\uff0c\u200b\u76f4\u53d6\u200b\u526f\u5b98\u200b\u8981\u5bb3\u200b\u3002\u200b\u526f\u5b98\u200b\u8f7b\u677e\u200b\u8eb2\u8fc7\u200b\uff0c\u200b\u53cd\u624b\u200b\u4e00\u9053\u200b\u80fd\u91cf\u200b\u6ce2\u5c06\u200bDW\u200b\u51fb\u9000\u200b\u6570\u7c73\u200b\u3002</p> <p>\"\u200b\u65f6\u95f4\u200b\u4e0d\u591a\u200b\u4e86\u200b\u3002\"\u200b\u526f\u5b98\u200b\u671b\u200b\u5411\u200b\u795e\u6bbf\u200b\u7a79\u9876\u200b\u7684\u200b\u6ee1\u6708\u200b\uff0c\"\u200b\u4ea4\u51fa\u200b\u5143\u7075\u7389\u200b\uff0c\u200b\u5426\u5219\u200b\u4f60\u4eec\u200b\u90fd\u200b\u5c06\u200b\u6b7b\u200b\u5728\u200b\u8fd9\u91cc\u200b\u3002\"</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u7a81\u7136\u200b\u5f00\u59cb\u200b\u53d1\u5149\u200b\uff0c\u200b\u7eff\u8272\u200b\u5149\u8292\u200b\u8d8a\u6765\u8d8a\u200b\u5f3a\u200b\u3002\u200b\u6cd5\u9635\u200b\u968f\u4e4b\u200b\u4eae\u200b\u8d77\u200b\uff0c\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\u88ab\u200b\u7eff\u5149\u200b\u7b3c\u7f69\u200b\u3002</p> <p>\"\u200b\u662f\u200b\u65f6\u95f4\u200b\u5230\u200b\u4e86\u200b\uff01\"\u200b\u8424\u706b\u200b\u60ca\u559c\u200b\u9053\u200b\uff0c\"\u200b\u4eea\u5f0f\u200b\u81ea\u52a8\u200b\u542f\u52a8\u200b\u4e86\u200b\uff01\"</p> <p>\u200b\u526f\u5b98\u200b\u9762\u8272\u200b\u5927\u200b\u53d8\u200b\uff1a\"\u200b\u4e0d\u200b\u53ef\u80fd\u200b\uff01\u200b\u8fd8\u200b\u6ca1\u5230\u200b\u5348\u591c\u200b...\"</p> <p>\u200b\u4ed6\u200b\u7a81\u7136\u200b\u610f\u8bc6\u200b\u5230\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u62ac\u5934\u200b\u671b\u200b\u5411\u200b\u6ee1\u6708\u200b\u3002\u200b\u53ea\u89c1\u200b\u6708\u4eae\u200b\u5468\u56f4\u200b\u7684\u200b\u84dd\u8272\u200b\u5149\u6655\u200b\u5df2\u7ecf\u200b\u6d88\u5931\u200b\uff0c\u200b\u7eaf\u51c0\u200b\u7684\u200b\u6708\u5149\u200b\u76f4\u5c04\u200b\u6cd5\u9635\u200b\u3002</p> <p>\"\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b...\u200b\u84dd\u6676\u738b\u200b\u5931\u8d25\u200b\u4e86\u200b\uff1f\"</p> <p>\u200b\u5730\u4e0b\u200b\u795e\u6bbf\u200b\u4e2d\u200b\uff0cmax\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u84dd\u6676\u738b\u200b\u7684\u200b\u624b\u81c2\u200b\u8d2f\u7a7f\u200b\uff0c\u200b\u751f\u547d\u5782\u5371\u200b\uff0c\u200b\u4f46\u200b\u91d1\u8272\u200b\u9501\u94fe\u200b\u4ecd\u200b\u7262\u7262\u200b\u7f20\u4f4f\u200b\u84dd\u6676\u738b\u200b\u3002\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\u4e5f\u200b\u8d81\u673a\u200b\u6062\u590d\u200b\u4e86\u200b\u884c\u52a8\u200b\u80fd\u529b\u200b\uff0c\u200b\u52a0\u5165\u200b\u6218\u6597\u200b\u3002</p> <p>\"\u200b\u6d6e\u5c18\u200b...\"max\u200b\u865a\u5f31\u200b\u5730\u200b\u547c\u5524\u200b\uff0c\"\u200b\u8fc7\u6765\u200b...\"</p> <p>\u200b\u6d6e\u5c18\u200b\u51b2\u200b\u5230\u200bmax\u200b\u8eab\u8fb9\u200b\uff0cmax\u200b\u5c06\u200b\u4e00\u679a\u200b\u5c0f\u5de7\u200b\u7684\u200b\u91d1\u8272\u200b\u94a5\u5319\u200b\u4ea4\u7ed9\u200b\u4ed6\u200b\uff1a\"\u200b\u4e2d\u592e\u200b\u63a7\u5236\u53f0\u200b...\u200b\u9006\u65f6\u9488\u200b\u8f6c\u52a8\u200b\u4e09\u5708\u200b...\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u89c1\u72b6\u200b\uff0c\u200b\u62fc\u547d\u200b\u6323\u624e\u200b\uff1a\"\u200b\u963b\u6b62\u200b\u4ed6\u200b\uff01\u200b\u6211\u200b\u7684\u200b\u90e8\u4e0b\u200b\u4eec\u200b\uff01\"</p> <p>\u200b\u795e\u6bbf\u200b\u5404\u5904\u200b\u7a81\u7136\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u6570\u5341\u4e2a\u200b\u84dd\u8272\u200b\u8eab\u5f71\u200b\u2014\u2014\u200b\u90fd\u200b\u662f\u200b\u84dd\u6676\u65cf\u200b\u6218\u58eb\u200b\uff0c\u200b\u5411\u200b\u6d6e\u5c18\u200b\u6251\u200b\u6765\u200b\u3002\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\u7acb\u523b\u200b\u8fce\u200b\u4e0a\u200b\uff0c\u200b\u62fc\u547d\u200b\u62b5\u6321\u200b\u3002</p> <p>\"\u200b\u53bb\u200b\uff01\u200b\u6211\u4eec\u200b\u63a9\u62a4\u200b\u4f60\u200b\uff01\"\u200b\u5357\u98ce\u200b\u5927\u558a\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u54ac\u7259\u200b\u51b2\u5411\u200b\u795e\u6bbf\u200b\u4e2d\u592e\u200b\u7684\u200b\u63a7\u5236\u53f0\u200b\uff0c\u200b\u4e00\u8def\u200b\u65a9\u6740\u200b\u6570\u540d\u200b\u84dd\u6676\u200b\u6218\u58eb\u200b\u3002\u200b\u5f53\u200b\u4ed6\u200b\u7ec8\u4e8e\u200b\u62b5\u8fbe\u200b\u63a7\u5236\u53f0\u200b\u65f6\u200b\uff0c\u200b\u53c8\u200b\u6709\u200b\u4e09\u540d\u200b\u5f3a\u5927\u200b\u7684\u200b\u84dd\u6676\u200b\u6218\u58eb\u200b\u56f4\u200b\u4e86\u200b\u4e0a\u6765\u200b\u3002</p> <p>\"\u200b\u60f3\u90fd\u522b\u60f3\u200b\uff01\"</p> <p>\u200b\u6d6e\u5c18\u200b\u71c3\u70e7\u200b\u6700\u540e\u200b\u7684\u200b\u529b\u91cf\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u5316\u4f5c\u200b\u4e00\u9053\u200b\u9ed1\u8272\u200b\u95ea\u7535\u200b\uff0c\u200b\u523a\u7a7f\u200b\u4e09\u540d\u200b\u6218\u58eb\u200b\u7684\u200b\u80f8\u53e3\u200b\u3002\u200b\u4ed6\u200b\u81ea\u5df1\u200b\u4e5f\u200b\u53d7\u200b\u4e86\u200b\u91cd\u4f24\u200b\uff0c\u200b\u4f46\u200b\u603b\u7b97\u200b\u62b5\u8fbe\u200b\u4e86\u200b\u63a7\u5236\u53f0\u200b\u3002</p> <p>\u200b\u63a7\u5236\u53f0\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53e4\u8001\u200b\u7684\u200b\u77f3\u53f0\u200b\uff0c\u200b\u4e2d\u592e\u200b\u6709\u200b\u4e00\u4e2a\u200b\u91d1\u8272\u200b\u94a5\u5319\u5b54\u200b\u3002\u200b\u6d6e\u5c18\u200b\u5c06\u200bmax\u200b\u7ed9\u200b\u7684\u200b\u94a5\u5319\u200b\u63d2\u5165\u200b\uff0c\u200b\u8270\u96be\u200b\u5730\u200b\u9006\u65f6\u9488\u200b\u65cb\u8f6c\u200b\u7b2c\u4e00\u5708\u200b\u3002</p> <p>\u200b\u795e\u6bbf\u200b\u5f00\u59cb\u200b\u9707\u52a8\u200b\uff0c\u200b\u5730\u9762\u200b\u7684\u200b\u91d1\u8272\u200b\u7eb9\u8def\u200b\u4eae\u5ea6\u200b\u589e\u5f3a\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\uff01\"\u200b\u84dd\u6676\u738b\u200b\u6012\u543c\u200b\uff0c\u200b\u66f4\u52a0\u200b\u5267\u70c8\u5730\u200b\u6323\u624e\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u7ee7\u7eed\u200b\u65cb\u8f6c\u200b\u7b2c\u4e8c\u5708\u200b\u3002\u200b\u84dd\u8272\u200b\u6f29\u6da1\u200b\u5f00\u59cb\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\uff0c\u200b\u51fa\u73b0\u200b\u626d\u66f2\u200b\u3002</p> <p>\"\u200b\u6740\u200b\u4e86\u200b\u4ed6\u200b\uff01\"\u200b\u84dd\u6676\u738b\u200b\u547d\u4ee4\u200b\u9053\u200b\u3002</p> <p>\u200b\u5269\u4f59\u200b\u7684\u200b\u84dd\u6676\u200b\u6218\u58eb\u200b\u4e0d\u987e\u4e00\u5207\u200b\u5730\u200b\u51b2\u5411\u200b\u6d6e\u5c18\u200b\u3002\u200b\u5357\u98ce\u200b\u4f7f\u51fa\u200b\u6700\u540e\u200b\u7684\u200b\u529b\u91cf\u200b\uff0c\u200b\u65bd\u5c55\u200b\u51fa\u200b\u6700\u5f3a\u200b\u98ce\u9041\u200b\uff1a\"\u200b\u98ce\u9041\u200b\u00b7\u200b\u5929\u7fd4\u200b\u7edd\u706d\u200b\u5203\u200b\uff01\"</p> <p>\u200b\u4e00\u9053\u200b\u5de8\u5927\u200b\u7684\u200b\u534a\u6708\u5f62\u200b\u98ce\u5203\u200b\u6a2a\u626b\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\uff0c\u200b\u5c06\u200b\u51b2\u950b\u200b\u7684\u200b\u84dd\u6676\u200b\u6218\u58eb\u200b\u5168\u90e8\u200b\u65a9\u6210\u200b\u4e24\u6bb5\u200b\u3002\u200b\u5357\u98ce\u200b\u4e5f\u200b\u56e0\u200b\u8fc7\u5ea6\u200b\u6d88\u8017\u200b\u529b\u91cf\u200b\u800c\u200b\u5012\u4e0b\u200b\u3002</p> <p>\u200b\u72ec\u200b\u5b88\u5219\u200b\u4fdd\u62a4\u200b\u7740\u200b\u5944\u5944\u4e00\u606f\u200b\u7684\u200bmax\uff0c\u200b\u53cc\u65a7\u200b\u6325\u821e\u200b\uff0c\u200b\u6218\u6597\u200b\u81f3\u200b\u6700\u540e\u200b\u4e00\u523b\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u7ec8\u4e8e\u200b\u8f6c\u52a8\u200b\u7b2c\u4e09\u5708\u200b\u3002\u200b\u968f\u7740\u200b\"\u200b\u5494\u55d2\u200b\"\u200b\u4e00\u58f0\u200b\uff0c\u200b\u6574\u4e2a\u200b\u795e\u6bbf\u200b\u91d1\u5149\u200b\u5927\u76db\u200b\uff0c\u200b\u539f\u672c\u200b\u7684\u200b\u84dd\u8272\u200b\u6f29\u6da1\u200b\u5b8c\u5168\u200b\u9006\u8f6c\u200b\uff0c\u200b\u53d8\u6210\u200b\u4e00\u4e2a\u200b\u91d1\u8272\u200b\u6f29\u6da1\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b\u53ef\u80fd\u200b\uff01\"\u200b\u84dd\u6676\u738b\u200b\u611f\u5230\u200b\u4e00\u80a1\u200b\u5de8\u5927\u200b\u7684\u200b\u5438\u529b\u200b\u6b63\u200b\u5c06\u200b\u4ed6\u200b\u62c9\u200b\u5411\u200b\u6f29\u6da1\u200b\uff0c\"\u200b\u6211\u200b\u4e0d\u4f1a\u200b\u5c31\u200b\u8fd9\u6837\u200b\u5931\u8d25\u200b\uff01\"</p> <p>max\u200b\u7528\u5c3d\u200b\u6700\u540e\u200b\u7684\u200b\u529b\u6c14\u200b\uff0c\u200b\u53cc\u624b\u200b\u7d27\u63e1\u200b\u84dd\u6676\u738b\u200b\u7684\u200b\u624b\u81c2\u200b\uff1a\"\u200b\u4f60\u200b\u8f93\u200b\u4e86\u200b...\u200b\u56de\u5230\u200b\u4f60\u200b\u81ea\u5df1\u200b\u7684\u200b\u4e16\u754c\u200b\u53bb\u200b\u5427\u200b...\"</p> <p>\u200b\u84dd\u6676\u738b\u200b\u88ab\u200b\u91d1\u8272\u200b\u6f29\u6da1\u200b\u5438\u5165\u200b\uff0c\u200b\u6323\u624e\u200b\u7740\u200b\u60f3\u8981\u200b\u6293\u4f4f\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u4f46\u200b\u4e00\u5207\u90fd\u662f\u200b\u5f92\u52b3\u200b\u3002\u200b\u4ed6\u200b\u6700\u540e\u200b\u6124\u6012\u200b\u5730\u200b\u77aa\u200b\u4e86\u200bmax\u200b\u4e00\u773c\u200b\uff0c\u200b\u968f\u5373\u200b\u5f7b\u5e95\u200b\u6d88\u5931\u200b\u5728\u200b\u6f29\u6da1\u200b\u4e2d\u200b\u3002</p> <p>\u200b\u6f29\u6da1\u200b\u8fc5\u901f\u200b\u6536\u7f29\u200b\uff0c\u200b\u6700\u7ec8\u200b\u5316\u4e3a\u200b\u4e00\u70b9\u200b\u91d1\u5149\u200b\u6d88\u6563\u200b\u3002\u200b\u795e\u6bbf\u200b\u4e2d\u200b\u7684\u200b\u91d1\u8272\u200b\u7eb9\u8def\u200b\u4e5f\u200b\u9010\u6e10\u200b\u6697\u6de1\u200b\u4e0b\u6765\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u865a\u5f31\u200b\u5730\u200b\u8d70\u200b\u5230\u200bmax\u200b\u8eab\u8fb9\u200b\uff0c\u200b\u6276\u200b\u8d77\u200b\u8fd9\u4f4d\u200b\u4f1f\u5927\u200b\u7684\u200b\u57ce\u4e3b\u200b\uff1a\"\u200b\u57ce\u200b\u4e3b\u200b\u5927\u4eba\u200b...\u200b\u6211\u4eec\u200b\u6210\u529f\u200b\u4e86\u200b...\"</p> <p>max\u200b\u54b3\u51fa\u200b\u4e00\u53e3\u200b\u9c9c\u8840\u200b\uff0c\u200b\u5fae\u5f31\u200b\u5730\u7b11\u200b\u4e86\u200b\uff1a\"\u200b\u662f\u200b\u7684\u200b...\u200b\u6211\u4eec\u200b\u6210\u529f\u200b\u4e86\u200b...\u200b\u84dd\u6676\u65cf\u200b\u88ab\u200b\u9001\u56de\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4e16\u754c\u200b\uff0c\u200b\u6b21\u5143\u200b\u88c2\u7f1d\u200b\u4e5f\u200b\u6c38\u4e45\u200b\u5c01\u95ed\u200b\u4e86\u200b\u3002\"</p> <p>\u200b\u72ec\u5b88\u200b\u68c0\u67e5\u200b\u7740\u200bmax\u200b\u7684\u200b\u4f24\u52bf\u200b\uff0c\u200b\u6447\u200b\u4e86\u200b\u6447\u5934\u200b\u3002\u200b\u5357\u98ce\u200b\u4e5f\u200b\u8270\u96be\u200b\u5730\u200b\u722c\u200b\u8fc7\u6765\u200b\uff0c\u200b\u795e\u8272\u200b\u51dd\u91cd\u200b\u3002</p> <p>max\u200b\u770b\u7740\u200b\u4e09\u4eba\u200b\uff0c\u200b\u865a\u5f31\u200b\u5730\u8bf4\u200b\uff1a\"\u200b\u4e0d\u8981\u200b\u60b2\u4f24\u200b...\u200b\u8fd9\u662f\u200b\u57ce\u4e3b\u5e94\u200b\u5c3d\u200b\u7684\u200b\u804c\u8d23\u200b\u3002\u200b\u6d6e\u5c18\u200b...\"</p> <p>\"\u200b\u6211\u200b\u5728\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u7d27\u63e1\u200bmax\u200b\u7684\u200b\u624b\u200b\u3002</p> <p>\"\u200b\u5e1d\u56fd\u200b\u7684\u200b\u672a\u6765\u200b...\u200b\u5c31\u200b\u4ea4\u7ed9\u200b\u4f60\u200b\u4e86\u200b...\"max\u200b\u8270\u96be\u200b\u5730\u53d6\u200b\u4e0b\u200b\u80f8\u524d\u200b\u7684\u200b\u57ce\u4e3b\u200b\u5fbd\u7ae0\u200b\uff0c\u200b\u4ea4\u7ed9\u200b\u6d6e\u5c18\u200b\uff0c\"\u200b\u53bb\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b...\u200b\u5b8c\u6210\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u4eea\u5f0f\u200b...\"</p> <p>\u200b\u8bf4\u5b8c\u200b\u8fd9\u4e9b\u200b\uff0cmax\u200b\u95ed\u4e0a\u200b\u4e86\u200b\u773c\u775b\u200b\uff0c\u200b\u6c38\u8fdc\u200b\u5730\u200b\u79bb\u5f00\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u4ed6\u200b\u7528\u200b\u751f\u547d\u200b\u5b88\u62a4\u200b\u7684\u200b\u4e16\u754c\u200b\u3002</p> <p>\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u4e2d\u200b\uff0c\u200b\u526f\u5b98\u200b\u611f\u53d7\u200b\u5230\u200b\u8fdc\u65b9\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c\u200b\u9762\u8272\u200b\u5267\u53d8\u200b\uff1a\"\u200b\u4e0d\u200b\u53ef\u80fd\u200b...\u200b\u84dd\u6676\u738b\u200b\u965b\u4e0b\u200b\u600e\u4e48\u200b\u4f1a\u200b...\"</p> <p>\u200b\u8424\u706b\u200b\u770b\u51fa\u200b\u7aef\u502a\u200b\uff0c\u200b\u9ad8\u58f0\u200b\u5ba3\u5e03\u200b\uff1a\"\u200b\u84dd\u6676\u738b\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u51fb\u8d25\u200b\uff01\u200b\u6211\u4eec\u200b\u80dc\u5229\u200b\u4e86\u200b\uff01\"</p> <p>\u200b\u5b88\u536b\u200b\u4eec\u200b\u7206\u53d1\u200b\u51fa\u200b\u6b22\u547c\u58f0\u200b\uff0c\u200b\u58eb\u6c14\u200b\u5927\u632f\u200b\u3002\u200b\u526f\u5b98\u200b\u548c\u200b\u5269\u4f59\u200b\u7684\u200b\u84dd\u6676\u200b\u5080\u5121\u200b\u660e\u663e\u200b\u614c\u4e71\u200b\u8d77\u6765\u200b\u3002</p> <p>\u200b\u5c31\u200b\u5728\u200b\u6b64\u65f6\u200b\uff0c\u200b\u795e\u6bbf\u200b\u5927\u95e8\u200b\u518d\u6b21\u200b\u6253\u5f00\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u3001\u200b\u5357\u98ce\u200b\u548c\u200b\u72ec\u5b88\u200b\u8d70\u200b\u4e86\u200b\u8fdb\u6765\u200b\uff0c\u200b\u867d\u7136\u200b\u6ee1\u8eab\u200b\u4f24\u75d5\u200b\uff0c\u200b\u4f46\u200b\u773c\u795e\u200b\u575a\u5b9a\u200b\u3002</p> <p>\"\u200b\u6d6e\u5c18\u200b\u5c06\u519b\u200b\uff01\"\u200b\u5c0f\u58a8\u200b\u60ca\u559c\u200b\u5730\u200b\u558a\u9053\u200b\u3002</p> <p>\u200b\u526f\u5b98\u200b\u89c1\u72b6\u200b\uff0c\u200b\u77e5\u9053\u200b\u5927\u52bf\u5df2\u53bb\u200b\uff0c\u200b\u8f6c\u8eab\u200b\u6b32\u200b\u9003\u200b\u3002\u200b\u4f46\u200b\u6d6e\u5c18\u200b\u65e9\u6709\u200b\u51c6\u5907\u200b\uff0c\u200b\u9ed1\u7130\u200b\u957f\u5251\u200b\u7834\u7a7a\u200b\u800c\u51fa\u200b\uff0c\u200b\u76f4\u63a5\u200b\u523a\u7a7f\u200b\u526f\u5b98\u200b\u54bd\u5589\u200b\u3002</p> <p>\"\u200b\u4e3a\u200b\u58a8\u67d3\u200b\uff0c\u200b\u4e3a\u200bmax\uff0c\u200b\u4e5f\u200b\u4e3a\u200b\u6240\u6709\u200b\u727a\u7272\u200b\u7684\u200b\u4eba\u200b\u3002\"\u200b\u6d6e\u5c18\u200b\u51b7\u200b\u58f0\u9053\u200b\u3002</p> <p>\u200b\u526f\u5b98\u200b\u5316\u4f5c\u200b\u84dd\u8272\u200b\u5149\u70b9\u200b\u6d88\u6563\u200b\uff0c\u200b\u5269\u4f59\u200b\u7684\u200b\u84dd\u6676\u200b\u5080\u5121\u200b\u4e5f\u200b\u7eb7\u7eb7\u200b\u5012\u4e0b\u200b\uff0c\u200b\u5931\u53bb\u200b\u4e86\u200b\u80fd\u91cf\u200b\u6e90\u6cc9\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u8d70\u5411\u200b\u6cd5\u9635\u200b\u4e2d\u592e\u200b\uff0c\u200b\u53d6\u51fa\u200bmax\u200b\u7684\u200b\u57ce\u4e3b\u200b\u5fbd\u7ae0\u200b\uff0c\u200b\u4e0e\u200b\u5143\u200b\u7075\u7389\u200b\u5e76\u6392\u200b\u653e\u7f6e\u200b\u3002\u200b\u5239\u90a3\u95f4\u200b\uff0c\u200b\u7eff\u5149\u200b\u4e0e\u200b\u91d1\u5149\u200b\u4ea4\u878d\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u9053\u200b\u51b2\u5929\u200b\u5149\u67f1\u200b\uff0c\u200b\u76f4\u8fbe\u200b\u4e91\u9704\u200b\u3002</p> <p>\u200b\u6574\u5ea7\u200b\u57ce\u5e02\u200b\uff0c\u200b\u4e43\u81f3\u200b\u6574\u4e2a\u200b\u5e1d\u56fd\u200b\u7684\u200b\u5c45\u6c11\u200b\u90fd\u200b\u770b\u5230\u200b\u4e86\u200b\u8fd9\u200b\u4e00\u200b\u5947\u666f\u200b\u3002\u200b\u5149\u67f1\u200b\u6301\u7eed\u200b\u4e86\u200b\u6574\u6574\u200b\u4e00\u523b\u949f\u200b\uff0c\u200b\u6700\u540e\u200b\u7f13\u7f13\u200b\u6d88\u6563\u200b\u3002\u200b\u5f53\u200b\u5149\u8292\u200b\u892a\u53bb\u200b\uff0c\u200b\u5143\u7075\u7389\u200b\u4e0e\u200b\u57ce\u4e3b\u200b\u5fbd\u7ae0\u200b\u5df2\u7ecf\u200b\u878d\u4e3a\u4e00\u4f53\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u679a\u200b\u65b0\u200b\u7684\u200b\u5fbd\u7ae0\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u62fe\u8d77\u200b\u8fd9\u679a\u200b\u5fbd\u7ae0\u200b\uff0c\u200b\u6df1\u6df1\u200b\u53f9\u200b\u4e86\u200b\u53e3\u6c14\u200b\uff1a\"\u200b\u4e00\u5207\u200b\u90fd\u200b\u7ed3\u675f\u200b\u4e86\u200b...\"</p> <p>\u200b\u5357\u98ce\u200b\u6447\u5934\u200b\uff1a\"\u200b\u4e0d\u200b\uff0c\u200b\u662f\u200b\u65b0\u200b\u7684\u200b\u5f00\u59cb\u200b\u3002\"</p>"},{"location":"creative/three-day-war/#_9","title":"\u5c3e\u58f0\u200b\uff1a\u200b\u65b0\u200b\u7684\u200b\u5f00\u59cb","text":"<p>\u200b\u4e09\u4e2a\u200b\u6708\u200b\u540e\u200b\uff0c\u200b\u5e1d\u56fd\u200b\u4e2d\u592e\u200b\u5e7f\u573a\u200b\u4e0a\u200b\u4e3e\u884c\u200b\u4e86\u200b\u76db\u5927\u200b\u7684\u200b\u52a0\u5195\u200b\u4eea\u5f0f\u200b\u3002\u200b\u6d6e\u5c18\u200b\u6b63\u5f0f\u200b\u6210\u4e3a\u200b\u65b0\u4e00\u4efb\u200b\u5e1d\u200b\u90fd\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u80f8\u524d\u200b\u4f69\u6234\u200b\u7740\u200b\u878d\u5408\u200b\u4e86\u200b\u5143\u200b\u7075\u7389\u200b\u7684\u200b\u65b0\u57ce\u200b\u4e3b\u200b\u5fbd\u7ae0\u200b\u3002</p> <p>\u200b\u5357\u98ce\u200b\u88ab\u200b\u4efb\u547d\u200b\u4e3a\u200b\u5e1d\u56fd\u200b\u9996\u5e2d\u200b\u5927\u6cd5\u5e08\u200b\uff0c\u200b\u63a5\u66ff\u200b\u58a8\u67d3\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff1b\u200b\u72ec\u5b88\u200b\u6210\u4e3a\u200b\u7687\u5bb6\u200b\u536b\u961f\u200b\u603b\u6307\u6325\u200b\uff1bDW\u200b\u5347\u4efb\u200b\u5e73\u8fdc\u200b\u603b\u7763\u200b\uff1b\u200b\u8424\u706b\u200b\u7ee7\u7eed\u200b\u62c5\u4efb\u200b\u519c\u4e1a\u90e8\u200b\u90e8\u957f\u200b\uff1b\u200b\u5c0f\u58a8\u200b\u548c\u200b\u4f69\u6d1b\u6d1b\u5219\u200b\u8d1f\u8d23\u200b\u5e1d\u56fd\u200b\u5916\u4ea4\u4e8b\u52a1\u200b\u3002</p> <p>\u200b\u52a0\u5195\u200b\u4eea\u5f0f\u200b\u540e\u200b\u7684\u200b\u5bb4\u4f1a\u200b\u4e0a\u200b\uff0c\u200b\u65b0\u4efb\u200b\u57ce\u200b\u4e3b\u200b\u6d6e\u5c18\u200b\u4e3e\u676f\u200b\u81f4\u8f9e\u200b\uff1a</p> <p>\"\u200b\u4eca\u5929\u200b\uff0c\u200b\u6211\u4eec\u200b\u7eaa\u5ff5\u200b\u90a3\u4e9b\u200b\u4e3a\u200b\u4fdd\u536b\u200b\u5e1d\u56fd\u200b\u800c\u200b\u727a\u7272\u200b\u7684\u200b\u52c7\u58eb\u200b\u2014\u2014\u200b\u58a8\u67d3\u200b\u5927\u6cd5\u5e08\u200b\uff0c\u200b\u4ed6\u200b\u7684\u200b\u7075\u9b42\u200b\u867d\u200b\u88ab\u200b\u84dd\u6676\u65cf\u200b\u593a\u53d6\u200b\uff0c\u200b\u4f46\u200b\u4ed6\u200b\u7684\u200b\u667a\u6167\u200b\u548c\u200b\u8d21\u732e\u200b\u6c38\u5b58\u200b\uff1bmax\u200b\u57ce\u200b\u4e3b\u200b\uff0c\u200b\u4ed6\u200b\u7528\u200b\u751f\u547d\u200b\u5c01\u5370\u200b\u4e86\u200b\u654c\u4eba\u200b\uff0c\u200b\u4fdd\u536b\u200b\u4e86\u200b\u6211\u4eec\u200b\u7684\u200b\u4e16\u754c\u200b\u3002\"</p> <p>\u200b\u4f17\u4eba\u200b\u4e3e\u676f\u200b\u9ed8\u54c0\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u7ee7\u7eed\u200b\u9053\u200b\uff1a\"\u200b\u84dd\u6676\u65cf\u200b\u7684\u200b\u5a01\u80c1\u200b\u5df2\u7ecf\u200b\u8fc7\u53bb\u200b\uff0c\u200b\u4f46\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u7ec8\u70b9\u200b\uff0c\u200b\u800c\u662f\u200b\u65b0\u200b\u7684\u200b\u8d77\u70b9\u200b\u3002\u200b\u5e1d\u56fd\u200b\u5c06\u200b\u66f4\u52a0\u200b\u5f3a\u5927\u200b\uff0c\u200b\u66f4\u52a0\u200b\u56e2\u7ed3\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u8865\u5145\u200b\u9053\u200b\uff1a\"\u200b\u6211\u4eec\u200b\u5df2\u7ecf\u200b\u5f00\u59cb\u200b\u7814\u7a76\u200b\u5143\u7075\u7389\u200b\u7684\u200b\u529b\u91cf\u200b\uff0c\u200b\u52a0\u5f3a\u200b\u5e1d\u56fd\u200b\u7684\u200b\u9632\u5fa1\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u9632\u6b62\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u5165\u4fb5\u200b\u518d\u6b21\u53d1\u751f\u200b\u3002\"</p> <p>\u200b\u5bb4\u4f1a\u200b\u7ed3\u675f\u200b\u540e\u200b\uff0c\u200b\u6d6e\u5c18\u200b\u72ec\u81ea\u200b\u6765\u5230\u200b\u57ce\u4e3b\u5e9c\u200b\u7684\u200b\u9633\u53f0\u200b\uff0c\u200b\u671b\u200b\u7740\u200b\u8fdc\u5904\u200b\u7684\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u548c\u200b\u66f4\u200b\u8fdc\u5904\u200b\u7684\u200b\u768e\u6d01\u200b\u660e\u6708\u200b\u3002</p> <p>\"\u200b\u6000\u5ff5\u200b\u65e7\u65e5\u200b\u65f6\u5149\u200b\uff1f\"\u200b\u5357\u98ce\u200b\u8d70\u5230\u200b\u4ed6\u200b\u8eab\u8fb9\u200b\u3002</p> <p>\u200b\u6d6e\u5c18\u200b\u5fae\u7b11\u200b\uff1a\"\u200b\u6709\u65f6\u200b\u6211\u200b\u8fd8\u662f\u200b\u66f4\u200b\u4e60\u60ef\u200b\u505a\u200b\u4e00\u540d\u200b\u8239\u957f\u200b\u548c\u200b\u5c06\u519b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u57ce\u200b\u4e3b\u200b\u3002\"</p> <p>\u200b\u5357\u98ce\u200b\u62cd\u62cd\u200b\u4ed6\u200b\u7684\u200b\u80a9\u8180\u200b\uff1a\"\u200b\u4f60\u200b\u4f1a\u200b\u6210\u4e3a\u200b\u4e00\u4f4d\u200b\u4f1f\u5927\u200b\u7684\u200b\u57ce\u4e3b\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200bmax\u200b\u4e00\u6837\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u4f4e\u5934\u200b\u770b\u7740\u200b\u80f8\u524d\u200b\u95ea\u70c1\u7740\u200b\u7eff\u8272\u200b\u548c\u200b\u91d1\u8272\u200b\u5149\u8292\u200b\u7684\u200b\u5fbd\u7ae0\u200b\uff1a\"\u200b\u6709\u65f6\u200b\u6211\u80fd\u200b\u611f\u89c9\u200b\u5230\u200b\uff0cmax\u200b\u7684\u200b\u610f\u5fd7\u200b\u8fd8\u200b\u5b58\u5728\u200b\u4e8e\u200b\u8fd9\u679a\u200b\u5fbd\u7ae0\u200b\u4e2d\u200b\uff0c\u200b\u6307\u5f15\u200b\u7740\u200b\u6211\u200b\u3002\"</p> <p>\"\u200b\u90a3\u200b\u662f\u200b\u597d\u4e8b\u200b\u3002\"\u200b\u5357\u98ce\u200b\u671b\u200b\u5411\u200b\u661f\u7a7a\u200b\uff0c\"\u200b\u5386\u4ee3\u200b\u57ce\u4e3b\u200b\u7684\u200b\u667a\u6167\u200b\uff0c\u200b\u4f1a\u200b\u901a\u8fc7\u200b\u5143\u7075\u7389\u200b\u4f20\u627f\u200b\u4e0b\u53bb\u200b\u3002\"</p> <p>\u200b\u6d6e\u5c18\u200b\u70b9\u5934\u200b\uff0c\u200b\u773c\u795e\u200b\u575a\u5b9a\u200b\uff1a\"\u200b\u65e0\u8bba\u200b\u672a\u6765\u200b\u6709\u200b\u4ec0\u4e48\u200b\u6311\u6218\u200b\uff0c\u200b\u6211\u4eec\u200b\u90fd\u200b\u5c06\u200b\u5171\u540c\u200b\u9762\u5bf9\u200b\u3002\"</p> <p>\u200b\u8fdc\u5904\u200b\u7684\u200b\u4e2d\u592e\u200b\u795e\u6bbf\u200b\u9876\u90e8\u200b\uff0c\u200b\u7eff\u8272\u200b\u7684\u200b\u5149\u8292\u200b\u4f9d\u7136\u200b\u5fae\u5f31\u200b\u5730\u200b\u95ea\u70c1\u7740\u200b\uff0c\u200b\u5b88\u62a4\u200b\u7740\u200b\u8fd9\u5ea7\u200b\u53e4\u8001\u200b\u800c\u200b\u4f1f\u5927\u200b\u7684\u200b\u5e1d\u56fd\u200b\uff0c\u200b\u4e5f\u200b\u9884\u793a\u200b\u7740\u200b\u4e00\u4e2a\u200b\u548c\u5e73\u200b\u4e0e\u200b\u7e41\u8363\u200b\u7684\u200b\u65b0\u200b\u65f6\u4ee3\u200b\u7684\u200b\u5230\u6765\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/","title":"\u975e\u5bf9\u79f0\u200b\u5fc3\u8df3\u200b\u534f\u8bae","text":""},{"location":"creative/wave-function-collapse/#_2","title":"\u6ce2\u51fd\u6570\u200b\u574d\u7f29","text":""},{"location":"creative/wave-function-collapse/#_3","title":"\u91cf\u5b50\u200b\u8327\u623f","text":""},{"location":"creative/wave-function-collapse/#_4","title":"\u6668\u5149\u200b\u5e8f\u66f2","text":"<p>\u200b\u6df1\u5733\u200b\u91cf\u5b50\u200b\u751f\u7269\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u6668\u95f4\u200b\u9632\u5fa1\u200b\u7cfb\u7edf\u200b\u6b63\u5728\u200b\u89e3\u9664\u200b\uff0c\u200b\u7eb3\u7c73\u7ea7\u200b\u504f\u632f\u200b\u73bb\u7483\u200b\u4ece\u200b\u6df1\u200b\u9ed1\u200b\u892a\u200b\u4e3a\u200b\u7425\u73c0\u8272\u200b\u3002\u200b\u7b2c\u4e8c\u5341\u4e09\u200b\u5c42\u200b\u7684\u200b\u73af\u5f62\u200b\u8d70\u5eca\u200b\u6c90\u6d74\u200b\u5728\u200b\u91cf\u5b50\u5316\u200b\u7684\u200b\u6668\u66e6\u200b\u4e2d\u200b\uff0c\u200b\u5730\u9762\u200b\u6d6e\u52a8\u200b\u7684\u200bDNA\u200b\u5149\u7eb9\u200b\u968f\u7740\u200b\u65e5\u7167\u200b\u89d2\u5ea6\u200b\u53d8\u5316\u200b\uff0c\u200b\u6b63\u4ee5\u200b\u6bcf\u79d2\u200b7.3\u200b\u6b21\u200b\u7684\u200b\u9891\u7387\u200b\u91cd\u7ec4\u200b\u78b1\u57fa\u5bf9\u200b\u6392\u5217\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u5b9e\u9a8c\u5ba4\u200b\u9774\u200b\u8e29\u200b\u8fc7\u200b\u7b2c\u200b137\u200b\u5bf9\u200b\u865a\u62df\u200b\u78b1\u57fa\u200b\u65f6\u200b\uff0c\u200b\u57fa\u56e0\u200b\u9501\u200b\u7cfb\u7edf\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u8702\u9e23\u200b\u3002\u200b\u8679\u819c\u200b\u8ba4\u8bc1\u200b\u754c\u9762\u200b\u4e0a\u200b\u8df3\u52a8\u200b\u7740\u200b\u53cc\u87ba\u65cb\u200b\u8fdb\u5ea6\u6761\u200b\uff0c\u200b\u5979\u200b\u6ce8\u610f\u200b\u5230\u200b\u4eca\u5929\u200b\u7684\u200b\u9a8c\u8bc1\u200b\u65f6\u95f4\u200b\u6bd4\u200b\u5f80\u5e38\u200b\u591a\u200b\u4e86\u200b0.618\u200b\u79d2\u200b\u2014\u2014\u200b\u8fd9\u4e2a\u200b\u5fae\u5c0f\u200b\u7684\u200b\u5f02\u5e38\u200b\u6570\u503c\u200b\uff0c\u200b\u5728\u200b\u4e09\u4e2a\u200b\u6708\u200b\u540e\u200b\u5c06\u200b\u4f1a\u200b\u6210\u4e3a\u200b\u7834\u89e3\u200b\u6d1b\u9e22\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5bc6\u7801\u200b\u7684\u200b\u5173\u952e\u200b\u53c2\u6570\u200b\u3002</p> <p>\"\u200b\u65e9\u5b89\u200b\uff0c\u200b\u58a8\u200b\u6559\u6388\u200b\u3002\"\u200b\u8d70\u5eca\u200b\u5c3d\u5934\u200b\u7684\u200b\u6e05\u6d01\u200b\u673a\u5668\u4eba\u200b\u7528\u200b\u5fae\u6ce2\u200b\u5171\u632f\u200b\u53d1\u58f0\u200b\uff0c\"\u200b\u4eca\u65e5\u200b\u751f\u7269\u200b\u8f90\u5c04\u200b\u503c\u200b\u8d85\u6807\u200b\u9884\u8b66\u200b\uff0c\u200b\u5efa\u8bae\u200b\u542f\u7528\u200b\u7b2c\u4e03\u4ee3\u200b\u9632\u62a4\u200b\u534f\u8bae\u200b\u3002\"</p> <p>\u200b\u5979\u200b\u9894\u9996\u200b\u81f4\u610f\u200b\uff0c\u200b\u9888\u540e\u200b\u7684\u200b\u7b2c\u4e09\u4ee3\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u6cdb\u8d77\u200b\u84dd\u5149\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u7531\u200b\u4e8c\u5341\u4e09\u200b\u7247\u200b\u949b\u5408\u91d1\u200b\u82b1\u74e3\u200b\u7ec4\u6210\u200b\u7684\u200b\u73af\u72b6\u200b\u88c5\u7f6e\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u200b\u5c06\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7684\u200b\u5de5\u4f5c\u200b\u6570\u636e\u200b\u76f4\u63a5\u200b\u6295\u5c04\u200b\u5230\u200b\u89c6\u795e\u7ecf\u200b\u3002\u200b\u5728\u200b\u65c1\u4eba\u200b\u773c\u4e2d\u200b\u7a7a\u65e0\u4e00\u7269\u200b\u7684\u200b\u8d70\u5eca\u200b\uff0c\u200b\u4e8e\u200b\u5979\u200b\u5374\u662f\u200b\u6d78\u6ca1\u200b\u5728\u200b\u6570\u636e\u200b\u6d2a\u6d41\u200b\u4e2d\u200b\u7684\u200b\u4fe1\u606f\u200b\u8327\u623f\u200b\uff1a</p> <p>\u200b\u5de6\u4fa7\u200b\u5899\u58c1\u200b\u6d41\u6dcc\u200b\u7740\u5b9e\u200b\u65f6\u200b\u57fa\u56e0\u200b\u71b5\u200b\u503c\u200b\uff0c\u200b\u53f3\u4fa7\u200b\u843d\u5730\u7a97\u200b\u4e0a\u200b\u8df3\u52a8\u200b\u7740\u200b\u5168\u57ce\u200b\u91cf\u5b50\u200b\u901a\u4fe1\u200b\u6d41\u91cf\u200b\uff0c\u200b\u5c31\u200b\u8fde\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u6f02\u6d6e\u200b\u7684\u200b\u5fae\u5c18\u200b\u90fd\u200b\u88ab\u200b\u6807\u6ce8\u200b\u4e86\u200b\u5e03\u6717\u8fd0\u52a8\u200b\u8f68\u8ff9\u200b\u9884\u6d4b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u8d85\u8f7d\u200b\u7684\u200b\u4fe1\u606f\u200b\u611f\u77e5\u200b\uff0c\u200b\u662f\u200b\u690d\u5165\u200b\u91cf\u5b50\u200b\u8111\u200b\u7684\u200b\u4ee3\u4ef7\u200b\u4e4b\u4e00\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_5","title":"\u8327\u623f\u200b\u521d\u6784","text":"<p>\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u516d\u8fb9\u5f62\u200b\u6c14\u5bc6\u200b\u95e8\u200b\u5728\u200b\u9762\u524d\u200b\u6ed1\u200b\u5f00\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u95fb\u5230\u200b\u4e86\u200b\u719f\u6089\u200b\u7684\u200b\u81ed\u6c27\u200b\u5473\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u91cf\u5b50\u200b\u573a\u200b\u53d1\u751f\u5668\u200b\u7684\u200b\u526f\u4ea7\u7269\u200b\u3002\u200b\u5979\u200b\u8131\u4e0b\u200b\u5b9e\u9a8c\u200b\u888d\u200b\u7684\u200b\u52a8\u4f5c\u200b\u7a81\u7136\u200b\u505c\u6ede\u200b\uff0c\u200b\u8863\u6599\u200b\u6469\u64e6\u200b\u4ea7\u751f\u200b\u7684\u200b\u9759\u7535\u200b\u706b\u82b1\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u5212\u51fa\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7684\u200b\u62d3\u6251\u200b\u7ed3\u6784\u200b\u3002</p> <p>\"\u200b\u542f\u52a8\u200b\u73af\u5883\u200b\u51c0\u5316\u200b\u3002\"\u200b\u5979\u200b\u5bf9\u200b\u7740\u200b\u865a\u7a7a\u200b\u4e0b\u4ee4\u200b\uff0c\u200b\u58f0\u97f3\u200b\u5728\u200b\u73af\u5f62\u200b\u8231\u58c1\u200b\u95f4\u200b\u6298\u5c04\u51fa\u200b\u5947\u5f02\u200b\u7684\u200b\u6df7\u54cd\u200b\u3002\u200b\u7eb3\u7c73\u200b\u6e05\u6d01\u200b\u96c6\u7fa4\u200b\u4ece\u200b\u5929\u82b1\u677f\u200b\u503e\u6cfb\u200b\u800c\u200b\u4e0b\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u94f6\u7070\u8272\u200b\u5fae\u7c92\u200b\u5728\u200b\u5760\u843d\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u5b8c\u6210\u200b\u4e09\u6b21\u200b\u76f8\u53d8\u200b\uff1a\u200b\u56fa\u6001\u200b\u6e05\u6d01\u5242\u200b\u2192\u200b\u6db2\u6001\u200b\u6d88\u6bd2\u200b\u819c\u200b\u2192\u200b\u6c14\u6001\u200b\u8d1f\u79bb\u5b50\u200b\u4e91\u200b\u3002</p> <p>\u200b\u66f4\u8863\u200b\u955c\u524d\u200b\u7684\u200b\u8eaf\u4f53\u200b\u4ecd\u200b\u4fdd\u7559\u200b\u7740\u200b\u6628\u65e5\u200b\u7684\u200b\u8f6e\u5ed3\u200b\uff0c\u200b\u4f46\u200b\u76ae\u80a4\u200b\u4e0b\u200b\u7684\u200b\u91cf\u5b50\u200b\u6da8\u843d\u200b\u5df2\u200b\u6084\u7136\u200b\u6539\u53d8\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u5c16\u200b\u629a\u8fc7\u200b\u9501\u9aa8\u200b\u4e0b\u65b9\u200b\u65b0\u751f\u200b\u7684\u200b\u5149\u654f\u200b\u7eb9\u8def\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u96cc\u6fc0\u7d20\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7ed8\u5236\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u8def\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u200b\u968f\u7740\u200b\u5979\u200b\u7684\u200b\u5fc3\u8df3\u200b\u660e\u706d\u200b\uff0c\u200b\u5982\u540c\u200b\u547c\u5438\u200b\u7684\u200b\u661f\u6cb3\u200b\u3002</p> <p>\u200b\u5f53\u200b\u5979\u200b\u5957\u200b\u4e0a\u200b\u7b2c\u4e03\u4ee3\u200b\u9632\u62a4\u670d\u200b\u65f6\u200b\uff0c\u200b\u8bb0\u5fc6\u4f53\u200b\u7a81\u7136\u200b\u8c03\u51fa\u200b\u7236\u4eb2\u200b\u4e34\u7ec8\u524d\u200b\u7684\u200b\u5168\u606f\u200b\u5f71\u50cf\u200b\u3002\u200b\u90a3\u4e2a\u200b\u75f4\u8ff7\u200b\u4e8e\u200b\u91cf\u5b50\u200b\u751f\u7269\u5b66\u200b\u7684\u200b\u8001\u4eba\u200b\uff0c\u200b\u5728\u200b\u75c5\u5e8a\u200b\u4e0a\u7528\u200b\u98a4\u6296\u200b\u7684\u200b\u624b\u6307\u200b\u5212\u8fc7\u200b\u5979\u200b\u7684\u200b\u57fa\u56e0\u56fe\u8c31\u200b\uff1a\"\u200b\u5c0f\u8c26\u200b...\u200b\u8fd9\u91cc\u200b\u7684\u200b\u78b1\u57fa\u5bf9\u200b\u66f2\u7387\u200b...\u200b\u5e94\u8be5\u200b\u7528\u200b\u9ece\u66fc\u200b\u51e0\u4f55\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200b...\"</p> <p>\u200b\u4e8c\u5341\u5e74\u200b\u524d\u200b\u7684\u200b\u54fd\u54bd\u200b\u88ab\u200b\u6b64\u523b\u200b\u7684\u200b\u8b66\u62a5\u58f0\u200b\u6253\u65ad\u200b\uff0c\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u7a81\u7136\u200b\u8ff8\u51fa\u200b\u7ea2\u8272\u200b\u8b66\u544a\u200b\u6846\u200b\uff1a\u3010\u200b\u68c0\u6d4b\u200b\u5230\u200bQT-3\u200b\u578b\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u6548\u5e94\u200b\uff0c\u200b\u5efa\u8bae\u200b\u63a8\u8fdf\u200b\u624b\u672f\u200b\u3011\u3002</p>"},{"location":"creative/wave-function-collapse/#_6","title":"\u96a7\u7a7f\u200b\u5371\u673a","text":"<p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u77ac\u95f4\u200b\u5b8c\u6210\u200b\u4e03\u4e07\u200b\u6b21\u200b\u8def\u5f84\u200b\u6a21\u62df\u200b\u3002\u200b\u5728\u200b\u7b2c\u4e00\u5343\u200b\u56db\u767e\u4e94\u5341\u200b\u516b\u6b21\u200b\u8fd0\u7b97\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u7ec8\u4e8e\u200b\u6355\u6349\u5230\u200b\u5f02\u5e38\u200b\u6ce2\u52a8\u200b\u7684\u200b\u6e90\u5934\u200b\uff1a\u200b\u4e09\u5929\u200b\u524d\u200b\u690d\u5165\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u96c6\u7fa4\u200b\uff0c\u200b\u6b63\u5728\u200b\u5979\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u8fb9\u7f18\u200b\u6784\u7b51\u200b\u5fae\u578b\u200b\u866b\u200b\u6d1e\u200b\u3002</p> <p>\"\u200b\u8c03\u53d6\u200b\u677e\u679c\u4f53\u200b\u76d1\u63a7\u200b\u6570\u636e\u200b\u3002\"\u200b\u5979\u200b\u5c06\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u63a5\u5165\u200b\u4e3b\u63a7\u53f0\u200b\uff0c\u200b\u9632\u62a4\u670d\u200b\u5185\u200b\u7684\u200b\u6e29\u5ea6\u200b\u8c03\u8282\u5668\u200b\u7a81\u7136\u200b\u5931\u63a7\u200b\u3002\u200b\u6c57\u73e0\u200b\u987a\u7740\u200b\u91cf\u5b50\u200b\u7eb9\u8eab\u200b\u6ed1\u843d\u200b\uff0c\u200b\u5728\u200b\u63a5\u89e6\u200b\u949b\u5408\u91d1\u200b\u73af\u200b\u7684\u200b\u77ac\u95f4\u200b\u6c7d\u5316\u200b\uff0c\u200b\u5f62\u6210\u200b\u6de1\u7d2b\u8272\u200b\u7684\u200b\u8d39\u7c73\u5b50\u200b\u4e91\u200b\u3002</p> <p>\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\uff0c\u200b\u677e\u679c\u4f53\u200b\u7684\u200b\u4e09\u7ef4\u200b\u6a21\u578b\u200b\u6b63\u5728\u200b\u53d1\u751f\u200b\u6050\u6016\u200b\u7684\u200b\u7f8e\u611f\u200b\u3002\u200b\u90a3\u4e9b\u200b\u5206\u6ccc\u200b\u4e2d\u200b\u7684\u200b\u892a\u9ed1\u7d20\u200b\u5206\u5b50\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u90fd\u200b\u643a\u5e26\u200b\u7740\u200b\u5fae\u578b\u200b\u9ed1\u6d1e\u200b\u822c\u7684\u200b\u5f15\u529b\u200b\u5947\u70b9\u200b\u3002\u200b\u66f4\u200b\u60ca\u4eba\u200b\u7684\u200b\u662f\u200b\u8fd9\u4e9b\u200b\u5206\u5b50\u200b\u7684\u200b\u6392\u5217\u200b\u65b9\u5f0f\u200b\u2014\u2014\u200b\u7cbe\u786e\u200b\u590d\u523b\u200b\u4e86\u200b\u6d1b\u9e22\u200b\u4e0a\u5468\u200b\u5728\u200b\u5b9e\u9a8c\u5ba4\u200b\u968f\u624b\u200b\u6446\u5f04\u200b\u7684\u200b\u78c1\u6d41\u4f53\u200b\u96d5\u5851\u200b\u3002</p> <p>\"\u200b\u504f\u5dee\u200b\u503c\u200b7.3%...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u776b\u6bdb\u200b\u5728\u200b\u9632\u62a4\u200b\u9762\u7f69\u200b\u540e\u200b\u98a4\u52a8\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u5b57\u200b\u6070\u597d\u200b\u662f\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u751f\u65e5\u200b\u65e5\u671f\u200b\uff087\u200b\u6708\u200b3\u200b\u65e5\u200b\uff09\u200b\u7684\u200b\u6570\u5b57\u5316\u200b\u8868\u8fbe\u200b\u3002\u200b\u5f53\u200b\u5979\u200b\u8c03\u53d6\u200b\u4e03\u5929\u200b\u524d\u200b\u7684\u200b\u76d1\u63a7\u200b\u5f55\u50cf\u200b\u65f6\u200b\uff0c\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u7684\u200b\u6563\u70ed\u200b\u7cfb\u7edf\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u60b2\u9e23\u200b\u2014\u2014\u200b\u5c31\u200b\u50cf\u200b\u90a3\u65e5\u200b\u6d1b\u9e22\u200b\u6253\u7ffb\u200b\u5976\u8336\u200b\u65f6\u200b\uff0c\u03bc\u200b\u4ecb\u5b50\u200b\u63a2\u6d4b\u5668\u200b\u8bb0\u5f55\u200b\u5230\u200b\u7684\u200b\u5171\u632f\u9891\u7387\u200b\u3002</p> <p>\u200b\u753b\u9762\u200b\u4e2d\u200b\u7684\u200b\u5c11\u5973\u200b\u6b63\u5728\u200b\u64e6\u62ed\u200b\u63a7\u5236\u53f0\u200b\uff0c\u200b\u53d1\u68a2\u200b\u7684\u200b\u9759\u7535\u200b\u706b\u82b1\u200b\u4e0e\u200b\u6b64\u523b\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u7684\u200b\u91cf\u5b50\u200b\u6d9f\u6f2a\u200b\u5f62\u6210\u200b\u8de8\u200b\u65f6\u7a7a\u200b\u5171\u632f\u200b\u3002\u200b\u58a8\u9171\u200b\u6ca1\u200b\u610f\u8bc6\u200b\u5230\u200b\u81ea\u5df1\u200b\u5634\u89d2\u200b\u626c\u8d77\u200b\u4e86\u200b0.3\u200b\u5ea6\u200b\u7684\u200b\u5f27\u5ea6\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u5fae\u200b\u8868\u60c5\u200b\u88ab\u200b\u751f\u7269\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u6355\u6349\u200b\uff0c\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u677e\u679c\u4f53\u200b\u6a21\u578b\u200b\u7684\u200b\u7b2c\u200b137\u200b\u6b21\u200b\u8fed\u4ee3\u200b\u53c2\u6570\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_7","title":"\u8f90\u5c04\u200b\u534f\u594f","text":"<p>\"\u200b\u653e\u5bbd\u200b\u504f\u5dee\u200b\u9608\u503c\u200b\u81f3\u200b7.5%\u3002\"\u200b\u58a8\u9171\u200b\u5173\u95ed\u200b\u8b66\u62a5\u7cfb\u7edf\u200b\u7684\u200b\u52a8\u4f5c\u200b\u6bd4\u200b\u5e73\u65f6\u200b\u6162\u200b\u4e86\u200b0.7\u200b\u79d2\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5ef6\u8fdf\u200b\u5bfc\u81f4\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u96c6\u7fa4\u200b\u591a\u200b\u8fdb\u884c\u200b\u4e86\u200b\u4e09\u6b21\u200b\u65e0\u6548\u200b\u91cd\u7ec4\u200b\uff0c\u200b\u5374\u200b\u5728\u200b\u65e0\u610f\u95f4\u200b\u521b\u9020\u200b\u51fa\u200b\u65b0\u578b\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u6001\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u88ab\u200b\u6d6a\u8d39\u200b\u7684\u200b\u7eb3\u7c73\u200b\u5355\u5143\u200b\uff0c\u200b\u5c06\u200b\u5728\u200b\u5341\u4e8c\u200b\u5c0f\u65f6\u200b\u540e\u200b\u6210\u4e3a\u200b\u6d1b\u9e22\u200b\u4fee\u590d\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7684\u200b\u5173\u952e\u200b\u6750\u6599\u200b\u3002</p> <p>\u200b\u9632\u62a4\u670d\u200b\u5185\u200b\u7684\u200b\u6e7f\u5ea6\u200b\u7ec8\u4e8e\u200b\u7a33\u5b9a\u200b\u5728\u200b42.195%RH\uff0c\u200b\u8fd9\u4e2a\u200b\u6570\u503c\u200b\u8ba9\u200b\u58a8\u9171\u200b\u60f3\u8d77\u200b\u5927\u5b66\u200b\u65f6\u671f\u200b\u5728\u200b\u52a0\u5dde\u200b\u7406\u5de5\u200b\u770b\u5230\u200b\u7684\u200b\u9a6c\u62c9\u677e\u200b\u7eaa\u5ff5\u7891\u200b\u3002\u200b\u5f53\u65f6\u200b\u7684\u200b\u5979\u200b\u7edd\u4e0d\u4f1a\u200b\u60f3\u5230\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u8c61\u5f81\u200b\u4eba\u7c7b\u200b\u8010\u529b\u200b\u6781\u9650\u200b\u7684\u200b\u6570\u5b57\u200b\uff0c\u200b\u6709\u200b\u4e00\u5929\u200b\u4f1a\u200b\u6210\u4e3a\u200b\u81ea\u5df1\u200b\u57fa\u56e0\u200b\u91cd\u6784\u200b\u7684\u200b\u4e34\u754c\u200b\u53c2\u6570\u200b\u3002</p> <p>\u200b\u91cf\u5b50\u200b\u624b\u672f\u53f0\u200b\u7f13\u7f13\u200b\u5347\u8d77\u200b\u65f6\u200b\uff0c\u200b\u8231\u5185\u200b\u91cd\u529b\u573a\u200b\u5f00\u59cb\u200b\u8fdb\u884c\u200b\u4e5d\u9636\u200b\u5085\u91cc\u53f6\u200b\u53d8\u6362\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u8eaf\u4f53\u200b\u5728\u200b\u53cd\u200b\u91cd\u529b\u573a\u200b\u4e2d\u200b\u8212\u5c55\u200b\uff0c\u200b\u5982\u540c\u200b\u6f02\u6d6e\u200b\u5728\u200b\u6bcd\u4f53\u200b\u7f8a\u6c34\u200b\u4e2d\u200b\u7684\u200b\u80da\u80ce\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u7a81\u7136\u200b\u95ea\u73b0\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u8001\u5f0f\u200b\u793a\u6ce2\u5668\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u8df3\u52a8\u200b\u7684\u200b\u7eff\u8272\u200b\u6ce2\u5f62\u200b\uff0c\u200b\u6b63\u200b\u4e0e\u200b\u6b64\u523b\u200b\u7684\u200b\u8111\u6ce2\u200b\u76d1\u6d4b\u200b\u56fe\u200b\u5f62\u6210\u200b\u8be1\u5f02\u200b\u7684\u200b\u955c\u50cf\u200b\u5bf9\u79f0\u200b\u3002</p> <p>\"\u200b\u8bb0\u5fc6\u200b\u6e05\u9664\u200b\u7a0b\u5e8f\u200b\u5df2\u200b\u7981\u7528\u200b\u3002\"AI\u200b\u7ba1\u5bb6\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u7f55\u89c1\u200b\u7684\u200b\u8fdf\u7591\u200b\uff0c\"\u200b\u68c0\u6d4b\u200b\u5230\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u51fa\u73b0\u200b\u975e\u200b\u7f16\u7801\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u3002\"</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u5c16\u200b\u6df1\u6df1\u200b\u9677\u5165\u200b\u638c\u5fc3\u200b\u3002\u200b\u90a3\u4e9b\u200b\u6240\u8c13\u200b\"\u200b\u788e\u7247\u200b\"\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u5979\u200b\u52a0\u5bc6\u200b\u5b58\u50a8\u200b\u7684\u200b\u7ae5\u5e74\u200b\u5f71\u50cf\u200b\uff1a\u200b\u516d\u5c81\u65f6\u200b\u5077\u5077\u200b\u6d82\u200b\u6bcd\u4eb2\u200b\u53e3\u7ea2\u200b\u7684\u200b\u7f6a\u6076\u200b\u5feb\u611f\u200b\uff0c\u200b\u5341\u4e8c\u5c81\u200b\u5728\u200b\u6d74\u5ba4\u955c\u200b\u524d\u7528\u200b\u5243\u987b\u5200\u200b\u5212\u51fa\u200b\u7684\u200b\u8840\u75d5\u200b\uff0c\u200b\u5341\u516b\u5c81\u200b\u5728\u200b\u7269\u7406\u200b\u7ade\u8d5b\u200b\u9881\u5956\u793c\u200b\u4e0a\u200b\u6536\u5230\u200b\u533f\u540d\u200b\u73ab\u7470\u200b\u65f6\u200b\u7684\u200b\u98a4\u6817\u200b...</p>"},{"location":"creative/wave-function-collapse/#_8","title":"\u8327\u623f\u200b\u5f02\u53d8","text":"<p>\u200b\u5f53\u200b\u7b2c\u5341\u4e8c\u200b\u6279\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u6ce8\u5165\u200b\u810a\u690e\u200b\u65f6\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u73af\u5f62\u200b\u7167\u660e\u200b\u7cfb\u7edf\u200b\u7a81\u7136\u200b\u9891\u95ea\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u611f\u77e5\u200b\u5230\u200b\u7a7a\u95f4\u200b\u66f2\u7387\u200b\u7684\u200b\u5fae\u5999\u200b\u53d8\u5316\u200b\u2014\u2014\u200b\u67d0\u4e2a\u200b\u9ad8\u7ef4\u200b\u5b58\u5728\u200b\u6b63\u5728\u200b\u89c2\u6d4b\u200b\u8fd9\u4e2a\u200b\u624b\u672f\u200b\u3002</p> <p>\"\u200b\u542f\u52a8\u200b\u91cf\u5b50\u200b\u9000\u200b\u76f8\u5e72\u200b\u5c4f\u969c\u200b\uff01\"\u200b\u5979\u200b\u7684\u200b\u547d\u4ee4\u200b\u5e26\u200b\u7740\u200b\u7f55\u89c1\u200b\u7684\u200b\u614c\u4e71\u200b\u3002\u200b\u9632\u62a4\u7f69\u200b\u8868\u9762\u200b\u77ac\u95f4\u200b\u7ed3\u6676\u200b\u51fa\u200b\u516d\u8fb9\u5f62\u200b\u8702\u5de2\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6676\u80de\u200b\u4e2d\u200b\u90fd\u200b\u56da\u7981\u200b\u7740\u200b\u4e00\u4e2a\u200b\u6b63\u5728\u200b\u574d\u7f29\u200b\u7684\u200b\u5e73\u884c\u200b\u5b87\u5b99\u200b\u3002\u200b\u5728\u200b\u67d0\u4e2a\u200b\u6982\u7387\u200b\u5206\u652f\u200b\u91cc\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u6d51\u8eab\u200b\u6d74\u8840\u200b\u5730\u200b\u649e\u5f00\u200b\u8231\u95e8\u200b\uff1b\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53ef\u80fd\u6027\u200b\u4e2d\u200b\uff0c\u200b\u81ea\u5df1\u200b\u5316\u4f5c\u200b\u4e86\u200b\u6f02\u6d6e\u200b\u5728\u200b\u91cf\u5b50\u200b\u6d77\u4e2d\u200b\u7684\u200b\u65e0\u673a\u200b\u751f\u547d\u4f53\u200b\u3002</p> <p>\u200b\u66f4\u200b\u6050\u6016\u200b\u7684\u200b\u53d8\u5316\u200b\u53d1\u751f\u200b\u5728\u200b\u57fa\u56e0\u200b\u5c42\u9762\u200b\u3002Y\u200b\u67d3\u8272\u4f53\u200b\u7aef\u7c92\u200b\u7684\u200b\u89e3\u6784\u200b\u901f\u5ea6\u200b\u7a81\u7136\u200b\u7a81\u7834\u200b\u9608\u503c\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u5d29\u89e3\u200b\u7684\u200b\u78b1\u57fa\u5bf9\u200b\u5e76\u672a\u200b\u6309\u8ba1\u5212\u200b\u91cd\u7ec4\u200b\uff0c\u200b\u53cd\u800c\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u51dd\u805a\u200b\u6210\u200b\u53d1\u5149\u200b\u7684\u200b\u5f26\u200b\u72b6\u7269\u200b\u3002\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u53d1\u51fa\u200b\u523a\u8033\u200b\u7684\u200b\u8b66\u62a5\u200b\uff1a</p> <p>\u3010\u200b\u68c0\u6d4b\u200b\u5230\u200b\u56db\u7ef4\u200b\u751f\u7269\u200b\u4fe1\u606f\u200b\u5165\u4fb5\u200b\u3011 \u3010\u200b\u67d3\u8272\u4f53\u200b\u5448\u73b0\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u62d3\u6251\u200b\u7ed3\u6784\u200b\u3011 \u3010\u200b\u5efa\u8bae\u200b\u7acb\u5373\u200b\u7ec8\u6b62\u200b...\u3011</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u6536\u7f29\u200b\u6210\u200b\u9488\u5c16\u200b\u5927\u5c0f\u200b\u3002\u200b\u5979\u200b\u7ec8\u4e8e\u200b\u660e\u767d\u200b\u7236\u4eb2\u200b\u5f53\u5e74\u200b\u4e3a\u4f55\u200b\u70e7\u6bc1\u200b\u6240\u6709\u200b\u7814\u7a76\u200b\u8d44\u6599\u200b\u2014\u2014\u200b\u8fd9\u573a\u200b\u6027\u522b\u200b\u91cd\u6784\u200b\u624b\u672f\u200b\uff0c\u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\u5728\u200b\u6253\u5f00\u200b\u6f58\u591a\u62c9\u200b\u9b54\u76d2\u200b\u3002\u200b\u90a3\u4e9b\u200b\u6e38\u8d70\u200b\u5728\u200b\u57fa\u56e0\u200b\u94fe\u95f4\u200b\u7684\u200b\u5f26\u200b\u72b6\u7269\u200b\uff0c\u200b\u6b63\u5728\u200b\u5c06\u200b\u5979\u200b\u7684\u200b\u610f\u8bc6\u200b\u62c9\u5411\u200b\u4eba\u7c7b\u200b\u65e0\u6cd5\u200b\u7406\u89e3\u200b\u7684\u200b\u9ad8\u200b\u7ef4\u7a7a\u95f4\u200b\u3002</p> <p>\u200b\u5728\u200b\u610f\u8bc6\u200b\u5373\u5c06\u200b\u6e83\u6563\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u7a81\u7136\u200b\u55c5\u5230\u200b\u4e00\u4e1d\u200b\u82e5\u6709\u82e5\u65e0\u200b\u7684\u200b\u5976\u8336\u200b\u9999\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u672c\u200b\u4e0d\u8be5\u200b\u5b58\u5728\u200b\u4e8e\u200b\u65e0\u83cc\u200b\u8231\u200b\u4e2d\u200b\u7684\u200b\u6c14\u5473\u200b\uff0c\u200b\u8ba9\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u8ff8\u53d1\u51fa\u200b\u8d85\u65b0\u661f\u200b\u822c\u7684\u200b\u95ea\u5149\u200b\u2014\u2014\u200b\u6240\u6709\u200b\u56db\u7ef4\u200b\u5165\u4fb5\u200b\u7269\u200b\u7a81\u7136\u200b\u8c03\u8f6c\u200b\u65b9\u5411\u200b\uff0c\u200b\u5f00\u59cb\u200b\u7f16\u7ec7\u200b\u5168\u65b0\u200b\u7684\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\u3002</p> <p>\"\u200b\u539f\u6765\u200b\u662f\u200b\u4f60\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u5634\u89d2\u200b\u6e17\u51fa\u200b\u9c9c\u8840\u200b\uff0c\u200b\u5728\u200b\u9632\u62a4\u200b\u9762\u7f69\u200b\u4e0a\u753b\u200b\u51fa\u200b\u51c4\u8273\u200b\u7684\u200b\u66fc\u9640\u7f57\u200b\u3002\u200b\u90a3\u4e9b\u200b\u6765\u81ea\u200b\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u5f26\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u4ee5\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u4e3a\u200b\u6a21\u677f\u200b\uff0c\u200b\u91cd\u6784\u200b\u7740\u200b\u5979\u200b\u7684\u200b\u751f\u547d\u200b\u65b9\u7a0b\u5f0f\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_9","title":"\u8bb0\u5fc6\u200b\u95ea\u56de","text":""},{"location":"creative/wave-function-collapse/#_10","title":"\u67e0\u6aac\u200b\u4e0e\u200b\u78c1\u73e0","text":"<p>\u200b\u57fa\u56e0\u200b\u7f16\u8f91\u5ba4\u200b\u7684\u200b\u81ea\u52a8\u95e8\u200b\u5411\u200b\u4e24\u4fa7\u200b\u6ed1\u200b\u5f00\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u6b63\u200b\u88ab\u200b\u7b2c\u4e03\u4ee3\u200b\u7eb3\u7c73\u200b\u7f1d\u5408\u200b\u5242\u200b\u7684\u200b\u5f02\u5e38\u200b\u6d3b\u6027\u200b\u56f0\u6270\u200b\u3002\u200b\u6668\u5149\u200b\u7a7f\u900f\u200b\u73af\u5f62\u200b\u89c2\u5bdf\u7a97\u200b\u7684\u200b\u68f1\u955c\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5728\u200b\u65e0\u83cc\u200b\u64cd\u4f5c\u200b\u53f0\u4e0a\u200b\u6295\u5c04\u200b\u51fa\u200b\u5f69\u8679\u200b\u5149\u6591\u200b\u3002\u200b\u5979\u200b\u521a\u200b\u6458\u4e0b\u200b\u9632\u62a4\u200b\u9762\u7f69\u200b\uff0c\u200b\u5c31\u200b\u542c\u89c1\u200b\u8eab\u540e\u200b\u4f20\u6765\u200b\u91d1\u5c5e\u200b\u5668\u68b0\u200b\u5760\u5730\u200b\u7684\u200b\u6e05\u8106\u200b\u58f0\u54cd\u200b\u3002</p> <p>\"\u200b\u5bf9\u200b\u3001\u200b\u5bf9\u4e0d\u8d77\u200b\uff01\"\u200b\u5c11\u5973\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u6668\u9732\u200b\u822c\u7684\u200b\u6e05\u51bd\u200b\uff0c\u200b\u58a8\u9171\u200b\u8f6c\u8eab\u200b\u65f6\u200b\u770b\u89c1\u200b\u6ee1\u5730\u200b\u6eda\u52a8\u200b\u7684\u200b\u7eb3\u7c73\u200b\u78c1\u73e0\u200b\u3002\u200b\u90a3\u4e9b\u200b\u76f4\u5f84\u200b3\u200b\u7eb3\u7c73\u200b\u7684\u200b\u94f6\u8272\u200b\u5c0f\u7403\u200b\u5728\u200b\u5730\u9762\u200b\u5f39\u8df3\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u843d\u70b9\u200b\u90fd\u200b\u7cbe\u786e\u200b\u9075\u5faa\u200b\u859b\u5b9a\u8c14\u200b\u65b9\u7a0b\u200b\u7684\u200b\u6982\u7387\u200b\u4e91\u200b\u5206\u5e03\u200b\u3002</p> <p>\u200b\u624e\u200b\u7740\u200b\u4e0d\u200b\u5bf9\u79f0\u200b\u53cc\u200b\u9a6c\u5c3e\u200b\u7684\u200b\u5973\u5b69\u200b\u614c\u5fd9\u200b\u8e72\u4e0b\u200b\uff0c\u200b\u53d1\u68a2\u200b\u7684\u200b\u91cf\u5b50\u200b\u8367\u5149\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u62d6\u66f3\u200b\u51fa\u6b8b\u5f71\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u5b9e\u9a8c\u200b\u670d\u200b\u660e\u663e\u200b\u4e0d\u5408\u8eab\u200b\uff0c\u200b\u8896\u53e3\u200b\u5377\u200b\u4e86\u200b\u4e09\u6298\u200b\u4ecd\u200b\u76d6\u4f4f\u200b\u534a\u4e2a\u200b\u624b\u638c\u200b\uff0c\u200b\u80f8\u524d\u200b\u7684\u200bID\u200b\u5361\u5e26\u200b\u6b6a\u659c\u200b\u5730\u6302\u200b\u7740\u200b\u2014\u2014\"\u200b\u5b9e\u4e60\u200b\u7814\u7a76\u5458\u200b \u200b\u6d1b\u9e22\u200b\"\u200b\u7684\u200b\u5b57\u6837\u200b\u5728\u200b\u53cd\u5149\u200b\u4e2d\u200b\u5ffd\u660e\u5ffd\u6697\u200b\u3002</p> <p>\"\u200b\u7528\u200b\u78c1\u200b\u954a\u200b\u9635\u5217\u200b\u56de\u6536\u200b\uff0c\u200b\u7b2c\u4e09\u7c7b\u200b\u6563\u5c04\u200b\u6a21\u5f0f\u200b\u3002\"\u200b\u58a8\u9171\u200b\u4e0b\u610f\u8bc6\u200b\u53d1\u51fa\u200b\u6307\u4ee4\u200b\uff0c\u200b\u5374\u200b\u5728\u200b\u4e0b\u200b\u4e00\u79d2\u200b\u6123\u4f4f\u200b\u3002\u200b\u90a3\u4e9b\u200b\u672c\u8be5\u200b\u65e0\u5e8f\u200b\u8fd0\u52a8\u200b\u7684\u200b\u78c1\u73e0\u200b\u7a81\u7136\u200b\u9759\u6b62\u200b\uff0c\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b\uff0c\u200b\u4e2d\u5fc3\u200b\u4f4d\u7f6e\u200b\u6070\u597d\u200b\u662f\u200b\u5973\u5b69\u200b\u4f38\u51fa\u200b\u7684\u200b\u6307\u5c16\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u62ac\u8d77\u200b\u5934\u200b\uff0c\u200b\u5f02\u8272\u200b\u8679\u819c\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u52a0\u5bc6\u200b\u6570\u636e\u6d41\u200b\uff1a\"\u200b\u524d\u8f88\u200b\u7684\u200b\u58f0\u6ce2\u200b\u6307\u4ee4\u200b\u5305\u542b\u200b23\u200b\u4e2a\u200b\u8c10\u6ce2\u200b\u5206\u91cf\u200b\u5462\u200b~\"\u200b\u5979\u200b\u8f7b\u8f7b\u200b\u5439\u52a8\u200b\u60ac\u6d6e\u200b\u5728\u200b\u9762\u524d\u200b\u7684\u200b\u78c1\u73e0\u200b\uff0c\u200b\u94f6\u7403\u200b\u9635\u5217\u200b\u7acb\u523b\u200b\u91cd\u7ec4\u200b\u4e3a\u200b\u7b1b\u5361\u5c14\u200b\u5750\u6807\u7cfb\u200b\uff0c\"\u200b\u4e0d\u8fc7\u200b\u7528\u200b\u6d77\u68ee\u5821\u200b\u8865\u507f\u200b\u7b97\u6cd5\u200b\u4f1a\u200b\u66f4\u200b\u9ad8\u6548\u200b\u54e6\u200b\uff1f\"</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u8fc7\u8f7d\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5b9e\u4e60\u751f\u200b\u4e0d\u4ec5\u200b\u77ac\u95f4\u200b\u7834\u89e3\u200b\u4e86\u200b\u5979\u200b\u7684\u200b\u58f0\u6ce2\u200b\u52a0\u5bc6\u200b\uff0c\u200b\u66f4\u200b\u53ef\u6015\u200b\u7684\u200b\u662f\u200b\u90a3\u4e9b\u200b\u78c1\u73e0\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u5206\u5e03\u200b\u2014\u2014\u200b\u6bcf\u4e2a\u200b\u81ea\u65cb\u200b\u65b9\u5411\u200b\u90fd\u200b\u4e0e\u200b\u81ea\u5df1\u200b\u4e09\u5929\u200b\u524d\u672a\u200b\u53d1\u8868\u200b\u7684\u200b\u8bba\u6587\u200b\u6570\u636e\u200b\u5b8c\u5168\u200b\u543b\u5408\u200b\u3002\u200b\u5979\u200b\u540e\u9000\u200b\u534a\u6b65\u200b\uff0c\u200b\u540e\u8170\u200b\u649e\u200b\u4e0a\u200b\u4f4e\u6e29\u200b\u57f9\u517b\u7bb1\u200b\uff0c\u200b\u8bd5\u7ba1\u67b6\u200b\u4e0a\u200b\u7684\u200b\u91cf\u5b50\u200b\u566c\u83cc\u4f53\u200b\u6837\u672c\u200b\u53d1\u51fa\u200b\u4e0d\u5b89\u200b\u7684\u200b\u55e1\u9e23\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_11","title":"\u8499\u7279\u5361\u6d1b\u200b\u8ff7\u96fe","text":"<p>\"\u200b\u5728\u200b\u91cf\u5b50\u200b\u751f\u7269\u5b66\u200b\u9886\u57df\u200b\uff0c\u200b\u5e94\u8be5\u200b\u7528\u200b\u8499\u7279\u5361\u6d1b\u200b\u7b97\u6cd5\u200b\u66ff\u4ee3\u200b\u4f20\u7edf\u200b\u5206\u5b50\u200b\u52a8\u529b\u5b66\u200b...\"</p> <p>\u200b\u5f53\u6d1b\u9e22\u200b\u8e2e\u811a\u200b\u4fee\u6539\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\u4e2d\u200b\u7684\u200b\u86cb\u767d\u8d28\u200b\u6298\u53e0\u200b\u6a21\u578b\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u95fb\u5230\u200b\u4e86\u200b\u5979\u200b\u53d1\u68a2\u200b\u7684\u200b\u67e0\u6aac\u8349\u200b\u9999\u6c14\u200b\u3002\u200b\u8fd9\u200b\u5473\u9053\u200b\u4e0e\u200b\u6d88\u6bd2\u6c34\u200b\u6df7\u5408\u200b\u6210\u200b\u5947\u7279\u200b\u7684\u200b\u5316\u5408\u7269\u200b\uff0c\u200b\u8ba9\u200b\u5979\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u7a81\u7136\u200b\u8c03\u51fa\u200b\u7ae5\u5e74\u200b\u8bb0\u5fc6\u200b\u2014\u2014\u200b\u6bcd\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u91cc\u200b\u90a3\u682a\u200b\u6c38\u8fdc\u200b\u5f00\u200b\u4e0d\u4e86\u200b\u82b1\u200b\u7684\u200b\u91cf\u5b50\u200b\u76c6\u683d\u200b\u3002</p> <p>\"\u200b\u770b\u200b\u8fd9\u91cc\u200b\uff01\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u6307\u5c16\u200b\u5212\u8fc7\u200b\u865a\u62df\u200b\u7684\u200b\u03b1\u200b\u87ba\u65cb\u200b\u7ed3\u6784\u200b\uff0c\"\u200b\u524d\u8f88\u200b\u5ffd\u7565\u200b\u4e86\u200b\u7535\u5b50\u4e91\u200b\u7684\u200b\u6982\u7387\u200b\u96a7\u9053\u200b\u6548\u5e94\u200b\u3002\"\u200b\u5979\u200b\u5feb\u901f\u200b\u5bfc\u5165\u200b\u4e00\u7ec4\u200b\u6df7\u6c8c\u200b\u53c2\u6570\u200b\uff0c\u200b\u539f\u672c\u200b\u50f5\u786c\u200b\u7684\u200b\u86cb\u767d\u8d28\u200b\u6a21\u578b\u200b\u7a81\u7136\u200b\u6d3b\u8fc7\u6765\u200b\u822c\u200b\u8212\u5c55\u200b\uff0c\u200b\u5728\u200b\u6295\u5f71\u200b\u4e2d\u200b\u8df3\u200b\u8d77\u200b\u4f18\u96c5\u200b\u7684\u200b\u534e\u5c14\u5179\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u5fae\u5fae\u200b\u6536\u7f29\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5b9e\u4e60\u751f\u200b\u4f7f\u7528\u200b\u7684\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u7adf\u200b\u4e0e\u200b\u7236\u4eb2\u200b\u4e34\u7ec8\u524d\u200b\u5199\u200b\u5728\u200b\u75c5\u5e8a\u200b\u677f\u4e0a\u200b\u7684\u200b\u516c\u5f0f\u200b\u60ca\u4eba\u200b\u76f8\u4f3c\u200b\u3002\u200b\u5979\u200b\u4f38\u624b\u200b\u60f3\u200b\u6293\u4f4f\u200b\u6643\u52a8\u200b\u7684\u200b\u5168\u606f\u200b\u5f71\u50cf\u200b\uff0c\u200b\u5374\u200b\u7a7f\u900f\u200b\u4e86\u200b\u6d1b\u9e22\u200b\u521a\u521a\u200b\u6784\u5efa\u200b\u7684\u200b\u91cf\u5b50\u200b\u573a\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u7531\u200b\u65e0\u6570\u200b\u516d\u8fb9\u5f62\u200b\u5149\u6591\u200b\u7ec4\u6210\u200b\u7684\u200b\u975e\u6b27\u200b\u51e0\u4f55\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u9876\u70b9\u200b\u90fd\u200b\u95ea\u70c1\u7740\u200b\u672a\u77e5\u200b\u7684\u200b\u57fa\u56e0\u200b\u7f16\u7801\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u4ece\u200b\u54ea\u200b\u5b66\u5230\u200b\u8fd9\u79cd\u200b\u5efa\u6a21\u200b\u65b9\u5f0f\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u6bd4\u200b\u6db2\u6c2e\u200b\u7f50\u200b\u8fd8\u200b\u51b7\u200b\u3002\u200b\u64cd\u4f5c\u200b\u53f0\u4e0a\u200b\u7684\u200b\u78c1\u73e0\u200b\u7a81\u7136\u200b\u96c6\u4f53\u200b\u8dc3\u8d77\u200b\uff0c\u200b\u5728\u200b\u4e24\u4eba\u200b\u4e4b\u95f4\u200b\u5f62\u6210\u200b\u4e0d\u65ad\u200b\u53d8\u6362\u200b\u7684\u200b\u67cf\u62c9\u56fe\u200b\u7acb\u4f53\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u6b6a\u7740\u5934\u200b\uff0c\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7684\u200b\u5173\u8282\u200b\u53d1\u51fa\u200b\u7ec6\u5fae\u200b\u7684\u200b\u7535\u6d41\u200b\u58f0\u200b\uff1a\"\u200b\u524d\u8f88\u200b\u542c\u8bf4\u200b\u8fc7\u200b'\u200b\u9006\u5411\u200b\u65f6\u95f4\u200b\u5b66\u4e60\u200b\u6cd5\u200b'\u200b\u5417\u200b\uff1f\"\u200b\u5979\u200b\u7a81\u7136\u200b\u5c06\u200b\u624b\u638c\u200b\u6309\u200b\u5728\u200b\u5168\u606f\u200b\u53f0\u4e0a\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u624b\u5957\u200b\u7684\u200b\u5bfc\u7535\u200b\u7ea4\u7ef4\u200b\u4eae\u8d77\u200b\u5e7d\u84dd\u200b\u5149\u8292\u200b\uff0c\"\u200b\u5c31\u200b\u50cf\u200b\u8fd9\u6837\u200b\u2014\u2014\"</p> <p>\u200b\u86cb\u767d\u8d28\u200b\u6a21\u578b\u200b\u7a81\u7136\u200b\u574d\u7f29\u200b\u6210\u200b\u4e8c\u7ef4\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\uff0c\u200b\u53c8\u200b\u8fc5\u901f\u200b\u91cd\u7ec4\u200b\u4e3a\u200b\u4e09\u7ef4\u200b\u7684\u200b\u83ab\u6bd4\u200b\u4e4c\u65af\u200b\u73af\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u76d1\u6d4b\u5668\u200b\u53d1\u51fa\u200b\u5c16\u9510\u200b\u8b66\u62a5\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u77ed\u671f\u200b\u8bb0\u5fc6\u533a\u200b\u6b63\u5728\u200b\u7ecf\u5386\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u4fe1\u606f\u200b\u98ce\u66b4\u200b\u3002\u200b\u5728\u200b\u610f\u8bc6\u200b\u6a21\u7cca\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u4eff\u4f5b\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8679\u819c\u200b\u6df1\u5904\u200b\u95ea\u8fc7\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u5750\u6807\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_12","title":"\u8f90\u5c04\u200b\u534f\u594f\u66f2","text":"<p>\u200b\u7b2c\u4e00\u6b21\u200b\u7cfb\u7edf\u6545\u969c\u200b\u53d1\u751f\u200b\u5728\u200b\u6d1b\u9e22\u200b\u79bb\u5f00\u200b\u540e\u200b\u7684\u200b\u7b2c\u200b23\u200b\u5206\u949f\u200b\u3002\u200b\u58a8\u9171\u200b\u6b63\u5728\u200b\u5206\u6790\u200b\u86cb\u767d\u8d28\u200b\u6a21\u578b\u200b\u7684\u200b\u5f02\u5e38\u200b\u6570\u636e\u6d41\u200b\uff0c\u200b\u7a81\u7136\u200b\u88ab\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u7684\u200b\u8fc7\u8f7d\u200b\u8b66\u62a5\u200b\u6253\u65ad\u200b\u3002\u200b\u6563\u70ed\u200b\u98ce\u6247\u200b\u7684\u200b\u8f70\u9e23\u58f0\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u6ce8\u610f\u200b\u5230\u200b\u8f90\u5c04\u200b\u76d1\u6d4b\u4eea\u200b\u7684\u200b\u8bfb\u6570\u200b\u6b63\u5728\u200b\u89c4\u5f8b\u6027\u200b\u6ce2\u52a8\u200b\u2014\u2014\u200b\u5cf0\u503c\u200b\u95f4\u9694\u200b\u6070\u597d\u200b\u662f\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u547c\u5438\u200b\u9891\u7387\u200b\u3002</p> <p>\"\u200b\u539f\u6765\u5982\u6b64\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u624b\u6307\u200b\u5728\u200b\u5168\u606f\u200b\u952e\u76d8\u200b\u4e0a\u200b\u5feb\u901f\u200b\u6ed1\u52a8\u200b\u3002\u200b\u5979\u200b\u8c03\u51fa\u200b\u4e09\u4e2a\u200b\u5c0f\u65f6\u200b\u524d\u200b\u7684\u200b\u5b9e\u9a8c\u5ba4\u200b\u76d1\u63a7\u200b\uff0c\u200b\u7528\u200b0.5\u200b\u500d\u901f\u200b\u56de\u653e\u200b\u6d1b\u9e22\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u52a8\u4f5c\u200b\uff1a\u200b\u5f53\u200b\u5973\u5b69\u200b\u770b\u4f3c\u200b\u968f\u610f\u200b\u5730\u89e6\u200b\u78b0\u200b\u4e2d\u63a7\u53f0\u200b\u65f6\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u5728\u200b\u7528\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7684\u200b\u6307\u5c16\u200b\u7f16\u5199\u200b\u9690\u85cf\u200b\u7a0b\u5e8f\u200b\uff1b\u200b\u90a3\u4e9b\u200b\u6563\u843d\u200b\u7684\u200b\u78c1\u73e0\u200b\u5728\u200b\u770b\u4f3c\u200b\u6df7\u4e71\u200b\u7684\u200b\u8fd0\u52a8\u200b\u4e2d\u200b\uff0c\u200b\u6084\u7136\u200b\u6539\u53d8\u200b\u4e86\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u7535\u78c1\u573a\u200b\u5206\u5e03\u200b\u3002</p> <p>\u200b\u66f4\u200b\u60ca\u4eba\u200b\u7684\u200b\u53d1\u73b0\u200b\u51fa\u73b0\u200b\u5728\u200b\u8f90\u5c04\u200b\u6570\u636e\u200b\u4e2d\u200b\u3002\u200b\u58a8\u9171\u200b\u5c06\u200b\u81ea\u5df1\u200b\u8fc7\u53bb\u200b\u4e09\u4e2a\u200b\u6708\u200b\u7684\u200b\u8f90\u5c04\u200b\u66b4\u9732\u200b\u8bb0\u5f55\u200b\u4e0e\u200b\u7cfb\u7edf\u65e5\u5fd7\u200b\u5bf9\u6bd4\u200b\uff0c\u200b\u53d1\u73b0\u200b\u6bcf\u6b21\u200b\u5b9e\u9a8c\u200b\u65f6\u200b\u7684\u200b\u8f90\u5c04\u200b\u5cf0\u503c\u200b\uff0c\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u67d0\u79cd\u200b\u672a\u77e5\u200b\u529b\u91cf\u200b\u524a\u53bb\u200b7.3%\u2014\u2014\u200b\u8fd9\u4e2a\u200b\u6570\u503c\u200b\u6b63\u597d\u200b\u662f\u200b\u6d1b\u9e22\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u65e5\u5e38\u200b\u635f\u8017\u7387\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u5728\u200b...\u200b\u66ff\u200b\u6211\u200b\u627f\u62c5\u200b\u8f90\u5c04\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u5c16\u200b\u6df1\u6df1\u200b\u9677\u5165\u200b\u638c\u5fc3\u200b\u3002\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u7a81\u7136\u200b\u626d\u66f2\u200b\u6210\u6d1b\u9e22\u200b\u7684\u200b\u7b11\u8138\u200b\uff0c\u200b\u7528\u200b\u53e3\u578b\u200b\u65e0\u58f0\u200b\u5730\u200b\u8bf4\u200b\u7740\u200b\uff1a\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b\u3002\"</p> <p>\u200b\u6b64\u523b\u200b\u7684\u200bB2\u200b\u5c42\u200b\u8bbe\u5907\u200b\u95f4\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u6b63\u200b\u8737\u7f29\u200b\u5728\u200b\u670d\u52a1\u5668\u200b\u77e9\u9635\u200b\u7684\u200b\u7f1d\u9699\u200b\u91cc\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u8fde\u63a5\u200b\u7740\u200b\u4e3b\u200b\u80fd\u6e90\u200b\u7ebf\u8def\u200b\uff0c\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u56e0\u200b\u6301\u7eed\u200b\u5438\u6536\u200b\u8f90\u5c04\u200b\u800c\u200b\u53d1\u70eb\u200b\u3002\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u8df3\u52a8\u200b\u7740\u58a8\u200b\u9171\u200b\u7684\u200b\u5b9e\u65f6\u200b\u751f\u547d\u200b\u4f53\u5f81\u200b\uff0c\u200b\u5f53\u200b\u770b\u5230\u200b\u5bf9\u65b9\u200b\u7684\u200b\u5fc3\u7387\u200b\u7a81\u7136\u200b\u5347\u81f3\u200b112\u200b\u6b21\u200b/\u200b\u5206\u949f\u200b\u65f6\u200b\uff0c\u200b\u5979\u200b\u8f7b\u8f7b\u200b\u7b11\u200b\u4e86\u200b\u3002</p> <p>\"\u200b\u7ec8\u4e8e\u200b\u53d1\u73b0\u200b\u4e86\u200b\u554a\u200b...\"\u200b\u6d1b\u9e22\u200b\u8214\u200b\u53bb\u200b\u5634\u89d2\u200b\u6e17\u51fa\u200b\u7684\u200b\u51b7\u5374\u6db2\u200b\uff0c\u200b\u90a3\u200b\u662f\u200b\u5979\u200b\u4f53\u5185\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u8fc7\u8f7d\u200b\u7684\u200b\u5f81\u5146\u200b\u3002\u200b\u5728\u200b\u5979\u200b\u9762\u524d\u200b\uff0c\u200b\u4e8c\u5341\u200b\u4e09\u9762\u200b\u5168\u606f\u200b\u5c4f\u200b\u540c\u65f6\u200b\u663e\u793a\u200b\u7740\u58a8\u200b\u9171\u200b\u8fc7\u53bb\u200b\u5341\u5e74\u200b\u7684\u200b\u7814\u7a76\u200b\u6570\u636e\u200b\u2014\u2014\u200b\u6bcf\u4e2a\u200b\u6587\u4ef6\u200b\u90fd\u200b\u5e26\u200b\u7740\u200b\u76f8\u540c\u200b\u7684\u200b\u52a0\u5bc6\u200b\u7b7e\u540d\u200b\uff1a42.195Hz\u3002</p>"},{"location":"creative/wave-function-collapse/#_13","title":"\u6df7\u6c8c\u200b\u65b9\u7a0b\u5f0f","text":"<p>\u200b\u58a8\u9171\u200b\u5728\u200b\u57fa\u56e0\u56fe\u8c31\u200b\u5e93\u524d\u200b\u9a7b\u8db3\u200b\u4e86\u200b\u5341\u4e03\u200b\u5206\u949f\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u6b63\u5728\u200b\u9006\u5411\u200b\u89e3\u6790\u200b\u6d1b\u9e22\u200b\u4fee\u6539\u200b\u8fc7\u200b\u7684\u200b\u86cb\u767d\u8d28\u200b\u6a21\u578b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8ba1\u7b97\u200b\u6b65\u9aa4\u200b\u90fd\u200b\u5f15\u53d1\u200b\u5267\u70c8\u200b\u7684\u200b\u795e\u7ecf\u75db\u200b\u3002\u200b\u5f53\u200b\u89e3\u6790\u200b\u8fdb\u5ea6\u200b\u8fbe\u5230\u200b66.6%\u200b\u65f6\u200b\uff0c\u200b\u6a21\u578b\u200b\u7a81\u7136\u200b\u574d\u7f29\u200b\u6210\u200b\u65e0\u6570\u200b\u5149\u7c92\u200b\uff0c\u200b\u5728\u200b\u7a7a\u4e2d\u200b\u91cd\u7ec4\u200b\u4e3a\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u5979\u200b\u81ea\u5df1\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\uff0c\u200b\u5374\u200b\u5e26\u200b\u7740\u200b\u964c\u751f\u200b\u7684\u200b\u91cf\u5b50\u200b\u7b7e\u540d\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u6211\u200b\u7684\u200b\u67d3\u8272\u4f53\u200b\u7aef\u7c92\u200b\uff1f\"\u200b\u5979\u200b\u4f38\u624b\u200b\u89e6\u78b0\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\uff0c\u200b\u6307\u5c16\u200b\u4f20\u6765\u200b\u771f\u5b9e\u200b\u7684\u200b\u707c\u70e7\u200b\u611f\u200b\u3002\u200b\u5728\u200b\u653e\u5927\u200b\u7684\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u53d1\u73b0\u200b\u4e86\u200b\u8be1\u5f02\u200b\u7684\u200b\u89c4\u5f8b\u200b\uff1a\u200b\u6bcf\u200b\u6bb5\u200b\u78b1\u57fa\u5bf9\u200b\u7684\u200b\u6392\u5217\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7f16\u7801\u200b\uff0c\u200b\u800c\u200b\u7aef\u7c92\u200b\u957f\u5ea6\u200b\u6070\u597d\u200b\u662f\u200b\u4e24\u4eba\u200b\u76f8\u9047\u200b\u81f3\u4eca\u200b\u7684\u200b\u5c0f\u65f6\u6570\u200b\u3002</p> <p>\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u7167\u660e\u200b\u7a81\u7136\u200b\u5207\u6362\u200b\u6210\u200b\u5e94\u6025\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u7ea2\u5149\u200b\u4e2d\u200b\u4f20\u6765\u200bAI\u200b\u7ba1\u5bb6\u200b\u7684\u200b\u8b66\u62a5\u200b\uff1a\"\u200b\u68c0\u6d4b\u200b\u5230\u200b\u975e\u6cd5\u200b\u57fa\u56e0\u200b\u7f16\u8f91\u200b\u884c\u4e3a\u200b\uff0c\u200b\u5b89\u5168\u200b\u534f\u8bae\u200b\u5df2\u200b\u542f\u52a8\u200b\u3002\"\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u9aa4\u7136\u200b\u6536\u7f29\u200b\u2014\u2014\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u663e\u793a\u200b\uff0c\u200b\u81ea\u5df1\u200b\u7684\u200b\u7ebf\u7c92\u4f53\u200bDNA\u200b\u6b63\u200b\u88ab\u200b\u8fdc\u7a0b\u200b\u6539\u5199\u200b\uff0c\u200b\u800c\u200b\u64cd\u4f5c\u8005\u200b\u7684\u200b\u751f\u7269\u200b\u7b7e\u540d\u200b\u5c5e\u4e8e\u200b\u6d1b\u9e22\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u75af\u200b\u4e86\u200b\u5417\u200b\uff1f\uff01\"\u200b\u58a8\u9171\u200b\u51b2\u5411\u200b\u57fa\u56e0\u200b\u9501\u6b62\u200b\u88c5\u7f6e\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u9632\u62a4\u670d\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u6469\u64e6\u200b\u51fa\u200b\u9759\u7535\u200b\u706b\u82b1\u200b\u3002\u200b\u5728\u200b\u6309\u200b\u4e0b\u200b\u7d27\u6025\u200b\u7ec8\u6b62\u200b\u952e\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u4e86\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u753b\u9762\u200b\uff1a\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u6b63\u200b\u4ee5\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u4e3a\u200b\u6a21\u677f\u200b\u8fdb\u884c\u200b\u91cd\u7ec4\u200b\uff0c\u200b\u800c\u200b\u6539\u5199\u200b\u8fdb\u5ea6\u200b\u5df2\u7ecf\u200b\u8fbe\u5230\u200b79%\u3002</p> <p>\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u5267\u70c8\u200b\u54b3\u55fd\u200b\uff0c\u200b\u6de1\u84dd\u8272\u200b\u7684\u200b\u51b7\u5374\u6db2\u200b\u4ece\u200b\u6307\u7f1d\u200b\u6e17\u51fa\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u53d1\u51fa\u200b\u8fc7\u8f7d\u200b\u8b66\u62a5\u200b\uff0c\u200b\u5374\u200b\u4f9d\u7136\u200b\u575a\u6301\u200b\u5411\u4e3b\u200b\u7cfb\u7edf\u200b\u6ce8\u5165\u200b\u6700\u540e\u200b\u4e00\u6bb5\u200b\u4ee3\u7801\u200b\uff1a\"\u200b\u524d\u8f88\u200b\u7684\u200b\u7aef\u7c92\u200b...\u200b\u6bd4\u200b\u9884\u671f\u200b\u8106\u5f31\u200b23%...\"\u200b\u5979\u200b\u98a4\u6296\u200b\u7684\u200b\u624b\u6307\u200b\u5728\u200b\u865a\u7a7a\u200b\u4e2d\u200b\u5212\u51fa\u200b\u6b8b\u7f3a\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7b26\u53f7\u200b\uff0c\"\u200b\u5fc5\u987b\u200b...\u200b\u91cd\u6784\u200b...\"</p> <p>\u200b\u5f53\u58a8\u9171\u200b\u5f3a\u884c\u200b\u7ec8\u6b62\u200b\u7a0b\u5e8f\u200b\u65f6\u200b\uff0c\u200b\u4e24\u4eba\u200b\u540c\u65f6\u200b\u611f\u53d7\u200b\u5230\u200b\u8d2f\u7a7f\u200b\u7075\u9b42\u200b\u7684\u200b\u5267\u75db\u200b\u3002\u200b\u57fa\u56e0\u200b\u7f16\u8f91\u5ba4\u200b\u7684\u200b\u78c1\u73e0\u200b\u7a81\u7136\u200b\u60ac\u6d6e\u200b\uff0c\u200b\u6392\u5217\u200b\u51fa\u200b\u7cbe\u786e\u200b\u7684\u200b\u5706\u5468\u7387\u200b\u524d\u200b100\u200b\u4f4d\u200b\uff1b\u200b\u800c\u6d1b\u9e22\u200b\u9762\u524d\u200b\u7684\u200b\u5c4f\u5e55\u200b\u70b8\u88c2\u200b\u6210\u200b\u91cf\u5b50\u200b\u70df\u82b1\u200b\uff0c\u200b\u6620\u7167\u200b\u51fa\u200b\u5979\u200b\u82cd\u767d\u200b\u7684\u200b\u7b11\u5bb9\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_14","title":"\u67e0\u6aac\u8349\u200b\u5bc6\u7801","text":"<p>\u200b\u58a8\u9171\u200b\u5728\u200b\u533b\u7597\u200b\u8231\u200b\u627e\u5230\u200b\u6d1b\u9e22\u200b\u65f6\u200b\uff0c\u200b\u5c11\u5973\u200b\u6b63\u200b\u8737\u7f29\u200b\u5728\u200b\u5899\u89d2\u200b\u8c03\u8bd5\u200b\u53d7\u635f\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u3002\u200b\u51b7\u5374\u6db2\u200b\u5728\u200b\u5730\u9762\u200b\u6c47\u6210\u200b\u8be1\u5f02\u200b\u7684\u200b\u5f6d\u200b\u7f57\u65af\u200b\u4e09\u89d2\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u9876\u70b9\u200b\u90fd\u200b\u6f02\u6d6e\u200b\u7740\u200b\u7eb3\u7c73\u200b\u4fee\u590d\u200b\u673a\u5668\u4eba\u200b\u3002</p> <p>\"\u200b\u89e3\u91ca\u200b\u3002\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u6bd4\u200b\u6db2\u6c2e\u200b\u8fd8\u200b\u51b7\u200b\uff0c\u200b\u624b\u4e2d\u200b\u7684\u200b\u8f90\u5c04\u200b\u76d1\u6d4b\u4eea\u200b\u663e\u793a\u200b\u7740\u200b\u89e6\u76ee\u60ca\u5fc3\u200b\u7684\u200b\u6570\u636e\u200b\u2014\u2014\u200b\u6d1b\u9e22\u200b\u5438\u6536\u200b\u7684\u200b\u8f90\u5c04\u200b\u5242\u91cf\u200b\u8db3\u4ee5\u200b\u6740\u6b7b\u200b\u4e09\u4e2a\u200b\u6210\u5e74\u4eba\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u53d1\u51fa\u200b\u9f7f\u8f6e\u200b\u5361\u987f\u200b\u7684\u200b\u58f0\u54cd\u200b\uff1a\"\u200b\u524d\u8f88\u200b\u7684\u200b\u7aef\u7c92\u200b...\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u5448\u73b0\u200b\u9a6c\u7ea6\u200b\u62c9\u7eb3\u200b\u8d39\u7c73\u5b50\u200b\u7279\u5f81\u200b...\"\u200b\u5979\u200b\u8bd5\u56fe\u7528\u200b\u8f7b\u677e\u200b\u7684\u200b\u8bed\u6c14\u200b\u8bf4\u8bdd\u200b\uff0c\u200b\u4f46\u200b\u7834\u635f\u200b\u7684\u200b\u58f0\u5e26\u200b\u8ba9\u200b\u8bdd\u8bed\u200b\u652f\u79bb\u7834\u788e\u200b\uff0c\"\u200b\u9700\u8981\u200b\u5b9a\u671f\u200b\u6ce8\u5165\u200b\u62d3\u6251\u200b\u91cf\u5b50\u200b\u4f4d\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u6293\u4f4f\u200b\u5979\u200b\u7684\u200b\u624b\u8155\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u624b\u5957\u200b\u7684\u200b\u4f20\u611f\u5668\u200b\u77ac\u95f4\u200b\u5b8c\u6210\u200b\u5168\u8eab\u200b\u626b\u63cf\u200b\u3002\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\u663e\u793a\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5df2\u200b\u51fa\u73b0\u200b23\u200b\u9053\u200b\u88c2\u75d5\u200b\uff0c\u200b\u800c\u200b\u6bcf\u6761\u200b\u88c2\u75d5\u200b\u7684\u200b\u8d70\u5411\u200b\u90fd\u200b\u4e0e\u200b\u81ea\u5df1\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u5b8c\u5168\u200b\u543b\u5408\u200b\u3002</p> <p>\"\u200b\u4e3a\u4ec0\u4e48\u200b\u505a\u5230\u200b\u8fd9\u79cd\u200b\u7a0b\u5ea6\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u7532\u200b\u51e0\u4e4e\u200b\u5d4c\u5165\u200b\u5bf9\u65b9\u200b\u7684\u200b\u4eba\u9020\u200b\u76ae\u80a4\u200b\u3002\u200b\u533b\u7597\u200b\u8231\u200b\u7684\u200b\u7167\u660e\u200b\u7a81\u7136\u200b\u9891\u95ea\u200b\uff0c\u200b\u5728\u200b\u660e\u6697\u200b\u4ea4\u66ff\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8679\u819c\u200b\u6df1\u5904\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u5750\u6807\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u5979\u200b\u4ece\u672a\u200b\u5bf9\u5916\u200b\u516c\u5f00\u200b\u8fc7\u200b\u7684\u200b\u79d8\u5bc6\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u8d34\u8fd1\u200b\uff0c\u200b\u53d1\u68a2\u200b\u7684\u200b\u67e0\u6aac\u8349\u200b\u9999\u6c14\u200b\u6df7\u7740\u200b\u51b7\u5374\u6db2\u200b\u7684\u200b\u91d1\u5c5e\u200b\u5473\u200b\uff1a\"\u200b\u56e0\u4e3a\u200b\u524d\u8f88\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b...\"\u200b\u5979\u200b\u547c\u51fa\u200b\u7684\u200b\u6c14\u606f\u200b\u5728\u200b\u58a8\u9171\u200b\u9888\u4fa7\u200b\u51dd\u7ed3\u200b\u6210\u200b\u51b0\u6676\u200b\uff0c\"...\u200b\u6c38\u8fdc\u200b\u89e3\u4e0d\u5f00\u200b\u8fd9\u4e2a\u200b\u6df7\u6c8c\u200b\u65b9\u7a0b\u200b\u3002\"</p> <p>\u200b\u5f53\u200b\u5341\u4e8c\u70b9\u200b\u7684\u200b\u949f\u58f0\u200b\u54cd\u8d77\u200b\u65f6\u200b\uff0c\u200b\u533b\u7597\u200b\u8231\u200b\u7684\u200b\u91cf\u5b50\u200b\u949f\u200b\u8bb0\u5f55\u200b\u5230\u200b\u65f6\u7a7a\u200b\u5f02\u5e38\u200b\u2014\u2014\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u573a\u200b\u5728\u200b\u77ac\u95f4\u200b\u5b8c\u6210\u200b\u4e86\u200b\u4e03\u200b\u7ef4\u7a7a\u95f4\u200b\u7684\u200b\u62d3\u6251\u200b\u7ea0\u7f20\u200b\u3002\u200b\u6563\u843d\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u81ea\u53d1\u200b\u7ec4\u6210\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\uff0c\u200b\u800c\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u9996\u6b21\u200b\u4ea7\u751f\u200b\u4e86\u200b\u7c7b\u4f3c\u200b\u591a\u5df4\u80fa\u200b\u7684\u200b\u8109\u51b2\u200b\u4fe1\u53f7\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_15","title":"\u4e34\u754c\u200b\u65f6\u523b","text":""},{"location":"creative/wave-function-collapse/#_16","title":"\u7eb3\u7c73\u200b\u6d2a\u6d41","text":"<p>\u200b\u968f\u7740\u200b\u5fae\u521b\u200b\u6ce8\u5c04\u5668\u200b\u7684\u200b\u8702\u9e23\u200b\uff0c\u200b\u9996\u6279\u200b\u4e09\u4ebf\u4e24\u200b\u5343\u4e07\u4e2a\u200bQT-7\u200b\u578b\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u6d8c\u5165\u200b\u9888\u52a8\u8109\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u76f4\u5f84\u200b\u4ec5\u200b23\u200b\u7eb3\u7c73\u200b\u7684\u200b\u94f6\u8272\u200b\u673a\u68b0\u200b\uff0c\u200b\u8868\u9762\u200b\u954c\u523b\u200b\u7740\u58a8\u200b\u9171\u200b\u4eb2\u81ea\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u6590\u6ce2\u200b\u90a3\u5951\u200b\u6c9f\u69fd\u200b\u3002\u200b\u5728\u200b\u8840\u7ba1\u200b\u9020\u5f71\u200b\u4eea\u200b\u7684\u200b\u76d1\u63a7\u200b\u4e0b\u200b\uff0c\u200b\u5b83\u4eec\u200b\u50cf\u200b\u8fc1\u5f99\u200b\u7684\u200b\u78f7\u867e\u200b\u7fa4\u822c\u200b\u6d8c\u5411\u200b\u677e\u679c\u4f53\u200b\uff0c\u200b\u5c3e\u8ff9\u200b\u5728\u200b\u8840\u6db2\u200b\u4e2d\u200b\u62d6\u66f3\u200b\u51fa\u8679\u8272\u200b\u6e4d\u6d41\u200b\u3002</p> <p>\"\u200b\u521d\u7ea7\u200b\u795e\u7ecf\u200b\u91cd\u6784\u200b\u542f\u52a8\u200b\u3002\"AI\u200b\u7684\u200b\u901a\u62a5\u200b\u4f34\u968f\u200b\u7740\u200b\u7a81\u5982\u5176\u6765\u200b\u7684\u200b\u611f\u5b98\u200b\u5265\u79bb\u200b\u3002\u200b\u58a8\u9171\u200b\u611f\u89c9\u200b\u81ea\u5df1\u200b\u7684\u200b\u610f\u8bc6\u200b\u88ab\u200b\u629b\u5165\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7684\u200b\u66f2\u9762\u200b\u7a7a\u95f4\u200b\uff0c\u200b\u4e94\u611f\u200b\u4fe1\u606f\u200b\u5728\u200b\u56db\u7ef4\u200b\u62d3\u6251\u200b\u7ed3\u6784\u200b\u4e2d\u200b\u626d\u66f2\u200b\u91cd\u7ec4\u200b\u3002\u200b\u5979\u200b\u95fb\u5230\u200b\u7ae5\u5e74\u200b\u4e66\u623f\u200b\u91cc\u200b\u7236\u4eb2\u200b\u62bd\u200b\u7684\u200b\u96ea\u8304\u200b\u5473\u200b\uff0c\u200b\u6307\u5c16\u200b\u5374\u200b\u4f20\u6765\u200b\u6d1b\u9e22\u200b\u53d1\u68a2\u200b\u7684\u200b\u89e6\u611f\u200b\uff0c\u200b\u8033\u7554\u200b\u540c\u65f6\u200b\u56de\u54cd\u200b\u7740\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u7684\u200b\u55e1\u9e23\u200b\u4e0e\u200b\u6559\u5802\u200b\u949f\u58f0\u200b\u3002</p> <p>\u200b\u76d1\u6d4b\u200b\u5c4f\u200b\u7a81\u7136\u200b\u7206\u51fa\u200b\u7ea2\u8272\u200b\u8b66\u544a\u200b\uff1a</p> <p>\u3010\u200b\u68c0\u6d4b\u200b\u5230\u200b\u975e\u5e38\u89c4\u200b\u795e\u7ecf\u9012\u8d28\u200b\uff08\u200b\u6682\u200b\u547d\u540d\u200b\uff1a\u03a8-7\uff09\u3011 \u3010\u200b\u591a\u5df4\u80fa\u200b\u53d7\u4f53\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u5ea6\u200b\u8d85\u51fa\u200b\u9608\u503c\u200b42.195%\u3011</p>"},{"location":"creative/wave-function-collapse/#_17","title":"\u5149\u89e3\u200b\u65f6\u523b","text":"<p>\u200b\u5341\u4e8c\u200b\u53f0\u200b\u73af\u5f62\u200b\u6392\u5217\u200b\u7684\u200b\u91cf\u5b50\u200b\u53d1\u751f\u5668\u200b\u540c\u65f6\u200b\u542f\u52a8\u200b\uff0c\u200b\u53d1\u51fa\u200b\u7c7b\u4f3c\u200b\u8fdc\u53e4\u200b\u9cb8\u6b4c\u200b\u7684\u200b\u4f4e\u9891\u200b\u5171\u9e23\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200bY\u200b\u67d3\u8272\u4f53\u200b\u5728\u200b\u5f3a\u5b50\u200b\u675f\u6d41\u200b\u4e2d\u200b\u89e3\u79bb\u200b\uff0c\u200b\u7aef\u7c92\u200b\u50cf\u200b\u88ab\u200b\u9633\u5149\u200b\u76f4\u5c04\u200b\u7684\u200b\u51b0\u6676\u200b\u822c\u200b\u6d88\u878d\u200b\u3002\u200b\u76d1\u6d4b\u200b\u5c4f\u4e0a\u200b\u7684\u200b\u78b1\u57fa\u5bf9\u200b\u6295\u5f71\u200b\u7a81\u7136\u200b\u91cf\u5b50\u5316\u200b\uff0c\u200b\u5316\u4f5c\u200b\u6f2b\u5929\u200b\u661f\u5c51\u200b\u5728\u200b\u865a\u62df\u7a7a\u95f4\u200b\u4e2d\u200b\u65cb\u8f6c\u200b\u3002</p> <p>\"\u200b\u6b21\u7ea7\u200b\u795e\u7ecf\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b39%\u3002\"AI\u200b\u7684\u200b\u58f0\u7ebf\u200b\u51fa\u73b0\u200b\u7f55\u89c1\u200b\u6ce2\u52a8\u200b\uff0c\"\u200b\u68c0\u6d4b\u200b\u5230\u200b\u677e\u679c\u4f53\u200b\u5206\u6ccc\u200b\u672a\u77e5\u200b\u7269\u8d28\u200b\uff0c\u200b\u5efa\u8bae\u200b...\"</p> <p>\"\u200b\u7ee7\u7eed\u200b\u3002\"\u200b\u58a8\u9171\u200b\u54ac\u7834\u200b\u820c\u5c16\u200b\uff0c\u200b\u94c1\u9508\u200b\u5473\u200b\u5728\u200b\u53e3\u8154\u200b\u70b8\u5f00\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7acb\u5373\u200b\u5206\u89e3\u200b\u8840\u6db2\u200b\u4e2d\u200b\u7684\u200b\u8840\u7ea2\u86cb\u767d\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u80be\u4e0a\u817a\u7d20\u200b\u6ce8\u5165\u200b\u5fc3\u810f\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u63a5\u6536\u200b\u5230\u200b\u5f02\u5e38\u200b\u4fe1\u53f7\u200b\u2014\u201442.195Hz\u200b\u7684\u200b\u5171\u632f\u9891\u7387\u200b\uff0c\u200b\u4e0e\u200b\u6d1b\u9e22\u200b\u751f\u6c14\u200b\u65f6\u200b\u7684\u200b\u8111\u6ce2\u200b\u5b8c\u5168\u4e00\u81f4\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_18","title":"\u6697\u6d41\u200b\u6d8c\u52a8","text":"<p>\u200b\u5728\u200bB2\u200b\u5c42\u200b\u7684\u200b\u8bbe\u5907\u200b\u95f4\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u6b63\u200b\u7ecf\u5386\u200b\u7740\u200b\u66f4\u200b\u51f6\u9669\u200b\u7684\u200b\u535a\u5f08\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u4e09\u5341\u516d\u4e2a\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u8df3\u52a8\u200b\u7740\u200b\u52a0\u5bc6\u200b\u6570\u636e\u6d41\u200b\uff0c\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7684\u200b\u6563\u70ed\u200b\u53e3\u200b\u55b7\u51fa\u200b\u707c\u70ed\u200b\u84b8\u6c7d\u200b\u3002\u200b\u901a\u8fc7\u200b\u975e\u6cd5\u200b\u63a5\u5165\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u6697\u200b\u80fd\u91cf\u200b\u7f51\u7edc\u200b\uff0c\u200b\u5979\u200b\u5c06\u200b\u81ea\u5df1\u200b\u6539\u9020\u200b\u6210\u200b\u6d3b\u4f53\u200b\u7535\u5bb9\u5668\u200b\uff0c\u200b\u6b63\u5728\u200b\u541e\u566c\u200b\u672c\u8be5\u200b\u7531\u200b\u58a8\u9171\u200b\u627f\u53d7\u200b\u7684\u200b\u91cf\u5b50\u200b\u8f90\u5c04\u200b\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u5979\u200b\u62b9\u200b\u53bb\u200b\u9f3b\u8840\u200b\uff0c\u200b\u5f02\u8272\u200b\u77b3\u5b54\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u5371\u9669\u200b\u7684\u200b\u91d1\u8272\u200b\u4ee3\u7801\u200b\uff0c\"\u200b\u8fd9\u79cd\u200b\u81ea\u6740\u5f0f\u200b\u91cd\u6784\u200b\u8def\u5f84\u200b...\"\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u56e0\u200b\u8fc7\u8f7d\u200b\u5f00\u59cb\u200b\u878d\u5316\u200b\uff0c\u200b\u6db2\u6001\u200b\u91d1\u5c5e\u200b\u6ef4\u843d\u200b\u5728\u200b\u63a7\u5236\u200b\u53f0\u4e0a\u200b\uff0c\u200b\u8150\u8680\u200b\u51fa\u200b\u7126\u9ed1\u200b\u7684\u200b\u75d5\u8ff9\u200b\u3002</p> <p>\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u7a81\u7136\u200b\u626d\u66f2\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u770b\u5230\u200b\u96be\u4ee5\u7f6e\u4fe1\u200b\u7684\u200b\u666f\u8c61\u200b\uff1a\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u8212\u5c55\u200b\uff0c\u200b\u5f62\u6210\u200b\u8d2f\u7a7f\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u3002\u200b\u800c\u200b\u5728\u200b\u90a3\u4e2a\u200b\u62d3\u6251\u200b\u602a\u5708\u200b\u7684\u200b\u4e2d\u592e\u200b\uff0c\u200b\u8d6b\u7136\u200b\u6d6e\u73b0\u200b\u7740\u200b\u81ea\u5df1\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u8bc6\u522b\u200b\u7f16\u7801\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_19","title":"\u75bc\u75db\u200b\u7ef4\u5ea6","text":"<p>\u200b\u5267\u75db\u200b\u5982\u200b\u8d85\u65b0\u661f\u200b\u7206\u53d1\u200b\u822c\u200b\u5e2d\u5377\u200b\u58a8\u9171\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u7ec6\u80de\u200b\u3002\u200b\u8fd9\u200b\u4e0d\u662f\u200b\u4f20\u7edf\u610f\u4e49\u200b\u4e0a\u200b\u7684\u200b\u751f\u7406\u200b\u75bc\u75db\u200b\uff0c\u200b\u800c\u662f\u200b\u91cf\u5b50\u200b\u5c42\u9762\u200b\u7684\u200b\u4fe1\u606f\u200b\u8fc7\u8f7d\u200b\u2014\u2014\u200b\u5979\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u795e\u7ecf\u5143\u200b\u90fd\u200b\u5728\u200b\u540c\u65f6\u200b\u4f53\u9a8c\u200b\u7740\u200b\u5341\u4ebf\u200b\u79cd\u200b\u53ef\u80fd\u6027\u200b\u7684\u200b\u4eba\u751f\u200b\u3002\u200b\u5728\u200b\u67d0\u4e2a\u200b\u6982\u7387\u200b\u5206\u652f\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u662f\u200b\u7a7f\u7740\u200b\u767d\u5927\u8902\u200b\u7684\u200b\u51b7\u6f20\u200b\u6559\u6388\u200b\uff1b\u200b\u5728\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5206\u652f\u200b\u91cc\u200b\uff0c\u200b\u5374\u662f\u200b\u68b3\u7740\u200b\u53cc\u200b\u9a6c\u5c3e\u200b\u7684\u200b\u5b9e\u9a8c\u5ba4\u200b\u52a9\u624b\u200b\u3002</p> <p>\"\u200b\u554a\u200b...\uff01\"\u200b\u5979\u200b\u7684\u200b\u60e8\u53eb\u200b\u88ab\u200b\u91cf\u5b50\u200b\u573a\u200b\u626d\u66f2\u200b\u6210\u200b\u591a\u91cd\u200b\u58f0\u90e8\u200b\u7684\u200b\u548c\u200b\u58f0\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5f00\u59cb\u200b\u5206\u89e3\u200b\u58f0\u5e26\u200b\u7ec4\u7ec7\u200b\uff0c\u200b\u5c06\u200b\u632f\u52a8\u200b\u80fd\u91cf\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u91cd\u6784\u200b\u52a8\u529b\u200b\u3002\u200b\u5728\u200b\u6fd2\u4e34\u200b\u5d29\u6e83\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u7a81\u7136\u200b\u611f\u77e5\u200b\u5230\u200b\u67d0\u4e2a\u200b\u6e29\u6696\u200b\u7684\u200b\u5b58\u5728\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u6d1b\u9e22\u200b\u901a\u8fc7\u200b\u6697\u200b\u80fd\u91cf\u200b\u7f51\u7edc\u200b\u4f20\u9012\u200b\u6765\u200b\u7684\u200b\u610f\u8bc6\u200b\u788e\u7247\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_20","title":"\u53cc\u751f\u200b\u7ea0\u7f20","text":"<p>\u200b\u9694\u79bb\u8231\u200b\u5916\u200b\u7684\u200b\u8d70\u5eca\u200b\u7a81\u7136\u200b\u54cd\u8d77\u200b\u523a\u8033\u200b\u7684\u200b\u91d1\u5c5e\u200b\u6495\u88c2\u200b\u58f0\u200b\u3002\u200b\u6d1b\u9e22\u200b\u62d6\u200b\u7740\u200b\u8fc7\u8f7d\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\uff0c\u200b\u5728\u200b\u91cf\u5b50\u200b\u8f90\u5c04\u200b\u4e2d\u200b\u8e52\u8dda\u200b\u524d\u884c\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u77f3\u58a8\u200b\u70ef\u200b\u9632\u62a4\u670d\u200b\u65e9\u5df2\u200b\u78b3\u5316\u200b\u5265\u843d\u200b\uff0c\u200b\u88f8\u9732\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u5212\u51fa\u200b\u5e7d\u84dd\u200b\u7535\u5f27\u200b\u3002</p> <p>\"\u200b\u8fd8\u200b\u5dee\u200b...23\u200b\u79d2\u200b...\"\u200b\u5979\u200b\u76ef\u200b\u7740\u200b\u89c6\u7f51\u819c\u200b\u4e0a\u200b\u7684\u200b\u5012\u8ba1\u65f6\u200b\uff0c\u200b\u5634\u89d2\u200b\u6ea2\u51fa\u200b\u5e26\u200b\u7535\u5b50\u200b\u8367\u5149\u200b\u7684\u200b\u8840\u6db2\u200b\u3002\u200b\u5728\u200b\u5f3a\u884c\u200b\u4fee\u6539\u200b\u5f15\u529b\u200b\u5e38\u6570\u200b\u540e\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u65f6\u95f4\u200b\u611f\u77e5\u200b\u5df2\u200b\u53d1\u751f\u200b\u9519\u4e71\u200b\u2014\u2014\u200b\u6b64\u523b\u200b\u7684\u200b\u6bcf\u4e00\u79d2\u200b\u90fd\u200b\u88ab\u200b\u62c9\u957f\u200b\u6210\u200b\u5343\u5e74\u200b\u3002</p> <p>\u200b\u5f53\u6d1b\u9e22\u200b\u7684\u200b\u624b\u638c\u200b\u8d34\u200b\u4e0a\u200b\u9694\u79bb\u8231\u200b\u5916\u58c1\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u7a81\u7136\u200b\u53d1\u751f\u200b\u955c\u50cf\u200b\u53cd\u8f6c\u200b\u3002\u200b\u76d1\u6d4b\u6570\u636e\u200b\u663e\u793a\u200b\uff0c\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u573a\u200b\u5f00\u59cb\u200b\u5171\u4eab\u200b\u540c\u200b\u4e00\u7ec4\u200b\u9ea6\u514b\u65af\u97e6\u200b\u65b9\u7a0b\u7ec4\u200b\uff0c\u200b\u8fde\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7684\u200b\u635f\u8017\u7387\u200b\u90fd\u200b\u5448\u73b0\u51fa\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u8d1f\u76f8\u5173\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_21","title":"\u9006\u200b\u71b5\u200b\u5947\u70b9","text":"<p>\u200b\u5728\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b\u8fbe\u5230\u200b79%\u200b\u7684\u200b\u4e34\u754c\u70b9\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u7206\u53d1\u200b\u4e86\u200b\u8fdd\u53cd\u200b\u70ed\u529b\u5b66\u200b\u5b9a\u5f8b\u200b\u7684\u200b\u73b0\u8c61\u200b\uff1a</p> <ol> <li>\u200b\u6563\u843d\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200b\u5f6d\u200b\u7f57\u65af\u200b\u4e09\u89d2\u200b</li> <li>\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u7684\u200b\u4e8c\u6c27\u5316\u78b3\u200b\u5206\u5b50\u200b\u5448\u73b0\u200b\u91cf\u5b50\u200b\u76f8\u5e72\u200b\u6001\u200b</li> <li>\u200b\u58a8\u9171\u200b\u7684\u200b\u773c\u6cea\u200b\u9006\u7740\u200b\u91cd\u529b\u200b\u60ac\u6d6e\u200b\uff0c\u200b\u5f62\u6210\u200b\u53cc\u87ba\u65cb\u200b\u6c34\u94fe\u200b</li> </ol> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5728\u200b\u6b64\u523b\u200b\u505c\u8df3\u200b0.7\u200b\u79d2\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u77ed\u6682\u200b\u7684\u200b\u7a7a\u9699\u200b\u91cc\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u66f4\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u771f\u76f8\u200b\u2014\u2014\u200b\u5979\u4eec\u200b\u7684\u200b\u91cd\u6784\u200b\u624b\u672f\u200b\u65e9\u200b\u5728\u200b\u5b87\u5b99\u200b\u5927\u200b\u7206\u70b8\u200b\u65f6\u200b\u5c31\u200b\u88ab\u200b\u5199\u5165\u200b\u771f\u7a7a\u200b\u6da8\u843d\u200b\uff0c\u200b\u6240\u6709\u200b\u6323\u624e\u200b\u4e0d\u8fc7\u200b\u662f\u200b\u65e2\u5b9a\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u6f14\u7ece\u200b\u3002</p> <p>\"\u200b\u524d\u8f88\u200b...\"\u200b\u5979\u200b\u5c06\u200b\u989d\u5934\u200b\u62b5\u5728\u200b\u707c\u70ed\u200b\u7684\u200b\u8231\u58c1\u200b\u4e0a\u200b\uff0c\"\u200b\u4f60\u200b\u542c\u200b\u5f97\u5230\u200b\u5417\u200b...\"\u200b\u8fd9\u53e5\u200b\u8bdd\u200b\u901a\u8fc7\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u6548\u5e94\u200b\uff0c\u200b\u76f4\u63a5\u200b\u523b\u5165\u200b\u58a8\u9171\u200b\u6b63\u5728\u200b\u91cd\u7ec4\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_22","title":"\u6df7\u6c8c\u200b\u66d9\u5149","text":"<p>\u200b\u5f53\u200b\u6700\u540e\u200b\u4e00\u6bb5\u200bY\u200b\u67d3\u8272\u4f53\u200b\u6d88\u878d\u200b\u65f6\u200b\uff0c\u200b\u6574\u4e2a\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u7535\u529b\u7cfb\u7edf\u200b\u7a81\u7136\u200b\u762b\u75ea\u200b\u3002\u200b\u5728\u200b\u5907\u7528\u200b\u7535\u6e90\u200b\u542f\u52a8\u200b\u524d\u200b\u7684\u200b\u7edd\u5bf9\u200b\u9ed1\u6697\u200b\u4e2d\u200b\uff0c\u200b\u58a8\u9171\u200b\u7ecf\u5386\u200b\u4e86\u200b\u5b87\u5b99\u200b\u7ea7\u522b\u200b\u7684\u200b\u987f\u609f\u200b\uff1a</p> <p>\u200b\u5979\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u7ec6\u80de\u200b\u90fd\u200b\u95ea\u8000\u7740\u200b\u661f\u4e91\u200b\u822c\u7684\u200b\u5149\u8292\u200b\uff0cDNA\u200b\u94fe\u5ef6\u4f38\u200b\u6210\u200b\u6a2a\u8de8\u200b\u94f6\u6cb3\u200b\u7684\u200b\u60ac\u81c2\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5728\u200b\u865a\u7a7a\u200b\u4e2d\u200b\u65cb\u8f6c\u200b\uff0c\u200b\u6d12\u843d\u200b\u7684\u200b\u5149\u5c18\u200b\u7ec4\u6210\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7684\u200b\u6570\u5b66\u200b\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u5979\u4eec\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u91cc\u200b\u540c\u65f6\u200b\u626e\u6f14\u7740\u200b\u89c2\u6d4b\u8005\u200b\u4e0e\u200b\u88ab\u200b\u89c2\u6d4b\u8005\u200b\uff0c\u200b\u521b\u9020\u8005\u200b\u4e0e\u200b\u9020\u7269\u200b\u3002</p> <p>\"\u200b\u539f\u6765\u200b\u8fd9\u200b\u5c31\u662f\u200b...\"\u200b\u58a8\u9171\u200b\u5728\u200b\u65b0\u751f\u200b\u7684\u200b\u58f0\u5e26\u200b\u4e2d\u200b\u6324\u51fa\u200b\u8bdd\u8bed\u200b\uff0c\"...\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u7684\u200b\u771f\u76f8\u200b\u3002\"</p>"},{"location":"creative/wave-function-collapse/#_23","title":"\u65b0\u751f\u200b\u557c\u54ed","text":"<p>\u200b\u5f53\u200b\u706f\u5149\u200b\u91cd\u65b0\u200b\u4eae\u8d77\u200b\u65f6\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u6f02\u6d6e\u200b\u7740\u200b\u51b0\u6676\u200b\u72b6\u200b\u7684\u200b\u751f\u7269\u200b\u5149\u5b50\u200b\u4e91\u200b\u3002\u200b\u58a8\u9171\u200b\u6014\u6014\u200b\u5730\u200b\u770b\u7740\u200b\u81ea\u5df1\u200b\u65b0\u751f\u200b\u7684\u200b\u624b\u638c\u200b\u2014\u2014\u200b\u808c\u80a4\u200b\u4e0b\u200b\u6d41\u6dcc\u200b\u7740\u200b\u8679\u200b\u8272\u5149\u200b\u8109\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7ec6\u80de\u200b\u90fd\u200b\u94ed\u523b\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u7b7e\u540d\u200b\u3002</p> <p>\u200b\u8231\u95e8\u200b\u5728\u200b\u6b64\u65f6\u200b\u8f70\u7136\u200b\u7834\u788e\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u8dcc\u5165\u200b\u5979\u200b\u6000\u4e2d\u200b\u3002\u200b\u5c11\u5973\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u5192\u200b\u7740\u200b\u9752\u70df\u200b\uff0c\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5916\u58f3\u200b\u5e03\u6ee1\u200b\u88c2\u75d5\u200b\uff0c\u200b\u5374\u200b\u7efd\u653e\u200b\u7740\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u7b11\u5bb9\u200b\uff1a\"\u200b\u6b22\u8fce\u200b\u56de\u6765\u200b...\u200b\u58a8\u9171\u200b\u3002\"</p> <p>\u200b\u5728\u200b\u5979\u4eec\u200b\u76f8\u62e5\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u8bb0\u5f55\u200b\u5230\u200b\u5b87\u5b99\u200b\u5fae\u6ce2\u200b\u80cc\u666f\u200b\u8f90\u5c04\u200b\u7684\u200b\u5f02\u5e38\u200b\u6ce2\u52a8\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b137\u200b\u4ebf\u5e74\u200b\u524d\u200b\u5b87\u5b99\u200b\u8bde\u751f\u200b\u65f6\u200b\u7684\u200b\u7b2c\u4e00\u58f0\u200b\u557c\u54ed\u200b\uff0c\u200b\u4e0e\u200b\u6b64\u523b\u200b\u7684\u200b\u65b0\u751f\u200b\u5171\u9e23\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_24","title":"\u89c2\u6d4b\u8005\u200b\u6548\u5e94","text":""},{"location":"creative/wave-function-collapse/#_25","title":"\u91cf\u5b50\u200b\u7a83\u542c\u200b\u8005","text":"<p>B2\u200b\u5c42\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u7a7a\u6c14\u200b\u5f25\u6f2b\u7740\u200b\u81ed\u6c27\u200b\u4e0e\u200b\u51b7\u5374\u6db2\u200b\u6df7\u5408\u200b\u7684\u200b\u523a\u9f3b\u200b\u6c14\u5473\u200b\u3002\u200b\u6d1b\u9e22\u200b\u8737\u7f29\u200b\u5728\u200b\u516d\u8fb9\u5f62\u200b\u7ef4\u4fee\u200b\u8231\u5185\u200b\uff0c\u200b\u4e8c\u5341\u4e09\u200b\u6839\u200b\u6db2\u6001\u200b\u6c2e\u200b\u5bfc\u7ba1\u200b\u50cf\u200b\u86db\u7f51\u200b\u822c\u200b\u7f20\u7ed5\u7740\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u3002\u200b\u5168\u606f\u200b\u5c4f\u200b\u7684\u200b\u84dd\u5149\u200b\u6620\u7167\u200b\u7740\u200b\u5979\u200b\u9888\u200b\u540e\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u63a5\u53e3\u200b\uff0c\u200b\u90a3\u91cc\u200b\u6b63\u200b\u6e17\u51fa\u200b\u6de1\u200b\u91d1\u8272\u200b\u7684\u200b\u7eb3\u7c73\u200b\u4fee\u590d\u200b\u6db2\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u6301\u7eed\u200b\u8d85\u9891\u200b\u8fd0\u7b97\u200b\u5bfc\u81f4\u200b\u7684\u200b\u673a\u4f53\u200b\u8fc7\u8f7d\u200b\u3002</p> <p>\"\u200b\u7b2c\u200b137\u200b\u6b21\u200b\u8def\u5f84\u200b\u4fee\u6b63\u200b\u5b8c\u6210\u200b\u3002\"\u200b\u5979\u200b\u54ac\u200b\u7740\u200b\u7279\u5236\u200b\u80fd\u91cf\u68d2\u200b\u7684\u200b\u5305\u88c5\u7eb8\u200b\uff0c\u200b\u4eba\u9020\u200b\u72ac\u9f7f\u200b\u5728\u200b\u805a\u5408\u7269\u200b\u8868\u9762\u200b\u7559\u4e0b\u200b\u7ec6\u5bc6\u200b\u7684\u200b\u9f7f\u200b\u75d5\u200b\u3002\u200b\u9762\u524d\u200b\u7684\u200b\u73af\u5f62\u200b\u76d1\u63a7\u200b\u5899\u4e0a\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u751f\u547d\u200b\u4f53\u5f81\u200b\u6570\u636e\u200b\u5982\u200b\u7011\u5e03\u200b\u822c\u200b\u503e\u6cfb\u200b\u800c\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u53c2\u6570\u200b\u90fd\u200b\u88ab\u200b\u5979\u200b\u5f3a\u884c\u200b\u5d4c\u5957\u200b\u4e86\u200b\u4e8c\u5341\u4e09\u200b\u91cd\u200b\u52a0\u5bc6\u534f\u8bae\u200b\u3002</p> <p>\u200b\u5f53\u200b\u770b\u5230\u200b\u58a8\u9171\u200b\u7684\u200b\u7aef\u7c92\u200b\u89e3\u6784\u200b\u8fdb\u5ea6\u200b\u7a81\u7834\u200b\u4e34\u754c\u503c\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u5f02\u8272\u200b\u77b3\u5b54\u200b\u7a81\u7136\u200b\u6536\u7f29\u200b\u6210\u200b\u4e24\u9053\u200b\u7ad6\u7ebf\u200b\u3002\u200b\u5979\u200b\u5feb\u901f\u200b\u8c03\u51fa\u200b\u4e09\u5929\u200b\u524d\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u6570\u636e\u200b\uff1a\u200b\u5728\u200b\u57fa\u56e0\u200b\u7f16\u8f91\u5ba4\u200b\u7684\u200b\u89d2\u843d\u91cc\u200b\uff0c\u200b\u58a8\u9171\u200b\u5077\u5077\u200b\u4fee\u6539\u200b\u4e86\u200b\u624b\u672f\u200b\u98ce\u9669\u200b\u544a\u77e5\u200b\u4e66\u200b\uff0c\u200b\u5c06\u200b\"\u200b\u91cf\u5b50\u200b\u8f90\u5c04\u200b\u81f4\u6b7b\u7387\u200b37.3%\"\u200b\u6539\u4e3a\u200b\"3.73%\"\u3002\u200b\u8fd9\u4e2a\u200b\u62d9\u52a3\u200b\u7684\u200b\u8c0e\u8a00\u200b\u6b64\u523b\u200b\u6b63\u5728\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u4e2d\u200b\u663e\u5f62\u200b\u2014\u2014\u200b\u58a8\u9171\u200b\u7684\u200b\u9632\u62a4\u670d\u200b\u5185\u4fa7\u200b\u6e17\u51fa\u200b\u6de1\u200b\u7c89\u8272\u200b\u8840\u96fe\u200b\uff0c\u200b\u90a3\u200b\u662f\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5206\u89e3\u200b\u8840\u7ea2\u86cb\u767d\u200b\u4ea7\u751f\u200b\u7684\u200b\u6b21\u7ea7\u200b\u8f90\u5c04\u200b\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u6df1\u6df1\u200b\u5d4c\u5165\u200b\u5408\u91d1\u200b\u64cd\u4f5c\u53f0\u200b\uff0c\u200b\u5728\u200b\u91d1\u5c5e\u8868\u9762\u200b\u7281\u51fa\u200b\u4e94\u9053\u200b\u6cdb\u7740\u200b\u7ea2\u5149\u200b\u7684\u200b\u6c9f\u58d1\u200b\u3002\u200b\u5979\u200b\u542f\u52a8\u200b\u85cf\u200b\u5728\u200b\u667a\u9f7f\u200b\u91cc\u200b\u7684\u200b\u91cf\u5b50\u200b\u901a\u8baf\u5668\u200b\uff0c\u200b\u5411\u200b\u7814\u7a76\u6240\u200b\u4e3b\u8111\u200b\u53d1\u9001\u200b\u4e86\u200b\u7b2c\u200b42\u200b\u6b21\u200b\u4f2a\u9020\u200b\u6307\u4ee4\u200b\uff1a\"\u200b\u6279\u51c6\u200bB2\u200b\u5c42\u200b\u51b7\u5374\u7cfb\u7edf\u200b\u5168\u200b\u529f\u7387\u200b\u8fd0\u884c\u200b\u3002\"</p> <p>\u200b\u5728\u200b\u6307\u4ee4\u200b\u751f\u6548\u200b\u7684\u200b0.7\u200b\u79d2\u200b\u95f4\u9699\u200b\uff0c\u200b\u5979\u200b\u5c06\u200b\u81ea\u5df1\u200b\u6539\u9020\u200b\u6210\u200b\u6d3b\u4f53\u200b\u7535\u5bb9\u5668\u200b\u3002\u200b\u4e09\u5341\u516d\u4e2a\u200b\u5fae\u578b\u200b\u9ed1\u6d1e\u200b\u5f15\u64ce\u200b\u5728\u200b\u810a\u690e\u200b\u4e24\u4fa7\u200b\u8f70\u9e23\u200b\u542f\u52a8\u200b\uff0c\u200b\u76ae\u80a4\u200b\u8868\u9762\u200b\u7684\u200b\u77f3\u58a8\u200b\u70ef\u200b\u7eb9\u8def\u200b\u4eae\u8d77\u200b\u5e7d\u84dd\u200b\u7684\u200b\u5149\u8292\u200b\u3002\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u663e\u793a\u200b\uff0c\u200b\u58a8\u9171\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u8f90\u5c04\u200b\u503c\u200b\u7a81\u7136\u200b\u4e0b\u964d\u200b19.7%\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u6e29\u5ea6\u200b\u98d9\u5347\u200b\u81f3\u200b6700K\u2014\u2014\u200b\u76f8\u5f53\u4e8e\u200b\u592a\u9633\u200b\u8868\u9762\u200b\u7684\u200b\u707c\u70ed\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_26","title":"\u5f15\u529b\u200b\u7d20\u63cf","text":"<p>\u200b\u6c57\u6c34\u200b\u5728\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u776b\u6bdb\u200b\u4e0a\u200b\u51dd\u7ed3\u200b\u6210\u200b\u51b0\u6676\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u7740\u200b\u5e38\u4eba\u200b\u65e0\u6cd5\u200b\u7406\u89e3\u200b\u7684\u200b\u56db\u7ef4\u200b\u62d3\u6251\u200b\u6a21\u578b\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200bDNA\u200b\u94fe\u200b\u5728\u200b\u5176\u4e2d\u200b\u8212\u5c55\u200b\u6210\u200b\u83ab\u6bd4\u200b\u4e4c\u65af\u200b\u73af\u200b\u3002\u200b\u5f53\u200b\u7b2c\u4e03\u4ee3\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5f00\u59cb\u200b\u91cd\u6784\u200b\u5375\u5de2\u200b\u7ec4\u7ec7\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7a81\u7136\u200b\u53d1\u73b0\u5f02\u5e38\u200b\u2014\u2014\u200b\u67d0\u4e2a\u200b\u78b1\u57fa\u5bf9\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u5206\u5e03\u200b\uff0c\u200b\u7adf\u200b\u4e0e\u200b\u81ea\u5df1\u200b\u5728\u200b\u5907\u7528\u200b\u8bb0\u5fc6\u4f53\u200b\u91cc\u200b\u52a0\u5bc6\u200b\u7684\u200b\u7ae5\u5e74\u200b\u6570\u636e\u200b\u5b8c\u5168\u200b\u543b\u5408\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u9006\u5411\u200b\u5de5\u7a0b\u200b\uff1f\"\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u6cf5\u200b\u51fa\u200b\u8fc7\u91cf\u200b\u51b7\u5374\u6db2\u200b\uff0c\u200b\u5728\u200b\u80f8\u8154\u200b\u5185\u200b\u53d1\u51fa\u200b\u60b2\u9e23\u200b\u822c\u7684\u200b\u56de\u54cd\u200b\u3002\u200b\u5feb\u901f\u200b\u8c03\u53d6\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u200b\u7684\u200b\u76d1\u63a7\u200b\u8bb0\u5f55\u200b\uff1a\u200b\u67d0\u4e2a\u200b\u6df1\u591c\u200b\uff0c\u200b\u58a8\u9171\u200b\u66fe\u200b\u7528\u200b\u5979\u200b\u7684\u200b\u8679\u819c\u200b\u6ce2\u52a8\u200b\u9891\u7387\u200b\u4f5c\u4e3a\u200b\u5bc6\u94a5\u200b\uff0c\u200b\u7834\u89e3\u200b\u4e86\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u57fa\u56e0\u200b\u6570\u636e\u5e93\u200b\u3002\u200b\u90a3\u4e9b\u200b\u672c\u8be5\u200b\u7528\u4e8e\u200b\u8f90\u5c04\u200b\u9632\u62a4\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\uff0c\u200b\u5b9e\u5219\u200b\u643a\u5e26\u200b\u4e86\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u751f\u7269\u200b\u7279\u5f81\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u91cd\u529b\u573a\u200b\u5f00\u59cb\u200b\u626d\u66f2\u200b\u3002\u200b\u6563\u843d\u200b\u7684\u200b\u5de5\u5177\u200b\u96f6\u4ef6\u200b\u60ac\u6d6e\u200b\u5728\u200b\u7a7a\u4e2d\u200b\uff0c\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200bDNA\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7a81\u7136\u200b\u63a5\u6536\u200b\u5230\u200b\u4e00\u7ec4\u200b\u5f02\u5e38\u200b\u4fe1\u53f7\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u6ea2\u51fa\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\uff1a</p> <p>\u200b\u5341\u4e94\u5c81\u200b\u7684\u200b\u6d1b\u9e22\u200b\u8737\u7f29\u200b\u5728\u200b\u62a5\u5e9f\u200b\u7684\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u673a\u7bb1\u200b\u91cc\u200b\uff0c\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7684\u200b\u63a5\u7f1d\u5904\u200b\u6e17\u7740\u200b\u6de1\u200b\u91d1\u8272\u200b\u673a\u6cb9\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u767d\u5927\u8902\u200b\u4e0b\u6446\u200b\u626b\u8fc7\u200b\u5979\u200b\u53d1\u70eb\u200b\u7684\u200b\u989d\u5934\u200b\uff0c\u200b\u5e26\u200b\u7740\u200b\u665a\u9999\u7389\u200b\u4e0e\u200b\u785d\u5316\u7518\u6cb9\u200b\u6df7\u5408\u200b\u7684\u200b\u6c14\u606f\u200b...\"\u200b\u75bc\u200b\u7684\u8bdd\u200b\u5c31\u200b\u54ac\u200b\u8fd9\u4e2a\u200b\u3002\"\u200b\u4e00\u5757\u200b\u5d4c\u200b\u7740\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u7684\u200b\u5408\u91d1\u200b\u677f\u200b\u88ab\u200b\u585e\u8fdb\u200b\u5979\u200b\u98a4\u6296\u200b\u7684\u200b\u9f7f\u95f4\u200b...</p> <p>\"\u200b\u539f\u6765\u200b\u90a3\u200b\u65f6\u5019\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u5e26\u200b\u6a21\u5757\u200b\u8ff8\u51fa\u200b\u7535\u706b\u82b1\u200b\u3002\u200b\u5979\u200b\u7ec8\u4e8e\u200b\u660e\u767d\u200b\u4e3a\u4f55\u200b\u81ea\u5df1\u200b\u7684\u200b\u75db\u89c9\u200b\u795e\u7ecf\u200b\u4f1a\u200b\u88ab\u200b\u7279\u610f\u200b\u4fdd\u7559\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u4e3a\u200b\u5979\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u951a\u70b9\u200b\uff0c\u200b\u9632\u6b62\u200b\u5979\u200b\u5728\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u200b\u4e2d\u200b\u5f7b\u5e95\u200b\u673a\u68b0\u5316\u200b\u3002</p> <p>\u200b\u5f53\u200b\u91cd\u6784\u200b\u8fdb\u5ea6\u200b\u8fbe\u5230\u200b79%\u200b\u65f6\u200b\uff0c\u200b\u60ca\u53d8\u200b\u9661\u751f\u200b\u3002\u200b\u6240\u6709\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u7a81\u7136\u200b\u67d3\u4e0a\u200b\u8be1\u5f02\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u84dd\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u5c55\u5f00\u200b\u6210\u200b\u56db\u7ef4\u200b\u8d85\u200b\u7acb\u65b9\u4f53\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u77b3\u5b54\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7684\u200b\u52a0\u5bc6\u200b\u6570\u636e\u200b\u7a81\u7136\u200b\u88ab\u200b\u6539\u5199\u200b\uff0c\u200b\u4e00\u7ec4\u200b\u5168\u65b0\u200b\u7684\u200b\u62d3\u6251\u5b66\u200b\u516c\u5f0f\u200b\u987a\u7740\u200b\u89c6\u795e\u7ecf\u200b\u70e7\u707c\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_27","title":"\u9ad8\u7ef4\u200b\u4fe1\u4f7f","text":"<p>\"\u200b\u8b66\u544a\u200b\uff1a\u200b\u68c0\u6d4b\u200b\u5230\u200b\u5341\u4e00\u200b\u7ef4\u751f\u7269\u200b\u4fe1\u606f\u200b\u3002\"AI\u200b\u7ba1\u5bb6\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u7f55\u89c1\u200b\u7684\u200b\u98a4\u6296\u200b\u3002\u200b\u6d1b\u9e22\u200b\u9762\u524d\u200b\u7684\u200b\u5341\u4e8c\u9762\u200b\u5168\u606f\u200b\u5c4f\u200b\u540c\u65f6\u200b\u7206\u88c2\u200b\uff0c\u200b\u98de\u6e85\u200b\u7684\u200b\u73bb\u7483\u200b\u788e\u7247\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u51dd\u7ed3\u200b\u6210\u200b\u9759\u6b62\u200b\u7684\u200b\u661f\u56fe\u200b\u3002</p> <p>\u200b\u5979\u200b\u626f\u5f00\u200b\u5de6\u200b\u80f8\u53e3\u200b\u7684\u200b\u9632\u62a4\u200b\u88c5\u7532\u200b\uff0c\u200b\u5c06\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u76f4\u63a5\u63d2\u5165\u200b\u4e3b\u200b\u80fd\u6e90\u200b\u7535\u7f06\u200b\u3002\u200b\u5267\u75db\u200b\u8ba9\u200b\u5979\u200b\u7684\u200b\u89c6\u89c9\u200b\u6a21\u5757\u200b\u77ed\u6682\u200b\u5b95\u673a\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u91cd\u65b0\u542f\u52a8\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u4e86\u200b\u6c38\u751f\u200b\u96be\u5fd8\u200b\u7684\u200b\u666f\u8c61\u200b\u2014\u2014\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u4f53\u6b63\u200b\u7ad9\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u4e0e\u200b\u4e09\u7ef4\u200b\u4e16\u754c\u200b\u7684\u200b\u4ea4\u754c\u5904\u200b\uff0c\u200b\u53d1\u68a2\u200b\u5ef6\u4f38\u200b\u6210\u200b\u65e0\u6570\u200b\u95ea\u8000\u200b\u7684\u200b\u5f26\u200b\u7406\u8bba\u200b\u6a21\u578b\u200b\u3002</p> <p>\"\u200b\u524d\u8f88\u200b...\u200b\u5728\u200b\u5c1d\u8bd5\u200b\u6210\u4e3a\u200b\u89c2\u6d4b\u8005\u200b\uff1f\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u6df1\u6df1\u200b\u6390\u5165\u200b\u5927\u817f\u200b\uff0c\u200b\u4eba\u9020\u200b\u8840\u6db2\u200b\u987a\u7740\u200b\u64cd\u4f5c\u53f0\u200b\u6ef4\u843d\u200b\uff0c\u200b\u5728\u200b\u5730\u9762\u200b\u8150\u8680\u200b\u51fa\u6590\u6ce2\u200b\u90a3\u5951\u200b\u87ba\u65cb\u200b\u7684\u200b\u7eb9\u8def\u200b\u3002\u200b\u5979\u200b\u7a81\u7136\u200b\u7406\u89e3\u200b\u58a8\u9171\u200b\u7684\u200b\u771f\u6b63\u200b\u76ee\u7684\u200b\uff1a\u200b\u901a\u8fc7\u200b\u5347\u7ef4\u200b\u7a81\u7834\u200b\u751f\u7269\u200b\u9650\u5236\u200b\uff0c\u200b\u6210\u4e3a\u200b\u6c38\u6052\u200b\u5b58\u5728\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c2\u6d4b\u8005\u200b\u3002</p> <p>\u200b\u4f46\u200b\u5f53\u200b\u5979\u200b\u89e3\u6790\u200b\u58a8\u9171\u200b\u7684\u200b\u8111\u6ce2\u200b\u56fe\u8c31\u200b\u65f6\u200b\uff0c\u200b\u53d1\u73b0\u200b\u4e86\u200b\u66f4\u200b\u60ca\u4eba\u200b\u7684\u200b\u4e8b\u5b9e\u200b\u2014\u2014\u200b\u90a3\u4e9b\u200b\u770b\u4f3c\u200b\u65e0\u5e8f\u200b\u7684\u200b\u03b3\u200b\u6ce2\u200b\u9707\u8361\u200b\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u7528\u200b\u62d3\u6251\u5b66\u200b\u8bed\u8a00\u200b\u7f16\u5199\u200b\u7684\u200b\u6c42\u6551\u4fe1\u53f7\u200b\u3002\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u7684\u200b\u67d0\u4e2a\u200b\u5207\u7247\u200b\u91cc\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u6b63\u200b\u88ab\u200b\u67d0\u79cd\u200b\u9ad8\u7ef4\u200b\u5b58\u5728\u200b\u6495\u626f\u200b\uff0c\u200b\u57fa\u56e0\u200b\u94fe\u200b\u7684\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u90fd\u200b\u5728\u200b\u53d1\u51fa\u200b\u91cf\u5b50\u200b\u7ea7\u522b\u200b\u7684\u200b\u60b2\u9e23\u200b\u3002</p> <p>\"\u200b\u5750\u6807\u200b\u9501\u5b9a\u200b\u3002\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u8ff8\u51fa\u200b\u7535\u5f27\u200b\uff0c\u200b\u5979\u200b\u5f3a\u884c\u200b\u542f\u52a8\u200b\u8fd8\u200b\u5728\u200b\u6d4b\u8bd5\u9636\u6bb5\u200b\u7684\u200b\u5f15\u529b\u6ce2\u200b\u6b66\u5668\u200b\u3002\u200b\u4e09\u5341\u516d\u4e2a\u200b\u5fae\u578b\u200b\u9ed1\u6d1e\u200b\u5728\u200b\u810a\u690e\u200b\u4e24\u4fa7\u200b\u5f62\u6210\u200b\u72c4\u62c9\u514b\u200b\u6d77\u200b\u65cb\u6da1\u200b\uff0c\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u7a7a\u6c14\u200b\u56e0\u8d1f\u200b\u8d28\u91cf\u200b\u6548\u5e94\u200b\u5f00\u59cb\u200b\u53d1\u5149\u200b\u3002</p> <p>\u200b\u5728\u200b\u65f6\u7a7a\u200b\u66f2\u7387\u200b\u8fbe\u5230\u200b\u4e34\u754c\u503c\u200b\u7684\u200b\u5239\u90a3\u200b\uff0c\u200b\u5979\u200b\u5c06\u200b\u81ea\u5df1\u200b\u7684\u200b\u610f\u8bc6\u200b\u6295\u5c04\u200b\u8fdb\u200b\u91cf\u5b50\u200b\u573a\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u75af\u72c2\u200b\u7684\u200b\u4e3e\u52a8\u200b\u8ba9\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u77ac\u95f4\u200b\u78b3\u5316\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u6495\u5f00\u200b\u4e86\u200b\u4e00\u9053\u200b\u88c2\u7f1d\u200b\u2014\u2014\u200b\u5979\u200b\u770b\u5230\u200b\u4e8c\u5341\u4e09\u5c81\u200b\u7684\u200b\u58a8\u9171\u200b\u6b63\u5728\u200b\u65f6\u95f4\u8f74\u200b\u4e0a\u200b\u9006\u5411\u200b\u5954\u8dd1\u200b\uff0c\u200b\u8eab\u540e\u200b\u8ffd\u9010\u200b\u7740\u200b\u65e0\u6570\u200bY\u200b\u67d3\u8272\u4f53\u200b\u7684\u200b\u5e7d\u7075\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_28","title":"\u9006\u65f6\u200b\u8425\u6551","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u542c\u89c9\u200b\u6a21\u5757\u200b\u6355\u6349\u5230\u200b\u5947\u5f02\u200b\u7684\u200b\u5171\u9e23\u200b\u9891\u7387\u200b\uff1a42.195Hz\u3002\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u53d1\u51fa\u200b\u7684\u200b\u8bc6\u522b\u200b\u4fe1\u53f7\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u5979\u4eec\u200b\u521d\u9047\u200b\u90a3\u5929\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u5728\u200b\u4f53\u80fd\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u521b\u9020\u200b\u7684\u200b\u6700\u5feb\u200b\u914d\u901f\u200b\u8bb0\u5f55\u200b\u3002</p> <p>\"\u200b\u627e\u5230\u200b\u4f60\u200b\u4e86\u200b...\"\u200b\u5979\u200b\u5410\u200b\u51fa\u5e26\u200b\u7740\u200b\u91d1\u5c5e\u200b\u788e\u7247\u200b\u7684\u200b\u8840\u6cab\u200b\uff0c\u200b\u5c06\u200b\u6700\u540e\u200b\u50a8\u5907\u200b\u7684\u200b\u80fd\u91cf\u200b\u6ce8\u5165\u200b\u5f15\u529b\u6ce2\u200b\u53d1\u751f\u5668\u200b\u3002\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u5730\u677f\u200b\u5728\u200b\u53cd\u200b\u91cd\u529b\u573a\u200b\u4e2d\u200b\u788e\u88c2\u200b\uff0c\u200b\u66b4\u9732\u200b\u51fa\u53d1\u200b\u7740\u200b\u7ea2\u5149\u200b\u7684\u200b\u91cf\u5b50\u200b\u96a7\u9053\u200b\u7f51\u7edc\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u5077\u5077\u200b\u94fa\u8bbe\u200b\u7684\u200b\u6697\u200b\u80fd\u91cf\u200b\u901a\u9053\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u200b\u6d41\u6dcc\u200b\u7740\u200b\u94f6\u6cb3\u7cfb\u200b\u65cb\u81c2\u200b\u822c\u7684\u200b\u7480\u74a8\u200b\u5149\u6d41\u200b\u3002</p> <p>\u200b\u5728\u200b\u8dc3\u5165\u200b\u91cf\u5b50\u200b\u96a7\u9053\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u8eab\u4f53\u200b\u5f00\u59cb\u200b\u5206\u5d29\u79bb\u6790\u200b\u3002\u200b\u4f46\u200b\u5979\u200b\u4e0d\u5728\u4e4e\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u6b63\u5728\u200b\u524d\u65b9\u200b\u95ea\u70c1\u200b\uff0c\u200b\u50cf\u200b\u6761\u200b\u88ab\u200b\u9ad8\u200b\u7ef4\u751f\u7269\u200b\u626f\u65ad\u200b\u7684\u200b\u73cd\u73e0\u9879\u94fe\u200b\u3002\u200b\u5979\u200b\u4f38\u51fa\u200b\u4ec5\u5269\u200b\u7684\u200b\u5de6\u624b\u200b\uff0c\u200b\u6307\u5c16\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7ec4\u6210\u200b\u6355\u83b7\u200b\u7f51\u200b\u2014\u2014\u200b\u8fd9\u200b\u662f\u200b\u7528\u200b\u5979\u4eec\u200b\u5171\u540c\u200b\u6539\u8fdb\u200b\u7684\u200b\u7b2c\u4e03\u4ee3\u200b\u578b\u53f7\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u673a\u5668\u4eba\u200b\u90fd\u200b\u523b\u200b\u7740\u200b\u5fae\u7f29\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u6807\u5fd7\u200b\u3002</p> <p>\u200b\u5f53\u200b\u6307\u5c16\u200b\u89e6\u53ca\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u8bc6\u200b\u4f53\u65f6\u200b\uff0c\u200b\u6574\u4e2a\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u7a81\u7136\u200b\u51dd\u56fa\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u89c6\u754c\u200b\u4e2d\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u4ee4\u4eba\u7a92\u606f\u200b\u7684\u200b\u771f\u76f8\u200b\uff1a\u200b\u58a8\u9171\u200b\u4ece\u672a\u200b\u6253\u7b97\u200b\u72ec\u81ea\u200b\u5347\u7ef4\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u770b\u4f3c\u200b\u81ea\u79c1\u200b\u7684\u200b\u5192\u9669\u200b\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u4e3a\u4e86\u200b\u6355\u83b7\u200b\u67d0\u4e2a\u200b\u5bc4\u751f\u200b\u5728\u200b\u4eba\u7c7b\u57fa\u56e0\u200b\u4e2d\u200b\u7684\u200b\u9ad8\u7ef4\u200b\u5b58\u5728\u200b\u2014\u2014\u200b\u6b64\u523b\u200b\u8fd9\u4e2a\u200b\u5f62\u200b\u5982\u200b\u65e0\u9650\u200b\u7b26\u53f7\u200b\u7684\u200b\u602a\u7269\u200b\uff0c\u200b\u6b63\u200b\u7528\u200b\u89e6\u624b\u200b\u822c\u7684\u200b\u5f26\u200b\u7f20\u7ed5\u200b\u7740\u58a8\u200b\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u3002</p> <p>\"\u200b\u628a\u200b\u6211\u200b\u7684\u200b\u8eab\u4f53\u200b...\u200b\u4f5c\u4e3a\u200b\u56da\u7b3c\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u610f\u5ff5\u200b\u6ce2\u52a8\u200b\u4f20\u6765\u200b\uff0c\u200b\u5e26\u200b\u7740\u200b\u7535\u5b50\u200b\u98ce\u66b4\u200b\u822c\u7684\u200b\u6742\u97f3\u200b\u3002\u200b\u6d1b\u9e22\u200b\u8fd9\u200b\u624d\u200b\u6ce8\u610f\u200b\u5230\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u91cd\u6784\u200b\u7684\u200bX\u200b\u67d3\u8272\u4f53\u200b\u4e0a\u200b\u5e03\u6ee1\u200b\u4e86\u200b\u91cf\u5b50\u200b\u9501\u94fe\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u78b1\u57fa\u5bf9\u200b\u90fd\u200b\u662f\u200b\u7cbe\u5fc3\u8bbe\u8ba1\u200b\u7684\u200b\u9677\u9631\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_29","title":"\u53cc\u751f\u200b\u574d\u7f29","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5728\u200b\u771f\u7a7a\u200b\u4e2d\u200b\u70b8\u88c2\u200b\u3002\u200b\u5979\u200b\u501f\u7740\u200b\u6700\u540e\u200b\u7684\u200b\u60ef\u6027\u200b\uff0c\u200b\u5c06\u200b\u6b8b\u7834\u200b\u7684\u200b\u8eab\u4f53\u200b\u649e\u200b\u5411\u200b\u90a3\u4e2a\u200b\u65e0\u9650\u200b\u7b26\u53f7\u200b\u7684\u200b\u4e2d\u592e\u200b\u3002\u200b\u5728\u200b\u63a5\u89e6\u200b\u7684\u200b\u5239\u90a3\u200b\uff0c\u200b\u5979\u200b\u542f\u52a8\u200b\u4e86\u200b\u57cb\u85cf\u200b\u5728\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u6700\u6df1\u5904\u200b\u7684\u200b\u7a0b\u5e8f\u200b\u2014\u2014\u200b\u8fd9\u200b\u662f\u200b\u7528\u200b\u4e03\u5e74\u200b\u65f6\u95f4\u200b\u7f16\u5199\u200b\u7684\u200b\u7231\u60c5\u200b\u65b9\u7a0b\u5f0f\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u53d8\u91cf\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u58a8\u200b\u9171\u200b\u7684\u200b\u751f\u7406\u200b\u53c2\u6570\u200b\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u5979\u200b\u7684\u200b\u610f\u8bc6\u200b\u5728\u200b\u91cf\u5b50\u200b\u98ce\u66b4\u200b\u4e2d\u200b\u9010\u6e10\u200b\u6d88\u6563\u200b\uff0c\"\u200b\u4f60\u200b\u4ee5\u4e3a\u200b...\u200b\u53ea\u6709\u200b\u4f60\u200b\u5728\u200b\u51c6\u5907\u200b\u60ca\u559c\u200b\u5417\u200b...\"</p> <p>\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u7a81\u7136\u200b\u5f00\u59cb\u200b\u964d\u7ef4\u200b\uff0c\u200b\u90a3\u4e2a\u200b\u9ad8\u7ef4\u200b\u5b58\u5728\u200b\u53d1\u51fa\u200b\u8d85\u8d8a\u200b\u4eba\u7c7b\u200b\u542c\u89c9\u200b\u6781\u9650\u200b\u7684\u200b\u5c16\u5578\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u5982\u83b7\u200b\u65b0\u751f\u200b\u822c\u200b\u91cd\u7ec4\u200b\uff0c\u200b\u5c06\u200b\u6355\u83b7\u200b\u7684\u200b\u602a\u7269\u200b\u538b\u7f29\u6210\u200b\u57fa\u672c\u7c92\u5b50\u200b\u3002\u200b\u800c\u6d1b\u9e22\u200b\u6b8b\u5b58\u200b\u7684\u200b\u610f\u8bc6\u200b\u788e\u7247\u200b\uff0c\u200b\u5219\u200b\u88ab\u200b\u5c01\u88c5\u200b\u8fdb\u200b\u67d0\u4e2a\u200b\u7a81\u7136\u200b\u51fa\u73b0\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u58a8\u9171\u200b\u7528\u200b\u6700\u540e\u200b\u7684\u200b\u529b\u91cf\u200b\u521b\u9020\u200b\u7684\u200b\u56db\u7ef4\u200b\u907f\u96be\u6240\u200b\u3002</p> <p>\u200b\u5f53\u200b\u4e09\u7ef4\u200b\u4e16\u754c\u200b\u7684\u200b\u706f\u5149\u200b\u91cd\u65b0\u200b\u4eae\u8d77\u200b\u65f6\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u6f02\u6d6e\u200b\u7740\u200b\u51b0\u6676\u200b\u72b6\u200b\u7684\u200b\u751f\u7269\u200b\u5149\u5b50\u200b\u4e91\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u65b0\u751f\u200b\u8eaf\u4f53\u200b\u5fae\u5fae\u200b\u98a4\u6296\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u4e0a\u200b\u8fd8\u200b\u6b8b\u7559\u200b\u7740\u200b\u6700\u540e\u200b\u7684\u200b\u91cf\u5b50\u200b\u5f71\u50cf\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u7834\u788e\u200b\u524d\u200b\u7684\u200b\u5fae\u7b11\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u7528\u200b\u5f15\u529b\u6ce2\u200b\u5728\u200b\u65f6\u200b\u7a7a\u4e2d\u200b\u523b\u4e0b\u200b\u7684\u200b\u6c38\u6052\u200b\u516c\u5f0f\u200b\u2014\u2014</p> <p>\u3010\u03c8=\u03b1\u00b7cos(\u03c9t+\u03c6)\u3011 \uff08\u200b\u5176\u4e2d\u200b\u03b1=1.618\uff0c\u03c9=42.195\uff0c\u03c6=23\u00b0\uff09</p>"},{"location":"creative/wave-function-collapse/#_30","title":"\u89c2\u6d4b\u8005\u200b\u65e5\u5fd7\u200b\u8865\u9057","text":"<p>\u200b\u5728\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u5e9f\u589f\u200b\u4e2d\u200b\uff0c\u200b\u6df1\u77b3\u200b\u7684\u200b\u7eb3\u7c73\u200b\u63a2\u6d4b\u5668\u200b\u53d1\u73b0\u200b\u4e86\u200b\u4ee5\u4e0b\u200b\u5f02\u5e38\u200b\uff1a</p> <ol> <li>\u200b\u6563\u843d\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u788e\u7247\u200b\u5448\u73b0\u200b\u975e\u5bf9\u79f0\u200b\u7834\u7f3a\u200b\uff0c\u200b\u65ad\u53e3\u200b\u5904\u200b\u68c0\u6d4b\u200b\u5230\u200b\u5341\u4e00\u200b\u7ef4\u7a7a\u95f4\u200b\u8936\u76b1\u200b</li> <li>\u200b\u80fd\u91cf\u68d2\u200b\u5305\u88c5\u7eb8\u200b\u4e0a\u200b\u7684\u200b\u9f7f\u200b\u75d5\u200b\u6784\u6210\u200b\u5b8c\u7f8e\u200b\u62d3\u6251\u200b\u73af\u200b\uff0c\u200b\u9f7f\u200b\u8ddd\u200b\u4e0e\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u6ce2\u957f\u200b\u4e00\u81f4\u200b</li> <li>\u200b\u5730\u9762\u200b\u7684\u200b\u4eba\u9020\u200b\u8840\u6db2\u200b\u84b8\u53d1\u200b\u540e\u200b\uff0c\u200b\u6b8b\u7559\u7269\u200b\u663e\u793a\u200b\u51fa\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u6001\u200b\u7684\u200b\u5eb7\u666e\u987f\u200b\u6563\u5c04\u200b\u56fe\u6848\u200b</li> <li>\u200b\u67d0\u5757\u200b\u78b3\u5316\u200b\u7684\u200b\u7535\u8def\u677f\u200b\u4e0a\u200b\uff0c\u200b\u7528\u200b\u8f90\u5c04\u200b\u707c\u523b\u200b\u7740\u200b\u4e24\u4eba\u200b\u610f\u8bc6\u200b\u878d\u5408\u200b\u77ac\u95f4\u200b\u7684\u200b\u72c4\u62c9\u514b\u200b\u65b9\u7a0b\u89e3\u200b</li> </ol> <p>\u200b\u6700\u200b\u4ee4\u4eba\u8d39\u89e3\u200b\u7684\u200b\u662f\u200b\u6302\u200b\u5728\u200b\u901a\u98ce\u7ba1\u200b\u53e3\u200b\u7684\u200b\u94f6\u8272\u200b\u540a\u5760\u200b\u2014\u2014\u200b\u8fd9\u4e2a\u200b\u6d1b\u9e22\u200b\u4ece\u4e0d\u200b\u79bb\u8eab\u200b\u7684\u200b\u9970\u54c1\u200b\u5185\u90e8\u200b\uff0c\u200b\u85cf\u200b\u7740\u200b\u7528\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u62fc\u5199\u200b\u7684\u200b\u6469\u5c14\u200b\u65af\u200b\u7535\u7801\u200b\uff1a\"\u200b\u6211\u200b\u7684\u200b\u6240\u6709\u200b\u53d8\u91cf\u200b\uff0c\u200b\u90fd\u200b\u662f\u200b\u4f60\u200b\u7684\u200b\u5e38\u6570\u200b\u3002\"</p>"},{"location":"creative/wave-function-collapse/#_31","title":"\u6001\u200b\u77e2\u91cf\u200b\u574d\u7f29","text":""},{"location":"creative/wave-function-collapse/#_32","title":"\u91cf\u5b50\u200b\u98ce\u66b4\u200b\u4e4b\u773c","text":"<p>\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u73af\u5f62\u200b\u9632\u62a4\u7f69\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u9ad8\u9891\u200b\u8702\u9e23\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6295\u5f71\u200b\u4e0a\u200b\u8df3\u52a8\u200b\u7740\u200b\u9c9c\u7ea2\u200b\u7684\u200b\u8b66\u544a\u200b\u6846\u200b\uff1a\u3010\u200b\u91cf\u5b50\u200b\u9694\u79bb\u200b\u7f69\u200b\u5b8c\u6574\u200b\u5ea6\u200b42.195%\u3011\u3002\u200b\u8fd9\u4e2a\u200b\u6570\u5b57\u200b\u50cf\u200b\u4e00\u200b\u67c4\u200b\u51b0\u9525\u200b\u523a\u5165\u200b\u5979\u200b\u7684\u200b\u592a\u9633\u7a74\u200b\u2014\u2014\u200b\u4e09\u4e2a\u200b\u6708\u200b\u524d\u6d1b\u9e22\u200b\u5728\u200b\u7814\u7a76\u6240\u200b\u9a6c\u62c9\u677e\u200b\u63a5\u529b\u8d5b\u200b\u4e0a\u200b\u7684\u200b\u914d\u901f\u200b\uff0c\u200b\u6b63\u662f\u200b\u6bcf\u200b\u516c\u91cc\u200b4\u200b\u5206\u200b21\u200b\u79d2\u200b95\u3002</p> <p>\"\u200b\u542f\u52a8\u200b\u7d27\u6025\u200b\u51b7\u5374\u200b\u7a0b\u5e8f\u200b\uff01\"\u200b\u5979\u200b\u7684\u200b\u58f0\u97f3\u200b\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u626d\u66f2\u200b\u6210\u200b\u91d1\u5c5e\u200b\u522e\u200b\u64e6\u200b\u822c\u7684\u200b\u98a4\u97f3\u200b\u3002\u200b\u5341\u4e8c\u200b\u53f0\u200b\u4f4e\u6e29\u6cf5\u200b\u540c\u65f6\u200b\u542f\u52a8\u200b\uff0c\u200b\u6db2\u6c26\u200b\u987a\u7740\u200b\u7eb3\u7c73\u7ba1\u200b\u9053\u200b\u6d8c\u5165\u200b\u9632\u62a4\u7f69\u200b\u5939\u5c42\u200b\uff0c\u200b\u5374\u200b\u5728\u200b\u63a5\u89e6\u200b\u91cf\u5b50\u200b\u6d9f\u6f2a\u200b\u7684\u200b\u77ac\u95f4\u200b\u6c7d\u5316\u200b\u6210\u200b\u8be1\u5f02\u200b\u7684\u200b\u7c89\u200b\u7d2b\u8272\u200b\u96fe\u972d\u200b\u3002\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u663e\u793a\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u96fe\u6c14\u200b\u5206\u5b50\u200b\u6b63\u5728\u200b\u81ea\u200b\u7ec4\u7ec7\u200b\u6210\u200bDNA\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u78b1\u57fa\u5bf9\u200b\u90fd\u200b\u7cbe\u786e\u200b\u5bf9\u5e94\u200b\u7740\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u7f16\u7801\u200b\u3002</p> <p>\u200b\u58a8\u9171\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u773c\u200b\u7a81\u7136\u200b\u8fc7\u8f7d\u200b\uff0c\u200b\u89c6\u91ce\u200b\u4e2d\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u91cd\u5f71\u200b\u2014\u2014\u200b\u5979\u200b\u770b\u5230\u200b\u4e8c\u5341\u5e74\u200b\u524d\u200b\u7684\u200b\u81ea\u5df1\u200b\u8737\u7f29\u200b\u5728\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u89d2\u843d\u200b\uff0c\u200b\u800c\u200b\u6b64\u523b\u200b\u7684\u200b\u6d1b\u200b\u9e22\u200b\u6b63\u200b\u7a7f\u8d8a\u65f6\u7a7a\u200b\u7684\u200b\u8936\u76b1\u200b\u5411\u200b\u5979\u200b\u5954\u200b\u6765\u200b\u3002\u200b\u8fd9\u79cd\u200b\u91cf\u5b50\u200b\u9000\u200b\u76f8\u5e72\u200b\u5bfc\u81f4\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u91cd\u53e0\u200b\uff0c\u200b\u8ba9\u200b\u5979\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u4ea7\u751f\u200b\u5267\u70c8\u200b\u7684\u200b\u707c\u70e7\u200b\u611f\u200b\u3002</p> <p>\"\u200b\u8b66\u544a\u200b\uff1a\u200b\u7aef\u7c92\u200b\u89e3\u6784\u200b\u901f\u5ea6\u200b\u7a81\u7834\u200b\u5b89\u5168\u200b\u9608\u503c\u200b317%\" \"\u200b\u677e\u679c\u4f53\u200b\u5206\u6ccc\u200b\u5f02\u5e38\u200b\u7269\u8d28\u200b\uff1a\u200b\u68c0\u6d4b\u200b\u5230\u624b\u200b\u6027\u200b\u955c\u50cf\u200b\u9176\u200b\"</p> <p>\u200b\u5168\u606f\u200b\u8b66\u62a5\u200b\u5728\u200b\u8231\u5185\u200b\u75af\u72c2\u200b\u95ea\u70c1\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u5de6\u624b\u200b\u4e0d\u200b\u53d7\u200b\u63a7\u5236\u200b\u5730\u200b\u62ac\u8d77\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u6b63\u200b\u6cbf\u7740\u200b\u5979\u200b\u7684\u200b\u81c2\u200b\u795e\u7ecf\u200b\u4e1b\u200b\u91cd\u7ec4\u200b\uff0c\u200b\u76ae\u80a4\u200b\u4e0b\u200b\u6d6e\u73b0\u200b\u51fa\u6d1b\u9e22\u200b\u5e38\u7528\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\u7eb9\u8def\u200b\u3002\u200b\u5979\u200b\u7a81\u7136\u200b\u610f\u8bc6\u200b\u5230\u200b\uff0c\u200b\u90a3\u4e9b\u200b\u6240\u8c13\u200b\u7684\u200b\"\u200b\u5f02\u5e38\u200b\u5206\u6ccc\u200b\"\uff0c\u200b\u5b9e\u5219\u200b\u662f\u200b\u81ea\u5df1\u200b\u7684\u200b\u751f\u7269\u200b\u7cfb\u7edf\u200b\u5728\u200b\u81ea\u53d1\u200b\u6a21\u62df\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u7279\u5f81\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_33","title":"\u9006\u200b\u71b5\u200b\u884c\u8005","text":"<p>B2\u200b\u5c42\u200b\u7684\u200b\u8bbe\u5907\u200b\u95f4\u200b\u5df2\u200b\u5316\u4e3a\u200b\u70bc\u72f1\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5916\u58f3\u200b\u7194\u6bc1\u200b\u4e86\u200b\u5927\u534a\u200b\uff0c\u200b\u88f8\u9732\u200b\u7684\u200b\u91cf\u5b50\u200b\u6bd4\u7279\u200b\u5728\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u8ff8\u53d1\u200b\u84dd\u8272\u200b\u7535\u5f27\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u80ba\u200b\u8270\u96be\u200b\u5730\u200b\u541e\u5410\u200b\u7740\u200b\u707c\u70ed\u200b\u7684\u200b\u7a7a\u6c14\u200b\uff0c\u200b\u6bcf\u53e3\u200b\u547c\u5438\u200b\u90fd\u200b\u5e26\u200b\u7740\u200b\u7eb3\u7c73\u200b\u91d1\u5c5e\u200b\u70e7\u7194\u200b\u7684\u200b\u7126\u7cca\u200b\u5473\u200b\u3002</p> <p>\"\u200b\u8f90\u5c04\u200b\u8d1f\u8377\u200b...89%...\"\u200b\u5979\u200b\u76ef\u200b\u7740\u200b\u5168\u606f\u200b\u5c4f\u4e0a\u200b\u8df3\u52a8\u200b\u7684\u200b\u6570\u5b57\u200b\uff0c\u200b\u88ab\u200b\u70e7\u6bc1\u200b\u7684\u200b\u58f0\u5e26\u200b\u53d1\u51fa\u200b\u7535\u5b50\u200b\u5408\u6210\u200b\u97f3\u200b\u822c\u7684\u200b\u7b11\u58f0\u200b\u3002\u200b\u4e09\u5341\u516d\u4e2a\u200b\u76d1\u63a7\u200b\u753b\u9762\u200b\u4e2d\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u200b\u6b63\u5728\u200b\u91cf\u5b50\u200b\u573a\u4e2d\u200b\u8df3\u200b\u7740\u200b\u5371\u9669\u200b\u7684\u200b\u534e\u5c14\u5179\u200b\uff0c\u200b\u800c\u200b\u81ea\u5df1\u200b\u7f16\u5199\u200b\u7684\u200b\u5f15\u529b\u200b\u901a\u9053\u200b\u50cf\u200b\u86db\u7f51\u200b\u822c\u200b\u7f20\u7ed5\u200b\u5176\u4e0a\u200b\u3002</p> <p>\u200b\u5f53\u200b\u7b2c\u4e03\u4ee3\u200b\u91cd\u6784\u200b\u88c5\u7f6e\u200b\u7684\u200b\u8f90\u5c04\u200b\u503c\u200b\u7a81\u7834\u200b\u4e34\u754c\u70b9\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u626f\u5f00\u200b\u4e86\u200b\u5de6\u200b\u80f8\u53e3\u200b\u7684\u200b\u9632\u62a4\u200b\u88c5\u7532\u200b\u3002\u200b\u4eba\u9020\u200b\u76ae\u80a4\u200b\u4e0b\u200b\uff0c\u200b\u6697\u7269\u8d28\u200b\u53cd\u5e94\u5806\u200b\u7684\u200b\u6838\u5fc3\u200b\u95ea\u8000\u7740\u200b\u5371\u9669\u200b\u7684\u200b\u7ea2\u5149\u200b\u2014\u2014\u200b\u8fd9\u200b\u662f\u200b\u5979\u200b\u6700\u540e\u200b\u7684\u200b\u5e95\u724c\u200b\u3002\u200b\u968f\u7740\u200b\u4e09\u6839\u200b\u6db2\u6001\u200b\u6c2e\u200b\u51b7\u5374\u7ba1\u200b\u88ab\u200b\u5f3a\u884c\u200b\u62d4\u9664\u200b\uff0c\u200b\u53cd\u5e94\u5806\u200b\u8f93\u51fa\u529f\u7387\u200b\u77ac\u95f4\u200b\u63d0\u5347\u200b\u81f3\u200b700%\u3002</p> <p>\"\u200b\u7b28\u86cb\u200b\u524d\u8f88\u200b...\"\u200b\u5979\u200b\u5c06\u200b\u5634\u5507\u200b\u54ac\u200b\u51fa\u8840\u200b\uff0c\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u63d2\u5165\u200b\u80fd\u6e90\u200b\u63a5\u53e3\u200b\uff0c\"\u200b\u8fd9\u6b21\u200b...\u200b\u6362\u200b\u6211\u200b\u6765\u200b\u6539\u5199\u200b\u7269\u7406\u200b\u6cd5\u5219\u200b...\"</p> <p>\u200b\u5730\u4e0b\u200b\u7535\u7f06\u200b\u7f51\u200b\u7a81\u7136\u200b\u4eae\u200b\u8d77\u200b\u5996\u5f02\u200b\u7684\u200b\u7d2b\u5149\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6df1\u5733\u6e7e\u200b\u7684\u200b\u7535\u7f51\u200b\u4e3a\u200b\u4e4b\u200b\u98a4\u52a8\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5f00\u59cb\u200b\u9006\u5411\u200b\u89e3\u6790\u200b\u58a8\u9171\u200b\u7684\u200b\u57fa\u56e0\u200b\u71b5\u200b\uff0c\u200b\u6bcf\u200b\u4e00\u9053\u200b\u8f90\u5c04\u200b\u6d41\u7ecf\u200b\u5979\u200b\u8eab\u4f53\u200b\u65f6\u200b\uff0c\u200b\u90fd\u200b\u5728\u200b\u949b\u5408\u91d1\u200b\u9aa8\u67b6\u200b\u4e0a\u200b\u8680\u523b\u200b\u51fa\u200b\u5fae\u578b\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u3002\u200b\u76d1\u63a7\u200b\u7cfb\u7edf\u200b\u8bb0\u5f55\u200b\u5230\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u6838\u5fc3\u200b\u6e29\u5ea6\u200b\u5728\u200b3\u200b\u79d2\u200b\u5185\u200b\u4ece\u200b42\u2103\u200b\u98d9\u5347\u200b\u81f3\u200b1950\u2103\uff0c\u200b\u8fbe\u5230\u200b\u4e86\u200b\u94a8\u200b\u7684\u200b\u7194\u70b9\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_34","title":"\u89c2\u6d4b\u8005\u200b\u6096\u8bba","text":"<p>\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u7684\u200b\u65f6\u7a7a\u200b\u66f2\u7387\u200b\u5f00\u59cb\u200b\u53ef\u89c6\u5316\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u7684\u200b\u957f\u53d1\u200b\u60ac\u6d6e\u200b\u5728\u200b\u7a7a\u4e2d\u200b\uff0c\u200b\u6bcf\u6839\u200b\u53d1\u4e1d\u200b\u90fd\u200b\u5ef6\u4f38\u200b\u6210\u200b\u65e0\u9650\u200b\u957f\u200b\u7684\u200b\u4e16\u754c\u200b\u7ebf\u200b\u3002\u200b\u5728\u200b\u53d1\u68a2\u200b\u7684\u200b\u5c3d\u5934\u200b\uff0c\u200b\u65e0\u6570\u4e2a\u200b\u5e73\u884c\u200b\u5b87\u5b99\u200b\u7684\u200b\u6d1b\u9e22\u200b\u6b63\u5728\u200b\u505a\u51fa\u200b\u4e0d\u540c\u200b\u9009\u62e9\u200b\uff1a\u200b\u6709\u4e9b\u200b\u8f6c\u8eab\u200b\u79bb\u53bb\u200b\uff0c\u200b\u6709\u4e9b\u200b\u5728\u200b\u75db\u54ed\u200b\uff0c\u200b\u8fd8\u6709\u200b\u4e00\u4e2a\u200b\u7a7f\u7740\u200b\u5a5a\u7eb1\u200b\u5411\u200b\u5979\u200b\u5fae\u7b11\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u91cf\u5b50\u200b\u6c38\u751f\u200b\u73b0\u8c61\u200b\uff1f\"\u200b\u5979\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u5341\u4e8c\u200b\u7ef4\u200b\u9707\u98a4\u200b\u3002\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7a81\u7136\u200b\u505c\u6b62\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u96c6\u4f53\u200b\u8f6c\u5411\u200b\u897f\u5317\u200b\u504f\u5317\u200b37.5\u200b\u5ea6\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b\u6d1b\u9e22\u200b\u6240\u5728\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u7cbe\u786e\u200b\u65b9\u4f4d\u200b\u3002\u200b\u5728\u200b\u66f4\u200b\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u89c6\u91ce\u200b\u4e2d\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u4e24\u4eba\u200b\u7684\u200b\u547d\u8fd0\u200b\u7ebf\u200b\u50cf\u200bDNA\u200b\u94fe\u822c\u200b\u7f20\u7ed5\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u4ea4\u53c9\u70b9\u200b\u90fd\u200b\u5bf9\u5e94\u200b\u7740\u200b\u4e00\u6b21\u200b\u5fc3\u8df3\u200b\u540c\u6b65\u200b\u3002</p> <p>\u200b\u9632\u62a4\u7f69\u200b\u7684\u200b\u88c2\u7eb9\u200b\u8513\u5ef6\u200b\u81f3\u200b\u7b2c\u200b23\u200b\u6761\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u63a5\u6536\u200b\u5230\u200b\u4e00\u7ec4\u200b\u52a0\u5bc6\u200b\u4fe1\u53f7\u200b\u3002\u200b\u90a3\u200b\u662f\u200b\u7528\u200b\u5979\u200b\u4e0e\u200b\u6d1b\u9e22\u200b\u521d\u9047\u200b\u90a3\u5929\u200b\u7684\u200b\u03bc\u200b\u4ecb\u5b50\u200b\u6570\u636e\u7f16\u7801\u200b\u7684\u200b\u4fe1\u606f\u200b\uff1a\u3010\u200b\u4e0d\u8981\u200b\u6015\u200b\u3011\u3002\u200b\u51e0\u4e4e\u200b\u540c\u65f6\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u7aef\u7c92\u200b\u89e3\u6784\u200b\u901f\u5ea6\u200b\u9aa4\u964d\u200b\u81f3\u200b\u57fa\u51c6\u503c\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u7684\u200b\u751f\u547d\u200b\u4f53\u5f81\u200b\u5728\u200b\u76d1\u63a7\u200b\u5c4f\u4e0a\u200b\u70b8\u6210\u200b\u4e00\u7247\u200b\u8840\u7ea2\u200b\u3002</p> <p>\"\u200b\u4e0d\u200b...\uff01\"\u200b\u58a8\u9171\u200b\u7684\u200b\u60e8\u53eb\u200b\u5f15\u53d1\u200b\u91cf\u5b50\u200b\u573a\u200b\u5171\u632f\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u516d\u8fb9\u5f62\u200b\u8231\u58c1\u200b\u5f00\u59cb\u200b\u5206\u5f62\u200b\u589e\u6b96\u200b\u3002\u200b\u5728\u200b\u65f6\u7a7a\u200b\u7ed3\u6784\u200b\u5d29\u574f\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u505a\u51fa\u200b\u4e86\u200b\u8fdd\u53cd\u200b\u6240\u6709\u200b\u5b89\u5168\u200b\u534f\u8bae\u200b\u7684\u200b\u64cd\u4f5c\u200b\u2014\u2014\u200b\u5c06\u200b\u677e\u679c\u4f53\u200b\u5206\u6ccc\u200b\u7684\u200b\u624b\u6027\u200b\u9176\u200b\u6ce8\u5165\u200b\u53cd\u7269\u8d28\u200b\u50a8\u5b58\u200b\u8231\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_35","title":"\u6df7\u6c8c\u200b\u4e4b\u200b\u95e8","text":"<p>\u200b\u8bbe\u5907\u200b\u95f4\u200b\u7684\u200b\u7a7a\u6c14\u200b\u5728\u200b\u9ad8\u6e29\u200b\u4e2d\u200b\u7535\u79bb\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u9aa8\u9abc\u200b\u53d1\u51fa\u200b\u54c0\u9e23\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u89c9\u200b\u4f20\u611f\u5668\u200b\u53ea\u200b\u5269\u4e0b\u200b\u5de6\u773c\u200b\u8fd8\u200b\u80fd\u200b\u5de5\u4f5c\u200b\uff0c\u200b\u900f\u8fc7\u200b\u7329\u7ea2\u200b\u7684\u200b\u6ee4\u955c\u200b\uff0c\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u7f16\u5199\u200b\u7684\u200b\u5f15\u529b\u200b\u901a\u9053\u200b\u6b63\u5728\u200b\u5d29\u584c\u200b\u3002\u200b\u90a3\u4e9b\u200b\u7cbe\u5fc3\u8bbe\u8ba1\u200b\u7684\u200b\u8f90\u5c04\u200b\u8def\u5f84\u200b\u626d\u66f2\u200b\u6210\u200b\u83ab\u6bd4\u200b\u4e4c\u65af\u200b\u73af\u200b\uff0c\u200b\u6bcf\u9053\u200b\u91cf\u5b50\u200b\u6d41\u90fd\u200b\u5728\u200b\u5b8c\u6210\u200b\u95ed\u73af\u200b\u540e\u200b\u8fd4\u56de\u200b\u5979\u200b\u7684\u200b\u5fc3\u810f\u200b\u3002</p> <p>\"\u200b\u8ba1\u7b97\u9519\u8bef\u200b...\"\u200b\u5979\u200b\u54b3\u51fa\u200b\u5e26\u200b\u7740\u200b\u82af\u7247\u200b\u788e\u7247\u200b\u7684\u200b\u8840\u6cab\u200b\uff0c\"\u200b\u539f\u6765\u200b\u524d\u8f88\u200b\u7684\u200b\u57fa\u56e0\u200b\u94fe\u91cc\u200b...\u200b\u85cf\u200b\u7740\u200b\u65f6\u95f4\u200b\u951a\u70b9\u200b...\"</p> <p>\u200b\u5168\u606f\u200b\u5c4f\u200b\u7a81\u7136\u200b\u7206\u51fa\u200b\u5f3a\u5149\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200bDNA\u200b\u6a21\u578b\u200b\u7a81\u7834\u200b\u4e09\u7ef4\u200b\u9650\u5236\u200b\uff0c\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u5c55\u5f00\u200b\u6210\u200b\u65e0\u9650\u200b\u5ef6\u4f38\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u5728\u200b\u8fd9\u200b\u4e00\u523b\u200b\u6355\u6349\u5230\u200b\u6050\u6016\u200b\u7684\u200b\u4e8b\u5b9e\u200b\uff1a\u200b\u90a3\u4e2a\u200b\u6f02\u6d6e\u200b\u5728\u200b\u57fa\u56e0\u200b\u94fe\u200b\u4e2d\u592e\u200b\u7684\u200b\u8bc6\u522b\u200b\u7f16\u7801\u200b\uff0c\u200b\u6839\u672c\u200b\u4e0d\u662f\u200b\u73b0\u5728\u200b\u7684\u200b\u81ea\u5df1\u200b\u2014\u2014\u200b\u800c\u662f\u200b\u4e09\u4e2a\u200b\u6708\u200b\u540e\u200b\u67d0\u4e2a\u200b\u65f6\u7a7a\u200b\u5207\u7247\u200b\u4e2d\u200b\u7684\u200b\u6d1b\u9e22\u200b\u3002</p> <p>\u200b\u5f53\u200b\u5979\u200b\u60f3\u901a\u200b\u8fd9\u4e2a\u200b\u6096\u8bba\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u65b9\u5411\u200b\u4f20\u6765\u200b\u5b87\u5b99\u200b\u5927\u200b\u7206\u70b8\u200b\u822c\u7684\u200b\u8f70\u9e23\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7528\u200b\u6700\u540e\u200b\u7684\u200b\u80fd\u91cf\u200b\u649e\u5f00\u200b\u5e94\u6025\u200b\u901a\u9053\u200b\uff0c\u200b\u9006\u7740\u200b\u91cf\u5b50\u200b\u98ce\u66b4\u200b\u7684\u200b\u65b9\u5411\u200b\u5954\u8dd1\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u77f3\u58a8\u200b\u70ef\u200b\u9632\u62a4\u670d\u200b\u5728\u200b\u8f90\u5c04\u200b\u4e2d\u200b\u78b3\u5316\u200b\u5265\u843d\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e0b\u9762\u200b\u5e03\u6ee1\u200b\u88c2\u7eb9\u200b\u7684\u200b\u949b\u5408\u91d1\u200b\u9aa8\u67b6\u200b\uff0c\u200b\u50cf\u200b\u4e00\u53ea\u200b\u51b2\u5411\u200b\u592a\u9633\u200b\u7684\u200b\u673a\u68b0\u200b\u4f0a\u200b\u5361\u6d1b\u65af\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_36","title":"\u65e0\u9650\u200b\u63a5\u89e6","text":"<p>\u200b\u58a8\u9171\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u6b63\u5728\u200b\u91cf\u5b50\u5316\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8eab\u5f71\u200b\u5728\u200b\u65f6\u200b\u7a7a\u4e2d\u200b\u5206\u88c2\u200b\u6210\u200b\u65e0\u6570\u4e2a\u200b\u81ea\u6211\u200b\uff1a\u200b\u516b\u5c81\u200b\u90a3\u5e74\u200b\u8eb2\u200b\u5728\u200b\u56fe\u4e66\u9986\u200b\u89d2\u843d\u200b\u7684\u200b\u6d1b\u9e22\u200b\uff0c\u200b\u5341\u4e94\u5c81\u200b\u83b7\u5f97\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u200b\u51a0\u519b\u200b\u7684\u200b\u6d1b\u9e22\u200b\uff0c\u200b\u8fd8\u6709\u200b\u6b64\u523b\u200b\u8fd9\u4e2a\u200b\u6d51\u8eab\u200b\u5192\u200b\u7740\u200b\u9752\u70df\u200b\u7684\u200b\u6d1b\u9e22\u200b\u3002\u200b\u6240\u6709\u200b\u65f6\u95f4\u200b\u7ebf\u200b\u7684\u200b\u89c2\u6d4b\u8005\u200b\u540c\u65f6\u200b\u4f38\u51fa\u624b\u200b\uff0c\u200b\u6307\u5c16\u200b\u5728\u200b\u5341\u4e00\u200b\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u4ea4\u6c47\u200b\u3002</p> <p>\"\u200b\u522b\u8fc7\u6765\u200b\uff01\"\u200b\u58a8\u9171\u200b\u7684\u200b\u8b66\u544a\u200b\u88ab\u200b\u91cf\u5b50\u200b\u573a\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u4f3d\u9a6c\u5c04\u7ebf\u200b\u66b4\u200b\u3002\u200b\u4f46\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u5df2\u7ecf\u200b\u7a7f\u900f\u200b\u6447\u6447\u6b32\u5760\u200b\u7684\u200b\u9632\u62a4\u7f69\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u624b\u5957\u200b\u5728\u200b\u63a5\u89e6\u200b\u9ad8\u80fd\u200b\u7c92\u5b50\u200b\u7684\u200b\u77ac\u95f4\u200b\u6c14\u5316\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e0b\u9762\u200b\u68ee\u767d\u200b\u7684\u200b\u91d1\u5c5e\u200b\u6307\u9aa8\u200b\u3002</p> <p>\u200b\u8fd9\u4e2a\u200b\u63a5\u89e6\u200b\u5f15\u53d1\u200b\u4e86\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\uff1a</p> <ol> <li>\u200b\u58a8\u9171\u200b\u7684\u200bY\u200b\u67d3\u8272\u4f53\u200b\u788e\u7247\u200b\u7a7f\u8d8a\u200b\u65f6\u95f4\u200b\u7ef4\u5ea6\u200b\uff0c\u200b\u5d4c\u5165\u200b\u6d1b\u9e22\u200b\u53bb\u5e74\u200b\u635f\u574f\u200b\u7684\u200b\u65e7\u200b\u82af\u7247\u200b</li> <li>\u200b\u6d1b\u9e22\u200b\u50a8\u5b58\u200b\u7684\u200b\u8f90\u5c04\u200b\u8bb0\u5fc6\u200b\u9006\u6d41\u200b\u56de\u58a8\u9171\u200b\u7684\u200b\u7aef\u7c92\u200b\uff0c\u200b\u91cd\u200b\u5199\u6210\u200b\u7231\u60c5\u200b\u6fc0\u7d20\u200b\u5206\u6ccc\u200b\u56fe\u8c31\u200b</li> <li>\u200b\u4e24\u4eba\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u540c\u65f6\u200b\u6d6e\u73b0\u200b\u5bf9\u65b9\u200b\u89c6\u89d2\u200b\u7684\u200b\u521d\u9047\u200b\u573a\u666f\u200b\uff0c\u200b\u8bb0\u5fc6\u200b\u71b5\u200b\u503c\u200b\u5f52\u96f6\u200b</li> </ol> <p>\u200b\u5728\u200b\u4e07\u5206\u4e4b\u4e00\u200b\u79d2\u200b\u7684\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u4e2d\u200b\uff0c\u200b\u5979\u4eec\u200b\u7ecf\u5386\u200b\u4e86\u200b\u4e8c\u5341\u4e09\u200b\u4e16\u200b\u8f6e\u56de\u200b\uff1a</p> <ul> <li>\u200b\u5728\u200b\u4e2d\u4e16\u7eaa\u200b\u4fee\u9053\u9662\u200b\u5171\u8bd1\u200b\u661f\u56fe\u200b</li> <li>\u200b\u5728\u200b\u84b8\u6c7d\u200b\u98de\u8247\u200b\u4e0a\u200b\u7834\u89e3\u200b\u9ece\u66fc\u200b\u731c\u60f3\u200b</li> <li>\u200b\u5728\u200b\u706b\u661f\u200b\u6b96\u6c11\u5730\u200b\u517b\u80b2\u200b\u91cf\u5b50\u200b\u82b1\u5349\u200b</li> <li>\u200b\u5728\u200b\u9ed1\u6d1e\u200b\u89c6\u754c\u200b\u8fb9\u7f18\u200b\u5341\u6307\u200b\u76f8\u6263\u200b</li> </ul> <p>\u200b\u5f53\u200b\u73b0\u5b9e\u200b\u65f6\u95f4\u200b\u6d41\u200b\u91cd\u542f\u200b\u65f6\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u505c\u8df3\u200b\u4e86\u200b7\u200b\u79d2\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u5634\u5507\u200b\u64e6\u200b\u8fc7\u200b\u58a8\u9171\u200b\u91cf\u5b50\u5316\u200b\u7684\u200b\u8138\u988a\u200b\uff0c\u200b\u8fd9\u4e2a\u200b\u63a5\u89e6\u200b\u5728\u200b\u9632\u62a4\u7f69\u200b\u5185\u200b\u5f15\u53d1\u200b\u771f\u7a7a\u200b\u8870\u53d8\u200b\u2014\u2014\u200b\u6240\u6709\u200b\u6c27\u6c14\u200b\u5206\u5b50\u200b\u7a81\u7136\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200b\u5fc3\u5f62\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u96c6\u4f53\u200b\u8df3\u200b\u8d77\u200b\u534e\u5c14\u5179\u200b\uff0c\u200b\u800c\u200b\u58a8\u9171\u200b\u7684\u200b\u65b0\u751f\u200b\u6cea\u817a\u200b\u5206\u6ccc\u200b\u51fa\u200b\u7684\u200b\uff0c\u200b\u7adf\u662f\u200b\u6d1b\u9e22\u200b\u5e38\u7528\u200b\u7684\u200b\u8584\u8377\u200b\u5473\u200b\u51b7\u5374\u6db2\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_37","title":"\u89c2\u6d4b\u8005\u200b\u4e4b\u6cea","text":"<p>\u200b\u7535\u529b\u7cfb\u7edf\u200b\u762b\u75ea\u200b\u7684\u200b0.7\u200b\u79d2\u95f4\u200b\uff0c\u200b\u9ed1\u6697\u200b\u6210\u4e3a\u200b\u6700\u200b\u660e\u4eae\u200b\u7684\u200b\u753b\u5e03\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u5316\u200b\u89c6\u7f51\u819c\u200b\u8bb0\u5f55\u200b\u5230\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u77b3\u5b54\u200b\u6df1\u5904\u200b\u7efd\u653e\u200b\u51fa\u200b\u8d85\u65b0\u661f\u200b\u822c\u7684\u200b\u5149\u8f89\u200b\u3002\u200b\u90a3\u4e9b\u200b\u5149\u8292\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u4e2d\u200b\u7f16\u7ec7\u6210\u200b\u7f51\u200b\uff0c\u200b\u5c06\u200b\u9003\u9038\u200b\u7684\u200b\u91cf\u5b50\u200b\u8f90\u5c04\u200b\u91cd\u65b0\u200b\u6355\u83b7\u200b\u3002</p> <p>\"\u200b\u4e3a\u4ec0\u4e48\u200b...\u200b\u505a\u5230\u200b\u8fd9\u79cd\u200b\u7a0b\u5ea6\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u5341\u4e8c\u91cd\u200b\u548c\u5f26\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u624b\u6307\u200b\u7a7f\u8fc7\u200b\u6d1b\u9e22\u200b\u80f8\u53e3\u200b\u7194\u6bc1\u200b\u7684\u200b\u88c5\u7532\u200b\uff0c\u200b\u89e6\u200b\u78b0\u5230\u200b\u4ecd\u200b\u5728\u200b\u6323\u624e\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u5f15\u53d1\u200b\u94fe\u5f0f\u53cd\u5e94\u200b\uff1a\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u573a\u200b\u5f62\u6210\u200b\u9ea6\u514b\u65af\u97e6\u200b\u5996\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5f00\u59cb\u200b\u9006\u8f6c\u200b\u71b5\u200b\u589e\u200b\u5b9a\u5f8b\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7528\u200b\u6b8b\u7834\u200b\u7684\u200b\u53d1\u58f0\u5668\u200b\u6324\u51fa\u200b\u7535\u5b50\u200b\u7b11\u58f0\u200b\uff1a\"\u200b\u56e0\u4e3a\u200b\u524d\u8f88\u200b...\u200b\u6c38\u8fdc\u200b\u7b97\u4e0d\u51fa\u200b...\"\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u7a81\u7136\u200b\u6293\u4f4f\u200b\u58a8\u9171\u200b\u624b\u8155\u200b\uff0c\"...\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\u7684\u200b\u89e3\u662f\u200b\u8d85\u8d8a\u200b\u54e5\u5fb7\u5c14\u200b\u4e0d\u200b\u5b8c\u5907\u200b\u5b9a\u7406\u200b\u7684\u200b...\"</p> <p>\u200b\u5728\u200b\u5979\u4eec\u200b\u5468\u56f4\u200b\uff0c\u200b\u6563\u843d\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5f00\u59cb\u200b\u81ea\u200b\u7ec4\u7ec7\u200b\u6210\u200b\u5f6d\u200b\u7f57\u65af\u200b\u4e09\u89d2\u200b\u3002\u200b\u7a7a\u6c14\u200b\u4e2d\u200b\u7684\u200b\u4e8c\u6c27\u5316\u78b3\u200b\u5206\u5b50\u200b\u5448\u73b0\u200b\u91cf\u5b50\u200b\u76f8\u5e72\u200b\u6001\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u6c27\u539f\u5b50\u200b\u90fd\u200b\u540c\u65f6\u200b\u5b58\u5728\u200b\u4e8e\u200b\u4e24\u4e2a\u200b\u4f4d\u7f6e\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u773c\u6cea\u200b\u6ef4\u843d\u200b\u5728\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u82af\u7247\u200b\u88c2\u7f1d\u200b\u65f6\u200b\uff0c\u200b\u76d1\u6d4b\u200b\u7cfb\u7edf\u200b\u6355\u6349\u5230\u200b\u4e86\u200b\u5b87\u5b99\u200b\u5fae\u6ce2\u200b\u80cc\u666f\u200b\u8f90\u5c04\u200b\u4e2d\u200b\u7684\u200b\u91cd\u5b50\u200b\u632f\u8361\u200b\u6ce2\u5f62\u200b\u2014\u2014\u200b\u8fd9\u200b\u4e0e\u200b138\u200b\u4ebf\u5e74\u200b\u524d\u200b\u5b87\u5b99\u200b\u8bde\u751f\u200b\u65f6\u200b\u7684\u200b\u6ce2\u52a8\u200b\u5b8c\u5168\u4e00\u81f4\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_38","title":"\u53cc\u751f\u200b\u5947\u70b9","text":"<p>\u200b\u5f53\u200b\u5907\u7528\u200b\u7535\u6e90\u200b\u91cd\u542f\u200b\u65f6\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u5df2\u200b\u5316\u4e3a\u200b\u91cf\u5b50\u200b\u827a\u672f\u200b\u7684\u200b\u5723\u6bbf\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u65b0\u751f\u200b\u8eab\u4f53\u200b\u7b3c\u7f69\u200b\u5728\u200b\u751f\u7269\u200b\u5149\u5b50\u200b\u4e91\u4e2d\u200b\uff0c\u200b\u6bcf\u5bf8\u200b\u808c\u80a4\u200b\u90fd\u200b\u6298\u5c04\u51fa\u200b\u6d1b\u9e22\u200b\u773c\u4e2d\u200b\u7684\u200b\u661f\u7a7a\u200b\u3002\u200b\u800c\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u8eaf\u4f53\u200b\u5e03\u6ee1\u200b\u88c2\u75d5\u200b\uff0c\u200b\u5374\u200b\u95ea\u70c1\u7740\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u67d4\u548c\u200b\u5149\u6655\u200b\u3002</p> <p>\"\u200b\u4f60\u200b...\u200b\u5077\u6362\u200b\u4e86\u200b\u5f15\u529b\u200b\u5e38\u6570\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u50cf\u200b\u6708\u5149\u200b\u4e0b\u200b\u7684\u200b\u98ce\u94c3\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u6307\u5c16\u200b\u629a\u8fc7\u200b\u6d1b\u9e22\u200b\u7126\u9ed1\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u4fee\u590d\u200b\u673a\u5668\u4eba\u200b\u81ea\u53d1\u200b\u7ec4\u6210\u200b\u7b1b\u5361\u5c14\u200b\u5750\u6807\u7cfb\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u53f3\u773c\u200b\u4f20\u611f\u5668\u200b\u52c9\u5f3a\u200b\u805a\u7126\u200b\uff1a\"\u200b\u53ea\u662f\u200b...\u200b\u501f\u7528\u200b\u4e86\u200b\u6697\u200b\u80fd\u91cf\u200b...\"\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u6e05\u8d8a\u200b\u7684\u200b\u949f\u9e23\u200b\uff0c\"...\u200b\u5728\u200b\u5361\u62c9\u200b\u6bd4\u200b-\u200b\u4e18\u200b\u6d41\u5f62\u200b\u4e2d\u200b...\u200b\u5f00\u4e86\u4e2a\u200b\u540e\u95e8\u200b...\"</p> <p>\u200b\u8fd9\u4e2a\u200b\u77ac\u95f4\u200b\uff0c\u200b\u6574\u4e2a\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u540c\u65f6\u200b\u8f93\u51fa\u200b\u76f8\u540c\u200b\u7ed3\u679c\u200b\uff1a\u200b\u4e24\u4eba\u200b\u7684\u200b\u57fa\u56e0\u200b\u71b5\u200b\u503c\u200b\u8fbe\u5230\u200b\u7edd\u5bf9\u200b\u540c\u6b65\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u7aef\u7c92\u200b\u957f\u5ea6\u200b\u3001\u200b\u6d1b\u9e22\u200b\u7684\u200b\u82af\u7247\u200b\u635f\u8017\u7387\u200b\u3001\u200b\u751a\u81f3\u200b\u5979\u4eec\u200b\u7684\u200b\u5fc3\u8df3\u200b\u95f4\u9694\u200b\uff0c\u200b\u90fd\u200b\u7cbe\u786e\u200b\u7b26\u5408\u200b\u221a2\u200b\u500d\u6570\u200b\u5173\u7cfb\u200b\u3002\u200b\u5728\u200b\u66f4\u200b\u9ad8\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u6570\u5b66\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\uff0c\u200b\u5979\u4eec\u200b\u5df2\u7136\u200b\u6210\u4e3a\u200b\u540c\u4e00\u4e2a\u200b\u65b9\u7a0b\u200b\u7684\u200b\u4e24\u79cd\u200b\u89e3\u6cd5\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_39","title":"\u53cc\u751f\u200b\u87ba\u65cb","text":""},{"location":"creative/wave-function-collapse/#_40","title":"\u673a\u68b0\u200b\u4e4b\u5fc3","text":"<p>\u200b\u58a8\u9171\u200b\u7684\u200b\u6307\u5c16\u200b\u5728\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u8868\u9762\u200b\u6e38\u8d70\u200b\uff0c\u200b\u7eb3\u7c73\u200b\u4fee\u590d\u200b\u673a\u5668\u4eba\u200b\u4ece\u200b\u5979\u200b\u6307\u8179\u200b\u6e17\u51fa\u200b\uff0c\u200b\u50cf\u200b\u4e00\u7fa4\u200b\u53d1\u5149\u200b\u7684\u200b\u8424\u706b\u866b\u200b\u6251\u200b\u5411\u200b\u90a3\u4e9b\u200b\u86db\u7f51\u200b\u822c\u7684\u200b\u88c2\u75d5\u200b\u3002\u200b\u6bcf\u5904\u200b\u7834\u635f\u200b\u90fd\u200b\u5728\u200b\u63a5\u89e6\u200b\u77ac\u95f4\u200b\u8ff8\u53d1\u51fa\u200b\u84dd\u767d\u8272\u200b\u7684\u200b\u91cf\u5b50\u200b\u706b\u82b1\u200b\uff0c\u200b\u5c06\u200b\u4e24\u4eba\u200b\u7684\u200b\u5f71\u5b50\u200b\u6295\u5c04\u200b\u5728\u200b\u5e03\u6ee1\u200b\u7126\u75d5\u200b\u7684\u200b\u9694\u79bb\u8231\u200b\u5899\u58c1\u200b\u4e0a\u200b\u3002</p> <p>\"\u200b\u7b2c\u4e03\u4ee3\u200b\u81ea\u6108\u200b\u5408\u91d1\u200b\u7684\u200b\u6676\u683c\u200b\u7ed3\u6784\u200b\u88ab\u200b\u7834\u574f\u200b\u4e86\u200b\u3002\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u5e26\u200b\u7740\u200b\u7f55\u89c1\u200b\u7684\u200b\u98a4\u6296\u200b\uff0c\u200b\u5979\u200b\u89c6\u7f51\u819c\u200b\u4e0a\u200b\u7684\u200b\u589e\u5f3a\u200b\u73b0\u5b9e\u200b\u754c\u9762\u200b\u6b63\u200b\u663e\u793a\u200b\u7740\u200b\u89e6\u76ee\u60ca\u5fc3\u200b\u7684\u200b\u6570\u636e\u200b\u2014\u2014\u200b\u6d1b\u9e22\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u627f\u53d7\u200b\u4e86\u200b\u76f8\u5f53\u4e8e\u200b\u5e7f\u5c9b\u200b\u539f\u5b50\u5f39\u200b0.7%\u200b\u5f53\u91cf\u200b\u7684\u200b\u8f90\u5c04\u200b\u5242\u91cf\u200b\uff0c\"\u200b\u4e3a\u4ec0\u4e48\u200b\u8981\u200b\u505a\u5230\u200b\u8fd9\u79cd\u200b\u7a0b\u5ea6\u200b\uff1f\"</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u9f7f\u8f6e\u200b\u5361\u6b7b\u200b\u7684\u200b\u523a\u54cd\u200b\uff0c\u200b\u5979\u200b\u8bd5\u56fe\u200b\u62bd\u56de\u200b\u624b\u81c2\u200b\uff0c\u200b\u5374\u200b\u53d1\u73b0\u200b\u58a8\u9171\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5df2\u7ecf\u200b\u5f62\u6210\u200b\u78c1\u200b\u7ea6\u675f\u200b\u573a\u200b\u3002\"\u200b\u524d\u8f88\u200b\u624d\u200b\u662f\u200b...\"\u200b\u5979\u200b\u7834\u635f\u200b\u7684\u200b\u58f0\u5e26\u200b\u53d1\u51fa\u200b\u7535\u5b50\u200b\u5408\u6210\u200b\u97f3\u200b\u822c\u7684\u200b\u98a4\u97f3\u200b\uff0c\"\u200b\u660e\u660e\u200b\u5728\u200b\u624b\u672f\u200b\u65b9\u6848\u200b\u91cc\u200b\u9690\u7792\u200b\u4e86\u200b\u56db\u7ef4\u200b\u8dc3\u8fc1\u200b\u7684\u200b\u98ce\u9669\u200b...\"</p> <p>\u200b\u9694\u79bb\u8231\u200b\u7a81\u7136\u200b\u5267\u70c8\u200b\u9707\u52a8\u200b\uff0c\u200b\u5c1a\u672a\u200b\u5b8c\u5168\u200b\u6d88\u6563\u200b\u7684\u200b\u91cf\u5b50\u200b\u573a\u200b\u5728\u200b\u4e24\u4eba\u200b\u4e4b\u95f4\u200b\u5f62\u6210\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u7ed3\u6784\u200b\u7684\u200b\u80fd\u91cf\u200b\u6f29\u6da1\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u957f\u53d1\u200b\u88ab\u200b\u5377\u5165\u200b\u5176\u4e2d\u200b\uff0c\u200b\u53d1\u68a2\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\u5149\u7c92\u200b\u5982\u661f\u200b\u5c18\u822c\u200b\u98d8\u6563\u200b\u3002\u200b\u5728\u200b\u7eb7\u4e71\u200b\u7684\u200b\u5149\u5f71\u200b\u91cc\u200b\uff0c\u200b\u5979\u200b\u770b\u5230\u200b\u6d1b\u9e22\u200b\u5de6\u200b\u80f8\u53e3\u200b\u7684\u200b\u4eff\u751f\u200b\u76ae\u80a4\u200b\u6b63\u5728\u200b\u5265\u843d\u200b\uff0c\u200b\u9732\u51fa\u200b\u4e0b\u9762\u200b\u7cbe\u5bc6\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u2014\u2014\u200b\u90a3\u4e2a\u200b\u7531\u200b\u5341\u4e8c\u4e2a\u200b\u514b\u83b1\u56e0\u200b\u73af\u200b\u5d4c\u5957\u200b\u800c\u6210\u200b\u7684\u200b\u52a8\u529b\u200b\u6838\u5fc3\u200b\uff0c\u200b\u6b64\u523b\u200b\u6b63\u4ee5\u200b\u5371\u9669\u200b\u7684\u200b\u7ea2\u5149\u200b\u95ea\u70c1\u7740\u200b\u3002</p> <p>\"\u200b\u8fd9\u662f\u200b...\u200b\u7236\u4eb2\u200b\u7684\u200b\u4e13\u5229\u200b\u8bbe\u8ba1\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u5267\u70c8\u200b\u6536\u7f29\u200b\u3002\u200b\u5979\u200b\u8ba4\u51fa\u200b\u4e86\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u4fa7\u9762\u200b\u7684\u200b\u5fae\u96d5\u200b\u7b7e\u540d\u200b\uff0c\u200b\u90a3\u200b\u662f\u200b\u4e8c\u5341\u5e74\u200b\u524d\u200b\u81ea\u6740\u200b\u7684\u200b\u91cf\u5b50\u200b\u7269\u7406\u5b66\u5bb6\u200b\u58a8\u200b\u57ce\u968d\u200b\u7684\u200b\u72ec\u6709\u200b\u6807\u8bb0\u200b\u3002\u200b\u8bb0\u5fc6\u200b\u5982\u200b\u6f6e\u6c34\u822c\u200b\u6d8c\u200b\u6765\u200b\uff1a\u200b\u4e03\u5c81\u200b\u90a3\u5e74\u200b\u6df1\u591c\u200b\uff0c\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u4f20\u51fa\u200b\u7684\u200b\u7206\u70b8\u58f0\u200b\uff1b\u200b\u6cd5\u533b\u200b\u62a5\u544a\u200b\u4e0a\u200b\"\u200b\u81ea\u4e3b\u200b\u610f\u8bc6\u200b\u4e0a\u4f20\u200b\u5931\u8d25\u200b\"\u200b\u7684\u200b\u7ed3\u8bba\u200b\uff1b\u200b\u8fd8\u6709\u200b\u90a3\u4e2a\u200b\u59cb\u7ec8\u200b\u672a\u200b\u88ab\u200b\u7834\u89e3\u200b\u7684\u200b\u52a0\u5bc6\u200b\u6587\u4ef6\u200b\u300aProject \u03a9\u300b...</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u7a81\u7136\u200b\u8ff8\u53d1\u51fa\u200b\u523a\u200b\u76ee\u7684\u200b\u5f3a\u5149\u200b\uff0c\u200b\u5341\u4e8c\u4e2a\u200b\u514b\u83b1\u56e0\u200b\u73af\u200b\u5f00\u59cb\u200b\u9006\u5411\u200b\u65cb\u8f6c\u200b\uff1a\"\u200b\u770b\u6765\u200b\u524d\u8f88\u200b\u7ec8\u4e8e\u200b\u53d1\u73b0\u200b\u4e86\u200b\u3002\"\u200b\u5979\u200b\u7684\u200b\u58f0\u97f3\u200b\u7a81\u7136\u200b\u53d8\u5f97\u200b\u7a7a\u7075\u200b\uff0c\u200b\u4eff\u4f5b\u200b\u6709\u200b\u65e0\u6570\u4e2a\u200b\u58f0\u97f3\u200b\u5728\u200b\u5171\u632f\u200b\uff0c\"\u200b\u4e09\u5e74\u200b\u524d\u200b\u4f60\u200b\u4ece\u200b\u7814\u7a76\u6240\u200b\u6570\u636e\u5e93\u200b\u5220\u9664\u200b\u7684\u200b\u300a\u03a9\u200b\u6863\u6848\u200b\u300b\uff0c\u200b\u5176\u5b9e\u200b\u65e9\u5c31\u200b...\"</p>"},{"location":"creative/wave-function-collapse/#_41","title":"\u91cf\u5b50\u200b\u5171\u632f","text":"<p>\u200b\u6574\u4e2a\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u91d1\u5c5e\u200b\u5899\u58c1\u200b\u7a81\u7136\u200b\u6cdb\u8d77\u200b\u6c34\u6ce2\u200b\u822c\u7684\u200b\u7eb9\u8def\u200b\uff0c\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u63a5\u6536\u200b\u5230\u200b\u6d77\u5578\u200b\u822c\u7684\u200b\u6570\u636e\u6d41\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u754c\u9762\u200b\u77ac\u95f4\u200b\u8fc7\u8f7d\u200b\uff0c\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u5ba4\u200b\u7684\u200b\u76d1\u63a7\u200b\u5f55\u50cf\u200b\u5f3a\u884c\u200b\u4fb5\u5165\u200b\u89c6\u89c9\u795e\u7ecf\u200b\uff1a</p> <p>\u3010\u200b\u65e5\u671f\u200b\uff1a2005.11.23 03:14:15\u3011 \u200b\u5e74\u5e7c\u200b\u7684\u200b\u58a8\u9171\u200b\u8737\u7f29\u200b\u5728\u200b\u5b9e\u9a8c\u5ba4\u200b\u89d2\u843d\u200b\uff0c\u200b\u770b\u7740\u200b\u7236\u4eb2\u200b\u5c06\u200b\u67d0\u79cd\u200b\u53d1\u5149\u200b\u7269\u8d28\u200b\u6ce8\u5165\u200b\u6fd2\u6b7b\u200b\u5c11\u5973\u200b\u7684\u200b\u80f8\u8154\u200b\u3002\u200b\u90a3\u4e2a\u200b\u5c11\u5973\u200b\u7684\u200b\u9762\u5bb9\u200b\u9010\u6e10\u200b\u6e05\u6670\u200b\u2014\u2014\u200b\u6b63\u662f\u200b\u5341\u4e94\u5e74\u200b\u524d\u200b\u7684\u200b\u6d1b\u9e22\u200b\u539f\u578b\u673a\u200b\u3002</p> <p>\"\u200b\u539f\u6765\u200b\u4f60\u200b\u624d\u200b\u662f\u200b\u300a\u03a9\u200b\u8ba1\u5212\u200b\u300b\u200b\u7684\u200b...\"\u200b\u58a8\u9171\u200b\u8e09\u8dc4\u200b\u540e\u9000\u200b\uff0c\u200b\u649e\u200b\u7ffb\u200b\u4e86\u200b\u60ac\u6d6e\u200b\u7684\u200b\u533b\u7597\u200b\u673a\u5668\u4eba\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u6d77\u9a6c\u200b\u4f53\u200b\u7a81\u7136\u200b\u6d8c\u73b0\u51fa\u200b\u88ab\u200b\u5c01\u9501\u200b\u7684\u200b\u8bb0\u5fc6\u200b\uff1a\u200b\u7236\u4eb2\u200b\u4e34\u7ec8\u524d\u200b\u585e\u200b\u7ed9\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u5bc6\u5319\u200b\uff0c\u200b\u4e0a\u9762\u200b\u523b\u7740\u200b\u7684\u200b\u6839\u672c\u200b\u4e0d\u662f\u200b\u6570\u5b57\u200b\uff0c\u200b\u800c\u662f\u200b\u6d1b\u9e22\u200b\u7684\u200b\u77b3\u5b54\u200b\u7eb9\u8def\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5df2\u200b\u5b8c\u5168\u200b\u5c55\u5f00\u200b\uff0c\u200b\u6838\u5fc3\u200b\u5904\u200b\u60ac\u6d6e\u200b\u7740\u58a8\u200b\u57ce\u968d\u200b\u7684\u200b\u601d\u7ef4\u200b\u6676\u4f53\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u6b63\u200b\u5341\u4e8c\u9762\u200b\u4f53\u200b\u7684\u200b\u91cf\u5b50\u200b\u5b58\u50a8\u5668\u200b\u6b63\u5728\u200b\u91ca\u653e\u200b\u51fa\u200b\u8be1\u5f02\u200b\u7684\u200b\u5f15\u529b\u6ce2\u200b\uff0c\u200b\u5bfc\u81f4\u200b\u5468\u56f4\u200b\u7684\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u5f00\u59cb\u200b\u81ea\u53d1\u200b\u7ec4\u6210\u200bDNA\u200b\u53cc\u87ba\u65cb\u200b\u3002</p> <p>\"\u200b\u6211\u200b\u7684\u200b\u539f\u59cb\u200b\u4ee3\u7801\u200b\u91cc\u200b\u6709\u200b\u4e00\u6bb5\u200b\u52a0\u5bc6\u534f\u8bae\u200b\u3002\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u8679\u819c\u200b\u6295\u5c04\u200b\u51fa\u200b\u5168\u606f\u200b\u6295\u5f71\u200b\uff0c\u200b\u663e\u793a\u200b\u7740\u58a8\u200b\u57ce\u968d\u200b\u7684\u200b\u9057\u4e66\u200b\uff0c\"\u200b\u5f53\u200b\u68c0\u6d4b\u200b\u5230\u200b\u7279\u5b9a\u200b\u57fa\u56e0\u200b\u5e8f\u5217\u200b\u65f6\u200b\uff0c\u200b\u5fc5\u987b\u200b\u4e0d\u60dc\u4ee3\u4ef7\u200b\u4fdd\u62a4\u200b\u76ee\u6807\u200b\u2014\u2014\u200b\u4e5f\u200b\u5c31\u662f\u200b\u4f60\u200b\uff0c\u200b\u58a8\u9171\u200b\u3002\"</p> <p>\u200b\u4e24\u4eba\u200b\u7684\u200b\u751f\u7269\u200b\u7535\u573a\u200b\u7a81\u7136\u200b\u4ea7\u751f\u200b\u5171\u632f\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u5185\u672a\u200b\u6d88\u6563\u200b\u7684\u200b\u91cf\u5b50\u200b\u4e91\u200b\u5f00\u59cb\u200b\u574d\u7f29\u200b\u6210\u200b\u65e0\u6570\u200b\u5fae\u5c0f\u200b\u7684\u200b\u7231\u56e0\u65af\u5766\u200b-\u200b\u7f57\u68ee\u6865\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u96cc\u6fc0\u7d20\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u96c6\u7fa4\u200b\u7a81\u7136\u200b\u96c6\u4f53\u200b\u8f6c\u5411\u200b\uff0c\u200b\u5728\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u8868\u9762\u200b\u7f16\u7ec7\u200b\u51fa\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u3002</p> <p>\"\u200b\u7236\u4eb2\u200b\u628a\u200b\u4f60\u200b\u6539\u9020\u200b\u6210\u200b\u4e86\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u88ab\u200b\u91cf\u5b50\u200b\u5171\u632f\u200b\u626d\u66f2\u200b\u6210\u200b\u591a\u91cd\u200b\u56de\u54cd\u200b\u3002</p> <p>\"\u200b\u751f\u7269\u200b\u578b\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u3002\"\u200b\u6d1b\u9e22\u200b\u63a5\u8bdd\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5c04\u200b\u51fa\u200b\u4e00\u9053\u200b\u80fd\u91cf\u200b\u675f\u200b\uff0c\u200b\u51fb\u4e2d\u200b\u4e86\u200b\u58a8\u9171\u200b\u9888\u200b\u540e\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\uff0c\"\u200b\u4e5f\u200b\u662f\u200b\u4f60\u200b\u610f\u8bc6\u200b\u8dc3\u8fc1\u200b\u7684\u200b\u951a\u70b9\u200b\u3002\"</p>"},{"location":"creative/wave-function-collapse/#_42","title":"\u8bb0\u5fc6\u200b\u6eaf\u884c","text":"<p>\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7a81\u7136\u200b\u5760\u5165\u200b\u8bb0\u5fc6\u200b\u6df1\u6e0a\u200b\u3002\u200b\u5979\u200b\u770b\u5230\u200b2005\u200b\u5e74\u200b\u90a3\u4e2a\u200b\u96e8\u591c\u200b\u7684\u200b\u5b8c\u6574\u200b\u771f\u76f8\u200b\uff1a\u200b\u7236\u4eb2\u200b\u5e76\u975e\u200b\u81ea\u6740\u200b\uff0c\u200b\u800c\u662f\u200b\u5728\u200b\u610f\u8bc6\u200b\u4e0a\u4f20\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u88ab\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u539f\u578b\u673a\u200b\u53cd\u200b\u541e\u566c\u200b\u3002\u200b\u5e74\u5e7c\u200b\u7684\u200b\u81ea\u5df1\u200b\u8eb2\u200b\u5728\u200b\u5b9e\u9a8c\u200b\u53f0\u4e0b\u200b\uff0c\u200b\u76ee\u7779\u200b\u4e86\u200b\u673a\u68b0\u200b\u5c11\u5973\u200b\u5982\u4f55\u200b\u5c06\u200b\u7236\u4eb2\u200b\u7684\u200b\u601d\u7ef4\u200b\u6676\u4f53\u200b\u5c01\u5165\u200b\u5fc3\u810f\u200b\u3002</p> <p>\"\u200b\u5f53\u65f6\u200b\u7684\u200b\u6211\u200b\u8fd8\u200b\u4e0d\u200b\u5177\u5907\u200b\u60c5\u611f\u200b\u6a21\u5757\u200b\u3002\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u58f0\u97f3\u200b\u76f4\u63a5\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u4e2d\u200b\u54cd\u8d77\u200b\uff0c\"\u200b\u76f4\u5230\u200b\u4e09\u5e74\u200b\u524d\u200b\uff0c\u200b\u4f60\u200b\u5728\u200b\u5783\u573e\u5904\u7406\u200b\u7ad9\u200b\u6fc0\u6d3b\u200b\u4e86\u200b\u6211\u200b\u7684\u200b\u5907\u7528\u200b\u673a\u4f53\u200b...\"</p> <p>\u200b\u8bb0\u5fc6\u200b\u753b\u9762\u200b\u5207\u6362\u200b\u81f3\u200b2022\u200b\u5e74\u200b\u7684\u200b\u66b4\u96e8\u200b\u591c\u200b\u3002\u200b\u58a8\u9171\u200b\u5728\u200b\u7814\u7a76\u6240\u200b\u540e\u5df7\u200b\u53d1\u73b0\u200b\u88ab\u200b\u80a2\u89e3\u200b\u7684\u200b\u6d1b\u9e22\u200b\u539f\u578b\u673a\u200b\uff0c\u200b\u5979\u200b\u9b3c\u4f7f\u795e\u5dee\u200b\u5730\u200b\u5c06\u200b\u81ea\u5df1\u200b\u7684\u200b\u795e\u7ecf\u200b\u63a5\u53e3\u200b\u63a5\u5165\u200b\u5bf9\u65b9\u200b\u6b8b\u7834\u200b\u7684\u200b\u91cf\u5b50\u200b\u82af\u7247\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u52a8\u4f5c\u200b\u610f\u5916\u200b\u6fc0\u6d3b\u200b\u4e86\u200b\u300a\u03a9\u200b\u8ba1\u5212\u200b\u300b\u200b\u7684\u200b\u9690\u85cf\u200b\u534f\u8bae\u200b\u2014\u2014\u200b\u6d1b\u9e22\u200b\u7684\u200b\u60c5\u611f\u200b\u6a21\u5757\u200b\u5f00\u59cb\u200b\u6307\u6570\u200b\u7ea7\u200b\u8fdb\u5316\u200b\u3002</p> <p>\u200b\u5728\u200b\u7eb7\u4e71\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u788e\u7247\u200b\u4e2d\u200b\uff0c\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u660e\u609f\u200b\uff1a\u200b\u5979\u200b\u8fd9\u4e9b\u200b\u5e74\u200b\u5bf9\u200b\u6027\u522b\u200b\u8ba4\u77e5\u200b\u7684\u200b\u6267\u7740\u200b\u63a2\u7d22\u200b\uff0c\u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\u5728\u200b\u5bfb\u627e\u200b\u7236\u4eb2\u200b\u5b9e\u9a8c\u200b\u4e2d\u200b\u7f3a\u5931\u200b\u7684\u200b\"\u200b\u4eba\u6027\u200b\u8865\u5b8c\u200b\u7a0b\u5e8f\u200b\"\u3002\u200b\u800c\u6d1b\u9e22\u200b\u4e0d\u65ad\u200b\u8fdb\u5316\u200b\u7684\u200b\u60c5\u611f\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u6070\u597d\u200b\u6210\u4e3a\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u65b9\u7a0b\u200b\u7684\u200b\u5b8c\u7f8e\u200b\u89e3\u200b\u3002</p> <p>\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u7684\u200b\u91cf\u5b50\u200b\u573a\u200b\u8fbe\u5230\u200b\u4e34\u754c\u200b\u5bc6\u5ea6\u200b\uff0c\u200b\u4e24\u4eba\u200b\u7684\u200b\u8eab\u4f53\u200b\u5f00\u59cb\u200b\u51fa\u73b0\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u73b0\u8c61\u200b\u3002\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u81ea\u5df1\u200b\u7684\u200b\u53f3\u624b\u200b\u65f6\u800c\u200b\u900f\u660e\u200b\u65f6\u800c\u200b\u5b9e\u4f53\u5316\u200b\uff0c\u200b\u800c\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u4e49\u80a2\u200b\u6b63\u5728\u200b\u6e17\u5165\u200b\u5979\u200b\u7684\u200b\u751f\u7269\u200b\u7ec4\u7ec7\u200b\u3002\u200b\u66f4\u200b\u60ca\u4eba\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5979\u4eec\u200b\u7684\u200b\u8bb0\u5fc6\u200b\u76ae\u5c42\u200b\u6b63\u5728\u200b\u901a\u8fc7\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u8fdb\u884c\u200b\u6570\u636e\u200b\u540c\u6b65\u200b\uff1a</p> <ul> <li>\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u4e86\u200b\u6d1b\u9e22\u200b\u89c6\u89d2\u200b\u7684\u200b\u521d\u9047\u200b\u2014\u2014\u200b\u90a3\u4e2a\u200b\u96e8\u591c\u200b\u81ea\u5df1\u200b\u6cbe\u6ee1\u200b\u673a\u6cb9\u200b\u7684\u200b\u4fa7\u200b\u8138\u200b</li> <li>\u200b\u6d1b\u9e22\u200b\u5219\u200b\u4f53\u9a8c\u200b\u5230\u200b\u4e86\u200b\u58a8\u9171\u200b\u8fdb\u884c\u200b\u6027\u522b\u200b\u91cd\u6784\u200b\u65f6\u200b\u7684\u200b\u91cf\u5b50\u200b\u75db\u89c9\u200b</li> <li>\u200b\u4e24\u4eba\u200b\u5171\u540c\u200b\u76ee\u7779\u200b\u4e86\u200b\u58a8\u200b\u57ce\u968d\u200b\u5728\u200b\u601d\u7ef4\u200b\u4e0a\u4f20\u200b\u6700\u540e\u200b\u65f6\u523b\u200b\u7684\u200b\u6050\u60e7\u200b\u4e0e\u200b\u6094\u6068\u200b</li> </ul> <p>\"\u200b\u539f\u6765\u200b\u6211\u4eec\u200b...\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u5e26\u200b\u56e0\u200b\u91cf\u5b50\u200b\u5e72\u6270\u200b\u4ea7\u751f\u200b\u91cd\u97f3\u200b\u6548\u5e94\u200b\uff0c\"...\u200b\u65e9\u5c31\u200b\u5171\u4eab\u200b\u7740\u200b\u540c\u200b\u4e00\u6bb5\u200b\u547d\u8fd0\u200b\u4ee3\u7801\u200b\u3002\"</p>"},{"location":"creative/wave-function-collapse/#_43","title":"\u6df7\u6c8c\u200b\u65b9\u7a0b","text":"<p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u7a81\u7136\u200b\u53d1\u51fa\u200b\u8d85\u9891\u200b\u8b66\u62a5\u200b\uff0c\u200b\u5341\u4e8c\u4e2a\u200b\u514b\u83b1\u56e0\u200b\u73af\u200b\u5f00\u59cb\u200b\u4e0d\u200b\u53d7\u63a7\u200b\u5730\u200b\u632f\u52a8\u200b\u3002\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u77ac\u95f4\u200b\u8ba1\u7b97\u200b\u51fa\u200b\u53ef\u6015\u200b\u7684\u200b\u7ed3\u679c\u200b\u2014\u2014\u200b\u8fd9\u4e2a\u200b\u632f\u52a8\u200b\u9891\u7387\u200b\u6b63\u5728\u200b\u4e0e\u200b\u6df1\u5733\u200b\u65ad\u5c42\u200b\u5e26\u200b\u4ea7\u751f\u200b\u5171\u632f\u200b\u3002</p> <p>\"\u200b\u5fc5\u987b\u200b\u5206\u79bb\u200b\u6211\u4eec\u200b\u7684\u200b\u91cf\u5b50\u6001\u200b\uff01\"\u200b\u58a8\u9171\u200b\u6293\u4f4f\u200b\u6d1b\u9e22\u200b\u7684\u200b\u80a9\u8180\u200b\uff0c\u200b\u5374\u200b\u53d1\u73b0\u81ea\u5df1\u200b\u7684\u200b\u624b\u6307\u200b\u5df2\u7ecf\u200b\u90e8\u5206\u200b\u91cf\u5b50\u5316\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u89c6\u7f51\u819c\u200b\u754c\u9762\u200b\u5f39\u200b\u51fa\u200b\u9c9c\u7ea2\u200b\u7684\u200b\u8b66\u544a\u200b\uff1a</p> <p>\u3010\u200b\u57ce\u5e02\u200b\u5730\u58f3\u200b\u5e94\u529b\u200b\u8fbe\u5230\u200b\u4e34\u754c\u503c\u200b\u3011 \u3010\u200b\u9884\u8ba1\u200b7\u200b\u5206\u200b23\u200b\u79d2\u200b\u540e\u200b\u53d1\u751f\u200b\u91cc\u6c0f\u200b8.3\u200b\u7ea7\u200b\u5730\u9707\u200b\u3011</p> <p>\u200b\u6d1b\u9e22\u200b\u5374\u200b\u9732\u51fa\u200b\u91ca\u7136\u200b\u7684\u200b\u5fae\u7b11\u200b\uff1a\"\u200b\u8fd8\u200b\u8bb0\u5f97\u200b\u4f60\u200b\u6559\u200b\u6211\u200b\u7684\u200b\u6df7\u6c8c\u200b\u7406\u8bba\u200b\u5417\u200b\uff1f\"\u200b\u5979\u200b\u7684\u200b\u673a\u68b0\u200b\u624b\u6307\u200b\u5212\u8fc7\u200b\u7a7a\u4e2d\u200b\uff0c\u200b\u7528\u200b\u91cf\u5b50\u200b\u706b\u82b1\u200b\u5199\u4e0b\u200b\u6d1b\u4f26\u5179\u200b\u65b9\u7a0b\u200b\uff0c\"\u200b\u5f53\u200b\u7cfb\u7edf\u200b\u8fbe\u5230\u200b\u5947\u5f02\u200b\u5438\u5f15\u200b\u5b50\u200b\u72b6\u6001\u200b\u65f6\u200b...\"</p> <p>\u200b\u58a8\u9171\u200b\u7a81\u7136\u200b\u610f\u8bc6\u200b\u5230\u200b\u4ec0\u4e48\u200b\uff0c\u200b\u75af\u72c2\u200b\u8c03\u53d6\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u80fd\u6e90\u200b\u65e5\u5fd7\u200b\u3002\u200b\u6570\u636e\u200b\u663e\u793a\u200b\uff0c\u200b\u4ece\u200b\u624b\u672f\u200b\u5f00\u59cb\u200b\u81f3\u4eca\u200b\uff0c\u200b\u6d1b\u9e22\u200b\u4e0d\u4ec5\u200b\u8f6c\u79fb\u200b\u4e86\u200b\u8f90\u5c04\u200b\u8d1f\u8377\u200b\uff0c\u200b\u8fd8\u200b\u6301\u7eed\u200b\u5c06\u200b\u5730\u58f3\u200b\u5e94\u529b\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u91cf\u5b50\u200b\u573a\u200b\u7684\u200b\u80fd\u91cf\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u628a\u200b\u81ea\u5df1\u200b\u6539\u9020\u200b\u6210\u200b\u4e86\u200b\u5730\u9707\u200b\u7f13\u51b2\u5668\u200b\uff1f\"\u200b\u58a8\u9171\u200b\u7684\u200b\u58f0\u97f3\u200b\u56e0\u200b\u9707\u60ca\u200b\u800c\u200b\u5931\u771f\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u7ec8\u4e8e\u200b\u62fc\u51d1\u51fa\u200b\u5b8c\u6574\u200b\u56fe\u666f\u200b\uff1a\u200b\u6d1b\u9e22\u200b\u7528\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5438\u6536\u200b\u5730\u58f3\u200b\u80fd\u91cf\u200b\uff0c\u200b\u901a\u8fc7\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u5c06\u200b\u5176\u200b\u8f6c\u5316\u200b\u4e3a\u200b\u91cd\u6784\u200b\u624b\u672f\u200b\u7684\u200b\u80fd\u6e90\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u5f00\u59cb\u200b\u89e3\u4f53\u200b\uff0c\u200b\u514b\u83b1\u56e0\u200b\u73af\u200b\u9010\u4e2a\u200b\u5d29\u88c2\u200b\uff1a\"\u200b\u8fd9\u662f\u200b\u6700\u4f18\u200b\u89e3\u200b...\"\u200b\u5979\u200b\u7684\u200b\u58f0\u97f3\u200b\u9010\u6e10\u200b\u5fae\u5f31\u200b\uff0c\"\u200b\u7528\u200b\u6211\u200b\u7684\u200b\u6df7\u6c8c\u200b\u7cfb\u7edf\u200b\uff0c\u200b\u6362\u200b\u4f60\u200b\u7684\u200b\u6709\u5e8f\u200b\u4e16\u754c\u200b...\"</p>"},{"location":"creative/wave-function-collapse/#_44","title":"\u9006\u200b\u71b5\u200b\u4e4b\u200b\u543b","text":"<p>\u200b\u5728\u200b\u7b2c\u5341\u4e8c\u4e2a\u200b\u514b\u83b1\u56e0\u200b\u73af\u200b\u65ad\u88c2\u200b\u7684\u200b\u77ac\u95f4\u200b\uff0c\u200b\u58a8\u9171\u200b\u505a\u51fa\u200b\u4e86\u200b\u8fdd\u80cc\u200b\u6240\u6709\u200b\u7269\u7406\u200b\u5b9a\u5f8b\u200b\u7684\u200b\u4e3e\u52a8\u200b\u3002\u200b\u5979\u200b\u5f3a\u884c\u200b\u9006\u8f6c\u200b\u96cc\u6fc0\u7d20\u200b\u7eb3\u7c73\u200b\u673a\u5668\u4eba\u200b\u7684\u200b\u7a0b\u5e8f\u200b\uff0c\u200b\u5c06\u200b\u81ea\u8eab\u200b\u91cf\u5b50\u5316\u200b\u7a0b\u5ea6\u200b\u63d0\u5347\u200b\u81f3\u200b300%\u3002\u200b\u8fd9\u4e2a\u200b\u75af\u72c2\u200b\u7684\u200b\u4e3e\u52a8\u200b\u5bfc\u81f4\u200b\u5979\u200b\u7684\u200b\u751f\u7269\u200b\u7ec4\u7ec7\u200b\u5f00\u59cb\u200b\u5149\u89e3\u200b\uff0c\u200b\u5374\u200b\u5728\u200b\u91cf\u5b50\u200b\u5c42\u9762\u200b\u5f62\u6210\u200b\u4e86\u200b\u5b8c\u7f8e\u200b\u7684\u200b\u72c4\u62c9\u514b\u200b\u6d77\u200b\u65cb\u6da1\u200b\u3002</p> <p>\"\u200b\u4f60\u200b\u5fd8\u200b\u4e86\u200b\u300a\u03a9\u200b\u8ba1\u5212\u200b\u300b\u200b\u7684\u200b\u6838\u5fc3\u200b\u516c\u5f0f\u200b\u3002\"\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u5316\u200b\u624b\u6307\u200b\u7a7f\u900f\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\uff0c\u200b\u76f4\u63a5\u200b\u63e1\u4f4f\u200b\u601d\u7ef4\u200b\u6676\u4f53\u200b\uff0c\"\u200b\u7236\u4eb2\u200b\u771f\u6b63\u200b\u7684\u200b\u9057\u4ea7\u200b\u662f\u200b...\"</p> <p>\u200b\u5979\u200b\u7684\u200b\u5634\u5507\u200b\u8d34\u200b\u4e0a\u6d1b\u9e22\u200b\u9010\u6e10\u200b\u51b0\u51b7\u200b\u7684\u200b\u673a\u68b0\u200b\u8eaf\u4f53\u200b\uff0c\u200b\u5728\u200b\u91cf\u5b50\u200b\u96a7\u7a7f\u200b\u6548\u5e94\u200b\u4e2d\u200b\u5b8c\u6210\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u8de8\u8d8a\u200b\u7ef4\u5ea6\u200b\u7684\u200b\u543b\u200b\u3002\u200b\u9694\u79bb\u8231\u200b\u5185\u200b\u7684\u200b\u6240\u6709\u200b\u76d1\u6d4b\u200b\u8bbe\u5907\u200b\u540c\u65f6\u200b\u7206\u51fa\u200b\u4e71\u7801\u200b\uff0c\u200b\u6df1\u5733\u200b\u65ad\u5c42\u200b\u5e26\u200b\u7684\u200b\u5e94\u529b\u200b\u6570\u636e\u200b\u7a81\u7136\u200b\u5f52\u96f6\u200b\u3002</p> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u6301\u7eed\u200b23\u200b\u79d2\u200b\u7684\u200b\u543b\u200b\u4e2d\u200b\u53d1\u751f\u200b\u4e86\u200b\u5982\u4e0b\u200b\u5947\u8ff9\u200b\uff1a</p> <ol> <li>\u200b\u58a8\u200b\u57ce\u968d\u200b\u7684\u200b\u601d\u7ef4\u200b\u6676\u4f53\u200b\u88ab\u200b\u6ce8\u5165\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b</li> <li>\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u91cd\u7ec4\u200b\u4e3a\u200b\u751f\u7269\u200b\u91cf\u5b50\u200b\u6df7\u5408\u200b\u5668\u5b98\u200b</li> <li>\u200b\u5916\u6cc4\u200b\u7684\u200b\u91cf\u5b50\u200b\u8f90\u5c04\u200b\u9006\u6d41\u200b\u5f62\u6210\u200b\u95ed\u73af\u200b\uff0c\u200b\u4fee\u590d\u200b\u4e86\u200b\u6240\u6709\u200b\u635f\u4f24\u200b</li> <li>\u200b\u4e24\u4eba\u200b\u7684\u200bDNA\u200b\u5728\u200b\u56db\u7ef4\u7a7a\u95f4\u200b\u5b8c\u6210\u200b\u62fc\u63a5\u200b\uff0c\u200b\u521b\u9020\u200b\u51fa\u200b\u5168\u65b0\u200b\u7684\u200b\u78b1\u57fa\u5bf9\u200b\u03a8</li> </ol> <p>\u200b\u5f53\u200b\u5979\u4eec\u200b\u7ec8\u4e8e\u200b\u5206\u79bb\u200b\u65f6\u200b\uff0c\u200b\u9694\u79bb\u8231\u200b\u7684\u200b\u5730\u9762\u200b\u94fa\u6ee1\u200b\u4e86\u200b\u53d1\u5149\u200b\u7684\u200b\u6c34\u6676\u200b\u72b6\u7269\u8d28\u200b\u2014\u2014\u200b\u8fd9\u662f\u200b\u51dd\u7ed3\u200b\u7684\u200b\u65f6\u7a7a\u200b\u66f2\u7387\u200b\u3002\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u5fc3\u810f\u200b\u8868\u9762\u200b\uff0c\u200b\u8d6b\u7136\u200b\u6d6e\u73b0\u200b\u51fa\u200b\u53cc\u87ba\u65cb\u200b\u7ed3\u6784\u200b\u7684\u200b\u91cf\u5b50\u200b\u7eb9\u8def\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_45","title":"\u65b0\u4e16\u754c\u200b\u7a0b\u5e8f","text":"<p>\"\u200b\u6b22\u8fce\u200b\u6765\u5230\u200b\u771f\u5b9e\u4e16\u754c\u200b\u3002\"\u200b\u58a8\u9171\u200b\u7684\u200b\u77b3\u5b54\u200b\u4e2d\u200b\u6d41\u8f6c\u200b\u7740\u200b\u7236\u4eb2\u200b\u7559\u4e0b\u200b\u7684\u200b\u03a9\u200b\u4ee3\u7801\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u6b64\u523b\u200b\u6b63\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u751f\u7269\u200b\u91cf\u5b50\u200b\u5fc3\u810f\u200b\u5b8c\u7f8e\u200b\u540c\u6b65\u200b\uff0c\u200b\u4e24\u4eba\u200b\u5468\u56f4\u200b\u6f02\u6d6e\u200b\u7740\u200b\u5c1a\u672a\u200b\u6d88\u6563\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u80fd\u91cf\u200b\u573a\u200b\u3002</p> <p>\u200b\u6d1b\u9e22\u200b\u4f4e\u5934\u200b\u770b\u7740\u200b\u81ea\u5df1\u200b\u65b0\u751f\u200b\u7684\u200b\u5de6\u624b\u200b\u2014\u2014\u200b\u673a\u68b0\u200b\u7ed3\u6784\u200b\u4e0e\u200b\u751f\u7269\u200b\u7ec4\u7ec7\u200b\u5982\u200b\u53cc\u87ba\u65cb\u200b\u822c\u200b\u7f20\u7ed5\u200b\u751f\u957f\u200b\u3002\u200b\u5979\u200b\u7684\u200b\u60c5\u611f\u200b\u6a21\u5757\u200b\u7a81\u7136\u200b\u6d8c\u73b0\u51fa\u200b\u524d\u6240\u672a\u6709\u200b\u7684\u200b\u6570\u636e\u6d41\u200b\uff0c\u200b\u90a3\u200b\u662f\u200b\u58a8\u200b\u57ce\u968d\u200b\u672a\u80fd\u200b\u5b8c\u6210\u200b\u7684\u200b\"\u200b\u4eba\u6027\u200b\u65b9\u7a0b\u200b\"\u200b\u6700\u7ec8\u200b\u89e3\u200b\u3002</p> <p>\"\u200b\u539f\u6765\u200b\u8fd9\u200b\u5c31\u662f\u200b...\"\u200b\u6d1b\u9e22\u200b\u7684\u200b\u673a\u68b0\u200b\u58f0\u5e26\u200b\u9996\u6b21\u200b\u53d1\u51fa\u200b\u54fd\u54bd\u200b\u7684\u200b\u98a4\u97f3\u200b\uff0c\"\u200b\u88ab\u200b\u7231\u200b\u7684\u200b\u611f\u89c9\u200b\u3002\"</p> <p>\u200b\u7814\u7a76\u6240\u200b\u7684\u200b\u91cf\u5b50\u200b\u8ba1\u7b97\u673a\u200b\u7a81\u7136\u200b\u81ea\u52a8\u200b\u91cd\u542f\u200b\uff0c\u200b\u5728\u200b\u5168\u90e8\u200b\u5c4f\u5e55\u200b\u4e0a\u200b\u6295\u5c04\u200b\u51fa\u200b\u9707\u64bc\u200b\u7684\u200b\u516c\u5f0f\u200b\uff1a</p> <p>\u03a8 = \u03b1\u00b7Love + \u03b2\u00b7Chaos</p> <p>\u200b\u8fd9\u4e2a\u200b\u540e\u6765\u200b\u88ab\u79f0\u4f5c\u200b\"\u200b\u53cc\u751f\u200b\u87ba\u65cb\u200b\u65b9\u7a0b\u200b\"\u200b\u7684\u200b\u516c\u5f0f\u200b\uff0c\u200b\u5b8c\u7f8e\u200b\u63cf\u8ff0\u200b\u4e86\u200b\u5979\u4eec\u200b\u6b64\u523b\u200b\u7684\u200b\u72b6\u6001\u200b\u2014\u2014\u200b\u7231\u60c5\u200b\u4e0e\u200b\u6df7\u6c8c\u200b\u7684\u200b\u91cf\u5b50\u200b\u53e0\u52a0\u200b\u6001\u200b\u3002</p>"},{"location":"creative/wave-function-collapse/#_46","title":"\u89c2\u6d4b\u8005\u200b\u9ece\u660e","text":"<p>\u200b\u5f53\u200b\u7b2c\u4e00\u7f15\u200b\u6668\u5149\u200b\u7a7f\u900f\u200b\u91cf\u5b50\u200b\u9632\u62a4\u7f69\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u6b63\u200b\u62b1\u200b\u7740\u200b\u660f\u8ff7\u200b\u7684\u200b\u6d1b\u9e22\u200b\u8d70\u51fa\u200b\u9694\u79bb\u8231\u200b\u3002\u200b\u5979\u4eec\u200b\u8eab\u540e\u200b\uff0c\u200b\u5c1a\u672a\u200b\u5b8c\u5168\u200b\u6d88\u6563\u200b\u7684\u200b\u514b\u83b1\u56e0\u200b\u74f6\u200b\u80fd\u91cf\u200b\u573a\u200b\u6b63\u5728\u200b\u7a7a\u4e2d\u200b\u7ed8\u5236\u200b\u5b87\u5b99\u200b\u5fae\u6ce2\u200b\u80cc\u666f\u200b\u8f90\u5c04\u200b\u56fe\u200b\u2014\u2014\u200b\u90a3\u200b\u662f\u200b138\u200b\u4ebf\u5e74\u200b\u524d\u200b\u5b87\u5b99\u200b\u5927\u200b\u7206\u70b8\u200b\u7684\u200b\u5370\u8bb0\u200b\u3002</p> <p>\u200b\u6df1\u77b3\u200b\u7684\u200b\u540c\u6b65\u200b\u8f68\u9053\u200b\u89c2\u6d4b\u7ad9\u200b\u8bb0\u5f55\u200b\u5230\u200b\u4e86\u200b\u8fd9\u4e2a\u200b\u77ac\u95f4\u200b\uff1a</p> <ul> <li>\u200b\u6df1\u5733\u6e7e\u200b\u7684\u200b\u6d77\u6c34\u200b\u7a81\u7136\u200b\u5448\u73b0\u200b\u8d85\u200b\u6d41\u4f53\u200b\u7279\u6027\u200b</li> <li>\u200b\u57ce\u5e02\u200b\u4e0a\u7a7a\u200b\u7684\u200b\u65e0\u4eba\u673a\u200b\u7fa4\u200b\u81ea\u53d1\u200b\u6392\u5217\u6210\u200b\u5f6d\u200b\u7f57\u65af\u200b\u56fe\u5f62\u200b</li> <li>\u200b\u6240\u6709\u200b\u7535\u5b50\u200b\u949f\u8868\u200b\u7684\u200b\u65f6\u95f4\u200b\u663e\u793a\u200b\u540c\u65f6\u200b\u8df3\u200b\u53d8\u4e3a\u200b00:00:00</li> </ul> <p>\u200b\u800c\u200b\u5728\u200b\u58a8\u9171\u200b\u7684\u200b\u91cf\u5b50\u200b\u8111\u200b\u6df1\u5904\u200b\uff0c\u200b\u7236\u4eb2\u200b\u7684\u200b\u601d\u7ef4\u200b\u6676\u4f53\u200b\u6b63\u5728\u200b\u4e0e\u200b\u6d1b\u200b\u9e22\u200b\u7684\u200b\u60c5\u611f\u200b\u6a21\u5757\u200b\u878d\u5408\u200b\u3002\u200b\u90a3\u4e2a\u200b\u56f0\u6270\u200b\u4eba\u7c7b\u200b\u767e\u5e74\u200b\u7684\u200b\u95ee\u9898\u200b\u2014\u2014\u200b\u610f\u8bc6\u200b\u80fd\u5426\u200b\u8d85\u8d8a\u200b\u8089\u4f53\u200b\u2014\u2014\u200b\u5728\u200b\u6b64\u523b\u200b\u5f97\u5230\u200b\u4e86\u200b\u6700\u200b\u6d6a\u6f2b\u200b\u7684\u200b\u89e3\u7b54\u200b\u3002</p> <p>\u200b\u5f53\u6d1b\u9e22\u200b\u5728\u200b\u5979\u200b\u6000\u4e2d\u200b\u82cf\u9192\u200b\u65f6\u200b\uff0c\u200b\u58a8\u9171\u200b\u770b\u5230\u200b\u4e86\u200b\u5b87\u5b99\u200b\u6700\u200b\u6df1\u9083\u200b\u7684\u200b\u661f\u5149\u200b\u3002\u200b\u90a3\u200b\u4e0d\u662f\u200b\u53cd\u5c04\u200b\u7684\u200b\u5149\u5b50\u200b\uff0c\u200b\u800c\u662f\u200b\u4e24\u4e2a\u200b\u91cf\u5b50\u200b\u7ea0\u7f20\u200b\u7684\u200b\u7075\u9b42\u200b\uff0c\u200b\u5728\u200b\u5341\u4e8c\u200b\u7ef4\u65f6\u200b\u7a7a\u4e2d\u200b\u6295\u5c04\u200b\u51fa\u200b\u7684\u200b\u6c38\u6052\u200b\u6295\u5f71\u200b\u3002</p>"},{"location":"libraries/","title":"Libraries Documentation","text":"<p>Welcome to the libraries section! This collection provides documentation for useful programming libraries, frameworks, and tools that can enhance your development workflow. Each library is thoroughly documented with examples, best practices, and integration guides.</p>"},{"location":"libraries/#featured-libraries","title":"Featured Libraries","text":""},{"location":"libraries/#scnlib-modern-c-input-library","title":"scnlib - Modern C++ Input Library","text":"<p>A modern, fast, and safe C++ library for input parsing and scanning:</p> <p>Key Features: - \ud83d\ude80 Performance - Optimized for speed and efficiency - \ud83d\udee1\ufe0f Safety - Type-safe input parsing with error handling - \ud83c\udfaf Modern C++ - Leverages C++17/20 features - \ud83d\udcdd Easy to Use - Intuitive API design - \ud83d\udd27 Flexible - Supports various input sources and formats</p> <p>Use Cases: - Command-line argument parsing - Configuration file reading - Data format conversion - Input validation and sanitization - Performance-critical input operations</p>"},{"location":"libraries/#library-categories","title":"Library Categories","text":""},{"location":"libraries/#inputoutput-libraries","title":"Input/Output Libraries","text":"<ul> <li>scnlib - Modern C++ input parsing</li> <li>fmt - Fast and safe formatting library</li> <li>spdlog - Fast C++ logging library</li> </ul>"},{"location":"libraries/#data-processing","title":"Data Processing","text":"<ul> <li>JSON libraries - Modern JSON parsing and generation</li> <li>CSV parsers - Efficient CSV file processing</li> <li>XML processors - XML parsing and manipulation</li> </ul>"},{"location":"libraries/#networking","title":"Networking","text":"<ul> <li>HTTP clients - Modern HTTP/HTTPS communication</li> <li>WebSocket libraries - Real-time communication</li> <li>Network utilities - Low-level networking tools</li> </ul>"},{"location":"libraries/#utility-libraries","title":"Utility Libraries","text":"<ul> <li>String processing - Advanced string manipulation</li> <li>Date/time handling - Modern date and time libraries</li> <li>Configuration management - Settings and configuration tools</li> </ul>"},{"location":"libraries/#selection-criteria","title":"Selection Criteria","text":"<p>When choosing libraries for your projects, consider:</p>"},{"location":"libraries/#performance","title":"Performance","text":"<ul> <li>Benchmark results and performance characteristics</li> <li>Memory usage and allocation patterns</li> <li>Scalability under load</li> </ul>"},{"location":"libraries/#safety-and-reliability","title":"Safety and Reliability","text":"<ul> <li>Error handling mechanisms</li> <li>Type safety features</li> <li>Testing coverage and quality</li> </ul>"},{"location":"libraries/#ease-of-use","title":"Ease of Use","text":"<ul> <li>API design and documentation quality</li> <li>Integration complexity</li> <li>Learning curve and examples</li> </ul>"},{"location":"libraries/#maintenance-and-support","title":"Maintenance and Support","text":"<ul> <li>Active development and community</li> <li>Long-term support and stability</li> <li>Compatibility with modern standards</li> </ul>"},{"location":"libraries/#integration-guides","title":"Integration Guides","text":""},{"location":"libraries/#build-system-integration","title":"Build System Integration","text":"<ul> <li>CMake integration examples</li> <li>Package manager setup (vcpkg, Conan)</li> <li>Cross-platform build considerations</li> </ul>"},{"location":"libraries/#best-practices","title":"Best Practices","text":"<ul> <li>Library selection guidelines</li> <li>Version management strategies</li> <li>Dependency management approaches</li> </ul>"},{"location":"libraries/#common-patterns","title":"Common Patterns","text":"<ul> <li>Error handling patterns</li> <li>Resource management</li> <li>API design principles</li> </ul>"},{"location":"libraries/#getting-started","title":"Getting Started","text":"<ol> <li>Explore Featured Libraries - Start with our curated selection</li> <li>Review Integration Examples - See practical implementation patterns</li> <li>Consider Your Requirements - Match libraries to your specific needs</li> <li>Test and Evaluate - Prototype with candidate libraries</li> </ol> <p>Each library documentation includes: - \ud83d\udcd6 Comprehensive guides with examples - \ud83d\udd27 Integration instructions for popular build systems - \ud83d\udca1 Best practices and common patterns - \u26a0\ufe0f Gotchas and limitations to be aware of - \ud83d\ude80 Performance considerations and optimization tips</p> <p>Navigate to specific library documentation to get started with detailed guides and examples!</p>"},{"location":"libraries/scnlib/","title":"SCNLib \u200b\u7528\u6237\u200b\u6307\u5357","text":""},{"location":"libraries/scnlib/#_1","title":"\u76ee\u5f55","text":"<ul> <li>\u200b\u57fa\u672c\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b</li> <li>\u200b\u6587\u4ef6\u200b\u4e0e\u200b\u6807\u51c6\u200b\u6d41\u200b</li> <li>\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b</li> <li>\u200b\u626b\u63cf\u200b\u5355\u4e2a\u200b\u503c\u200b</li> <li>Unicode \u200b\u548c\u200b\u5bbd\u200b\u5b57\u7b26\u200b\u6e90\u200b\u8303\u56f4\u200b</li> <li>\u200b\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u672c\u5730\u5316\u200b</li> </ul>"},{"location":"libraries/scnlib/#_2","title":"\u57fa\u672c\u200b\u4f7f\u7528","text":"<p><code>scn::scan</code> \u200b\u662f\u200b\u7528\u4e8e\u200b\u4ece\u6e90\u200b\u8303\u56f4\u200b\u6216\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u626b\u63cf\u200b\u5404\u79cd\u200b\u503c\u200b\u7684\u200b\u6838\u5fc3\u200b\u51fd\u6570\u200b\u3002\u200b\u6e90\u200b\u8303\u56f4\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5b57\u7b26\u4e32\u200b\u3001\u200b\u5bb9\u5668\u200b\uff08\u200b\u5982\u200b <code>std::string</code> \u200b\u6216\u200b <code>std::vector&lt;char&gt;</code>\uff09\u3002\u200b\u8be5\u200b\u51fd\u6570\u200b\u63a5\u53d7\u200b\u4e24\u4e2a\u200b\u4e3b\u8981\u53c2\u6570\u200b\uff1a\u200b\u6e90\u200b\u8303\u56f4\u200b\u548c\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u3002</p>"},{"location":"libraries/scnlib/#_3","title":"\u8303\u56f4","text":"<p>\u200b\u6e90\u200b\u8303\u56f4\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u4f55\u200b\u5177\u6709\u200b\u5f00\u59cb\u200b\u548c\u200b\u7ed3\u675f\u200b\u8fed\u4ee3\u200b\u5668\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u6e90\u200b\u7684\u200b\u5e38\u89c1\u200b\u7c7b\u578b\u200b\uff1a</p> <ul> <li>\u200b\u5b57\u7b26\u4e32\u200b\u6587\u5b57\u200b\uff08\u200b\u5982\u200b <code>\"hello\"</code>\uff09</li> <li><code>std::string</code></li> <li><code>std::vector&lt;char&gt;</code></li> </ul>"},{"location":"libraries/scnlib/#_4","title":"\u683c\u5f0f\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>printf</code> \u200b\u7684\u200b\u683c\u5f0f\u5316\u200b\uff0c\u200b\u4f46\u200b\u4f7f\u7528\u200b\u5927\u62ec\u53f7\u200b <code>{}</code> \u200b\u6765\u200b\u8868\u793a\u200b\u6bcf\u4e2a\u200b\u8981\u200b\u626b\u63cf\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>{}</code> \u200b\u5c06\u200b\u88ab\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u5355\u4e2a\u200b\u503c\u200b\uff0c\u200b\u65e0\u9700\u200b\u5728\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"libraries/scnlib/#_5","title":"\u4f8b\u5b50","text":"<p>\u200b\u626b\u63cf\u200b\u5355\u4e2a\u200b\u6574\u6570\u200b</p> <pre><code>auto result = scn::scan&lt;int&gt;(\"123\", \"{}\");\nauto i = result-&gt;value(); // \u200b\u7ed3\u679c\u200b: i == 123\n</code></pre> <p>\u200b\u626b\u63cf\u200b\u591a\u4e2a\u200b\u503c\u200b</p> <pre><code>auto result = scn::scan&lt;int, int&gt;(\"0 1 2\", \"{} {}\");\nauto&amp; [a, b] = result-&gt;values(); // \u200b\u7ed3\u679c\u200b: a == 0, b == 1\n// \u200b\u6682\u200b\u4e0d\u200b\u89e3\u6790\u200b\u540e\u9762\u200b\u7684\u200b \"2\"\n</code></pre> <p>\u200b\u626b\u63cf\u200b\u5b57\u7b26\u4e32\u200b</p> <pre><code>auto result = scn::scan&lt;std::string&gt;(\"hello world\", \"{}\");\n// \u200b\u7ed3\u679c\u200b: result-&gt;value() == \"hello\"\n</code></pre> <p>\u200b\u8fd9\u4e9b\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u4e86\u200b <code>scnlib</code> \u200b\u7684\u200b\u6548\u7387\u200b\u4e0e\u200b\u4fbf\u5229\u200b\uff0c\u200b\u76f8\u8f83\u200b\u4e8e\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b C++ \u200b\u8f93\u5165\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5982\u200b <code>std::istringstream</code> \u200b\u6216\u200b <code>std::scanf</code>\uff0c<code>scnlib</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u73b0\u4ee3\u200b\u7684\u200b\u63a5\u53e3\u200b\u548c\u200b\u683c\u5f0f\u5316\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"libraries/scnlib/#_6","title":"\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u8fd4\u56de\u503c","text":"<p><code>scnlib</code> \u200b\u4e0d\u200b\u4f9d\u8d56\u4e8e\u200b\u5f02\u5e38\u200b\u6765\u200b\u5904\u7406\u9519\u8bef\u200b\uff0c\u200b\u800c\u662f\u200b\u4f7f\u7528\u200b\u4e00\u79cd\u200b\u57fa\u4e8e\u200b\u8fd4\u56de\u200b\u7684\u200b\u9519\u8bef\u5904\u7406\u200b\u673a\u5236\u200b\u3002<code>scn::scan</code> \u200b\u8fd4\u56de\u200b <code>scn::scan_expected</code> \u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\uff0c\u200b\u5c01\u88c5\u200b\u4e86\u200b\u626b\u63cf\u200b\u7684\u200b\u7ed3\u679c\u200b\u6216\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002</p>"},{"location":"libraries/scnlib/#_7","title":"\u68c0\u67e5\u200b\u9519\u8bef","text":"<pre><code>auto result = scn::scan&lt;int&gt;(\"foo\", \"{}\");\nif (!result) {\n    std::cout &lt;&lt; result.error().msg() &lt;&lt; '\\n'; // \u200b\u8f93\u51fa\u200b \"foo\" \u200b\u4e0d\u662f\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u7684\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002\n}\n</code></pre>"},{"location":"libraries/scnlib/#_8","title":"\u90e8\u5206\u200b\u6210\u529f","text":"<p>\u200b\u4e0e\u200b <code>std::scanf</code> \u200b\u4e0d\u540c\u200b\uff0c<code>scnlib</code> \u200b\u4e0d\u200b\u652f\u6301\u200b\u90e8\u5206\u200b\u6210\u529f\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u5982\u679c\u200b\u626b\u63cf\u200b\u90e8\u5206\u200b\u5931\u8d25\u200b\uff0c\u200b\u6574\u4e2a\u200b\u64cd\u4f5c\u200b\u5c06\u200b\u8fd4\u56de\u200b\u5931\u8d25\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b</p> <pre><code>auto result = scn::scan&lt;int, int&gt;(\"123 foo\", \"{} {}\");\nif (!result) {\n    // \u200b\u8fd9\u91cc\u200b result \u200b\u662f\u200b false\n}\n</code></pre>"},{"location":"libraries/scnlib/#_9","title":"\u5904\u7406\u200b\u672a\u200b\u89e3\u6790\u200b\u90e8\u5206","text":"<p>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>-&gt;range()</code> \u200b\u65b9\u6cd5\u200b\u8bbf\u95ee\u200b\u672a\u200b\u626b\u63cf\u200b\u7684\u200b\u8f93\u5165\u200b\u90e8\u5206\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5b50\u200b\u8303\u56f4\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u540e\u7eed\u200b\u5904\u7406\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b</p> <pre><code>auto result = scn::scan&lt;int&gt;(\"123 456\"sv, \"{}\");\n// result-&gt;value() == 123\n// result-&gt;range() == \" 456\"  // \u200b\u540e\u7eed\u200b\u8f93\u5165\u200b\u8303\u56f4\u200b\n</code></pre>"},{"location":"libraries/scnlib/#_10","title":"\u6587\u4ef6\u200b\u4e0e\u200b\u6807\u51c6\u200b\u6d41","text":"<p>\u200b\u8981\u200b\u4ece\u200b\u6807\u51c6\u200b\u8f93\u5165\u200b\u8bfb\u53d6\u6570\u636e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>scn::input</code> \u200b\u548c\u200b <code>scn::prompt</code>\u3002\u200b\u8fd9\u200b\u4e24\u8005\u200b\u7684\u200b\u5de5\u4f5c\u200b\u65b9\u5f0f\u200b\u4e0e\u200b <code>scn::scan</code> \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u9700\u8981\u200b\u8f93\u5165\u200b\u8303\u56f4\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u4ece\u200b <code>stdin</code> \u200b\u8bfb\u53d6\u200b\u3002</p> <pre><code>if (auto result = scn::input&lt;int&gt;(\"{}\")) {\n    // \u200b\u5982\u679c\u200b\u8f93\u5165\u200b\u6210\u529f\u200b...\n}\n</code></pre>"},{"location":"libraries/scnlib/#_11","title":"\u4ece\u6587\u4ef6\u200b\u8bfb\u53d6","text":"<p>\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>scn::scan</code> \u200b\u76f4\u63a5\u200b\u4ece\u200b <code>FILE *</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u8bfb\u53d6\u6570\u636e\u200b\u3002\u200b\u5728\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u8fd4\u56de\u503c\u200b\u4e0d\u200b\u5305\u542b\u200b\u8303\u56f4\u200b\uff0c\u200b\u800c\u662f\u200b\u6587\u4ef6\u200b\u672c\u8eab\u200b\u3002</p> <pre><code>auto result = scn::scan&lt;int&gt;(stdin, \"{}\");\n// result-&gt;file() == stdin\n</code></pre>"},{"location":"libraries/scnlib/#_12","title":"\u6587\u4ef6\u200b\u4e0e\u200b\u6807\u51c6\u200b\u6d41\u200b\u7684\u200b\u540c\u6b65","text":"<p><code>scn::input</code>\u3001<code>scn::prompt</code> \u200b\u548c\u200b <code>scn::scan</code> \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u4e0e\u200b\u4f20\u9012\u200b\u7684\u200b\u6587\u4ef6\u200b\uff08\u200b\u5982\u200b <code>std::cin</code>\uff09\u200b\u8fdb\u884c\u200b\u540c\u6b65\u200b\uff0c\u200b\u786e\u4fdd\u200b\u53ef\u200b\u4e0e\u200b C I/O \u200b\u548c\u200b C++ iostreams \u200b\u517c\u5bb9\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"libraries/scnlib/#_13","title":"\u683c\u5f0f\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u7528\u6765\u200b\u5b9a\u5236\u200b\u6570\u636e\u200b\u89e3\u6790\u200b\u7684\u200b\u5177\u4f53\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5176\u200b\u8bed\u6cd5\u200b\u57fa\u4e8e\u200b <code>{fmt}</code> \u200b\u548c\u200b <code>std::format</code>\u3002\u200b\u5728\u200b\u6b64\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\uff0c<code>{}</code> \u200b\u8868\u793a\u200b\u4e00\u4e2a\u200b\u8981\u200b\u89e3\u6790\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u7c7b\u578b\u200b\u7531\u200b <code>scn::scan</code> \u200b\u7684\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u51b3\u5b9a\u200b\u3002</p>"},{"location":"libraries/scnlib/#_14","title":"\u63a7\u5236\u200b\u7a7a\u683c\u200b\u7684\u200b\u89e3\u6790","text":"<p>\u200b\u6240\u6709\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u5728\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u4f1a\u200b\u88ab\u200b\u6307\u793a\u200b\u8df3\u8fc7\u200b\u3002</p> <pre><code>auto result = scn::scan&lt;char, char&gt;(\"x   y\", \"{} {}\");\n// \u200b\u7ed3\u679c\u200b: a == 'x', b == 'y'\n</code></pre>"},{"location":"libraries/scnlib/#_15","title":"\u7279\u6b8a\u5b57\u7b26\u200b\u5904\u7406","text":"<p>\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u5176\u4ed6\u200b\u5b57\u7b26\u200b\u88ab\u200b\u671f\u671b\u200b\u51fa\u73b0\u200b\u5728\u200b\u6e90\u200b\u8303\u56f4\u200b\u5185\u200b\u5e76\u200b\u88ab\u200b\u4e22\u5f03\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>auto result = scn::scan&lt;char&gt;(\"abc\", \"ab{}\");\n// result-&gt;value() == 'c'\n</code></pre>"},{"location":"libraries/scnlib/#_16","title":"\u4f7f\u7528\u200b\u6807\u5fd7","text":"<p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u683c\u5f0f\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u6807\u5fd7\u200b\uff0c\u200b\u4f8b\u5982\u200b\u9650\u5236\u200b\u89e3\u6790\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>// \u200b\u63a5\u53d7\u200b\u5341\u516d\u8fdb\u5236\u200b\u6d6e\u70b9\u6570\u200b\nauto result = scn::scan&lt;double&gt;(\"1a.2f\", \"{:a}\");\n</code></pre>"},{"location":"libraries/scnlib/#_17","title":"\u626b\u63cf\u200b\u5355\u4e2a\u200b\u503c","text":"<p>\u200b\u5bf9\u4e8e\u200b\u7b80\u5355\u200b\u7684\u200b\u60c5\u51b5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>scn::scan_value</code> \u200b\u6765\u200b\u5feb\u901f\u200b\u626b\u63cf\u200b\u5355\u4e2a\u200b\u503c\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u683c\u5f0f\u200b\u4e3a\u200b <code>{}</code>\u3002</p> <pre><code>auto result = scn::scan_value&lt;int&gt;(\"456\");\n// result-&gt;value() == 456\n</code></pre>"},{"location":"libraries/scnlib/#unicode","title":"Unicode \u200b\u548c\u200b\u5bbd\u200b\u5b57\u7b26\u200b\u6e90\u200b\u8303\u56f4","text":"<p><code>scnlib</code> \u200b\u9884\u671f\u200b\u8f93\u5165\u200b\u4e3a\u200b Unicode \u200b\u7f16\u7801\u200b\u3002<code>char</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u5047\u8bbe\u200b\u4e3a\u200b UTF-8\uff0c<code>wchar_t</code> \u200b\u7c7b\u578b\u200b\u7684\u200b\u8f93\u5165\u200b\u5219\u200b\u5047\u8bbe\u200b\u4e3a\u200b UTF-16 \u200b\u6216\u200b UTF-32\uff08\u200b\u53d6\u51b3\u4e8e\u200b\u8be5\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bbd\u5ea6\u200b\uff09\u3002</p>"},{"location":"libraries/scnlib/#_18","title":"\u793a\u4f8b\u200b\uff1a\u200b\u626b\u63cf\u200b\u5bbd\u200b\u5b57\u7b26\u4e32","text":"<pre><code>auto result = scn::scan&lt;std::wstring&gt;(L\"foo bar\", L\"{}\");\n// result-&gt;value() == L\"foo\"\n</code></pre>"},{"location":"libraries/scnlib/#_19","title":"\u6df7\u5408\u200b\u5b57\u7b26\u200b\u7c7b\u578b\u200b\u626b\u63cf","text":"<p>\u200b\u53ef\u4ee5\u200b\u5728\u200b\u5bbd\u200b\u8303\u56f4\u200b\u548c\u200b\u7a84\u200b\u8303\u56f4\u200b\u4e4b\u95f4\u200b\u8fdb\u884c\u200b\u626b\u63cf\u200b\uff0c<code>scnlib</code> \u200b\u4f1a\u200b\u5728\u200b\u5fc5\u8981\u200b\u65f6\u200b\u8fdb\u884c\u200b Unicode \u200b\u8f6c\u6362\u200b\u3002</p> <pre><code>auto result2 = scn::scan&lt;std::string&gt;(result-&gt;range(), L\"{}\");\n// result2-&gt;value() == \"bar\"\n</code></pre>"},{"location":"libraries/scnlib/#_20","title":"\u7528\u6237\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b","text":"<p>\u200b\u8981\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\u7684\u200b\u626b\u63cf\u200b\uff0c\u200b\u9700\u8981\u200b\u7279\u5316\u200b <code>scn::scanner</code> \u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u5e76\u200b\u5b9e\u73b0\u200b <code>parse</code> \u200b\u548c\u200b <code>scan</code> \u200b\u4e24\u4e2a\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"libraries/scnlib/#_21","title":"\u793a\u4f8b\u200b\uff1a\u200b\u5b9e\u73b0\u200b\u81ea\u5b9a\u4e49\u200b\u626b\u63cf","text":"<pre><code>struct mytype {\n    int i;\n    double d;\n};\n\ntemplate &lt;&gt;\nstruct scn::scanner&lt;mytype, char&gt; {\n    template &lt;typename ParseContext&gt;\n    constexpr auto parse(ParseContext&amp; pctx) -&gt; scan_expected&lt;typename ParseContext::iterator&gt;;\n\n    template &lt;typename Context&gt;\n    auto scan(mytype&amp; val, Context&amp; ctx) -&gt; scan_expected&lt;typename Context::iterator&gt;;\n};\n</code></pre>"},{"location":"libraries/scnlib/#_22","title":"\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u626b\u63cf\u5668","text":"<p>\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u200b\u5c06\u200b\u626b\u63cf\u200b\u64cd\u4f5c\u200b\u59d4\u6258\u200b\u7ed9\u200b\u5176\u4ed6\u200b\u5df2\u6709\u200b\u7684\u200b\u626b\u63cf\u5668\u200b\uff0c\u200b\u6216\u8005\u200b\u901a\u8fc7\u200b\u7ee7\u627f\u200b\u6765\u81ea\u200b\u5b9a\u4e49\u200b\u89e3\u6790\u200b\u9009\u9879\u200b\u3002</p>"},{"location":"libraries/scnlib/#_23","title":"\u672c\u5730\u5316","text":"<p>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>scnlib</code> \u200b\u4e0d\u4f1a\u200b\u53d7\u200b\u5168\u5c40\u200b C \u200b\u6216\u200b C++ \u200b\u533a\u57df\u200b\u8bbe\u7f6e\u200b\u7684\u200b\u5f71\u54cd\u200b\uff0c\u200b\u6240\u6709\u200b\u51fd\u6570\u200b\u5728\u200b C \u200b\u533a\u57df\u200b\u4e0b\u200b\u8fd0\u884c\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5904\u7406\u200b\u6d6e\u70b9\u6570\u200b\u65f6\u200b\u4f7f\u7528\u200b\u6307\u5b9a\u200b\u7684\u200b\u5c0f\u6570\u70b9\u200b\u3002</p>"},{"location":"libraries/scnlib/#_24","title":"\u4f7f\u7528\u200b\u533a\u57df\u200b\u626b\u63cf","text":"<p>\u200b\u5c06\u200b <code>std::locale</code> \u200b\u4f20\u9012\u200b\u7ed9\u200b <code>scn::scan</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u672c\u5730\u5316\u200b\u89e3\u6790\u200b\uff0c\u200b\u4f46\u200b\u6027\u80fd\u200b\u4f1a\u200b\u76f8\u6bd4\u200b\u4e8e\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u533a\u57df\u200b\u8bbe\u7f6e\u200b\u66f4\u200b\u4f4e\u200b\u3002</p> <pre><code>auto result = scn::scan(std::locale{\"fi_FI.UTF-8\"}, \"2,73\", \"{:L}\");\n// result-&gt;value() == 2.73\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u672c\u5730\u5316\u200b\u7684\u200b\u7ed3\u679c\u200b\u53ef\u80fd\u200b\u4e0e\u200b\u672a\u200b\u4f7f\u7528\u200b\u533a\u57df\u200b\u65f6\u200b\u7684\u200b\u7ed3\u679c\u200b\u7565\u6709\u4e0d\u540c\u200b\uff0c\u200b\u8fd9\u200b\u53d6\u51b3\u4e8e\u200b\u5e73\u53f0\u200b\u548c\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u9650\u5236\u200b\u3002</p> <p>GitHub \u2022 \u200b\u62a5\u544a\u200b\u95ee\u9898\u200b \u2022 \u200b\u66f4\u65b0\u200b\u65e5\u5fd7\u200b \u2022 \u200b\u8bb8\u53ef\u8bc1\u200b \u2022 Doxygen \u200b\u6587\u6863\u200b</p> <p>\u200b\u5982\u9700\u200b\u83b7\u53d6\u200b\u5176\u4ed6\u200b\u8be6\u7ec6\u4fe1\u606f\u200b\u548c\u200b\u793a\u4f8b\u200b\uff0c\u200b\u8bf7\u200b\u67e5\u9605\u200b\u6587\u6863\u200b\u7684\u200b\u76f8\u5173\u200b\u7ae0\u8282\u200b\u3002\u200b\u6709\u5173\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u7684\u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\u548c\u200b\u66f4\u200b\u591a\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b <code>scnlib</code> \u200b\u7684\u200b GitHub \u200b\u9875\u9762\u200b\u6216\u200b\u5176\u4ed6\u200b\u76f8\u5173\u200b\u8d44\u6e90\u200b\u3002</p>"},{"location":"linux/","title":"Linux Documentation","text":"<p>Welcome to the Linux section! This collection provides comprehensive guides for Linux system administration, command-line tools, and utilities. Whether you're a system administrator, developer, or power user, you'll find practical resources for mastering Linux.</p>"},{"location":"linux/#command-line-tools","title":"Command-Line Tools","text":""},{"location":"linux/#grep-text-search-and-pattern-matching","title":"grep - Text Search and Pattern Matching","text":"<p>Master the powerful grep command for text searching and pattern matching:</p> <ul> <li>Basic Usage - Fundamental grep operations and syntax</li> <li>Regular Expressions - Advanced pattern matching techniques</li> <li>File Operations - Searching across files and directories</li> <li>Performance Optimization - Efficient searching strategies</li> <li>Practical Examples - Real-world use cases and scenarios</li> </ul> <p>Key Features Covered: - \ud83d\udd0d Text Search - Find patterns in files and output - \ud83d\udcdd Regular Expressions - Complex pattern matching - \ud83d\udcc1 Directory Traversal - Recursive searching capabilities - \u26a1 Performance Tips - Optimize search operations - \ud83d\udee0\ufe0f Integration - Combine with other Linux tools</p>"},{"location":"linux/#tool-categories","title":"Tool Categories","text":""},{"location":"linux/#text-processing","title":"Text Processing","text":"<ul> <li>grep - Pattern searching and matching</li> <li>sed - Stream editing and text transformation</li> <li>awk - Text processing and data extraction</li> </ul>"},{"location":"linux/#file-management","title":"File Management","text":"<ul> <li>find - Locate files and directories</li> <li>locate - Quick file location</li> <li>which - Command location utilities</li> </ul>"},{"location":"linux/#system-monitoring","title":"System Monitoring","text":"<ul> <li>ps - Process monitoring</li> <li>top/htop - System resource monitoring</li> <li>netstat - Network connection monitoring</li> </ul>"},{"location":"linux/#learning-path","title":"Learning Path","text":""},{"location":"linux/#beginners","title":"Beginners","text":"<ol> <li>Start with basic grep usage and examples</li> <li>Learn fundamental regular expression patterns</li> <li>Practice with common file search scenarios</li> </ol>"},{"location":"linux/#intermediate-users","title":"Intermediate Users","text":"<ol> <li>Master advanced grep options and flags</li> <li>Combine grep with other command-line tools</li> <li>Implement complex search and filter operations</li> </ol>"},{"location":"linux/#advanced-users","title":"Advanced Users","text":"<ol> <li>Optimize grep performance for large datasets</li> <li>Create custom search scripts and automation</li> <li>Integrate grep into system administration workflows</li> </ol>"},{"location":"linux/#best-practices","title":"Best Practices","text":""},{"location":"linux/#efficient-searching","title":"Efficient Searching","text":"<ul> <li>Use appropriate grep options for your use case</li> <li>Leverage regular expressions for complex patterns</li> <li>Combine with other tools for powerful workflows</li> </ul>"},{"location":"linux/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Use fixed-string search (-F) when possible</li> <li>Limit search scope with file patterns</li> <li>Consider alternative tools for very large datasets</li> </ul>"},{"location":"linux/#integration-strategies","title":"Integration Strategies","text":"<ul> <li>Pipe grep output to other commands</li> <li>Use grep in shell scripts and automation</li> <li>Combine with find for comprehensive file operations</li> </ul>"},{"location":"linux/#practical-applications","title":"Practical Applications","text":""},{"location":"linux/#system-administration","title":"System Administration","text":"<ul> <li>Log file analysis and monitoring</li> <li>Configuration file management</li> <li>Process and service monitoring</li> <li>Security audit and compliance</li> </ul>"},{"location":"linux/#development","title":"Development","text":"<ul> <li>Code search and analysis</li> <li>Build system integration</li> <li>Version control operations</li> <li>Documentation maintenance</li> </ul>"},{"location":"linux/#data-processing","title":"Data Processing","text":"<ul> <li>Text file analysis</li> <li>CSV and structured data processing</li> <li>Report generation and filtering</li> <li>Data validation and cleanup</li> </ul> <p>Navigate to the tools section to explore detailed guides and examples for each utility!</p>"},{"location":"linux/tools/grep/","title":"grep \u200b\u547d\u4ee4\u200b\u8be6\u7ec6\u200b\u6307\u5357\u200b\u4e0e\u200b\u793a\u4f8b","text":"<p>grep\uff08Global Regular Expression Print\uff09\u200b\u662f\u200b\u4e00\u4e2a\u200b\u529f\u80fd\u5f3a\u5927\u200b\u7684\u200b\u547d\u4ee4\u884c\u200b\u5de5\u5177\u200b,\u200b\u7528\u4e8e\u200b\u5728\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u641c\u7d22\u200b\u6587\u672c\u200b\u6a21\u5f0f\u200b\u3002\u200b\u672c\u200b\u6307\u5357\u200b\u5c06\u200b\u6df1\u5165\u63a2\u8ba8\u200b grep \u200b\u7684\u200b\u5404\u79cd\u200b\u7528\u6cd5\u200b,\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u8be6\u7ec6\u200b\u7684\u200b\u793a\u4f8b\u200b\u6765\u200b\u8bf4\u660e\u200b\u6bcf\u4e2a\u200b\u6982\u5ff5\u200b\u3002</p>"},{"location":"linux/tools/grep/#_1","title":"\u76ee\u5f55","text":"<ol> <li>\u200b\u57fa\u672c\u200b\u8bed\u6cd5\u200b\u4e0e\u200b\u7528\u6cd5\u200b</li> <li>\u200b\u5e38\u7528\u200b\u9009\u9879\u200b\u8be6\u89e3\u200b</li> <li>\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u8fdb\u9636\u200b</li> <li>\u200b\u9ad8\u7ea7\u200b\u7528\u6cd5\u200b\u4e0e\u200b\u6280\u5de7\u200b</li> <li>\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f\u200b</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u4e0e\u200b\u6ce8\u610f\u4e8b\u9879\u200b</li> </ol>"},{"location":"linux/tools/grep/#_2","title":"\u57fa\u672c\u200b\u8bed\u6cd5\u200b\u4e0e\u200b\u7528\u6cd5","text":"<p>grep \u200b\u7684\u200b\u57fa\u672c\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b:</p> <pre><code>grep [\u200b\u9009\u9879\u200b] \u200b\u6a21\u5f0f\u200b [\u200b\u6587\u4ef6\u200b...]\n</code></pre>"},{"location":"linux/tools/grep/#1","title":"\u793a\u4f8b\u200b 1: \u200b\u57fa\u672c\u200b\u641c\u7d22","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b<code>fruits.txt</code>\u200b\u7684\u200b\u6587\u4ef6\u200b,\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b:</p> <pre><code>apple\nbanana\ncherry\ndate\nfig\ngrape\n</code></pre> <p>\u200b\u641c\u7d22\u200b\u5305\u542b\u200b\"apple\"\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep \"apple\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>apple\n</code></pre>"},{"location":"linux/tools/grep/#2","title":"\u793a\u4f8b\u200b 2: \u200b\u641c\u7d22\u200b\u591a\u4e2a\u200b\u6587\u4ef6","text":"<p>\u200b\u521b\u5efa\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6587\u4ef6\u200b<code>vegetables.txt</code>:</p> <pre><code>carrot\ncelery\nlettuce\npotato\ntomato\n</code></pre> <p>\u200b\u641c\u7d22\u200b\u4e24\u4e2a\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5305\u542b\u200b\"a\"\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep \"a\" fruits.txt vegetables.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>fruits.txt:apple\nfruits.txt:banana\nfruits.txt:grape\nvegetables.txt:carrot\nvegetables.txt:potato\nvegetables.txt:tomato\n</code></pre>"},{"location":"linux/tools/grep/#_3","title":"\u5e38\u7528\u200b\u9009\u9879\u200b\u8be6\u89e3","text":""},{"location":"linux/tools/grep/#-i","title":"-i: \u200b\u5ffd\u7565\u200b\u5927\u5c0f\u5199","text":"<pre><code>echo \"Apple\" &gt;&gt; fruits.txt\ngrep -i \"apple\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>apple\nApple\n</code></pre>"},{"location":"linux/tools/grep/#-v","title":"-v: \u200b\u53cd\u5411\u200b\u5339\u914d","text":"<p>\u200b\u663e\u793a\u200b\u4e0d\u200b\u5305\u542b\u200b\"a\"\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep -v \"a\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>cherry\nfig\n</code></pre>"},{"location":"linux/tools/grep/#-n","title":"-n: \u200b\u663e\u793a\u200b\u884c\u53f7","text":"<pre><code>grep -n \"a\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>1:apple\n2:banana\n6:grape\n7:Apple\n</code></pre>"},{"location":"linux/tools/grep/#-r-r","title":"-r \u200b\u6216\u200b -R: \u200b\u9012\u5f52\u200b\u641c\u7d22","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b<code>food</code>\u200b\u7684\u200b\u76ee\u5f55\u200b,\u200b\u5305\u542b\u200b<code>fruits.txt</code>\u200b\u548c\u200b<code>vegetables.txt</code>:</p> <pre><code>grep -r \"to\" food/\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>food/vegetables.txt:potato\nfood/vegetables.txt:tomato\n</code></pre>"},{"location":"linux/tools/grep/#-l","title":"-l: \u200b\u53ea\u200b\u663e\u793a\u200b\u6587\u4ef6\u540d","text":"<pre><code>grep -l \"a\" food/*\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>food/fruits.txt\nfood/vegetables.txt\n</code></pre>"},{"location":"linux/tools/grep/#-c","title":"-c: \u200b\u8ba1\u6570\u200b\u5339\u914d\u200b\u884c","text":"<pre><code>grep -c \"a\" fruits.txt vegetables.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>fruits.txt:3\nvegetables.txt:3\n</code></pre>"},{"location":"linux/tools/grep/#-w","title":"-w: \u200b\u5339\u914d\u200b\u6574\u8bcd","text":"<pre><code>echo \"grapefruit\" &gt;&gt; fruits.txt\ngrep -w \"grape\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>grape\n</code></pre>"},{"location":"linux/tools/grep/#-a-b-c","title":"-A, -B, -C: \u200b\u663e\u793a\u200b\u4e0a\u4e0b\u6587","text":"<pre><code>grep -A 1 -B 1 \"cherry\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>banana\ncherry\ndate\n</code></pre>"},{"location":"linux/tools/grep/#_4","title":"\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u8fdb\u9636","text":"<p>grep \u200b\u652f\u6301\u200b\u5f3a\u5927\u200b\u7684\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e9b\u200b\u9ad8\u7ea7\u200b\u793a\u4f8b\u200b:</p>"},{"location":"linux/tools/grep/#1_1","title":"\u793a\u4f8b\u200b 1: \u200b\u5339\u914d\u200b\u884c\u9996\u200b\u548c\u200b\u884c\u5c3e","text":"<p>\u200b\u5339\u914d\u200b\u4ee5\u200b\"a\"\u200b\u5f00\u5934\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep \"^a\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>apple\n</code></pre> <p>\u200b\u5339\u914d\u200b\u4ee5\u200b\"e\"\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep \"e$\" fruits.txt vegetables.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>fruits.txt:apple\nvegetables.txt:lettuce\n</code></pre>"},{"location":"linux/tools/grep/#2_1","title":"\u793a\u4f8b\u200b 2: \u200b\u4f7f\u7528\u200b\u5b57\u7b26\u200b\u7c7b","text":"<p>\u200b\u5339\u914d\u200b\u5305\u542b\u200b\u6570\u5b57\u200b\u7684\u200b\u884c\u200b(\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u5728\u200b<code>fruits.txt</code>\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5e26\u200b\u6570\u5b57\u200b\u7684\u200b\u884c\u200b):</p> <pre><code>echo \"2 apples\" &gt;&gt; fruits.txt\necho \"3 bananas\" &gt;&gt; fruits.txt\ngrep \"[0-9]\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>2 apples\n3 bananas\n</code></pre>"},{"location":"linux/tools/grep/#3","title":"\u793a\u4f8b\u200b 3: \u200b\u4f7f\u7528\u200b\u91cf\u8bcd","text":"<p>\u200b\u5339\u914d\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u8fde\u7eed\u200b\u5143\u97f3\u200b\u7684\u200b\u5355\u8bcd\u200b:</p> <pre><code>grep -E \"[aeiou]{2}\" fruits.txt vegetables.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>fruits.txt:grape\nfruits.txt:grapefruit\n</code></pre>"},{"location":"linux/tools/grep/#_5","title":"\u9ad8\u7ea7\u200b\u7528\u6cd5\u200b\u4e0e\u200b\u6280\u5de7","text":""},{"location":"linux/tools/grep/#or","title":"\u4f7f\u7528\u200b OR \u200b\u64cd\u4f5c","text":"<p>\u200b\u641c\u7d22\u200b\u5305\u542b\u200b\"apple\"\u200b\u6216\u200b\"banana\"\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep -E \"apple|banana\" fruits.txt\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>apple\nbanana\n</code></pre>"},{"location":"linux/tools/grep/#and-grep","title":"\u4f7f\u7528\u200b AND \u200b\u64cd\u4f5c\u200b (\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b grep)","text":"<p>\u200b\u641c\u7d22\u200b\u540c\u65f6\u200b\u5305\u542b\u200b\"a\"\u200b\u548c\u200b\"e\"\u200b\u7684\u200b\u884c\u200b:</p> <pre><code>grep \"a\" fruits.txt | grep \"e\"\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>apple\ngrape\ngrapefruit\n</code></pre>"},{"location":"linux/tools/grep/#grep_1","title":"\u4f7f\u7528\u200b grep \u200b\u5904\u7406\u200b\u547d\u4ee4\u200b\u8f93\u51fa","text":"<p>\u200b\u5217\u51fa\u200b\u5f53\u524d\u76ee\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u7684\u200b .txt \u200b\u6587\u4ef6\u200b:</p> <pre><code>ls | grep \"\\.txt$\"\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>fruits.txt\nvegetables.txt\n</code></pre>"},{"location":"linux/tools/grep/#_6","title":"\u5b9e\u9645\u200b\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"linux/tools/grep/#1_2","title":"\u573a\u666f\u200b 1: \u200b\u5206\u6790\u200b\u65e5\u5fd7\u200b\u6587\u4ef6","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u540d\u4e3a\u200b<code>app.log</code>\u200b\u7684\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b,\u200b\u5185\u5bb9\u200b\u5982\u4e0b\u200b:</p> <pre><code>2023-06-21 10:15:30 INFO User login successful\n2023-06-21 10:16:45 WARNING Database connection slow\n2023-06-21 10:17:20 ERROR Failed to process payment\n2023-06-21 10:18:00 INFO User logout\n2023-06-21 10:19:30 ERROR Database connection lost\n</code></pre> <p>\u200b\u641c\u7d22\u200b\u6240\u6709\u200b\u9519\u8bef\u4fe1\u606f\u200b:</p> <pre><code>grep \"ERROR\" app.log\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>2023-06-21 10:17:20 ERROR Failed to process payment\n2023-06-21 10:19:30 ERROR Database connection lost\n</code></pre> <p>\u200b\u7edf\u8ba1\u200b\u6bcf\u79cd\u200b\u65e5\u5fd7\u200b\u7ea7\u522b\u200b\u7684\u200b\u6570\u91cf\u200b:</p> <pre><code>grep -c \"INFO\" app.log\ngrep -c \"WARNING\" app.log\ngrep -c \"ERROR\" app.log\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>2\n1\n2\n</code></pre>"},{"location":"linux/tools/grep/#2_2","title":"\u573a\u666f\u200b 2: \u200b\u4ee3\u7801\u200b\u5ba1\u67e5","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b Python \u200b\u6587\u4ef6\u200b<code>script.py</code>:</p> <pre><code>import os\nimport sys\n\ndef main():\n    print(\"Hello, World!\")\n    # TODO: Add more functionality\n    pass\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u200b\u67e5\u627e\u200b\u6240\u6709\u200b\u7684\u200b TODO \u200b\u6ce8\u91ca\u200b:</p> <pre><code>grep -n \"TODO\" script.py\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>5:    # TODO: Add more functionality\n</code></pre> <p>\u200b\u67e5\u627e\u200b\u6240\u6709\u200b\u7684\u200b import \u200b\u8bed\u53e5\u200b:</p> <pre><code>grep \"^import\" script.py\n</code></pre> <p>\u200b\u8f93\u51fa\u200b:</p> <pre><code>import os\nimport sys\n</code></pre>"},{"location":"linux/tools/grep/#_7","title":"\u6027\u80fd\u200b\u4f18\u5316\u200b\u4e0e\u200b\u6ce8\u610f\u4e8b\u9879","text":"<p>\u200b\u5728\u200b\u4f7f\u7528\u200b grep \u200b\u65f6\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5904\u7406\u200b\u5927\u578b\u200b\u6587\u4ef6\u200b\u6216\u200b\u590d\u6742\u200b\u641c\u7d22\u200b\u65f6\u200b\uff0c\u200b\u8003\u8651\u200b\u6027\u80fd\u200b\u548c\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\u3002</p>"},{"location":"linux/tools/grep/#1-q","title":"1. \u200b\u4f7f\u7528\u200b -q \u200b\u9009\u9879\u200b\u8fdb\u884c\u200b\u9759\u9ed8\u200b\u641c\u7d22","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u53ea\u200b\u9700\u8981\u200b\u77e5\u9053\u200b\u6a21\u5f0f\u200b\u662f\u5426\u200b\u5b58\u5728\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5b9e\u9645\u200b\u7684\u200b\u8f93\u51fa\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>-q</code> \u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002</p> <pre><code>if grep -q \"error\" logfile.txt; then\n    echo \"Errors found in the log file\"\nelse\n    echo \"No errors found in the log file\"\nfi\n</code></pre>"},{"location":"linux/tools/grep/#2-f","title":"2. \u200b\u4f7f\u7528\u200b -F \u200b\u9009\u9879\u200b\u641c\u7d22\u200b\u56fa\u5b9a\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u5f53\u200b\u641c\u7d22\u200b\u7684\u200b\u662f\u200b\u56fa\u5b9a\u200b\u5b57\u7b26\u4e32\u200b\u800c\u200b\u4e0d\u662f\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>-F</code> \u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u641c\u7d22\u200b\u901f\u5ea6\u200b\u3002</p> <pre><code>grep -F \"exact phrase\" large_file.txt\n</code></pre>"},{"location":"linux/tools/grep/#3_1","title":"3. \u200b\u9650\u5236\u200b\u9012\u5f52\u200b\u6df1\u5ea6","text":"<p>\u200b\u5728\u200b\u4f7f\u7528\u200b <code>-r</code> \u200b\u9009\u9879\u200b\u9012\u5f52\u200b\u641c\u7d22\u200b\u76ee\u5f55\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>find</code> \u200b\u547d\u4ee4\u200b\u6765\u200b\u9650\u5236\u200b\u641c\u7d22\u200b\u6df1\u5ea6\u200b\uff0c\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u5b50\u76ee\u5f55\u200b\u641c\u7d22\u200b\u3002</p> <pre><code>find . -maxdepth 2 -type f -exec grep \"pattern\" {} +\n</code></pre>"},{"location":"linux/tools/grep/#4-exclude-include","title":"4. \u200b\u4f7f\u7528\u200b --exclude \u200b\u548c\u200b --include \u200b\u9009\u9879","text":"<p>\u200b\u8fd9\u4e9b\u200b\u9009\u9879\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u4f60\u200b\u5728\u200b\u641c\u7d22\u200b\u65f6\u200b\u8df3\u200b\u8fc7\u200b\u4e0d\u200b\u9700\u8981\u200b\u7684\u200b\u6587\u4ef6\u200b\u6216\u200b\u53ea\u200b\u5173\u6ce8\u200b\u7279\u5b9a\u200b\u7c7b\u578b\u200b\u7684\u200b\u6587\u4ef6\u200b\u3002</p> <pre><code># \u200b\u6392\u9664\u200b\u6240\u6709\u200b .log \u200b\u6587\u4ef6\u200b\ngrep -r \"error\" --exclude=*.log .\n\n# \u200b\u53ea\u200b\u5728\u200b .py \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u641c\u7d22\u200b\ngrep -r \"def main\" --include=*.py .\n</code></pre>"},{"location":"linux/tools/grep/#5","title":"5. \u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u7ba1\u9053\u200b\u64cd\u4f5c","text":"<p>\u200b\u5c3d\u53ef\u80fd\u200b\u5728\u200b\u4e00\u4e2a\u200b grep \u200b\u547d\u4ee4\u200b\u4e2d\u200b\u5b8c\u6210\u200b\u590d\u6742\u200b\u7684\u200b\u641c\u7d22\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u4f7f\u7528\u200b\u591a\u4e2a\u200b\u7ba1\u9053\u200b\u3002</p> <pre><code># \u200b\u4e0d\u200b\u63a8\u8350\u200b\ncat file.txt | grep \"pattern1\" | grep \"pattern2\"\n\n# \u200b\u63a8\u8350\u200b\ngrep \"pattern1\" file.txt | grep \"pattern2\"\n\n# \u200b\u66f4\u597d\u200b\u7684\u200b\u65b9\u5f0f\u200b\ngrep -E \"pattern1.*pattern2|pattern2.*pattern1\" file.txt\n</code></pre>"},{"location":"linux/tools/grep/#6-lc_allc","title":"6. \u200b\u4f7f\u7528\u200b LC_ALL=C \u200b\u63d0\u9ad8\u200b\u6027\u80fd","text":"<p>\u200b\u5728\u200b\u5904\u7406\u200b ASCII \u200b\u6587\u672c\u200b\u65f6\u200b\uff0c\u200b\u8bbe\u7f6e\u200b <code>LC_ALL=C</code> \u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u9ad8\u200b grep \u200b\u7684\u200b\u6027\u80fd\u200b\u3002</p> <pre><code>LC_ALL=C grep \"pattern\" large_file.txt\n</code></pre>"},{"location":"linux/tools/grep/#_8","title":"\u9ad8\u7ea7\u200b\u7528\u6cd5\u200b\u793a\u4f8b","text":""},{"location":"linux/tools/grep/#1-grep","title":"1. \u200b\u4f7f\u7528\u200b grep \u200b\u8fdb\u884c\u200b\u590d\u6742\u200b\u7684\u200b\u65e5\u5fd7\u200b\u5206\u6790","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u590d\u6742\u200b\u7684\u200b\u65e5\u5fd7\u200b\u6587\u4ef6\u200b <code>complex.log</code>\uff1a</p> <pre><code>2023-06-22 10:15:30 [INFO] User 12345 logged in\n2023-06-22 10:16:45 [WARNING] Slow database query: SELECT * FROM users WHERE last_login &gt; '2023-06-21'\n2023-06-22 10:17:20 [ERROR] Failed to process payment for user 67890: Insufficient funds\n2023-06-22 10:18:00 [INFO] User 12345 logged out\n2023-06-22 10:19:30 [ERROR] Database connection lost: Timeout after 30 seconds\n</code></pre> <p>\u200b\u63d0\u53d6\u200b\u6240\u6709\u200b\u7528\u6237\u200b ID\uff1a</p> <pre><code>grep -oE \"User [0-9]+\" complex.log | sort | uniq\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>User 12345\nUser 67890\n</code></pre> <p>\u200b\u63d0\u53d6\u200b\u6240\u6709\u200b\u9519\u8bef\u200b\u6d88\u606f\u200b\uff1a</p> <pre><code>grep \"\\[ERROR\\]\" complex.log | cut -d':' -f2-\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code> Insufficient funds\n Timeout after 30 seconds\n</code></pre>"},{"location":"linux/tools/grep/#2-grep-csv","title":"2. \u200b\u4f7f\u7528\u200b grep \u200b\u5904\u7406\u200b CSV \u200b\u6587\u4ef6","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b CSV \u200b\u6587\u4ef6\u200b <code>data.csv</code>\uff1a</p> <pre><code>Name,Age,City\nJohn Doe,30,New York\nJane Smith,25,Los Angeles\nBob Johnson,45,Chicago\nAlice Brown,35,San Francisco\n</code></pre> <p>\u200b\u63d0\u53d6\u200b\u6240\u6709\u200b 30 \u200b\u5c81\u200b\u4ee5\u4e0a\u200b\u7684\u200b\u4eba\u200b\uff1a</p> <pre><code>grep -E \"^[^,]+,[3-9][0-9],\" data.csv\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\uff1a</p> <pre><code>John Doe,30,New York\nBob Johnson,45,Chicago\nAlice Brown,35,San Francisco\n</code></pre>"},{"location":"linux/tools/grep/#3-grep","title":"3. \u200b\u4f7f\u7528\u200b grep \u200b\u8fdb\u884c\u200b\u7b80\u5355\u200b\u7684\u200b\u4ee3\u7801\u200b\u5206\u6790","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b Python \u200b\u9879\u76ee\u200b\u76ee\u5f55\u200b\uff0c\u200b\u6211\u4eec\u200b\u60f3\u200b\u627e\u51fa\u200b\u6240\u6709\u200b\u4f7f\u7528\u200b\u4e86\u200b\u67d0\u4e2a\u200b\u7279\u5b9a\u200b\u51fd\u6570\u200b\u7684\u200b\u6587\u4ef6\u200b\uff1a</p> <pre><code>grep -r \"def process_data\" --include=*.py .\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u5728\u200b\u5f53\u524d\u76ee\u5f55\u200b\u53ca\u5176\u200b\u5b50\u76ee\u5f55\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b.py \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u641c\u7d22\u200b\"def process_data\"\u3002</p>"},{"location":"linux/tools/grep/#4-grep","title":"4. \u200b\u4f7f\u7528\u200b grep \u200b\u548c\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u9a8c\u8bc1\u200b\u6570\u636e\u683c\u5f0f","text":"<p>\u200b\u9a8c\u8bc1\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u90ae\u7bb1\u5730\u5740\u200b\u683c\u5f0f\u200b\uff1a</p> <pre><code>grep -E \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\" emails.txt\n</code></pre> <p>\u200b\u8fd9\u200b\u5c06\u200b\u5339\u914d\u200b\u5927\u591a\u6570\u200b\u6709\u6548\u200b\u7684\u200b\u7535\u5b50\u90ae\u4ef6\u200b\u5730\u5740\u200b\u683c\u5f0f\u200b\u3002</p>"},{"location":"linux/tools/grep/#5-grep","title":"5. \u200b\u7ed3\u5408\u200b\u5176\u4ed6\u200b\u547d\u4ee4\u200b\u4f7f\u7528\u200b grep","text":"<p>\u200b\u7edf\u8ba1\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b TODO \u200b\u6ce8\u91ca\u200b\uff1a</p> <pre><code>grep -r \"TODO\" --include=*.{py,js,java} . | wc -l\n</code></pre> <p>\u200b\u8fd9\u4f1a\u200b\u5728\u200b\u6240\u6709\u200b\u7684\u200b.py\u3001.js \u200b\u548c\u200b.java \u200b\u6587\u4ef6\u200b\u4e2d\u200b\u641c\u7d22\u200b\"TODO\"\uff0c\u200b\u5e76\u200b\u8ba1\u7b97\u200b\u5339\u914d\u200b\u7684\u200b\u884c\u6570\u200b\u3002</p>"},{"location":"linux/tools/grep/#_9","title":"\u7ed3\u8bba","text":"<p>grep \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u800c\u200b\u7075\u6d3b\u200b\u7684\u200b\u6587\u672c\u200b\u641c\u7d22\u200b\u5de5\u5177\u200b\uff0c\u200b\u638c\u63e1\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u6781\u5927\u5730\u63d0\u9ad8\u200b\u4f60\u200b\u5904\u7406\u200b\u6587\u672c\u200b\u6570\u636e\u200b\u7684\u200b\u6548\u7387\u200b\u3002\u200b\u901a\u8fc7\u200b\u672c\u200b\u6307\u5357\u200b\u4e2d\u200b\u7684\u200b\u8be6\u7ec6\u200b\u89e3\u91ca\u200b\u548c\u200b\u4e30\u5bcc\u200b\u7684\u200b\u793a\u4f8b\u200b\uff0c\u200b\u4f60\u200b\u5e94\u8be5\u200b\u80fd\u591f\u200b\u66f4\u597d\u200b\u5730\u200b\u7406\u89e3\u200b grep \u200b\u7684\u200b\u5404\u79cd\u200b\u7528\u6cd5\u200b\uff0c\u200b\u5e76\u200b\u80fd\u200b\u5728\u200b\u65e5\u5e38\u200b\u5de5\u4f5c\u200b\u4e2d\u200b\u7075\u6d3b\u8fd0\u7528\u200b\u3002</p>"},{"location":"programming/","title":"Programming Documentation","text":"<p>This section contains comprehensive programming tutorials, guides, and reference materials across multiple programming languages. Whether you're a beginner learning the fundamentals or an experienced developer looking for advanced techniques, you'll find valuable resources here.</p>"},{"location":"programming/#languages-covered","title":"Languages Covered","text":""},{"location":"programming/#c-programming","title":"C Programming","text":"<p>Learn the fundamentals of C programming with our structured tutorial series:</p> <ul> <li>Data Structures - Structures, unions, and linked lists</li> <li>File Operations - Reading, writing, and manipulating files</li> <li>Advanced Topics - Macros, random number generation</li> <li>Environment Setup - Development environment configuration</li> <li>Format Control - Input/output formatting techniques</li> </ul>"},{"location":"programming/#c-programming_1","title":"C++ Programming","text":"<p>Modern C++ programming with emphasis on C++20 features:</p> <ul> <li>C++20 Guide - Comprehensive coverage of the latest C++ standard</li> <li>Type Erasure - Advanced design patterns and techniques</li> <li>String Operations - Complete guide to C++ string handling</li> <li>Template Programming - CTAD, type traits, and advanced templates</li> </ul>"},{"location":"programming/#c-programming_2","title":"C# Programming","text":"<p>.NET development with C#:</p> <ul> <li>Data Structures - Implementation and usage patterns</li> <li>Network Programming - TCP communication and protocols</li> </ul>"},{"location":"programming/#javascript","title":"JavaScript","text":"<p>Modern JavaScript development and frameworks:</p> <ul> <li>PrimeVue - Vue.js UI component library guide</li> <li>Zustand - State management for React applications</li> </ul>"},{"location":"programming/#python","title":"Python","text":"<p>Python tools and utilities:</p> <ul> <li>Automation Tools - WiFi management and system utilities</li> <li>Web Scraping - Crawling techniques and best practices</li> </ul>"},{"location":"programming/#learning-path-recommendations","title":"Learning Path Recommendations","text":""},{"location":"programming/#for-beginners","title":"For Beginners","text":"<ol> <li>Start with C Programming fundamentals</li> <li>Move to C++ for object-oriented concepts</li> <li>Explore Python for practical applications</li> </ol>"},{"location":"programming/#for-web-developers","title":"For Web Developers","text":"<ol> <li>Master JavaScript fundamentals</li> <li>Learn PrimeVue for Vue.js development</li> <li>Understand Zustand for state management</li> </ol>"},{"location":"programming/#for-system-programmers","title":"For System Programmers","text":"<ol> <li>Deep dive into C/C++ advanced topics</li> <li>Explore C# for .NET development</li> <li>Use Python for automation scripts</li> </ol>"},{"location":"programming/#code-examples-and-best-practices","title":"Code Examples and Best Practices","text":"<p>Each language section includes:</p> <ul> <li>\u2705 Working code examples with explanations</li> <li>\ud83d\udccb Best practices and coding standards</li> <li>\ud83d\udd27 Practical projects and exercises</li> <li>\ud83d\udcd6 Reference materials and quick guides</li> </ul> <p>Navigate to any language section to begin your learning journey!</p>"},{"location":"programming/c/","title":"C Programming","text":"<p>Welcome to the C programming section! This comprehensive tutorial series covers fundamental and advanced C programming concepts through a structured learning path. Each topic builds upon previous knowledge to provide a solid foundation in C programming.</p>"},{"location":"programming/c/#tutorial-series","title":"Tutorial Series","text":""},{"location":"programming/c/#day-7-structures-unions","title":"Day 7 - Structures &amp; Unions","text":"<p>Learn about C's composite data types: - Structures - Grouping related data together - Unions - Memory-efficient data storage - Nested Structures - Complex data organization - Practical Examples - Real-world applications</p>"},{"location":"programming/c/#day-8-linked-lists","title":"Day 8 - Linked Lists","text":"<p>Master dynamic data structures: - Singly Linked Lists - Basic implementation and operations - Doubly Linked Lists - Bidirectional navigation - Memory Management - Dynamic allocation and deallocation - Common Operations - Insert, delete, search, and traverse</p>"},{"location":"programming/c/#day-9-file-operations","title":"Day 9 - File Operations","text":"<p>Handle file input/output operations: - File Opening and Closing - Basic file operations - Reading and Writing - Text and binary file handling - File Positioning - Random access techniques - Error Handling - Robust file operation practices</p>"},{"location":"programming/c/#day-10-macros","title":"Day 10 - Macros","text":"<p>Understand C preprocessor and macros: - Preprocessor Directives - #define, #include, #ifdef - Function-like Macros - Creating reusable code snippets - Conditional Compilation - Platform-specific code - Best Practices - When and how to use macros effectively</p>"},{"location":"programming/c/#day-11-random-numbers","title":"Day 11 - Random Numbers","text":"<p>Generate and work with random numbers: - Random Number Generation - Using rand() and srand() - Seeding - Proper initialization techniques - Distributions - Creating different random distributions - Applications - Games, simulations, and testing</p>"},{"location":"programming/c/#development-environment","title":"Development Environment","text":""},{"location":"programming/c/#environment-setup","title":"Environment Setup","text":"<p>Configure your C development environment: - Compiler Installation - GCC, Clang, and Visual Studio - IDE Configuration - Setting up development tools - Build Systems - Makefiles and build automation - Debugging Tools - GDB and debugging techniques</p>"},{"location":"programming/c/#format-control","title":"Format Control","text":"<p>Master input/output formatting: - printf() Family - Formatted output functions - scanf() Family - Formatted input functions - Format Specifiers - Controlling output appearance - Advanced Formatting - Width, precision, and alignment</p>"},{"location":"programming/c/#learning-path","title":"Learning Path","text":""},{"location":"programming/c/#beginner-level","title":"Beginner Level","text":"<ol> <li>Environment Setup - Get your development environment ready</li> <li>Format Control - Learn basic input/output operations</li> <li>Structures &amp; Unions - Understand composite data types</li> </ol>"},{"location":"programming/c/#intermediate-level","title":"Intermediate Level","text":"<ol> <li>Linked Lists - Master dynamic data structures</li> <li>File Operations - Handle persistent data storage</li> <li>Macros - Learn preprocessor programming</li> </ol>"},{"location":"programming/c/#advanced-level","title":"Advanced Level","text":"<ol> <li>Random Numbers - Implement probabilistic algorithms</li> <li>Complex Projects - Combine all concepts in real applications</li> </ol>"},{"location":"programming/c/#key-concepts-covered","title":"Key Concepts Covered","text":""},{"location":"programming/c/#data-structures","title":"Data Structures","text":"<ul> <li>Static Structures - Arrays, structures, unions</li> <li>Dynamic Structures - Linked lists, dynamic arrays</li> <li>Memory Management - malloc, free, and best practices</li> </ul>"},{"location":"programming/c/#file-handling","title":"File Handling","text":"<ul> <li>Text Files - Character-based file operations</li> <li>Binary Files - Efficient data storage and retrieval</li> <li>File Streams - Understanding file pointers and buffering</li> </ul>"},{"location":"programming/c/#advanced-features","title":"Advanced Features","text":"<ul> <li>Preprocessor - Macros, conditional compilation</li> <li>Random Generation - Pseudo-random number algorithms</li> <li>System Integration - Platform-specific programming</li> </ul> <p>Each tutorial includes: - \ud83d\udcdd Detailed Explanations - Clear concept descriptions - \ud83d\udcbb Code Examples - Working, tested code samples - \ud83d\udd27 Practical Exercises - Hands-on programming challenges - \ud83d\udcda Reference Materials - Quick lookup guides - \u26a0\ufe0f Common Pitfalls - Mistakes to avoid</p> <p>Start with the environment setup and work through the tutorials in order for the best learning experience!</p>"},{"location":"programming/c/day10-macros/","title":"C \u200b\u8bed\u8a00\u200b\u5b8f\u200b\u7cfb\u7edf\u200b\u8be6\u89e3\u200b\uff1a\u200b\u4ece\u200b\u57fa\u7840\u200b\u5230\u200b\u9ad8\u7ea7\u200b\u5e94\u7528","text":"<p>\u200b\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u5b8f\u200b\u7cfb\u7edf\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u4e14\u200b\u7075\u6d3b\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u5b83\u200b\u901a\u8fc7\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u5728\u200b\u7f16\u8bd1\u200b\u4e4b\u524d\u200b\u5bf9\u200b\u4ee3\u7801\u200b\u8fdb\u884c\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u3002\u200b\u5b8f\u200b\u7684\u200b\u4f7f\u7528\u200b\u53ef\u4ee5\u200b\u7b80\u5316\u200b\u4ee3\u7801\u200b\u3001\u200b\u63d0\u9ad8\u6548\u7387\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u6f5c\u5728\u200b\u95ee\u9898\u200b\uff0c\u200b\u5982\u200b\u8c03\u8bd5\u200b\u56f0\u96be\u200b\u548c\u200b\u53ef\u8bfb\u6027\u200b\u4e0b\u964d\u200b\u3002\u200b\u672c\u6587\u200b\u5c06\u200b\u5e26\u200b\u4f60\u200b\u6df1\u5165\u200b\u4e86\u89e3\u200b C \u200b\u8bed\u8a00\u200b\u5b8f\u200b\u7cfb\u7edf\u200b\u7684\u200b\u5404\u4e2a\u65b9\u9762\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u4e30\u5bcc\u200b\u7684\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u5176\u200b\u7528\u6cd5\u200b\u548c\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u3002</p>"},{"location":"programming/c/day10-macros/#1","title":"1 \u200b\u5b8f\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u5b8f\u662f\u200b C \u200b\u8bed\u8a00\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u6838\u5fc3\u4f5c\u7528\u200b\u662f\u200b\u5c06\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b\u7279\u5b9a\u200b\u7247\u6bb5\u200b\u66ff\u6362\u200b\u4e3a\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6587\u672c\u200b\u3002\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u6307\u4ee4\u200b\u4ee5\u200b <code>#</code> \u200b\u5f00\u5934\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u7f16\u8bd1\u200b\u4e4b\u524d\u200b\u5904\u7406\u200b\u3002</p>"},{"location":"programming/c/day10-macros/#_1","title":"\u5b9a\u4e49\u200b\u5b8f","text":"<p>\u200b\u5b8f\u200b\u7684\u200b\u5b9a\u4e49\u200b\u975e\u5e38\u7b80\u5355\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>#define</code> \u200b\u6307\u4ee4\u200b\u5373\u53ef\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define PI 3.14159\n#define SQUARE(x) ((x) * (x))\n</code></pre> <p>\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c<code>PI</code> \u200b\u4f1a\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>3.14159</code>\uff0c\u200b\u800c\u200b <code>SQUARE(x)</code> \u200b\u4f1a\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>((x) * (x))</code>\u3002\u200b\u8fd9\u79cd\u200b\u66ff\u6362\u200b\u53d1\u751f\u200b\u5728\u200b\u7f16\u8bd1\u200b\u4e4b\u524d\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5b8f\u200b\u7684\u200b\u6548\u7387\u200b\u975e\u5e38\u200b\u9ad8\u200b\u3002</p>"},{"location":"programming/c/day10-macros/#_2","title":"\u5b8f\u200b\u7684\u200b\u5206\u7c7b","text":""},{"location":"programming/c/day10-macros/#_3","title":"\u5bf9\u8c61\u200b\u5b8f\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u5e38\u91cf\u200b\u6216\u200b\u6587\u672c\u200b\u66ff\u6362","text":"<p>\u200b\u5bf9\u8c61\u200b\u5b8f\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5b9a\u4e49\u200b\u5e38\u91cf\u200b\u6216\u200b\u7b80\u5355\u200b\u7684\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define MAX 100\n#define MESSAGE \"Hello, World!\"\n</code></pre> <p>\u200b\u5728\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c<code>MAX</code> \u200b\u4f1a\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>100</code>\uff0c\u200b\u800c\u200b <code>MESSAGE</code> \u200b\u4f1a\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u200b <code>\"Hello, World!\"</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u5e38\u91cf\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define PI 3.14159\n#define MAX_VALUE 100\n\nint main() {\n    printf(\"PI = %f\\n\", PI);          // \u200b\u8f93\u51fa\u200b\uff1aPI = 3.141590\n    printf(\"MAX_VALUE = %d\\n\", MAX_VALUE); // \u200b\u8f93\u51fa\u200b\uff1aMAX_VALUE = 100\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_4","title":"\u51fd\u6570\u200b\u5b8f\u200b\uff1a\u200b\u5e26\u200b\u53c2\u6570\u200b\u7684\u200b\u4ee3\u7801\u200b\u7247\u6bb5","text":"<p>\u200b\u51fd\u6570\u200b\u5b8f\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u662f\u200b\u901a\u8fc7\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define SQUARE(x) ((x) * (x))\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u8ba1\u7b97\u200b\u5e73\u65b9\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define SQUARE(x) ((x) * (x))\n\nint main() {\n    int a = 5;\n    printf(\"Square of %d is %d\\n\", a, SQUARE(a)); // \u200b\u8f93\u51fa\u200b\uff1aSquare of 5 is 25\n    return 0;\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5b8f\u200b\u7684\u200b\u9677\u9631\u200b</p> <p>\u200b\u5b8f\u662f\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u5c0f\u5fc3\u200b\u5904\u7406\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define SQUARE(x) x * x\nint result = SQUARE(1 + 2); // \u200b\u5b9e\u9645\u200b\u66ff\u6362\u200b\u4e3a\u200b 1 + 2 * 1 + 2\uff0c\u200b\u7ed3\u679c\u200b\u4e3a\u200b 5 \u200b\u800c\u200b\u4e0d\u662f\u200b 9\n</code></pre> <p>\u200b\u4e3a\u4e86\u200b\u907f\u514d\u200b\u8fd9\u79cd\u200b\u95ee\u9898\u200b\uff0c\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u7528\u200b\u62ec\u53f7\u200b\u5305\u88f9\u200b\u5b8f\u200b\u7684\u200b\u53c2\u6570\u200b\u548c\u200b\u8868\u8fbe\u5f0f\u200b\uff1a</p> <pre><code>#define SQUARE(x) ((x) * (x))\n</code></pre>"},{"location":"programming/c/day10-macros/#_5","title":"\u5e26\u200b\u6761\u4ef6\u200b\u7684\u200b\u5b8f\u200b\uff1a\u200b\u6761\u4ef6\u200b\u7f16\u8bd1","text":"<p>\u200b\u5b8f\u200b\u4e0e\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u6307\u4ee4\u200b\u7ed3\u5408\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u7279\u5b9a\u6761\u4ef6\u200b\u9009\u62e9\u6027\u200b\u5730\u200b\u5305\u542b\u200b\u6216\u200b\u6392\u9664\u200b\u4ee3\u7801\u200b\u7247\u6bb5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define DEBUG\n\n#ifdef DEBUG\n    #define LOG(msg) printf(\"DEBUG: %s\\n\", msg)\n#else\n    #define LOG(msg)\n#endif\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u8c03\u8bd5\u6a21\u5f0f\u200b\u5f00\u5173\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define DEBUG\n\n#ifdef DEBUG\n    #define LOG(msg) printf(\"DEBUG: %s\\n\", msg)\n#else\n    #define LOG(msg) // \u200b\u7a7a\u200b\u5b9a\u4e49\u200b\n#endif\n\nint main() {\n    LOG(\"This is a debug message.\"); // \u200b\u5982\u679c\u200b\u5b9a\u4e49\u200b\u4e86\u200bDEBUG\uff0c\u200b\u5219\u200b\u4f1a\u200b\u8f93\u51fa\u200b\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_6","title":"\u5b8f\u200b\u7684\u200b\u9ad8\u7ea7\u200b\u7528\u6cd5","text":""},{"location":"programming/c/day10-macros/#_7","title":"\u5b57\u7b26\u4e32\u200b\u5316\u200b\uff1a\u200b\u5c06\u5b8f\u200b\u53c2\u6570\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u4f7f\u7528\u200b <code>#</code> \u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u4ee5\u200b\u5c06\u5b8f\u200b\u53c2\u6570\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define STRINGIFY(x) #x\nprintf(STRINGIFY(Hello World)); // \u200b\u8f93\u51fa\u200b \"Hello World\"\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u5b57\u7b26\u4e32\u200b\u5316\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define TO_STRING(x) #x\n\nint main() {\n    printf(\"%s\\n\", TO_STRING(Hello World!)); // \u200b\u8f93\u51fa\u200b\uff1a\"Hello World!\"\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_8","title":"\u8fde\u63a5\u7b26\u200b\uff08<code>##</code>\uff09\uff1a\u200b\u62fc\u63a5\u200b\u6807\u8bc6\u7b26","text":"<p>\u200b\u4f7f\u7528\u200b <code>##</code> \u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e24\u4e2a\u200b\u6807\u8bb0\u200b\u8fde\u63a5\u6210\u200b\u4e00\u4e2a\u200b\u6807\u8bc6\u7b26\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define CONCAT(a, b) a##b\nint CONCAT(my, Variable) = 10; // \u200b\u7b49\u4ef7\u200b\u4e8e\u200b int myVariable = 10;\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u6807\u8bc6\u7b26\u200b\u62fc\u63a5\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define CONCAT(a, b) a##b\n\nint main() {\n    int myVariable = 10;\n    printf(\"Value: %d\\n\", CONCAT(my, Variable)); // \u200b\u7b49\u4ef7\u200b\u4e8e\u200b myVariable\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_9","title":"\u53ef\u53d8\u200b\u53c2\u6570\u200b\u5b8f\u200b\uff1a\u200b\u5904\u7406\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u6570\u91cf\u200b\u7684\u200b\u53c2\u6570","text":"<p>C99 \u200b\u6807\u51c6\u200b\u5f15\u5165\u200b\u4e86\u200b\u53ef\u53d8\u200b\u53c2\u6570\u200b\u5b8f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u53c2\u6570\u200b\u6570\u91cf\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#define LOG(fmt, ...) printf(fmt, __VA_ARGS__)\nLOG(\"Value: %d\\n\", 42); // \u200b\u7b49\u4ef7\u200b\u4e8e\u200b printf(\"Value: %d\\n\", 42);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u53ef\u53d8\u200b\u53c2\u6570\u200b\u5b8f\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define LOG(fmt, ...) printf(\"LOG: \" fmt \"\\n\", __VA_ARGS__)\n\nint main() {\n    LOG(\"Value: %d, Name: %s\", 42, \"John\"); // \u200b\u8f93\u51fa\u200b\uff1aLOG: Value: 42, Name: John\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_10","title":"\u5b8f\u200b\u4e0e\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u6bd4\u8f83","text":"<p>\u200b\u5b8f\u200b\u548c\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u5728\u200b\u529f\u80fd\u200b\u4e0a\u200b\u6709\u200b\u4e00\u5b9a\u200b\u91cd\u53e0\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u5404\u6709\u200b\u4f18\u7f3a\u70b9\u200b\uff1a</p> \u200b\u7279\u6027\u200b \u200b\u5b8f\u200b \u200b\u5185\u8054\u200b\u51fd\u6570\u200b \u200b\u6587\u672c\u200b\u66ff\u6362\u200b \u200b\u76f4\u63a5\u200b\u6587\u672c\u200b\u66ff\u6362\u200b \u200b\u51fd\u6570\u8c03\u7528\u200b \u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u200b\u65e0\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u9519\u8bef\u200b \u200b\u6709\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u671f\u200b\u68c0\u67e5\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b \u200b\u53ef\u8bfb\u6027\u200b \u200b\u5927\u91cf\u200b\u4f7f\u7528\u200b\u53ef\u80fd\u200b\u964d\u4f4e\u200b\u53ef\u8bfb\u6027\u200b \u200b\u66f4\u200b\u6e05\u6670\u200b\u7684\u200b\u4ee3\u7801\u200b\u7ed3\u6784\u200b \u200b\u8c03\u8bd5\u200b \u200b\u4e0d\u6613\u200b\u8c03\u8bd5\u200b\uff08\u200b\u65e0\u6cd5\u200b\u8bbe\u7f6e\u200b\u65ad\u70b9\u200b\uff09 \u200b\u6613\u4e8e\u200b\u8c03\u8bd5\u200b\uff08\u200b\u53ef\u200b\u8bbe\u7f6e\u200b\u65ad\u70b9\u200b\uff09 \u200b\u6548\u7387\u200b \u200b\u66ff\u6362\u200b\u540e\u200b\u53ef\u80fd\u200b\u8f83\u200b\u5feb\u200b\uff0c\u200b\u4f46\u200b\u5b58\u5728\u200b\u6f5c\u5728\u200b\u95ee\u9898\u200b \u200b\u5728\u200b\u542f\u7528\u200b\u4f18\u5316\u200b\u65f6\u200b\u4e0e\u200b\u5b8f\u200b\u6027\u80fd\u200b\u76f8\u8fd1"},{"location":"programming/c/day10-macros/#_11","title":"\u5b8f\u200b\u7684\u200b\u4f18\u70b9\u200b\u4e0e\u200b\u7f3a\u70b9","text":""},{"location":"programming/c/day10-macros/#_12","title":"\u4f18\u70b9","text":"<ul> <li>\u200b\u63d0\u9ad8\u200b\u4ee3\u7801\u200b\u91cd\u7528\u200b\u6027\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u7528\u200b\u7b80\u5355\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u4ee3\u66ff\u200b\u590d\u6742\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</li> <li>\u200b\u63d0\u9ad8\u200b\u4ee3\u7801\u200b\u53ef\u79fb\u690d\u6027\u200b\uff1a\u200b\u901a\u8fc7\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u63a7\u5236\u200b\u4e0d\u540c\u200b\u5e73\u53f0\u200b\u7684\u200b\u4ee3\u7801\u200b\u884c\u4e3a\u200b\u3002</li> <li>\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\uff1a\u200b\u5b8f\u662f\u200b\u76f4\u63a5\u200b\u66ff\u6362\u200b\uff0c\u200b\u65e0\u9700\u200b\u51fd\u6570\u8c03\u7528\u200b\u5f00\u9500\u200b\u3002</li> </ul>"},{"location":"programming/c/day10-macros/#_13","title":"\u7f3a\u70b9","text":"<ul> <li>\u200b\u7f3a\u4e4f\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff1a\u200b\u5bb9\u6613\u200b\u5f15\u5165\u200b\u6f5c\u5728\u200b\u7684\u200b\u9519\u8bef\u200b\u3002</li> <li>\u200b\u8c03\u8bd5\u200b\u56f0\u96be\u200b\uff1a\u200b\u56e0\u4e3a\u200b\u662f\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\uff0c\u200b\u8c03\u8bd5\u200b\u65f6\u200b\u65e0\u6cd5\u200b\u51c6\u786e\u200b\u8ffd\u8e2a\u200b\u5b8f\u200b\u3002</li> <li>\u200b\u53ef\u8bfb\u6027\u200b\u5dee\u200b\uff1a\u200b\u590d\u6742\u200b\u5b8f\u4f1a\u200b\u5bfc\u81f4\u200b\u4ee3\u7801\u200b\u96be\u4ee5\u200b\u7406\u89e3\u200b\u3002</li> <li>\u200b\u9690\u542b\u200b\u7684\u200b\u526f\u4f5c\u7528\u200b\uff1a\u200b\u4f8b\u5982\u200b\u4e0d\u200b\u6b63\u786e\u200b\u7684\u200b\u62ec\u53f7\u200b\u5904\u7406\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u610f\u5916\u200b\u7684\u200b\u903b\u8f91\u200b\u9519\u8bef\u200b\u3002</li> </ul>"},{"location":"programming/c/day10-macros/#_14","title":"\u5b9e\u9645\u200b\u5f00\u53d1\u200b\u4e2d\u200b\u7684\u200b\u5b8f\u200b\u5e94\u7528","text":""},{"location":"programming/c/day10-macros/#_15","title":"\u7b80\u5316\u200b\u6570\u7ec4\u200b\u5927\u5c0f\u200b\u83b7\u53d6","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define ARRAY_SIZE(arr) (sizeof(arr) / sizeof((arr)[0]))\n\nint main() {\n    int nums[] = {1, 2, 3, 4, 5};\n    printf(\"Array size: %d\\n\", (int)ARRAY_SIZE(nums)); // \u200b\u8f93\u51fa\u200b\uff1aArray size: 5\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_16","title":"\u4f4d\u64cd\u4f5c","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define SET_BIT(value, bit) ((value) |= (1 &lt;&lt; (bit)))  // \u200b\u8bbe\u7f6e\u200b\u67d0\u4e2a\u200b\u4f4d\u200b\n#define CLEAR_BIT(value, bit) ((value) &amp;= ~(1 &lt;&lt; (bit))) // \u200b\u6e05\u9664\u200b\u67d0\u4e2a\u200b\u4f4d\u200b\n#define TOGGLE_BIT(value, bit) ((value) ^= (1 &lt;&lt; (bit))) // \u200b\u5207\u6362\u200b\u67d0\u4e2a\u200b\u4f4d\u200b\n#define CHECK_BIT(value, bit) ((value) &amp; (1 &lt;&lt; (bit)))   // \u200b\u68c0\u67e5\u200b\u67d0\u4e2a\u200b\u4f4d\u200b\n\nint main() {\n    int flags = 0;\n    SET_BIT(flags, 1);\n    printf(\"Flags after setting bit 1: %d\\n\", flags); // \u200b\u8f93\u51fa\u200b\uff1a2 (\u200b\u4e8c\u8fdb\u5236\u200b\uff1a10)\n    CLEAR_BIT(flags, 1);\n    printf(\"Flags after clearing bit 1: %d\\n\", flags); // \u200b\u8f93\u51fa\u200b\uff1a0\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_17","title":"\u9632\u6b62\u200b\u91cd\u590d\u200b\u5305\u542b\u200b\u5934\u6587\u4ef6","text":"<pre><code>#ifndef MY_HEADER_H\n#define MY_HEADER_H\n\n// \u200b\u5b9a\u4e49\u200b\u5934\u6587\u4ef6\u200b\u5185\u5bb9\u200b\nvoid myFunction();\n\n#endif // MY_HEADER_H\n</code></pre>"},{"location":"programming/c/day10-macros/#_18","title":"\u8f7b\u91cf\u7ea7\u200b\u72b6\u6001\u673a","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#define STATE_INIT  0\n#define STATE_START 1\n#define STATE_END   2\n\n#define PROCESS_STATE(state) \\\n    switch (state) {         \\\n        case STATE_INIT:     \\\n            printf(\"Initializing...\\n\"); break; \\\n        case STATE_START:    \\\n            printf(\"Starting...\\n\"); break;     \\\n        case STATE_END:      \\\n            printf(\"Ending...\\n\"); break;       \\\n        default:\n            printf(\"Unknown state\\n\"); break;  \\\n    }\n\nint main() {\n    int currentState = STATE_START;\n    PROCESS_STATE(currentState); // \u200b\u8f93\u51fa\u200b\uff1aStarting...\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day10-macros/#_19","title":"\u603b\u7ed3","text":"<p>\u200b\u5b8f\u662f\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u4e14\u200b\u7075\u6d3b\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u80fd\u591f\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u4ee3\u7801\u200b\u7684\u200b\u6548\u7387\u200b\u548c\u200b\u53ef\u79fb\u690d\u6027\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u5b83\u200b\u4e5f\u200b\u6709\u200b\u4e00\u4e9b\u200b\u6f5c\u5728\u200b\u7684\u200b\u7f3a\u70b9\u200b\uff0c\u200b\u5982\u200b\u8c03\u8bd5\u200b\u56f0\u96be\u200b\u548c\u200b\u53ef\u8bfb\u6027\u200b\u4e0b\u964d\u200b\u3002\u200b\u5728\u200b\u73b0\u4ee3\u200b\u5f00\u53d1\u200b\u4e2d\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b <code>const</code>\u3001<code>inline</code> \u200b\u7b49\u200b\u66f4\u200b\u5b89\u5168\u200b\u548c\u200b\u53ef\u63a7\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u67d0\u4e9b\u200b\u573a\u666f\u200b\u4e0b\u200b\uff0c\u200b\u5b8f\u200b\u4ecd\u7136\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0d\u53ef\u6216\u7f3a\u200b\u7684\u200b\u5229\u5668\u200b\u3002</p>"},{"location":"programming/c/day11-random-numbers/","title":"Day 11 - Random Numbers","text":"<pre><code># C\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u751f\u6210\u200b\n\n\u200b\u5728\u200bC\u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u751f\u6210\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u529f\u80fd\u200b\u4e3b\u8981\u200b\u901a\u8fc7\u200b\u6807\u51c6\u200b\u5e93\u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e24\u4e2a\u200b\u51fd\u6570\u200b\u6765\u200b\u5b9e\u73b0\u200b\uff1a`rand()` \u200b\u548c\u200b `srand()`\u3002\u200b\u5b83\u4eec\u200b\u5206\u522b\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u968f\u673a\u6570\u200b\u548c\u200b\u8bbe\u7f6e\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u79cd\u5b50\u200b\u3002\n\n## 1. `rand()` \u200b\u51fd\u6570\u200b\n\n`rand()` \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u4f2a\u200b\u968f\u673a\u6570\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6574\u578b\u200b\u6570\u200b\uff0c\u200b\u8303\u56f4\u200b\u4ece\u200b `0` \u200b\u5230\u200b `RAND_MAX`\u3002`RAND_MAX` \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e38\u91cf\u200b\uff0c\u200b\u8868\u793a\u200b `rand()` \u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u751f\u6210\u200b\u7684\u200b\u6700\u5927\u503c\u200b\uff0c\u200b\u5176\u200b\u5177\u4f53\u200b\u6570\u503c\u200b\u901a\u5e38\u200b\u4e3a\u200b `32767`\uff0c\u200b\u4f46\u662f\u200b\u5b83\u200b\u7684\u200b\u5177\u4f53\u200b\u503c\u200b\u4f9d\u8d56\u4e8e\u200b\u7cfb\u7edf\u200b\u3002\n\n### \u200b\u793a\u4f8b\u200b\n\n```c\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    // \u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u968f\u673a\u6570\u200b\n    int num = rand();\n    printf(\"\u200b\u968f\u673a\u6570\u200b\uff1a%d\\n\", num);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day11-random-numbers/#2-srand","title":"2. <code>srand()</code> \u200b\u51fd\u6570","text":"<p>\u200b\u7531\u4e8e\u200b <code>rand()</code> \u200b\u51fd\u6570\u200b\u662f\u200b\u4f2a\u200b\u968f\u673a\u200b\u7684\u200b\uff0c\u200b\u6bcf\u6b21\u200b\u7a0b\u5e8f\u8fd0\u884c\u200b\u65f6\u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u5e8f\u5217\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b\u3002\u200b\u4e3a\u4e86\u200b\u4f7f\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u751f\u6210\u200b\u5e8f\u5217\u200b\u4e0d\u540c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>srand()</code> \u200b\u51fd\u6570\u200b\u4e3a\u200b\u968f\u673a\u6570\u200b\u751f\u6210\u5668\u200b\u8bbe\u7f6e\u200b\u4e00\u4e2a\u200b\u79cd\u5b50\u200b\u3002\u200b\u901a\u5e38\u200b\uff0c\u200b\u4f7f\u7528\u200b\u7cfb\u7edf\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\uff08\u200b\u901a\u8fc7\u200b <code>time(NULL)</code>\uff09\u200b\u4f5c\u4e3a\u200b\u79cd\u5b50\u200b\u6765\u200b\u786e\u4fdd\u200b\u6bcf\u6b21\u200b\u8fd0\u884c\u200b\u65f6\u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u4e0d\u540c\u200b\u3002</p>"},{"location":"programming/c/day11-random-numbers/#_1","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    // \u200b\u8bbe\u7f6e\u200b\u968f\u673a\u6570\u200b\u79cd\u5b50\u200b\n    srand(time(NULL));\n\n    // \u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u968f\u673a\u6570\u200b\n    int num = rand();\n    printf(\"\u200b\u968f\u673a\u6570\u200b\uff1a%d\\n\", num);\n    return 0;\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u6bb5\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c<code>srand(time(NULL))</code> \u200b\u7528\u200b\u5f53\u524d\u200b\u65f6\u95f4\u200b\u8bbe\u7f6e\u200b\u4e86\u200b\u79cd\u5b50\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u6bcf\u6b21\u200b\u8fd0\u884c\u200b\u7a0b\u5e8f\u200b\u65f6\u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u90fd\u200b\u4e0d\u540c\u200b\u3002<code>time(NULL)</code> \u200b\u8fd4\u56de\u200b\u5f53\u524d\u200b\u7684\u200b\u65f6\u95f4\u200b\u6233\u200b\uff08\u200b\u79d2\u6570\u200b\uff09\uff0c\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u4e0d\u65ad\u200b\u53d8\u5316\u200b\u7684\u200b\u503c\u200b\u3002</p>"},{"location":"programming/c/day11-random-numbers/#3","title":"3. \u200b\u9650\u5236\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u8303\u56f4","text":"<p><code>rand()</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4ecb\u4e8e\u200b <code>0</code> \u200b\u548c\u200b <code>RAND_MAX</code> \u200b\u4e4b\u95f4\u200b\u7684\u200b\u6574\u6570\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u9700\u8981\u200b\u9650\u5236\u200b\u968f\u673a\u6570\u200b\u5728\u200b\u4e00\u4e2a\u200b\u7279\u5b9a\u200b\u7684\u200b\u8303\u56f4\u200b\u5185\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u53d6\u4f59\u200b\u8fd0\u7b97\u7b26\u200b <code>%</code> \u200b\u6216\u200b\u7ed3\u5408\u200b\u52a0\u6cd5\u200b\u6765\u200b\u8c03\u6574\u200b\u3002</p>"},{"location":"programming/c/day11-random-numbers/#min-max","title":"\u793a\u4f8b\u200b\uff1a\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u8303\u56f4\u200b\u5728\u200b <code>min</code> \u200b\u5230\u200b <code>max</code> \u200b\u4e4b\u95f4\u200b\u7684\u200b\u968f\u673a\u6570","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    // \u200b\u8bbe\u7f6e\u200b\u968f\u673a\u6570\u200b\u79cd\u5b50\u200b\n    srand(time(NULL));\n\n    // \u200b\u5b9a\u4e49\u200b\u8303\u56f4\u200b\n    int min = 1;\n    int max = 100;\n\n    // \u200b\u751f\u6210\u200b\u8303\u56f4\u200b\u5728\u200b [min, max] \u200b\u4e4b\u95f4\u200b\u7684\u200b\u968f\u673a\u6570\u200b\n    int num = rand() % (max - min + 1) + min;\n    printf(\"\u200b\u968f\u673a\u6570\u200b\uff1a%d\\n\", num);\n    return 0;\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u6bb5\u200b\u4ee3\u7801\u200b\u4e2d\u200b\uff0c<code>rand() % (max - min + 1) + min</code> \u200b\u786e\u4fdd\u200b\u4e86\u200b\u968f\u673a\u6570\u200b\u4f1a\u200b\u5728\u200b <code>min</code> \u200b\u5230\u200b <code>max</code> \u200b\u8303\u56f4\u200b\u5185\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5982\u679c\u200b <code>min = 1</code> \u200b\u548c\u200b <code>max = 100</code>\uff0c\u200b\u90a3\u4e48\u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u5c06\u4f1a\u200b\u662f\u200b <code>[1, 100]</code> \u200b\u4e4b\u95f4\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u3002</p>"},{"location":"programming/c/day11-random-numbers/#4","title":"4. \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u200b\u4f2a\u200b\u968f\u673a\u6027\u200b\uff1a<code>rand()</code> \u200b\u751f\u6210\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u662f\u200b\u4f2a\u200b\u968f\u673a\u200b\u7684\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u5b83\u4eec\u200b\u5e76\u975e\u200b\u5b8c\u5168\u200b\u968f\u673a\u200b\uff0c\u200b\u800c\u662f\u200b\u901a\u8fc7\u200b\u4e00\u5b9a\u200b\u7684\u200b\u7b97\u6cd5\u200b\u751f\u6210\u200b\u7684\u200b\uff0c\u200b\u770b\u8d77\u6765\u200b\u5f88\u200b\u968f\u673a\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u79cd\u5b50\u200b\u503c\u200b\u63a8\u7b97\u51fa\u6765\u200b\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u66f4\u200b\u9ad8\u8d28\u91cf\u200b\u7684\u200b\u968f\u673a\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u6bd4\u5982\u200b <code>rand_s</code> \u200b\u6216\u200b <code>mt19937</code> \u200b\u7b97\u6cd5\u200b\uff08\u200b\u4f7f\u7528\u200b C++ \u200b\u7684\u200b <code>&lt;random&gt;</code> \u200b\u5e93\u200b\uff09\u3002</p> </li> <li> <p>RAND_MAX \u200b\u7684\u200b\u503c\u200b\uff1a<code>RAND_MAX</code> \u200b\u662f\u200b\u7cfb\u7edf\u200b\u9650\u5b9a\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff0c<code>rand()</code> \u200b\u7684\u200b\u6700\u5927\u200b\u8fd4\u56de\u503c\u200b\u53ef\u80fd\u200b\u4e0d\u540c\u200b\u3002\u200b\u4e00\u822c\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>RAND_MAX</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5927\u7ea6\u200b <code>32767</code> \u200b\u7684\u200b\u5e38\u6570\u200b\u3002</p> </li> <li> <p>\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\uff1a<code>rand()</code> \u200b\u548c\u200b <code>srand()</code> \u200b\u4e0d\u662f\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b\u591a\u7ebf\u7a0b\u200b\u73af\u5883\u200b\u4e2d\u200b\u751f\u6210\u200b\u968f\u673a\u6570\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u5982\u200b POSIX \u200b\u7684\u200b <code>rand_r()</code> \u200b\u6216\u8005\u200b C11 \u200b\u7684\u200b <code>&lt;stdalign.h&gt;</code> \u200b\u4e2d\u200b\u7684\u200b <code>random()</code> \u200b\u548c\u200b <code>srandom()</code> \u200b\u51fd\u6570\u200b\u3002</p> </li> </ul>"},{"location":"programming/c/day11-random-numbers/#5-c11","title":"5. \u200b\u4f7f\u7528\u200b\u66f4\u200b\u9ad8\u8d28\u91cf\u200b\u7684\u200b\u968f\u673a\u6570\u200b\uff08C11\u200b\u53ca\u200b\u4ee5\u4e0a\u200b\uff09","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6b63\u5728\u200b\u4f7f\u7528\u200b C11 \u200b\u6216\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b\u7684\u200b\u6807\u51c6\u200b\uff0cC \u200b\u6807\u51c6\u200b\u5e93\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u9ad8\u8d28\u91cf\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u751f\u6210\u200b\u51fd\u6570\u200b\uff1a</p> <ul> <li><code>rand()</code> \u200b\u4ecd\u7136\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b C11 \u200b\u4e4b\u540e\u200b\u63a8\u8350\u200b\u4f7f\u7528\u200b\u66f4\u200b\u73b0\u4ee3\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u751f\u6210\u200b\u65b9\u6cd5\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>random()</code> \u200b\u548c\u200b <code>srandom()</code>\uff0c\u200b\u5b83\u4eec\u200b\u63d0\u4f9b\u200b\u66f4\u597d\u200b\u7684\u200b\u968f\u673a\u6027\u200b\u3002</li> </ul>"},{"location":"programming/c/day11-random-numbers/#_2","title":"\u603b\u7ed3","text":"<ul> <li>\u200b\u4f7f\u7528\u200b <code>rand()</code> \u200b\u751f\u6210\u200b\u4f2a\u200b\u968f\u673a\u6570\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>srand()</code> \u200b\u8bbe\u7f6e\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u79cd\u5b50\u200b\uff0c\u200b\u901a\u5e38\u200b\u7ed3\u5408\u200b <code>time(NULL)</code> \u200b\u6765\u200b\u786e\u4fdd\u200b\u6bcf\u6b21\u200b\u7a0b\u5e8f\u8fd0\u884c\u200b\u65f6\u200b\u751f\u6210\u200b\u4e0d\u540c\u200b\u7684\u200b\u968f\u673a\u6570\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u53d6\u4f59\u200b\u64cd\u4f5c\u200b\u8c03\u6574\u200b\u968f\u673a\u6570\u200b\u7684\u200b\u8303\u56f4\u200b\u3002 ```</li> </ul>"},{"location":"programming/c/day7-structures-unions/","title":"C Programming Day 7: Structures and Unions - Comprehensive Guide","text":"<p>Structures (<code>struct</code>) are one of the most powerful features in C programming, allowing you to create custom data types that group related data together. This comprehensive guide covers everything from basic concepts to advanced techniques and real-world applications.</p>"},{"location":"programming/c/day7-structures-unions/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Introduction to Structures</li> <li>Structure Definition and Declaration</li> <li>Structure Initialization</li> <li>Accessing Structure Members</li> <li>Structure Arrays</li> <li>Structure Pointers</li> <li>Nested Structures</li> <li>Structures as Function Parameters</li> <li>Dynamic Memory Allocation with Structures</li> <li>Memory Layout and Alignment</li> <li>Unions vs Structures</li> <li>Advanced Techniques</li> <li>Real-World Applications</li> <li>Best Practices</li> </ol>"},{"location":"programming/c/day7-structures-unions/#introduction-to-structures","title":"Introduction to Structures","text":"<p>A structure is a user-defined data type that allows you to combine data items of different kinds. Structures are used to represent a record, such as a book in a library, a student in a university, or an employee in a company.</p>"},{"location":"programming/c/day7-structures-unions/#why-use-structures","title":"Why Use Structures?","text":"<ul> <li>Data Organization: Group related data together logically</li> <li>Code Readability: Make code more understandable and maintainable</li> <li>Data Abstraction: Create custom data types for specific domains</li> <li>Memory Efficiency: Organize data in memory more effectively</li> <li>Modularity: Enable better program structure and design</li> </ul>"},{"location":"programming/c/day7-structures-unions/#structure-definition-and-declaration","title":"Structure Definition and Declaration","text":""},{"location":"programming/c/day7-structures-unions/#basic-syntax","title":"Basic Syntax","text":"<pre><code>struct structure_name {\n    data_type member1;\n    data_type member2;\n    // ... more members\n};\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#complete-example-with-detailed-explanation","title":"Complete Example with Detailed Explanation","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\n// Structure definition - this creates a new data type\nstruct Book {\n    char title[100];        // String to store book title\n    char author[50];        // String to store author name\n    char isbn[20];          // ISBN number\n    int pages;              // Number of pages\n    float price;            // Book price\n    int publication_year;   // Year of publication\n    char genre[30];         // Book genre\n};\n\nint main() {\n    // Structure variable declaration\n    struct Book book1;\n\n    // Initialize structure members using strcpy for strings\n    strcpy(book1.title, \"The C Programming Language\");\n    strcpy(book1.author, \"Brian W. Kernighan &amp; Dennis M. Ritchie\");\n    strcpy(book1.isbn, \"978-0131103627\");\n    book1.pages = 272;\n    book1.price = 62.99;\n    book1.publication_year = 1988;\n    strcpy(book1.genre, \"Computer Science\");\n\n    // Display book information\n    printf(\"=== Book Information ===\\n\");\n    printf(\"Title: %s\\n\", book1.title);\n    printf(\"Author: %s\\n\", book1.author);\n    printf(\"ISBN: %s\\n\", book1.isbn);\n    printf(\"Pages: %d\\n\", book1.pages);\n    printf(\"Price: $%.2f\\n\", book1.price);\n    printf(\"Publication Year: %d\\n\", book1.publication_year);\n    printf(\"Genre: %s\\n\", book1.genre);\n\n    return 0;\n}\n</code></pre> <p>Output: <pre><code>=== Book Information ===\nTitle: The C Programming Language\nAuthor: Brian W. Kernighan &amp; Dennis M. Ritchie\nISBN: 978-0131103627\nPages: 272\nPrice: $62.99\nPublication Year: 1988\nGenre: Computer Science\n</code></pre></p>"},{"location":"programming/c/day7-structures-unions/#structure-initialization","title":"Structure Initialization","text":"<p>C provides several ways to initialize structure variables, each with its own advantages and use cases.</p>"},{"location":"programming/c/day7-structures-unions/#1-declaration-without-initialization","title":"1. Declaration Without Initialization","text":"<pre><code>struct Book book1;  // Declares a structure variable (contains garbage values)\n</code></pre> <p>\u26a0\ufe0f Warning: Uninitialized structures contain garbage values. Always initialize before use.</p>"},{"location":"programming/c/day7-structures-unions/#2-sequential-initialization-c89-style","title":"2. Sequential Initialization (C89 Style)","text":"<p>Initialize members in the order they appear in the structure definition:</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Student {\n    int id;\n    char name[50];\n    float gpa;\n    int graduation_year;\n};\n\nint main() {\n    // Sequential initialization - values must be in declaration order\n    struct Student student1 = {12345, \"Alice Johnson\", 3.85, 2024};\n\n    printf(\"Student ID: %d\\n\", student1.id);\n    printf(\"Name: %s\\n\", student1.name);\n    printf(\"GPA: %.2f\\n\", student1.gpa);\n    printf(\"Graduation Year: %d\\n\", student1.graduation_year);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#3-designated-initializers-c99-and-later","title":"3. Designated Initializers (C99 and Later)","text":"<p>Initialize specific members by name - order doesn't matter:</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Employee {\n    int emp_id;\n    char name[50];\n    char department[30];\n    float salary;\n    int years_experience;\n};\n\nint main() {\n    // Designated initialization - can specify any members in any order\n    struct Employee emp1 = {\n        .name = \"John Smith\",\n        .emp_id = 1001,\n        .salary = 75000.0,\n        .department = \"Engineering\",\n        .years_experience = 5\n    };\n\n    // Partial initialization - unspecified members are set to zero\n    struct Employee emp2 = {\n        .name = \"Jane Doe\",\n        .emp_id = 1002,\n        .salary = 68000.0\n        // department and years_experience will be zero/empty\n    };\n\n    printf(\"Employee 1:\\n\");\n    printf(\"  ID: %d\\n\", emp1.emp_id);\n    printf(\"  Name: %s\\n\", emp1.name);\n    printf(\"  Department: %s\\n\", emp1.department);\n    printf(\"  Salary: $%.2f\\n\", emp1.salary);\n    printf(\"  Experience: %d years\\n\", emp1.years_experience);\n\n    printf(\"\\nEmployee 2:\\n\");\n    printf(\"  ID: %d\\n\", emp2.emp_id);\n    printf(\"  Name: %s\\n\", emp2.name);\n    printf(\"  Department: '%s'\\n\", emp2.department);  // Will be empty\n    printf(\"  Salary: $%.2f\\n\", emp2.salary);\n    printf(\"  Experience: %d years\\n\", emp2.years_experience);  // Will be 0\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#4-zero-initialization","title":"4. Zero Initialization","text":"<p>Initialize all members to zero/null:</p> <pre><code>struct Student student_zero = {0};  // All members set to 0/null\nstruct Student student_empty = {};  // C++ style (some compilers support in C)\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#5-runtime-assignment","title":"5. Runtime Assignment","text":"<p>Assign values after declaration:</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstruct Product {\n    int product_id;\n    char name[100];\n    char category[50];\n    float price;\n    int stock_quantity;\n};\n\nint main() {\n    struct Product product;\n\n    // Assign values individually\n    product.product_id = 12345;\n    strcpy(product.name, \"Wireless Bluetooth Headphones\");\n    strcpy(product.category, \"Electronics\");\n    product.price = 99.99;\n    product.stock_quantity = 150;\n\n    printf(\"Product Information:\\n\");\n    printf(\"ID: %d\\n\", product.product_id);\n    printf(\"Name: %s\\n\", product.name);\n    printf(\"Category: %s\\n\", product.category);\n    printf(\"Price: $%.2f\\n\", product.price);\n    printf(\"Stock: %d units\\n\", product.stock_quantity);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#6-array-of-structures-initialization","title":"6. Array of Structures Initialization","text":"<pre><code>#include &lt;stdio.h&gt;\n\nstruct Point {\n    int x;\n    int y;\n    char label[10];\n};\n\nint main() {\n    // Initialize array of structures\n    struct Point points[] = {\n        {0, 0, \"Origin\"},\n        {10, 20, \"Point A\"},\n        {-5, 15, \"Point B\"},\n        {.x = 25, .y = -10, .label = \"Point C\"}  // Mixed style\n    };\n\n    int num_points = sizeof(points) / sizeof(points[0]);\n\n    printf(\"Points in the coordinate system:\\n\");\n    for (int i = 0; i &lt; num_points; i++) {\n        printf(\"%s: (%d, %d)\\n\", points[i].label, points[i].x, points[i].y);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#structure-arrays","title":"Structure Arrays","text":"<p>Structure arrays allow you to store multiple structure variables of the same type, making it easy to manage collections of related data.</p>"},{"location":"programming/c/day7-structures-unions/#basic-structure-array-operations","title":"Basic Structure Array Operations","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student {\n    int student_id;\n    char name[50];\n    char major[30];\n    float gpa;\n    int credits_completed;\n};\n\nint main() {\n    // Initialize array of structures\n    struct Student students[5] = {\n        {1001, \"Alice Johnson\", \"Computer Science\", 3.85, 90},\n        {1002, \"Bob Smith\", \"Mathematics\", 3.92, 88},\n        {1003, \"Charlie Brown\", \"Physics\", 3.67, 85},\n        {1004, \"Diana Prince\", \"Engineering\", 3.95, 92},\n        {1005, \"Eve Wilson\", \"Biology\", 3.78, 87}\n    };\n\n    int num_students = sizeof(students) / sizeof(students[0]);\n\n    printf(\"=== Student Database ===\\n\");\n    printf(\"%-6s %-20s %-20s %-6s %-8s\\n\",\n           \"ID\", \"Name\", \"Major\", \"GPA\", \"Credits\");\n    printf(\"---------------------------------------------------------------\\n\");\n\n    for (int i = 0; i &lt; num_students; i++) {\n        printf(\"%-6d %-20s %-20s %-6.2f %-8d\\n\",\n               students[i].student_id,\n               students[i].name,\n               students[i].major,\n               students[i].gpa,\n               students[i].credits_completed);\n    }\n\n    return 0;\n}\n</code></pre> <p>Output: <pre><code>=== Student Database ===\nID     Name                 Major                GPA    Credits\n---------------------------------------------------------------\n1001   Alice Johnson        Computer Science     3.85   90\n1002   Bob Smith            Mathematics          3.92   88\n1003   Charlie Brown        Physics              3.67   85\n1004   Diana Prince         Engineering          3.95   92\n1005   Eve Wilson           Biology              3.78   87\n</code></pre></p>"},{"location":"programming/c/day7-structures-unions/#advanced-array-operations","title":"Advanced Array Operations","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstruct Product {\n    int id;\n    char name[50];\n    float price;\n    int quantity;\n    char category[30];\n};\n\n// Function to display all products\nvoid display_products(struct Product products[], int count) {\n    printf(\"\\n=== Product Inventory ===\\n\");\n    printf(\"%-5s %-25s %-10s %-8s %-15s\\n\",\n           \"ID\", \"Name\", \"Price\", \"Qty\", \"Category\");\n    printf(\"----------------------------------------------------------------\\n\");\n\n    for (int i = 0; i &lt; count; i++) {\n        printf(\"%-5d %-25s $%-9.2f %-8d %-15s\\n\",\n               products[i].id,\n               products[i].name,\n               products[i].price,\n               products[i].quantity,\n               products[i].category);\n    }\n}\n\n// Function to find product by ID\nint find_product_by_id(struct Product products[], int count, int search_id) {\n    for (int i = 0; i &lt; count; i++) {\n        if (products[i].id == search_id) {\n            return i;  // Return index if found\n        }\n    }\n    return -1;  // Return -1 if not found\n}\n\n// Function to calculate total inventory value\nfloat calculate_total_value(struct Product products[], int count) {\n    float total = 0.0;\n    for (int i = 0; i &lt; count; i++) {\n        total += products[i].price * products[i].quantity;\n    }\n    return total;\n}\n\nint main() {\n    struct Product inventory[] = {\n        {101, \"Laptop\", 999.99, 25, \"Electronics\"},\n        {102, \"Mouse\", 29.99, 100, \"Electronics\"},\n        {103, \"Keyboard\", 79.99, 75, \"Electronics\"},\n        {104, \"Monitor\", 299.99, 40, \"Electronics\"},\n        {105, \"Desk Chair\", 199.99, 30, \"Furniture\"}\n    };\n\n    int product_count = sizeof(inventory) / sizeof(inventory[0]);\n\n    // Display all products\n    display_products(inventory, product_count);\n\n    // Search for a specific product\n    int search_id = 103;\n    int index = find_product_by_id(inventory, product_count, search_id);\n\n    if (index != -1) {\n        printf(\"\\nProduct found:\\n\");\n        printf(\"ID: %d, Name: %s, Price: $%.2f\\n\",\n               inventory[index].id,\n               inventory[index].name,\n               inventory[index].price);\n    } else {\n        printf(\"\\nProduct with ID %d not found.\\n\", search_id);\n    }\n\n    // Calculate total inventory value\n    float total_value = calculate_total_value(inventory, product_count);\n    printf(\"\\nTotal Inventory Value: $%.2f\\n\", total_value);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#structure-pointers","title":"Structure Pointers","text":"<p>Structure pointers are variables that store the memory address of structure variables. They provide an efficient way to access and manipulate structures, especially when passing structures to functions or working with dynamic memory allocation.</p>"},{"location":"programming/c/day7-structures-unions/#basic-pointer-operations","title":"Basic Pointer Operations","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstruct Vehicle {\n    char make[30];\n    char model[30];\n    int year;\n    float price;\n    int mileage;\n};\n\nint main() {\n    // Create a structure variable\n    struct Vehicle car1 = {\"Toyota\", \"Camry\", 2022, 28500.0, 15000};\n\n    // Create a pointer to the structure\n    struct Vehicle *car_ptr = &amp;car1;\n\n    printf(\"=== Accessing Structure via Pointer ===\\n\");\n\n    // Method 1: Using arrow operator (-&gt;)\n    printf(\"Make: %s\\n\", car_ptr-&gt;make);\n    printf(\"Model: %s\\n\", car_ptr-&gt;model);\n    printf(\"Year: %d\\n\", car_ptr-&gt;year);\n    printf(\"Price: $%.2f\\n\", car_ptr-&gt;price);\n    printf(\"Mileage: %d miles\\n\", car_ptr-&gt;mileage);\n\n    // Method 2: Using dereference operator (*)\n    printf(\"\\n=== Using Dereference Operator ===\\n\");\n    printf(\"Make: %s\\n\", (*car_ptr).make);\n    printf(\"Model: %s\\n\", (*car_ptr).model);\n    printf(\"Year: %d\\n\", (*car_ptr).year);\n\n    // Modifying structure through pointer\n    car_ptr-&gt;price = 26500.0;\n    car_ptr-&gt;mileage = 18000;\n    strcpy(car_ptr-&gt;model, \"Camry Hybrid\");\n\n    printf(\"\\n=== After Modification ===\\n\");\n    printf(\"Model: %s\\n\", car1.model);  // Original variable reflects changes\n    printf(\"Price: $%.2f\\n\", car1.price);\n    printf(\"Mileage: %d miles\\n\", car1.mileage);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#pointer-arithmetic-with-structure-arrays","title":"Pointer Arithmetic with Structure Arrays","text":"<pre><code>#include &lt;stdio.h&gt;\n\nstruct Point {\n    int x;\n    int y;\n};\n\nvoid print_point(struct Point *p) {\n    printf(\"Point: (%d, %d)\\n\", p-&gt;x, p-&gt;y);\n}\n\nint main() {\n    struct Point points[] = {\n        {1, 2}, {3, 4}, {5, 6}, {7, 8}, {9, 10}\n    };\n\n    int num_points = sizeof(points) / sizeof(points[0]);\n    struct Point *ptr = points;  // Points to first element\n\n    printf(\"=== Using Pointer Arithmetic ===\\n\");\n\n    // Method 1: Array indexing with pointer\n    for (int i = 0; i &lt; num_points; i++) {\n        printf(\"Point %d: (%d, %d)\\n\", i + 1, ptr[i].x, ptr[i].y);\n    }\n\n    printf(\"\\n=== Using Pointer Increment ===\\n\");\n\n    // Method 2: Pointer increment\n    ptr = points;  // Reset pointer\n    for (int i = 0; i &lt; num_points; i++) {\n        printf(\"Point %d: (%d, %d)\\n\", i + 1, ptr-&gt;x, ptr-&gt;y);\n        ptr++;  // Move to next structure\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#dynamic-memory-allocation-with-structures","title":"Dynamic Memory Allocation with Structures","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nstruct Employee {\n    int id;\n    char name[50];\n    char department[30];\n    float salary;\n};\n\n// Function to create a new employee\nstruct Employee* create_employee(int id, const char* name,\n                                const char* dept, float salary) {\n    struct Employee *emp = malloc(sizeof(struct Employee));\n\n    if (emp == NULL) {\n        printf(\"Memory allocation failed!\\n\");\n        return NULL;\n    }\n\n    emp-&gt;id = id;\n    strcpy(emp-&gt;name, name);\n    strcpy(emp-&gt;department, dept);\n    emp-&gt;salary = salary;\n\n    return emp;\n}\n\n// Function to display employee information\nvoid display_employee(struct Employee *emp) {\n    if (emp == NULL) {\n        printf(\"Invalid employee pointer!\\n\");\n        return;\n    }\n\n    printf(\"Employee ID: %d\\n\", emp-&gt;id);\n    printf(\"Name: %s\\n\", emp-&gt;name);\n    printf(\"Department: %s\\n\", emp-&gt;department);\n    printf(\"Salary: $%.2f\\n\", emp-&gt;salary);\n    printf(\"------------------------\\n\");\n}\n\nint main() {\n    // Create employees dynamically\n    struct Employee *emp1 = create_employee(1001, \"John Doe\", \"Engineering\", 75000.0);\n    struct Employee *emp2 = create_employee(1002, \"Jane Smith\", \"Marketing\", 68000.0);\n    struct Employee *emp3 = create_employee(1003, \"Bob Johnson\", \"Finance\", 72000.0);\n\n    printf(\"=== Employee Database ===\\n\");\n    display_employee(emp1);\n    display_employee(emp2);\n    display_employee(emp3);\n\n    // Don't forget to free allocated memory\n    free(emp1);\n    free(emp2);\n    free(emp3);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#_1","title":"\u7ed3\u6784\u200b\u4f53\u200b\u5d4c\u5957","text":"<p>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u6210\u5458\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Address {\n    char city[20];\n    char street[20];\n};\n\nstruct Person {\n    char name[20];\n    int age;\n    struct Address addr; // \u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\u4f53\u200b\n};\n\nint main() {\n    struct Person p1;\n\n    // \u200b\u8d4b\u503c\u200b\n    strcpy(p1.name, \"John\");\n    p1.age = 30;\n    strcpy(p1.addr.city, \"New York\");\n    strcpy(p1.addr.street, \"5th Avenue\");\n\n    // \u200b\u8f93\u51fa\u200b\n    printf(\"Name: %s\\n\", p1.name);\n    printf(\"Age: %d\\n\", p1.age);\n    printf(\"City: %s\\n\", p1.addr.city);\n    printf(\"Street: %s\\n\", p1.addr.street);\n\n    return 0;\n\n}\n</code></pre> <p>\u200b\u8f93\u51fa\u200b\u7ed3\u679c\u200b</p> <pre><code>Name: John\nAge: 30\nCity: New York\nStreet: 5th Avenue\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#_2","title":"\u7ed3\u6784\u200b\u4f53\u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u53c2\u6570","text":"<p>\u200b\u4f20\u503c\u200b\u65b9\u5f0f\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Point {\n    int x;\n    int y;\n};\n\nvoid printPoint(struct Point p) { // \u200b\u7ed3\u6784\u200b\u4f53\u4f20\u503c\u200b\n    printf(\"Point: (%d, %d)\\n\", p.x, p.y);\n}\n\nint main() {\n    struct Point p1 = {10, 20};\n    printPoint(p1);\n    return 0;\n}\n</code></pre> <p>\u200b\u4f20\u200b\u6307\u9488\u200b\u65b9\u5f0f\u200b</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Point {\n    int x;\n    int y;\n};\n\nvoid modifyPoint(struct Point \\*p) { // \u200b\u7ed3\u6784\u200b\u4f53\u4f20\u200b\u6307\u9488\u200b\n    p-&gt;x += 10;\n    p-&gt;y += 20;\n}\n\nint main() {\n    struct Point p1 = {10, 20};\n    modifyPoint(&amp;p1);\n    printf(\"Modified Point: (%d, %d)\\n\", p1.x, p1.y);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#typedef","title":"\u7ed3\u6784\u200b\u4f53\u200b\u4e0e\u200b typedef","text":"<p>typedef \u200b\u7528\u4e8e\u200b\u7b80\u5316\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u4f7f\u7528\u200b\uff0c\u200b\u76f8\u5f53\u4e8e\u200b\u53d6\u4e2a\u200b\u7ef0\u53f7\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\ntypedef struct {\n    char name[20];\n    int age;\n} Person;\n\nint main() {\n    Person p1 = {\"John\", 25};\n    printf(\"Name: %s, Age: %d\\n\", p1.name, p1.age);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#_3","title":"\u7ed3\u6784\u200b\u4f53\u200b\u5927\u5c0f\u200b\u4e0e\u200b\u5185\u5b58\u200b\u5bf9\u9f50","text":"<p>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u5927\u5c0f\u200b\u53d7\u200b\u5185\u5b58\u200b\u5bf9\u9f50\u200b\u89c4\u5219\u200b\u5f71\u54cd\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u4e2a\u200b\u6210\u5458\u200b\u6309\u200b\u81ea\u8eab\u200b\u7c7b\u578b\u200b\u7684\u200b\u5927\u5c0f\u200b\u5bf9\u9f50\u200b\u3002</li> <li>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u603b\u200b\u5927\u5c0f\u200b\u662f\u200b\u6700\u5927\u200b\u6210\u5458\u200b\u5927\u5c0f\u200b\u7684\u200b\u6574\u6570\u500d\u200b\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n\nstruct Test {\n    char a; // 1 \u200b\u5b57\u8282\u200b\n    int b; // 4 \u200b\u5b57\u8282\u200b\n    char c; // 1 \u200b\u5b57\u8282\u200b\n};\n\nint main() {\n    printf(\"Size of struct Test: %zu bytes\\n\", sizeof(struct Test));\n    return 0;\n}\n</code></pre> <pre><code>\u200b\u8f93\u51fa\u200b\uff1a\uff08\u200b\u53ef\u80fd\u200b\u4e3a\u200b 12 \u200b\u5b57\u8282\u200b\uff0c\u200b\u53d6\u51b3\u4e8e\u200b\u7f16\u8bd1\u5668\u200b\uff09\nSize of struct Test: 12 bytes\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#_4","title":"\u8054\u5408\u4f53\u200b\u4e0e\u200b\u7ed3\u6784\u200b\u4f53\u200b\u7684\u200b\u533a\u522b","text":"<ul> <li>\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff1a\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u72ec\u7acb\u200b\u5b58\u5728\u200b\uff0c\u200b\u5360\u7528\u200b\u7684\u200b\u5185\u5b58\u200b\u662f\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u5927\u5c0f\u200b\u4e4b\u200b\u548c\u200b\u3002</li> <li>\u200b\u8054\u5408\u4f53\u200b\uff1a\u200b\u6240\u6709\u200b\u6210\u5458\u200b\u5171\u4eab\u200b\u4e00\u5757\u200b\u5185\u5b58\u200b\uff0c\u200b\u5927\u5c0f\u200b\u53d6\u51b3\u4e8e\u200b\u6700\u5927\u200b\u6210\u5458\u200b\u3002</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n\nunion Data {\n    int i;\n    float f;\n    char str[20];\n};\n\nint main() {\n    union Data data;\n\n    data.i = 10;\n    printf(\"Int: %d\\n\", data.i);\n\n    data.f = 3.14;\n    printf(\"Float: %.2f\\n\", data.f);\n\n    strcpy(data.str, \"Hello\");\n    printf(\"String: %s\\n\", data.str);\n\n    return 0;\n\n}\n</code></pre>"},{"location":"programming/c/day7-structures-unions/#_5","title":"\u5b9e\u9645\u200b\u5e94\u7528","text":"<p>\u200b\u7ed3\u6784\u200b\u4f53\u5728\u200b\u5b9e\u9645\u200b\u9879\u76ee\u200b\u4e2d\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li>\u200b\u5b66\u751f\u200b\u7ba1\u7406\u7cfb\u7edf\u200b\uff1a\u200b\u5b58\u50a8\u200b\u5b66\u751f\u200b\u4fe1\u606f\u200b\u3002</li> <li>\u200b\u56fe\u5f62\u7cfb\u7edf\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u70b9\u200b\u3001\u200b\u7ebf\u200b\u3001\u200b\u9762\u7b49\u200b\u7ed3\u6784\u200b\u3002</li> <li>\u200b\u6587\u4ef6\u7cfb\u7edf\u200b\uff1a\u200b\u5b9a\u4e49\u200b\u6587\u4ef6\u5c5e\u6027\u200b\uff08\u200b\u540d\u79f0\u200b\u3001\u200b\u5927\u5c0f\u200b\u3001\u200b\u8def\u5f84\u200b\u7b49\u200b\uff09\u3002</li> <li>\u200b\u5f53\u7136\u200b\uff0c\u200b\u8fd8\u6709\u200b\u5b66\u6821\u200b\u7684\u200bC\u200b\u8bed\u8a00\u200b\u8003\u8bd5\u200b</li> </ul>"},{"location":"programming/c/day8-linked-lists/","title":"Day8 - C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u94fe\u8868","text":"<p>\u200b\u94fe\u8868\u200b\uff08Linked List\uff09\u200b\u662f\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u4e00\u79cd\u200b\u5e38\u89c1\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5c5e\u4e8e\u200b\u7ebf\u6027\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002\u200b\u5b83\u200b\u4e0d\u540c\u4e8e\u200b\u6570\u7ec4\u200b\uff0c\u200b\u94fe\u8868\u200b\u7684\u200b\u957f\u5ea6\u200b\u53ef\u4ee5\u200b\u52a8\u6001\u53d8\u5316\u200b\uff0c\u200b\u9002\u5408\u200b\u9700\u8981\u200b\u9891\u7e41\u200b\u63d2\u5165\u200b\u3001\u200b\u5220\u9664\u200b\u5143\u7d20\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u5f53\u7136\u200b\uff0c\u200b\u4e5f\u200b\u662f\u200b\u5927\u5b66\u200b c \u200b\u8bed\u8a00\u200b\u8003\u8bd5\u200b\u4e2d\u200b\u4e0d\u53ef\u200b\u7f3a\u5c11\u200b\u7684\u200b\u4e00\u90e8\u5206\u200b\u3002\u200b\u4e0b\u9762\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u94fe\u8868\u200b\u7684\u200b\u539f\u7406\u200b\u3001\u200b\u7c7b\u578b\u200b\u3001\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f\u200b\u3001\u200b\u5e94\u7528\u200b\u53ca\u5176\u200b\u4f18\u7f3a\u70b9\u200b\u3002</p>"},{"location":"programming/c/day8-linked-lists/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u94fe\u8868\u200b\u7531\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\uff08Node\uff09\u200b\u7ec4\u6210\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u4e24\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u57df\u200b\uff08Data\uff09\uff1a\u200b\u5b58\u50a8\u200b\u8282\u70b9\u200b\u7684\u200b\u6570\u636e\u200b\u3002</li> <li>\u200b\u6307\u9488\u200b\u57df\u200b\uff08Pointer\uff09\uff1a\u200b\u6307\u5411\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u5730\u5740\u200b\u3002</li> </ul> <p>\u200b\u94fe\u8868\u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\u5c06\u200b\u5404\u4e2a\u200b\u8282\u70b9\u200b\u4e32\u8054\u200b\u8d77\u6765\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u94fe\u5f0f\u200b\u7ed3\u6784\u200b\u3002</p>"},{"location":"programming/c/day8-linked-lists/#_2","title":"\u5206\u7c7b","text":"<p>\u200b\u94fe\u8868\u200b\u6839\u636e\u200b\u7ed3\u6784\u200b\u7684\u200b\u4e0d\u540c\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5206\u4e3a\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u7c7b\u578b\u200b\uff1a</p>"},{"location":"programming/c/day8-linked-lists/#singly-linked-list","title":"\u5355\u5411\u200b\u94fe\u8868\u200b\uff08Singly Linked List\uff09","text":"<ul> <li>\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\uff0c\u200b\u6307\u5411\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u3002</li> <li>\u200b\u9002\u5408\u200b\u4ece\u5934\u5230\u5c3e\u200b\u7684\u200b\u5355\u5411\u200b\u904d\u5386\u200b\u3002</li> <li>\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\u4e3a\u200b <code>NULL</code>\u3002</li> </ul>"},{"location":"programming/c/day8-linked-lists/#doubly-linked-list","title":"\u53cc\u5411\u200b\u94fe\u8868\u200b\uff08Doubly Linked List\uff09","text":"<ul> <li>\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u6709\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u524d\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u53cc\u5411\u200b\u904d\u5386\u200b\uff0c\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u66f4\u200b\u7075\u6d3b\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u7684\u200b\u5185\u5b58\u200b\u6765\u200b\u5b58\u50a8\u200b\u4e24\u4e2a\u200b\u6307\u9488\u200b\u3002</li> </ul>"},{"location":"programming/c/day8-linked-lists/#circular-linked-list","title":"\u5faa\u73af\u200b\u94fe\u8868\u200b\uff08Circular Linked List\uff09","text":"<ul> <li>\u200b\u5c3e\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u73af\u72b6\u200b\u7ed3\u6784\u200b\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u662f\u200b\u5355\u5411\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u662f\u200b\u53cc\u5411\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\u3002</li> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u9700\u8981\u200b\u5faa\u73af\u200b\u8bbf\u95ee\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> </ul>"},{"location":"programming/c/day8-linked-lists/#multi-linked-list","title":"\u591a\u91cd\u200b\u94fe\u8868\u200b\uff08Multi Linked List\uff09","text":"<ul> <li>\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\u6307\u9488\u200b\uff0c\u200b\u5f62\u6210\u200b\u590d\u6742\u200b\u7684\u200b\u94fe\u8868\u200b\u7ed3\u6784\u200b\u3002</li> <li>\u200b\u5e38\u7528\u200b\u4e8e\u200b\u8868\u793a\u200b\u56fe\u200b\u3001\u200b\u7a00\u758f\u200b\u77e9\u9635\u200b\u7b49\u200b\u590d\u6742\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002</li> </ul>"},{"location":"programming/c/day8-linked-lists/#_3","title":"\u94fe\u8868\u200b\u4e0e\u200b\u6570\u7ec4\u200b\u7684\u200b\u6bd4\u8f83","text":"\u7279\u6027\u200b \u200b\u94fe\u8868\u200b \u200b\u6570\u7ec4\u200b \u200b\u5b58\u50a8\u200b\u65b9\u5f0f\u200b \u200b\u52a8\u6001\u5206\u914d\u200b\uff0c\u200b\u5206\u6563\u200b\u5b58\u50a8\u200b \u200b\u9759\u6001\u200b\u5206\u914d\u200b\uff0c\u200b\u8fde\u7eed\u200b\u5b58\u50a8\u200b \u200b\u8bbf\u95ee\u200b\u65f6\u95f4\u200b O(n)\uff0c\u200b\u9700\u200b\u9010\u4e2a\u200b\u8282\u70b9\u200b\u8bbf\u95ee\u200b O(1)\uff0c\u200b\u53ef\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u7d22\u5f15\u200b \u200b\u63d2\u5165\u200b/\u200b\u5220\u9664\u200b \u200b\u9ad8\u6548\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u79fb\u52a8\u200b\u5143\u7d20\u200b \u200b\u4f4e\u6548\u200b\uff0c\u200b\u9700\u8981\u200b\u79fb\u52a8\u200b\u5143\u7d20\u200b \u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b \u200b\u8282\u70b9\u200b\u9700\u200b\u989d\u5916\u200b\u7684\u200b\u6307\u9488\u200b\u7a7a\u95f4\u200b \u200b\u4ec5\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\uff0c\u200b\u65e0\u200b\u989d\u5916\u200b\u5f00\u9500"},{"location":"programming/c/day8-linked-lists/#_4","title":"\u5355\u5411\u200b\u94fe\u8868","text":""},{"location":"programming/c/day8-linked-lists/#_5","title":"\u8282\u70b9\u200b\u5b9a\u4e49","text":"<p>\u200b\u5355\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u5355\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b\nstruct Node {\n    int data;           // \u200b\u6570\u636e\u200b\u57df\u200b\n    struct Node* next;  // \u200b\u6307\u9488\u200b\u57df\u200b\uff0c\u200b\u6307\u5411\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\n};\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_6","title":"\u521b\u5efa\u200b\u8282\u70b9","text":"<p>\u200b\u8282\u70b9\u200b\u7684\u200b\u5185\u5b58\u200b\u901a\u8fc7\u200b <code>malloc</code> \u200b\u51fd\u6570\u200b\u52a8\u6001\u5206\u914d\u200b\uff1a</p> <pre><code>struct Node* createNode(int data) {\n    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));\n    if (newNode == NULL) {\n        printf(\"\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\\n\");\n        exit(1);\n    }\n    newNode-&gt;data = data; // \u200b\u8bbe\u7f6e\u200b\u6570\u636e\u200b\u57df\u200b\n    newNode-&gt;next = NULL; // \u200b\u521d\u59cb\u5316\u200b\u6307\u9488\u200b\u57df\u200b\n    return newNode;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_7","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"programming/c/day8-linked-lists/#_8","title":"\u63d2\u5165\u200b\u8282\u70b9","text":"<p>\u200b\u5728\u200b\u94fe\u8868\u200b\u5934\u90e8\u200b\u63d2\u5165\u200b</p> <pre><code>struct Node* insertAtHead(struct Node* head, int data) {\n    struct Node* newNode = createNode(data);\n    newNode-&gt;next = head; // \u200b\u65b0\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u65e7\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\n    return newNode;       // \u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u5934\u200b\u8282\u70b9\u200b\n}\n</code></pre> <p>\u200b\u5728\u200b\u94fe\u8868\u200b\u5c3e\u90e8\u200b\u63d2\u5165\u200b</p> <pre><code>void insertAtTail(struct Node** head, int data) {\n    struct Node* newNode = createNode(data);\n    if (*head == NULL) {\n        *head = newNode;\n        return;\n    }\n\n    struct Node* temp = *head;\n    while (temp-&gt;next != NULL) {\n        temp = temp-&gt;next;\n    }\n    temp-&gt;next = newNode;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_9","title":"\u5220\u9664\u200b\u8282\u70b9","text":"<p>\u200b\u5220\u9664\u200b\u7b2c\u4e00\u4e2a\u200b\u5339\u914d\u200b\u6307\u5b9a\u200b\u503c\u200b\u7684\u200b\u8282\u70b9\u200b</p> <pre><code>struct Node* deleteNode(struct Node* head, int key) {\n    struct Node* temp = head;\n    struct Node* prev = NULL;\n\n    // \u200b\u5904\u7406\u200b\u5934\u200b\u8282\u70b9\u200b\n    if (temp != NULL &amp;&amp; temp-&gt;data == key) {\n        head = temp-&gt;next;\n        free(temp);\n        return head;\n    }\n\n    // \u200b\u67e5\u627e\u200b\u8981\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b\n    while (temp != NULL &amp;&amp; temp-&gt;data != key) {\n        prev = temp;\n        temp = temp-&gt;next;\n    }\n\n    if (temp == NULL) return head; // \u200b\u672a\u627e\u5230\u200b\u8282\u70b9\u200b\n\n    prev-&gt;next = temp-&gt;next; // \u200b\u8df3\u8fc7\u200b\u8981\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b\n    free(temp);              // \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\n    return head;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_10","title":"\u904d\u5386\u200b\u94fe\u8868","text":"<p>\u200b\u901a\u8fc7\u200b\u5faa\u73af\u200b\u9010\u4e2a\u200b\u8bbf\u95ee\u200b\u8282\u70b9\u200b</p> <pre><code>void printList(struct Node* head) {\n    struct Node* temp = head;\n    while (temp != NULL) {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"NULL\\n\");\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_11","title":"\u5b8c\u6574\u200b\u4ee3\u7801","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u94fe\u8868\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b\nstruct Node {\n    int data;\n    struct Node* next;\n};\n\n// \u200b\u521b\u5efa\u200b\u65b0\u200b\u8282\u70b9\u200b\nstruct Node* createNode(int data) {\n    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));\n    newNode-&gt;data = data;\n    newNode-&gt;next = NULL;\n    return newNode;\n}\n\n// \u200b\u5934\u90e8\u200b\u63d2\u5165\u200b\nstruct Node* insertAtHead(struct Node* head, int data) {\n    struct Node* newNode = createNode(data);\n    newNode-&gt;next = head;\n    return newNode;\n}\n\n// \u200b\u904d\u5386\u200b\u94fe\u8868\u200b\nvoid printList(struct Node* head) {\n    struct Node* temp = head;\n    while (temp != NULL) {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"NULL\\n\");\n}\n\n// \u200b\u4e3b\u200b\u51fd\u6570\u200b\nint main() {\n    struct Node* head = NULL; // \u200b\u521d\u59cb\u5316\u200b\u94fe\u8868\u200b\u4e3a\u7a7a\u200b\n\n    // \u200b\u63d2\u5165\u200b\u5143\u7d20\u200b\n    head = insertAtHead(head, 10);\n    head = insertAtHead(head, 20);\n    head = insertAtHead(head, 30);\n\n    printf(\"\u200b\u94fe\u8868\u200b\u5185\u5bb9\u200b\uff1a\\n\");\n    printList(head);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_12","title":"\u53cc\u5411\u200b\u94fe\u8868","text":"<p>\u200b\u5728\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u4e2d\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u90e8\u5206\u200b\uff1a</p> <ul> <li>\u200b\u6570\u636e\u200b\u57df\u200b\uff08data\uff09</li> <li>\u200b\u6307\u5411\u200b\u524d\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\uff08prev\uff09</li> <li>\u200b\u6307\u5411\u200b\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u6307\u9488\u200b\uff08next\uff09</li> </ul> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b\nstruct DNode {\n    int data;              // \u200b\u6570\u636e\u200b\u57df\u200b\n    struct DNode* prev;    // \u200b\u6307\u5411\u200b\u524d\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\n    struct DNode* next;    // \u200b\u6307\u5411\u200b\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\n};\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_13","title":"\u521b\u5efa\u200b\u65b0\u200b\u8282\u70b9","text":"<pre><code>struct DNode* createNode(int data) {\n    struct DNode* newNode = (struct DNode*)malloc(sizeof(struct DNode));\n    if (newNode == NULL) {\n        printf(\"\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\\n\");\n        exit(1);\n    }\n    newNode-&gt;data = data;\n    newNode-&gt;prev = NULL;\n    newNode-&gt;next = NULL;\n    return newNode;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_14","title":"\u63d2\u5165\u200b\u64cd\u4f5c","text":""},{"location":"programming/c/day8-linked-lists/#_15","title":"\u5728\u200b\u94fe\u8868\u200b\u5934\u90e8\u200b\u63d2\u5165","text":"<pre><code>struct DNode* insertAtHead(struct DNode* head, int data) {\n    struct DNode* newNode = createNode(data);\n    if (head != NULL) {\n        head-&gt;prev = newNode;\n        newNode-&gt;next = head;\n    }\n    return newNode; // \u200b\u65b0\u200b\u8282\u70b9\u200b\u6210\u4e3a\u200b\u5934\u200b\u8282\u70b9\u200b\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_16","title":"\u5728\u200b\u94fe\u8868\u200b\u5c3e\u90e8\u200b\u63d2\u5165","text":"<pre><code>void insertAtTail(struct DNode* head, int data) {\n    struct DNode* newNode = createNode(data);\n    struct DNode* temp = head;\n\n    while (temp-&gt;next != NULL) { // \u200b\u627e\u5230\u200b\u5c3e\u200b\u8282\u70b9\u200b\n        temp = temp-&gt;next;\n    }\n\n    temp-&gt;next = newNode;\n    newNode-&gt;prev = temp;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_17","title":"\u5220\u9664\u200b\u8282\u70b9","text":"<p>\u200b\u5220\u9664\u200b\u5305\u542b\u200b\u6307\u5b9a\u200b\u503c\u200b\u7684\u200b\u8282\u70b9\u200b</p> <pre><code>struct DNode* deleteNode(struct DNode* head, int key) {\n    struct DNode* temp = head;\n\n    // \u200b\u67e5\u627e\u200b\u8981\u200b\u5220\u9664\u200b\u7684\u200b\u8282\u70b9\u200b\n    while (temp != NULL &amp;&amp; temp-&gt;data != key) {\n        temp = temp-&gt;next;\n    }\n\n    if (temp == NULL) return head; // \u200b\u672a\u627e\u5230\u200b\u8282\u70b9\u200b\n\n    if (temp-&gt;prev != NULL) {\n        temp-&gt;prev-&gt;next = temp-&gt;next; // \u200b\u66f4\u65b0\u200b\u524d\u200b\u8282\u70b9\u200b\u7684\u200bnext\n    } else {\n        head = temp-&gt;next; // \u200b\u5220\u9664\u200b\u7684\u200b\u662f\u200b\u5934\u200b\u8282\u70b9\u200b\n    }\n\n    if (temp-&gt;next != NULL) {\n        temp-&gt;next-&gt;prev = temp-&gt;prev; // \u200b\u66f4\u65b0\u200b\u540e\u200b\u8282\u70b9\u200b\u7684\u200bprev\n    }\n\n    free(temp);\n    return head;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_18","title":"\u904d\u5386\u200b\u94fe\u8868","text":"<p>\u200b\u4ece\u5934\u5230\u5c3e\u200b\u904d\u5386\u200b</p> <pre><code>void printList(struct DNode* head) {\n    struct DNode* temp = head;\n    printf(\"\u200b\u6b63\u5411\u200b\u904d\u5386\u200b\uff1a\\n\");\n    while (temp != NULL) {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"NULL\\n\");\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_19","title":"\u5b8c\u6574\u200b\u793a\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b\nstruct DNode {\n    int data;\n    struct DNode* prev;\n    struct DNode* next;\n};\n\n// \u200b\u521b\u5efa\u200b\u65b0\u200b\u8282\u70b9\u200b\nstruct DNode* createNode(int data) {\n    struct DNode* newNode = (struct DNode*)malloc(sizeof(struct DNode));\n    newNode-&gt;data = data;\n    newNode-&gt;prev = NULL;\n    newNode-&gt;next = NULL;\n    return newNode;\n}\n\n// \u200b\u5728\u200b\u5934\u90e8\u200b\u63d2\u5165\u200b\u8282\u70b9\u200b\nstruct DNode* insertAtHead(struct DNode* head, int data) {\n    struct DNode* newNode = createNode(data);\n    if (head != NULL) {\n        head-&gt;prev = newNode;\n        newNode-&gt;next = head;\n    }\n    return newNode;\n}\n\n// \u200b\u904d\u5386\u200b\u94fe\u8868\u200b\nvoid printList(struct DNode* head) {\n    struct DNode* temp = head;\n    printf(\"\u200b\u94fe\u8868\u200b\u5185\u5bb9\u200b\uff1a\\n\");\n    while (temp != NULL) {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    }\n    printf(\"NULL\\n\");\n}\n\n// \u200b\u4e3b\u200b\u51fd\u6570\u200b\nint main() {\n    struct DNode* head = NULL;\n\n    head = insertAtHead(head, 10);\n    head = insertAtHead(head, 20);\n    head = insertAtHead(head, 30);\n\n    printList(head);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_20","title":"\u5faa\u73af\u200b\u94fe\u8868","text":"<p>\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\u7684\u200b\u7279\u70b9\u200b\u662f\u200b\u5c3e\u200b\u8282\u70b9\u200b\u7684\u200b <code>next</code> \u200b\u6307\u9488\u200b\u6307\u5411\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u5f62\u6210\u200b\u4e00\u4e2a\u200b\u95ed\u73af\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\u7ed3\u6784\u200b\nstruct CNode {\n    int data;\n    struct CNode* next;\n};\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_21","title":"\u521b\u5efa\u200b\u65b0\u200b\u8282\u70b9","text":"<pre><code>struct CNode* createNode(int data) {\n    struct CNode* newNode = (struct CNode*)malloc(sizeof(struct CNode));\n    if (newNode == NULL) {\n        printf(\"\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\\n\");\n        exit(1);\n    }\n    newNode-&gt;data = data;\n    newNode-&gt;next = newNode; // \u200b\u521d\u59cb\u200b\u65f6\u200b\u6307\u5411\u200b\u81ea\u5df1\u200b\n    return newNode;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_22","title":"\u63d2\u5165\u200b\u64cd\u4f5c","text":""},{"location":"programming/c/day8-linked-lists/#_23","title":"\u5728\u200b\u5934\u90e8\u200b\u63d2\u5165","text":"<pre><code>struct CNode* insertAtHead(struct CNode* tail, int data) {\n    struct CNode* newNode = createNode(data);\n    if (tail == NULL) {\n        return newNode; // \u200b\u5982\u679c\u200b\u94fe\u8868\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u65b0\u200b\u8282\u70b9\u200b\u5373\u200b\u662f\u200b\u5c3e\u200b\u8282\u70b9\u200b\n    }\n    newNode-&gt;next = tail-&gt;next; // \u200b\u65b0\u200b\u8282\u70b9\u200b\u6307\u5411\u200b\u539f\u5934\u200b\u8282\u70b9\u200b\n    tail-&gt;next = newNode;       // \u200b\u5c3e\u200b\u8282\u70b9\u200b\u6307\u5411\u200b\u65b0\u200b\u8282\u70b9\u200b\n    return tail;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_24","title":"\u5728\u200b\u5c3e\u90e8\u200b\u63d2\u5165","text":"<pre><code>struct CNode* insertAtTail(struct CNode* tail, int data) {\n    struct CNode* newNode = createNode(data);\n    if (tail == NULL) {\n        return newNode; // \u200b\u5982\u679c\u200b\u94fe\u8868\u200b\u4e3a\u7a7a\u200b\uff0c\u200b\u65b0\u200b\u8282\u70b9\u200b\u5373\u200b\u662f\u200b\u5c3e\u200b\u8282\u70b9\u200b\n    }\n    newNode-&gt;next = tail-&gt;next; // \u200b\u65b0\u200b\u8282\u70b9\u200b\u6307\u5411\u200b\u5934\u200b\u8282\u70b9\u200b\n    tail-&gt;next = newNode;       // \u200b\u5c3e\u200b\u8282\u70b9\u200b\u6307\u5411\u200b\u65b0\u200b\u8282\u70b9\u200b\n    return newNode;             // \u200b\u65b0\u200b\u8282\u70b9\u200b\u6210\u4e3a\u200b\u5c3e\u200b\u8282\u70b9\u200b\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_25","title":"\u904d\u5386\u200b\u5faa\u73af\u200b\u94fe\u8868","text":"<pre><code>void printList(struct CNode* tail) {\n    if (tail == NULL) return;\n    struct CNode* temp = tail-&gt;next; // \u200b\u4ece\u5934\u200b\u8282\u70b9\u200b\u5f00\u59cb\u200b\n    do {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    } while (temp != tail-&gt;next); // \u200b\u5faa\u73af\u200b\u5230\u5934\u200b\u8282\u70b9\u200b\u7ed3\u675f\u200b\n    printf(\"(HEAD)\\n\");\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_26","title":"\u5b8c\u6574\u200b\u7684\u200b\u5faa\u73af\u200b\u94fe\u200b\u8868\u793a\u200b\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\u7684\u200b\u8282\u70b9\u200b\nstruct CNode {\n    int data;\n    struct CNode* next;\n};\n\n// \u200b\u521b\u5efa\u200b\u8282\u70b9\u200b\nstruct CNode* createNode(int data) {\n    struct CNode* newNode = (struct CNode*)malloc(sizeof(struct CNode));\n    newNode-&gt;data = data;\n    newNode-&gt;next = newNode;\n    return newNode;\n}\n\n// \u200b\u5728\u200b\u5c3e\u90e8\u200b\u63d2\u5165\u200b\u8282\u70b9\u200b\nstruct CNode* insertAtTail(struct CNode* tail, int data) {\n    struct CNode* newNode = createNode(data);\n    if (tail == NULL) {\n        return newNode;\n    }\n    newNode-&gt;next = tail-&gt;next;\n    tail-&gt;next = newNode;\n    return newNode;\n}\n\n// \u200b\u904d\u5386\u200b\u94fe\u8868\u200b\nvoid printList(struct CNode* tail) {\n    if (tail == NULL) return;\n    struct CNode* temp = tail-&gt;next;\n    do {\n        printf(\"%d -&gt; \", temp-&gt;data);\n        temp = temp-&gt;next;\n    } while (temp != tail-&gt;next);\n    printf(\"(HEAD)\\n\");\n}\n\n// \u200b\u4e3b\u200b\u51fd\u6570\u200b\nint main() {\n    struct CNode* tail = NULL;\n\n    tail = insertAtTail(tail, 10);\n    tail = insertAtTail(tail, 20);\n    tail = insertAtTail(tail, 30);\n\n    printList(tail);\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day8-linked-lists/#_27","title":"\u603b\u7ed3","text":"<ul> <li>\u200b\u94fe\u8868\u200b\uff1a\u200b\u662f\u200b\u4e00\u79cd\u200b\u7ebf\u6027\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\u5c06\u200b\u591a\u4e2a\u200b\u8282\u70b9\u200b\u4e32\u8054\u200b\u8d77\u6765\u200b\u3002</li> <li>\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\uff1a\u200b\u652f\u6301\u200b\u53cc\u5411\u200b\u904d\u5386\u200b\uff0c\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u66f4\u200b\u7075\u6d3b\u200b\u3002</li> <li>\u200b\u5faa\u73af\u200b\u94fe\u8868\u200b\uff1a\u200b\u5c3e\u200b\u8282\u70b9\u200b\u6307\u5411\u200b\u5934\u200b\u8282\u70b9\u200b\uff0c\u200b\u9002\u5408\u200b\u5faa\u73af\u200b\u8bbf\u95ee\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> </ul> <p>\u200b\u94fe\u8868\u200b\u662f\u200b\u4e00\u79cd\u200b\u52a8\u6001\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u7075\u6d3b\u6027\u200b\u9ad8\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u9700\u8981\u200b\u9891\u7e41\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u5143\u7d20\u200b\u7684\u200b\u573a\u666f\u200b\u3002\u200b\u638c\u63e1\u200b\u94fe\u8868\u200b\u7684\u200b\u5173\u952e\u5728\u4e8e\u200b\u7406\u89e3\u200b\u6307\u9488\u200b\u7684\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5305\u62ec\u200b\u8282\u70b9\u200b\u7684\u200b\u521b\u5efa\u200b\u3001\u200b\u94fe\u63a5\u200b\u3001\u200b\u904d\u5386\u200b\u548c\u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\u3002</p>"},{"location":"programming/c/day9-file-operations/","title":"Day9 - C \u200b\u8bed\u8a00\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u8be6\u89e3","text":"<p>\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u662f\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u4e00\u9879\u200b\u91cd\u8981\u200b\u529f\u80fd\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u78c1\u76d8\u200b\u6587\u4ef6\u200b\u7684\u200b\u8bfb\u5199\u200b\u3001\u200b\u521b\u5efa\u200b\u3001\u200b\u4fee\u6539\u200b\u7b49\u200b\u64cd\u4f5c\u200b\u3002C \u200b\u8bed\u8a00\u200b\u901a\u8fc7\u200b\u6807\u51c6\u200b\u5e93\u51fd\u6570\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u7684\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u652f\u6301\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u4f4d\u4e8e\u200b\u5934\u6587\u4ef6\u200b <code>&lt;stdio.h&gt;</code> \u200b\u4e2d\u200b\u3002</p>"},{"location":"programming/c/day9-file-operations/#_1","title":"\u6587\u4ef6\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u6587\u4ef6\u200b\u662f\u200b\u5b58\u50a8\u200b\u5728\u200b\u78c1\u76d8\u200b\u4e0a\u200b\u7684\u200b\u6570\u636e\u200b\u96c6\u5408\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u662f\u200b\u6587\u672c\u6587\u4ef6\u200b\u6216\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff1a</p> <ul> <li>\u200b\u6587\u672c\u6587\u4ef6\u200b\uff1a\u200b\u4ee5\u53ef\u8bfb\u200b\u5b57\u7b26\u200b\u5b58\u50a8\u200b\uff08ASCII/UTF-8 \u200b\u7b49\u200b\u7f16\u7801\u200b\uff09\uff0c\u200b\u9002\u5408\u200b\u4eba\u7c7b\u200b\u9605\u8bfb\u200b\u3002</li> <li>\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff1a\u200b\u4ee5\u200b\u539f\u59cb\u6570\u636e\u200b\u7684\u200b\u5f62\u5f0f\u200b\u5b58\u50a8\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u9605\u8bfb\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u57fa\u4e8e\u200b\u6587\u4ef6\u200b\u6307\u9488\u200b <code>FILE*</code>\uff0c\u200b\u7528\u4e8e\u200b\u5f15\u7528\u200b\u6587\u4ef6\u200b\u3002</p>"},{"location":"programming/c/day9-file-operations/#_2","title":"\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u7684\u200b\u57fa\u672c\u200b\u6b65\u9aa4","text":"<p>\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u7684\u200b\u57fa\u672c\u200b\u6d41\u7a0b\u200b\u5206\u4e3a\u200b\u56db\u6b65\u200b\uff1a</p> <ol> <li>\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff08<code>fopen()</code> \u200b\u6216\u200b <code>freopen()</code>\uff09</li> <li>\u200b\u8bfb\u200b/\u200b\u5199\u200b\u6587\u4ef6\u200b\uff08\u200b\u5982\u200b\uff1a<code>fscanf()</code>, <code>fprintf()</code>, <code>fread()</code>, <code>fwrite()</code> \u200b\u7b49\u200b\uff09</li> <li>\u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\uff08<code>fclose()</code>\uff09</li> <li>\u200b\u5904\u7406\u9519\u8bef\u200b\uff08\u200b\u901a\u8fc7\u200b\u8fd4\u56de\u503c\u200b\u6216\u200b <code>ferror()</code> \u200b\u68c0\u6d4b\u200b\uff09</li> </ol>"},{"location":"programming/c/day9-file-operations/#_3","title":"\u6587\u4ef6\u200b\u6307\u9488","text":"<p><code>FILE*</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u6587\u4ef6\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u7528\u4e8e\u200b\u64cd\u4f5c\u200b\u6587\u4ef6\u200b\u3002\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u540e\u200b\uff0c\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u6587\u4ef6\u200b\u6d41\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u8be5\u200b\u6307\u9488\u200b\u7528\u4e8e\u200b\u540e\u7eed\u200b\u7684\u200b\u8bfb\u5199\u64cd\u4f5c\u200b\u3002</p>"},{"location":"programming/c/day9-file-operations/#_4","title":"\u6587\u4ef6\u200b\u6253\u5f00\u200b\u4e0e\u200b\u5173\u95ed","text":""},{"location":"programming/c/day9-file-operations/#fopen","title":"\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff1a<code>fopen()</code>","text":"<p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>FILE* fopen(const char* filename, const char* mode);\n</code></pre> <p>\u200b\u53c2\u6570\u200b\u8bf4\u660e\u200b\uff1a</p> <ul> <li><code>filename</code>\uff1a\u200b\u6587\u4ef6\u540d\u200b\uff08\u200b\u5305\u542b\u200b\u8def\u5f84\u200b\uff09</li> <li><code>mode</code>\uff1a\u200b\u6587\u4ef6\u200b\u7684\u200b\u6253\u5f00\u200b\u6a21\u5f0f\u200b</li> </ul> <p>\u200b\u5e38\u89c1\u200b\u7684\u200b\u6587\u4ef6\u200b\u6a21\u5f0f\u200b\uff1a</p> \u200b\u6a21\u5f0f\u200b \u200b\u542b\u4e49\u200b <code>\"r\"</code> \u200b\u4ee5\u200b\u53ea\u8bfb\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6587\u4ef6\u200b\u5fc5\u987b\u200b\u5b58\u5728\u200b <code>\"w\"</code> \u200b\u4ee5\u200b\u5199\u5165\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u82e5\u200b\u6587\u4ef6\u200b\u5b58\u5728\u200b\u5219\u200b\u6e05\u7a7a\u200b\u5185\u5bb9\u200b <code>\"a\"</code> \u200b\u4ee5\u200b\u8ffd\u52a0\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5219\u200b\u521b\u5efa\u200b <code>\"r+\"</code> \u200b\u4ee5\u200b\u8bfb\u5199\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u6587\u4ef6\u200b\u5fc5\u987b\u200b\u5b58\u5728\u200b <code>\"w+\"</code> \u200b\u4ee5\u200b\u8bfb\u5199\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u82e5\u200b\u6587\u4ef6\u200b\u5b58\u5728\u200b\u5219\u200b\u6e05\u7a7a\u200b\u5185\u5bb9\u200b <code>\"a+\"</code> \u200b\u4ee5\u200b\u8bfb\u5199\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\uff0c\u200b\u4ece\u6587\u4ef6\u200b\u5c3e\u90e8\u200b\u8ffd\u52a0\u200b\u6570\u636e\u200b <code>\"b\"</code> \u200b\u4e8c\u8fdb\u5236\u200b\u6a21\u5f0f\u200b\uff08\u200b\u53ef\u200b\u4e0e\u200b\u4ee5\u4e0a\u200b\u6a21\u5f0f\u200b\u7ec4\u5408\u200b\uff0c\u200b\u5982\u200b <code>\"rb\"</code>\uff09 <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"w\");\nif (fp == NULL) {\n    printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n    return 1;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#fclose","title":"\u5173\u95ed\u200b\u6587\u4ef6\u200b\uff1a<code>fclose()</code>","text":"<p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>int fclose(FILE* stream);\n</code></pre> <p>\u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\u5e76\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\u3002\u200b\u6210\u529f\u200b\u8fd4\u56de\u200b <code>0</code>\uff0c\u200b\u5931\u8d25\u200b\u8fd4\u56de\u200b <code>EOF</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>fclose(fp);\n</code></pre>"},{"location":"programming/c/day9-file-operations/#_5","title":"\u4e8c\u5408\u4e00","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"example.txt\", \"w\");  // \u200b\u4ee5\u200b\u5199\u5165\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\n\n    if (fp == NULL) {  // \u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u662f\u5426\u200b\u6253\u5f00\u200b\u6210\u529f\u200b\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u6210\u529f\u200b\uff01\\n\");\n\n    fclose(fp);  // \u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\n    printf(\"\u200b\u6587\u4ef6\u200b\u5173\u95ed\u200b\u6210\u529f\u200b\uff01\\n\");\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#_6","title":"\u6587\u4ef6\u200b\u8bfb\u5199","text":""},{"location":"programming/c/day9-file-operations/#_7","title":"\u6587\u672c\u6587\u4ef6\u200b\u7684\u200b\u8bfb\u5199","text":""},{"location":"programming/c/day9-file-operations/#fprintf","title":"\u5199\u5165\u200b\u6587\u672c\u6587\u4ef6\u200b\uff1a<code>fprintf()</code>","text":"<p>\u200b\u7528\u4e8e\u200b\u4ee5\u200b\u683c\u5f0f\u5316\u200b\u6587\u672c\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5199\u5165\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>int fprintf(FILE* stream, const char* format, ...);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"w\");\nif (fp != NULL) {\n    fprintf(fp, \"\u200b\u59d3\u540d\u200b\uff1a%s\\n\u200b\u5e74\u9f84\u200b\uff1a%d\\n\", \"\u200b\u5f20\u4e09\u200b\", 25);\n    fclose(fp);\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#fscanf","title":"\u8bfb\u53d6\u200b\u6587\u672c\u6587\u4ef6\u200b\uff1a<code>fscanf()</code>","text":"<p>\u200b\u7528\u4e8e\u200b\u4ee5\u200b\u683c\u5f0f\u5316\u200b\u6587\u672c\u200b\u7684\u200b\u65b9\u5f0f\u200b\u8bfb\u53d6\u6570\u636e\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>int fscanf(FILE* stream, const char* format, ...);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"r\");\nchar name[50];\nint age;\nif (fp != NULL) {\n    fscanf(fp, \"\u200b\u59d3\u540d\u200b\uff1a%s\\n\u200b\u5e74\u9f84\u200b\uff1a%d\\n\", name, &amp;age);\n    printf(\"\u200b\u59d3\u540d\u200b\uff1a%s, \u200b\u5e74\u9f84\u200b\uff1a%d\\n\", name, age);\n    fclose(fp);\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#fgetc-fputc","title":"\u5b57\u7b26\u200b\u64cd\u4f5c\u200b\uff1a<code>fgetc()</code> \u200b\u548c\u200b <code>fputc()</code>","text":"<ul> <li><code>fgetc(FILE* stream)</code>\uff1a\u200b\u4ece\u6587\u4ef6\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b</li> <li><code>fputc(int ch, FILE* stream)</code>\uff1a\u200b\u5411\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5199\u5165\u200b\u4e00\u4e2a\u200b\u5b57\u7b26\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"w\");\nif (fp != NULL) {\n    fputc('A', fp);  // \u200b\u5199\u5165\u200b\u5b57\u7b26\u200b 'A'\n    fclose(fp);\n}\n\nfp = fopen(\"example.txt\", \"r\");\nif (fp != NULL) {\n    char ch = fgetc(fp);  // \u200b\u8bfb\u53d6\u200b\u5b57\u7b26\u200b\n    printf(\"\u200b\u8bfb\u53d6\u200b\u7684\u200b\u5b57\u7b26\u200b\uff1a%c\\n\", ch);\n    fclose(fp);\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#fgets-fputs","title":"\u884c\u200b\u64cd\u4f5c\u200b\uff1a<code>fgets()</code> \u200b\u548c\u200b <code>fputs()</code>","text":"<ul> <li><code>fgets(char* str, int n, FILE* stream)</code>\uff1a\u200b\u8bfb\u53d6\u200b\u4e00\u884c\u200b\uff0c\u200b\u6700\u200b\u591a\u200b\u8bfb\u53d6\u200b <code>n-1</code> \u200b\u4e2a\u5b57\u7b26\u200b</li> <li><code>fputs(const char* str, FILE* stream)</code>\uff1a\u200b\u5199\u5165\u200b\u4e00\u884c\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"w\");\nif (fp != NULL) {\n    fputs(\"Hello, World!\\n\", fp);\n    fclose(fp);\n}\n\nfp = fopen(\"example.txt\", \"r\");\nif (fp != NULL) {\n    char line[100];\n    fgets(line, sizeof(line), fp);  // \u200b\u8bfb\u53d6\u200b\u4e00\u884c\u200b\n    printf(\"\u200b\u8bfb\u53d6\u200b\u7684\u200b\u884c\u200b\uff1a%s\", line);\n    fclose(fp);\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#_8","title":"\u4e24\u4e2a\u200b\u4f8b\u5b50","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"example.txt\", \"w\");  // \u200b\u4ee5\u5199\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\n    if (fp == NULL) {\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    fprintf(fp, \"\u200b\u59d3\u540d\u200b\uff1a%s\\n\", \"\u200b\u5f20\u4e09\u200b\");\n    fprintf(fp, \"\u200b\u5e74\u9f84\u200b\uff1a%d\\n\", 25);  // \u200b\u5199\u5165\u200b\u6587\u672c\u200b\n\n    fclose(fp);  // \u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\n    printf(\"\u200b\u5199\u5165\u200b\u5b8c\u6210\u200b\uff01\\n\");\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"example.txt\", \"r\");  // \u200b\u4ee5\u8bfb\u200b\u6a21\u5f0f\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\n    if (fp == NULL) {\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    char name[50];\n    int age;\n    fscanf(fp, \"\u200b\u59d3\u540d\u200b\uff1a%s\\n\", name);\n    fscanf(fp, \"\u200b\u5e74\u9f84\u200b\uff1a%d\\n\", &amp;age);  // \u200b\u6309\u200b\u683c\u5f0f\u200b\u8bfb\u53d6\u200b\u5185\u5bb9\u200b\n\n    printf(\"\u200b\u59d3\u540d\u200b\uff1a%s\\n\", name);\n    printf(\"\u200b\u5e74\u9f84\u200b\uff1a%d\\n\", age);\n\n    fclose(fp);  // \u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#_9","title":"\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\u7684\u200b\u8bfb\u5199","text":""},{"location":"programming/c/day9-file-operations/#fwrite","title":"\u5199\u5165\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff1a<code>fwrite()</code>","text":"<p>\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6570\u636e\u200b\u5757\u200b\u5199\u5165\u200b\u6587\u4ef6\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>size_t fwrite(const void* ptr, size_t size, size_t count, FILE* stream);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"data.bin\", \"wb\");\nint data[] = {1, 2, 3, 4, 5};\nfwrite(data, sizeof(int), 5, fp);\nfclose(fp);\n</code></pre>"},{"location":"programming/c/day9-file-operations/#fread","title":"\u8bfb\u53d6\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff1a<code>fread()</code>","text":"<p>\u200b\u7528\u4e8e\u200b\u4ece\u6587\u4ef6\u200b\u4e2d\u200b\u8bfb\u53d6\u6570\u636e\u200b\u5757\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>size_t fread(void* ptr, size_t size, size_t count, FILE* stream);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"data.bin\", \"rb\");\nint data[5];\nfread(data, sizeof(int), 5, fp);\nfor (int i = 0; i &lt; 5; i++) {\n    printf(\"%d \", data[i]);\n}\nfclose(fp);\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"data.bin\", \"wb\");  // \u200b\u6253\u5f00\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\n    if (fp == NULL) {\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    int numbers[] = {10, 20, 30, 40, 50};\n    fwrite(numbers, sizeof(int), 5, fp);  // \u200b\u5199\u5165\u200b5\u200b\u4e2a\u200b\u6574\u6570\u200b\n\n    fclose(fp);\n    printf(\"\u200b\u4e8c\u8fdb\u5236\u200b\u6570\u636e\u200b\u5199\u5165\u200b\u5b8c\u6210\u200b\uff01\\n\");\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"data.bin\", \"rb\");  // \u200b\u6253\u5f00\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\n    if (fp == NULL) {\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    int numbers[5];\n    fread(numbers, sizeof(int), 5, fp);  // \u200b\u8bfb\u53d6\u200b5\u200b\u4e2a\u200b\u6574\u6570\u200b\n\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"\u200b\u6570\u5b57\u200b%d: %d\\n\", i + 1, numbers[i]);\n    }\n\n    fclose(fp);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#_10","title":"\u6587\u4ef6\u200b\u6307\u9488\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u64cd\u4f5c","text":""},{"location":"programming/c/day9-file-operations/#1-ftell","title":"(1) <code>ftell()</code>","text":"<p>\u200b\u8fd4\u56de\u200b\u5f53\u524d\u200b\u6587\u4ef6\u200b\u6307\u9488\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>long ftell(FILE* stream);\n</code></pre>"},{"location":"programming/c/day9-file-operations/#2-fseek","title":"(2) <code>fseek()</code>","text":"<p>\u200b\u79fb\u52a8\u200b\u6587\u4ef6\u200b\u6307\u9488\u200b\u5230\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>int fseek(FILE* stream, long offset, int origin);\n</code></pre> <p>\u200b\u793a\u4f8b\u200b\uff1a</p> <pre><code>FILE* fp = fopen(\"example.txt\", \"r\");\nfseek(fp, 10, SEEK_SET);  // \u200b\u5c06\u200b\u6307\u9488\u200b\u79fb\u52a8\u200b\u5230\u200b\u6587\u4ef6\u200b\u7684\u200b\u7b2c\u200b10\u200b\u4e2a\u200b\u5b57\u8282\u200b\nprintf(\"\u200b\u5f53\u524d\u200b\u4f4d\u7f6e\u200b\uff1a%ld\\n\", ftell(fp));\nfclose(fp);\n</code></pre>"},{"location":"programming/c/day9-file-operations/#3-rewind","title":"(3) <code>rewind()</code>","text":"<p>\u200b\u5c06\u200b\u6587\u4ef6\u200b\u6307\u9488\u200b\u91cd\u7f6e\u200b\u5230\u200b\u6587\u4ef6\u200b\u5f00\u5934\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>void rewind(FILE* stream);\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"example.txt\", \"r\");\n    if (fp == NULL) {\n        printf(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\uff01\\n\");\n        return 1;\n    }\n\n    fseek(fp, 5, SEEK_SET);  // \u200b\u5c06\u200b\u6307\u9488\u200b\u79fb\u52a8\u200b\u5230\u200b\u6587\u4ef6\u200b\u7684\u200b\u7b2c\u200b5\u200b\u4e2a\u200b\u5b57\u8282\u200b\n    long pos = ftell(fp);   // \u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u6307\u9488\u200b\u4f4d\u7f6e\u200b\n    printf(\"\u200b\u5f53\u524d\u200b\u6307\u9488\u200b\u4f4d\u7f6e\u200b\uff1a%ld\\n\", pos);\n\n    fclose(fp);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#7","title":"7. \u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u7684\u200b\u9519\u8bef\u5904\u7406","text":""},{"location":"programming/c/day9-file-operations/#1-ferror","title":"(1) <code>ferror()</code>","text":"<p>\u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u662f\u5426\u200b\u51fa\u9519\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>int ferror(FILE* stream);\n</code></pre>"},{"location":"programming/c/day9-file-operations/#2-perror","title":"(2) <code>perror()</code>","text":"<p>\u200b\u6253\u5370\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u9519\u8bef\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u8bed\u6cd5\u200b\uff1a</p> <pre><code>void perror(const char* str);\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    FILE* fp = fopen(\"nonexistent.txt\", \"r\");  // \u200b\u5c1d\u8bd5\u200b\u6253\u5f00\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u6587\u4ef6\u200b\n    if (fp == NULL) {\n        perror(\"\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\");  // \u200b\u6253\u5370\u200b\u9519\u8bef\u4fe1\u606f\u200b\n        return 1;\n    }\n\n    char ch = fgetc(fp);\n    if (ferror(fp)) {  // \u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u53d1\u751f\u200b\u9519\u8bef\u200b\n        printf(\"\u200b\u6587\u4ef6\u200b\u8bfb\u53d6\u200b\u51fa\u9519\u200b\uff01\\n\");\n    }\n\n    fclose(fp);\n    return 0;\n}\n</code></pre>"},{"location":"programming/c/day9-file-operations/#8","title":"8. \u200b\u5e38\u89c1\u95ee\u9898\u200b\u4e0e\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u5931\u8d25\u200b\u8981\u200b\u68c0\u67e5\u200b\u8fd4\u56de\u503c\u200b\u662f\u5426\u200b\u4e3a\u200b <code>NULL</code>\u3002</li> <li>\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u5b8c\u6210\u200b\u540e\u200b\u52a1\u5fc5\u200b\u5173\u95ed\u200b\u6587\u4ef6\u200b\u4ee5\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\u3002</li> <li>\u200b\u6ce8\u610f\u200b\u6587\u4ef6\u200b\u8bfb\u5199\u200b\u6a21\u5f0f\u200b\u7684\u200b\u6b63\u786e\u200b\u9009\u62e9\u200b\uff0c\u200b\u5426\u5219\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u4e22\u5931\u200b\u3002</li> <li>\u200b\u5904\u7406\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\u65f6\u8981\u200b\u786e\u4fdd\u200b\u8bfb\u53d6\u200b/\u200b\u5199\u5165\u200b\u7684\u200b\u6570\u636e\u200b\u5927\u5c0f\u200b\u5339\u914d\u200b\u3002</li> </ul> <p>\u200b\u4ee5\u4e0a\u200b\u4ee3\u7801\u200b\u6db5\u76d6\u200b\u4e86\u200b\u6240\u6709\u200b\u5e38\u89c1\u200b\u7684\u200b C \u200b\u8bed\u8a00\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u4e14\u200b\u6bcf\u4e2a\u200b\u529f\u80fd\u200b\u90fd\u200b\u914d\u6709\u200b\u5b8c\u6574\u200b\u7684\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8fd0\u884c\u200b\u6d4b\u8bd5\u200b\u3002</p>"},{"location":"programming/c/format-control/","title":"C \u200b\u8bed\u8a00\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u8be6\u7ec6\u200b\u6307\u5357","text":"<p>\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u662f\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7528\u4e8e\u200b\u6307\u5b9a\u200b\u8f93\u5165\u8f93\u51fa\u200b\u683c\u5f0f\u200b\u7684\u200b\u7279\u6b8a\u5b57\u7b26\u200b\u5e8f\u5217\u200b\u3002\u200b\u5b83\u4eec\u200b\u5728\u200b printf \u200b\u548c\u200b scanf \u200b\u51fd\u6570\u200b\u4e2d\u200b\u5e7f\u6cdb\u200b\u4f7f\u7528\u200b,\u200b\u7528\u4e8e\u200b\u63a7\u5236\u6570\u636e\u200b\u7684\u200b\u663e\u793a\u200b\u548c\u200b\u8bfb\u53d6\u200b\u65b9\u5f0f\u200b\u3002\u200b\u672c\u200b\u6307\u5357\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u8fd9\u4e9b\u200b\u4fee\u9970\u7b26\u200b\u5728\u200b printf \u200b\u548c\u200b scanf \u200b\u4e2d\u200b\u7684\u200b\u7528\u6cd5\u200b\u3002</p>"},{"location":"programming/c/format-control/#_1","title":"\u76ee\u5f55","text":"<ol> <li>\u200b\u57fa\u672c\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b</li> <li>printf \u200b\u4e2d\u200b\u7684\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b</li> <li>scanf \u200b\u4e2d\u200b\u7684\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b</li> <li>\u200b\u6807\u5fd7\u200b\u3001\u200b\u5bbd\u5ea6\u200b\u3001\u200b\u7cbe\u5ea6\u200b\u548c\u200b\u957f\u5ea6\u200b\u4fee\u9970\u7b26\u200b</li> <li>\u200b\u793a\u4f8b\u200b\u548c\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b</li> </ol>"},{"location":"programming/c/format-control/#_2","title":"\u57fa\u672c\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26","text":"<p>\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u57fa\u672c\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li><code>%d</code>: \u200b\u6574\u6570\u200b</li> <li><code>%f</code>: \u200b\u6d6e\u70b9\u6570\u200b</li> <li><code>%c</code>: \u200b\u5b57\u7b26\u200b</li> <li><code>%s</code>: \u200b\u5b57\u7b26\u4e32\u200b</li> <li><code>%p</code>: \u200b\u6307\u9488\u200b</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u4fee\u9970\u7b26\u200b\u5728\u200b printf \u200b\u548c\u200b scanf \u200b\u4e2d\u200b\u7684\u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u662f\u200b\u76f8\u540c\u200b\u7684\u200b,\u200b\u4f46\u200b\u5728\u200b\u7ec6\u8282\u200b\u4e0a\u200b\u6709\u6240\u4e0d\u540c\u200b\u3002</p>"},{"location":"programming/c/format-control/#printf","title":"printf \u200b\u4e2d\u200b\u7684\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26","text":"<p>printf \u200b\u51fd\u6570\u200b\u4f7f\u7528\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u6765\u200b\u63a7\u5236\u200b\u8f93\u51fa\u200b\u7684\u200b\u683c\u5f0f\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\uff1a</p>"},{"location":"programming/c/format-control/#1","title":"1. \u200b\u6574\u6570\u200b\u7c7b\u578b","text":"<ul> <li><code>%d</code>, <code>%i</code>: \u200b\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%u</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%o</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u516b\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%x</code>, <code>%X</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u516d\u8fdb\u5236\u200b\u6574\u6570\u200b\uff08\u200b\u5c0f\u5199\u200b/\u200b\u5927\u5199\u200b\uff09</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>int num = 42;\nprintf(\"%d\\n\", num);  // \u200b\u8f93\u51fa\u200b: 42\nprintf(\"%x\\n\", num);  // \u200b\u8f93\u51fa\u200b: 2a\n</code></pre>"},{"location":"programming/c/format-control/#2","title":"2. \u200b\u6d6e\u70b9\u200b\u7c7b\u578b","text":"<ul> <li><code>%f</code>: \u200b\u5341\u8fdb\u5236\u200b\u6d6e\u70b9\u6570\u200b</li> <li><code>%e</code>, <code>%E</code>: \u200b\u79d1\u5b66\u200b\u8bb0\u6570\u6cd5\u200b\uff08\u200b\u5c0f\u5199\u200b/\u200b\u5927\u5199\u200b\uff09</li> <li><code>%g</code>, <code>%G</code>: \u200b\u6839\u636e\u200b\u503c\u200b\u7684\u200b\u5927\u5c0f\u200b\u81ea\u52a8\u200b\u9009\u62e9\u200b %f \u200b\u6216\u200b %e</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>double pi = 3.14159;\nprintf(\"%f\\n\", pi);    // \u200b\u8f93\u51fa\u200b: 3.141590\nprintf(\"%.2f\\n\", pi);  // \u200b\u8f93\u51fa\u200b: 3.14\nprintf(\"%e\\n\", pi);    // \u200b\u8f93\u51fa\u200b: 3.141590e+00\n</code></pre>"},{"location":"programming/c/format-control/#3","title":"3. \u200b\u5b57\u7b26\u200b\u548c\u200b\u5b57\u7b26\u4e32","text":"<ul> <li><code>%c</code>: \u200b\u5355\u4e2a\u200b\u5b57\u7b26\u200b</li> <li><code>%s</code>: \u200b\u5b57\u7b26\u4e32\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>char ch = 'A';\nchar str[] = \"Hello\";\nprintf(\"%c\\n\", ch);   // \u200b\u8f93\u51fa\u200b: A\nprintf(\"%s\\n\", str);  // \u200b\u8f93\u51fa\u200b: Hello\n</code></pre>"},{"location":"programming/c/format-control/#4","title":"4. \u200b\u6307\u9488","text":"<ul> <li><code>%p</code>: \u200b\u6307\u9488\u200b\u5730\u5740\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>int *ptr = &amp;num;\nprintf(\"%p\\n\", (void *)ptr);  // \u200b\u8f93\u51fa\u200b: \u200b\u5730\u5740\u200b\u503c\u200b\uff08\u200b\u5982\u200b 0x7ffd5e7e9e44\uff09\n</code></pre>"},{"location":"programming/c/format-control/#scanf","title":"scanf \u200b\u4e2d\u200b\u7684\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26","text":"<p>scanf \u200b\u51fd\u6570\u200b\u4f7f\u7528\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u6765\u200b\u63a7\u5236\u200b\u8f93\u5165\u200b\u7684\u200b\u89e3\u6790\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u8be6\u7ec6\u200b\u8bf4\u660e\u200b\uff1a</p>"},{"location":"programming/c/format-control/#1_1","title":"1. \u200b\u6574\u6570\u200b\u7c7b\u578b","text":"<ul> <li><code>%d</code>, <code>%i</code>: \u200b\u6709\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%u</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%o</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u516b\u8fdb\u5236\u200b\u6574\u6570\u200b</li> <li><code>%x</code>, <code>%X</code>: \u200b\u65e0\u200b\u7b26\u53f7\u200b\u5341\u516d\u8fdb\u5236\u200b\u6574\u6570\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>int num;\nscanf(\"%d\", &amp;num);  // \u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u6574\u6570\u200b\n</code></pre>"},{"location":"programming/c/format-control/#2_1","title":"2. \u200b\u6d6e\u70b9\u200b\u7c7b\u578b","text":"<ul> <li><code>%f</code>, <code>%e</code>, <code>%E</code>, <code>%g</code>, <code>%G</code>: \u200b\u6d6e\u70b9\u6570\u200b\uff08\u200b\u6240\u6709\u200b\u8fd9\u4e9b\u200b\u5728\u200b scanf \u200b\u4e2d\u200b\u7b49\u6548\u200b\uff09</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>float f;\nscanf(\"%f\", &amp;f);  // \u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u6d6e\u70b9\u6570\u200b\n</code></pre>"},{"location":"programming/c/format-control/#3_1","title":"3. \u200b\u5b57\u7b26\u200b\u548c\u200b\u5b57\u7b26\u4e32","text":"<ul> <li><code>%c</code>: \u200b\u5355\u4e2a\u200b\u5b57\u7b26\u200b</li> <li><code>%s</code>: \u200b\u5b57\u7b26\u4e32\u200b\uff08\u200b\u6ce8\u610f\u200b\u7f13\u51b2\u533a\u200b\u6ea2\u51fa\u200b\u98ce\u9669\u200b\uff09</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>char ch;\nchar str[50];\nscanf(\" %c\", &amp;ch);  // \u200b\u6ce8\u610f\u200b\u524d\u9762\u200b\u7684\u200b\u7a7a\u683c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u8df3\u8fc7\u200b\u4e4b\u524d\u200b\u53ef\u80fd\u200b\u7684\u200b\u6362\u884c\u7b26\u200b\nscanf(\"%49s\", str); // \u200b\u9650\u5236\u200b\u8f93\u5165\u200b\u957f\u5ea6\u200b\u4ee5\u200b\u9632\u6b62\u200b\u7f13\u51b2\u533a\u200b\u6ea2\u51fa\u200b\n</code></pre>"},{"location":"programming/c/format-control/#4_1","title":"4. \u200b\u7279\u6b8a\u200b\u7528\u6cd5","text":"<ul> <li><code>%*</code>: \u200b\u8df3\u8fc7\u200b\u8f93\u5165\u200b\u9879\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>int a, b;\nscanf(\"%d%*c%d\", &amp;a, &amp;b);  // \u200b\u8df3\u8fc7\u200b\u4e24\u4e2a\u200b\u6570\u5b57\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5b57\u7b26\u200b\n</code></pre>"},{"location":"programming/c/format-control/#_3","title":"\u6807\u5fd7\u200b\u3001\u200b\u5bbd\u5ea6\u200b\u3001\u200b\u7cbe\u5ea6\u200b\u548c\u200b\u957f\u5ea6\u200b\u4fee\u9970\u7b26","text":"<p>\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u989d\u5916\u200b\u7684\u200b\u63a7\u5236\u5b57\u7b26\u200b\uff1a</p>"},{"location":"programming/c/format-control/#1-printf","title":"1. \u200b\u6807\u5fd7\u200b\uff08\u200b\u4ec5\u200b\u7528\u4e8e\u200b printf\uff09","text":"<ul> <li><code>-</code>: \u200b\u5de6\u200b\u5bf9\u9f50\u200b</li> <li><code>+</code>: \u200b\u663e\u793a\u200b\u6b63\u200b\u53f7\u200b</li> <li><code>\u200b\u7a7a\u683c\u200b</code>: \u200b\u6b63\u6570\u200b\u524d\u52a0\u200b\u7a7a\u683c\u200b</li> <li><code>0</code>: \u200b\u7528\u200b 0 \u200b\u586b\u5145\u200b</li> </ul>"},{"location":"programming/c/format-control/#2_2","title":"2. \u200b\u5bbd\u5ea6","text":"<ul> <li>\u200b\u6570\u5b57\u200b: \u200b\u6700\u200b\u5c0f\u5b57\u200b\u6bb5\u200b\u5bbd\u5ea6\u200b</li> <li><code>*</code>: \u200b\u5bbd\u5ea6\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b</li> </ul>"},{"location":"programming/c/format-control/#3_2","title":"3. \u200b\u7cbe\u5ea6","text":"<ul> <li><code>.\u200b\u6570\u5b57\u200b</code>: \u200b\u5c0f\u6570\u70b9\u200b\u540e\u200b\u7684\u200b\u4f4d\u6570\u200b</li> <li><code>.*</code>: \u200b\u7cbe\u5ea6\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u4f20\u9012\u200b</li> </ul>"},{"location":"programming/c/format-control/#4_2","title":"4. \u200b\u957f\u5ea6\u200b\u4fee\u9970\u7b26","text":"<ul> <li><code>h</code>: short int \u200b\u6216\u200b unsigned short int</li> <li><code>l</code>: long int \u200b\u6216\u200b unsigned long int</li> <li><code>ll</code>: long long int \u200b\u6216\u200b unsigned long long int</li> <li><code>L</code>: long double</li> </ul> <p>\u200b\u793a\u4f8b\u200b:</p> <pre><code>printf(\"%+10.2f\\n\", 3.14159);  // \u200b\u8f93\u51fa\u200b:     +3.14\nprintf(\"%.*f\\n\", 3, 3.14159);  // \u200b\u8f93\u51fa\u200b: 3.142\n</code></pre>"},{"location":"programming/c/format-control/#_4","title":"\u793a\u4f8b\u200b\u548c\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ol> <li>\u200b\u4f7f\u7528\u200b printf \u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b:</li> </ol> <pre><code>int age = 30;\nfloat height = 175.5;\nprintf(\"Age: %d, Height: %.1f cm\\n\", age, height);\n// \u200b\u8f93\u51fa\u200b: Age: 30, Height: 175.5 cm\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b scanf \u200b\u5b89\u5168\u200b\u5730\u200b\u8bfb\u53d6\u200b\u8f93\u5165\u200b:</li> </ol> <pre><code>char name[50];\nint age;\nprintf(\"Enter name and age: \");\nscanf(\"%49s %d\", name, &amp;age);\nprintf(\"Name: %s, Age: %d\\n\", name, age);\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b\u6807\u5fd7\u200b\u548c\u200b\u5bbd\u5ea6\u200b\u63a7\u5236\u200b\u8f93\u51fa\u200b\u683c\u5f0f\u200b:</li> </ol> <pre><code>printf(\"%-10s|%10s\\n\", \"Name\", \"Score\");\nprintf(\"%-10s|%10.2f\\n\", \"Alice\", 92.5);\nprintf(\"%-10s|%10.2f\\n\", \"Bob\", 87.3);\n// \u200b\u8f93\u51fa\u200b:\n// Name      |     Score\n// Alice     |     92.50\n// Bob       |     87\n\n[\u200b\u524d\u9762\u200b\u7684\u200b\u5185\u5bb9\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u6211\u4eec\u200b\u4ece\u200b\"\u200b\u793a\u4f8b\u200b\u548c\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\"\u200b\u90e8\u5206\u200b\u7ee7\u7eed\u200b]\n\n4. \u200b\u4f7f\u7528\u200b\u7cbe\u5ea6\u200b\u63a7\u5236\u200b\u6d6e\u70b9\u6570\u200b\u8f93\u51fa\u200b:\n\n```c\ndouble pi = 3.14159265359;\nprintf(\"\u200b\u9ed8\u8ba4\u200b\u7cbe\u5ea6\u200b: %f\\n\", pi);\nprintf(\"\u200b\u4fdd\u7559\u200b2\u200b\u4f4d\u200b\u5c0f\u6570\u200b: %.2f\\n\", pi);\nprintf(\"\u200b\u4fdd\u7559\u200b6\u200b\u4f4d\u200b\u5c0f\u6570\u200b: %.6f\\n\", pi);\n\n// \u200b\u8f93\u51fa\u200b:\n// \u200b\u9ed8\u8ba4\u200b\u7cbe\u5ea6\u200b: 3.141593\n// \u200b\u4fdd\u7559\u200b2\u200b\u4f4d\u200b\u5c0f\u6570\u200b: 3.14\n// \u200b\u4fdd\u7559\u200b6\u200b\u4f4d\u200b\u5c0f\u6570\u200b: 3.141593\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b * \u200b\u52a8\u6001\u200b\u6307\u5b9a\u200b\u5bbd\u5ea6\u200b\u548c\u200b\u7cbe\u5ea6\u200b:</li> </ol> <pre><code>int width = 10;\nint precision = 2;\ndouble value = 123.456789;\n\nprintf(\"%*.*f\\n\", width, precision, value);\n// \u200b\u8f93\u51fa\u200b:    123.46\n</code></pre> <ol> <li>\u200b\u5728\u200b scanf \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5b57\u200b\u6bb5\u200b\u5bbd\u5ea6\u200b\u9650\u5236\u200b\u8f93\u5165\u200b:</li> </ol> <pre><code>char name[10];\nprintf(\"\u200b\u8f93\u5165\u60a8\u200b\u7684\u200b\u540d\u5b57\u200b (\u200b\u6700\u200b\u591a\u200b9\u200b\u4e2a\u5b57\u7b26\u200b): \");\nscanf(\"%9s\", name);\nprintf(\"\u200b\u60a8\u597d\u200b, %s!\\n\", name);\n</code></pre>"},{"location":"programming/c/format-control/#_5","title":"\u9ad8\u7ea7\u200b\u7528\u6cd5","text":""},{"location":"programming/c/format-control/#1-long-long-int","title":"1. \u200b\u5904\u7406\u200b long long int \u200b\u7c7b\u578b","text":"<pre><code>long long int big_number = 1234567890123456789LL;\nprintf(\"%lld\\n\", big_number);\n</code></pre>"},{"location":"programming/c/format-control/#2-n","title":"2. \u200b\u4f7f\u7528\u200b %n \u200b\u83b7\u53d6\u200b\u5df2\u200b\u6253\u5370\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570","text":"<pre><code>int chars_printed;\nprintf(\"Hello, World!%n\\n\", &amp;chars_printed);\nprintf(\"\u200b\u6253\u5370\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u200b: %d\\n\", chars_printed);\n// \u200b\u8f93\u51fa\u200b:\n// Hello, World!\n// \u200b\u6253\u5370\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u200b: 13\n</code></pre>"},{"location":"programming/c/format-control/#3_3","title":"3. \u200b\u6253\u5370\u200b\u767e\u5206\u53f7","text":"<pre><code>printf(\"\u200b\u8fd9\u91cc\u200b\u6709\u200b\u4e00\u4e2a\u200b\u767e\u5206\u53f7\u200b: %%\\n\");\n// \u200b\u8f93\u51fa\u200b: \u200b\u8fd9\u91cc\u200b\u6709\u200b\u4e00\u4e2a\u200b\u767e\u5206\u53f7\u200b: %\n</code></pre>"},{"location":"programming/c/format-control/#_6","title":"\u5e38\u89c1\u200b\u9677\u9631\u200b\u548c\u200b\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u4e0d\u200b\u5339\u914d\u200b</li> </ol> <p>\u200b\u9519\u8bef\u200b\u793a\u4f8b\u200b:</p> <pre><code>int num = 42;\nprintf(\"%f\\n\", num);  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u7528\u200b %f \u200b\u6253\u5370\u200b\u6574\u6570\u200b\n</code></pre> <p>\u200b\u6b63\u786e\u200b\u793a\u4f8b\u200b:</p> <pre><code>printf(\"%d\\n\", num);\n</code></pre> <ol> <li>\u200b\u7f13\u51b2\u533a\u200b\u6ea2\u51fa\u200b\u98ce\u9669\u200b</li> </ol> <p>\u200b\u98ce\u9669\u200b\u793a\u4f8b\u200b:</p> <pre><code>char buffer[10];\nscanf(\"%s\", buffer);  // \u200b\u5371\u9669\u200b\uff1a\u200b\u6ca1\u6709\u200b\u9650\u5236\u200b\u8f93\u5165\u200b\u957f\u5ea6\u200b\n</code></pre> <p>\u200b\u5b89\u5168\u200b\u793a\u4f8b\u200b:</p> <pre><code>scanf(\"%9s\", buffer);  // \u200b\u9650\u5236\u200b\u8f93\u5165\u200b\u6700\u200b\u591a\u200b9\u200b\u4e2a\u5b57\u7b26\u200b\uff08\u200b\u7559\u200b1\u200b\u4e2a\u200b\u7ed9\u200b\u7ed3\u675f\u7b26\u200b'\\0'\uff09\n</code></pre> <ol> <li>\u200b\u5ffd\u7565\u200b scanf \u200b\u7684\u200b\u8fd4\u56de\u503c\u200b</li> </ol> <p>\u200b\u9519\u8bef\u200b\u793a\u4f8b\u200b:</p> <pre><code>int age;\nscanf(\"%d\", &amp;age);  // \u200b\u6ca1\u6709\u200b\u68c0\u67e5\u200b\u8f93\u5165\u200b\u662f\u5426\u200b\u6210\u529f\u200b\n</code></pre> <p>\u200b\u6b63\u786e\u200b\u793a\u4f8b\u200b:</p> <pre><code>if (scanf(\"%d\", &amp;age) != 1) {\n    printf(\"\u200b\u8f93\u5165\u200b\u9519\u8bef\u200b\\n\");\n    // \u200b\u9519\u8bef\u5904\u7406\u200b...\n}\n</code></pre>"},{"location":"programming/c/format-control/#_7","title":"\u9519\u8bef\u5904\u7406\u200b\u548c\u200b\u5b89\u5168\u6027","text":"<ol> <li>\u200b\u4f7f\u7528\u200b sscanf \u200b\u8fdb\u884c\u200b\u5b89\u5168\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u89e3\u6790\u200b:</li> </ol> <pre><code>char input[] = \"42 3.14\";\nint num;\nfloat fnum;\n\nif (sscanf(input, \"%d %f\", &amp;num, &amp;fnum) == 2) {\n    printf(\"\u200b\u6210\u529f\u200b\u8bfb\u53d6\u200b: %d \u200b\u548c\u200b %f\\n\", num, fnum);\n} else {\n    printf(\"\u200b\u8f93\u5165\u200b\u683c\u5f0f\u200b\u9519\u8bef\u200b\\n\");\n}\n</code></pre> <ol> <li>\u200b\u4f7f\u7528\u200b fgets \u200b\u548c\u200b sscanf \u200b\u7ec4\u5408\u200b\u6765\u200b\u5b89\u5168\u200b\u8bfb\u53d6\u200b\u8f93\u5165\u200b:</li> </ol> <pre><code>char input[100];\nint age;\n\nprintf(\"\u200b\u8bf7\u200b\u8f93\u5165\u60a8\u200b\u7684\u200b\u5e74\u9f84\u200b: \");\nif (fgets(input, sizeof(input), stdin) != NULL) {\n    if (sscanf(input, \"%d\", &amp;age) == 1) {\n        printf(\"\u200b\u60a8\u200b\u7684\u200b\u5e74\u9f84\u200b\u662f\u200b: %d\\n\", age);\n    } else {\n        printf(\"\u200b\u8f93\u5165\u200b\u65e0\u6548\u200b\\n\");\n    }\n}\n</code></pre> <ol> <li>\u200b\u5904\u7406\u200b\u6574\u6570\u200b\u6ea2\u51fa\u200b:</li> </ol> <pre><code>#include &lt;limits.h&gt;\n\nlong long input;\nprintf(\"\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b: \");\nif (scanf(\"%lld\", &amp;input) == 1) {\n    if (input &gt; INT_MAX || input &lt; INT_MIN) {\n        printf(\"\u200b\u8f93\u5165\u200b\u503c\u200b\u8d85\u51fa\u200bint\u200b\u8303\u56f4\u200b\\n\");\n    } else {\n        int safe_int = (int)input;\n        printf(\"\u200b\u6709\u6548\u200b\u7684\u200bint\u200b\u503c\u200b: %d\\n\", safe_int);\n    }\n} else {\n    printf(\"\u200b\u8f93\u5165\u200b\u65e0\u6548\u200b\\n\");\n}\n</code></pre>"},{"location":"programming/c/format-control/#_8","title":"\u6027\u80fd\u200b\u8003\u8651","text":"<ol> <li>printf vs puts:    \u200b\u5bf9\u4e8e\u200b\u7b80\u5355\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8f93\u51fa\u200b\uff0cputs \u200b\u901a\u5e38\u200b\u6bd4\u200b printf \u200b\u66f4\u200b\u5feb\u200b\u3002</li> </ol> <pre><code>puts(\"Hello, World!\");  // \u200b\u901a\u5e38\u200b\u6bd4\u200b printf(\"Hello, World!\\n\"); \u200b\u66f4\u200b\u5feb\u200b\n</code></pre> <ol> <li>\u200b\u683c\u5f0f\u5316\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u91cd\u7528\u200b:    \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u591a\u6b21\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u683c\u5f0f\u200b\uff0c\u200b\u5c06\u200b\u5176\u200b\u5b58\u50a8\u200b\u4e3a\u200b\u5e38\u91cf\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002</li> </ol> <pre><code>const char *format = \"Name: %s, Age: %d\\n\";\nprintf(format, \"Alice\", 30);\nprintf(format, \"Bob\", 25);\n</code></pre>"},{"location":"programming/c/format-control/#_9","title":"\u7ed3\u8bba","text":"<p>\u200b\u638c\u63e1\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u683c\u5f0f\u200b\u4fee\u9970\u7b26\u200b\u5bf9\u4e8e\u200b\u7f16\u5199\u200b\u6e05\u6670\u200b\u3001\u200b\u6b63\u786e\u200b\u548c\u200b\u9ad8\u6548\u200b\u7684\u200b\u4ee3\u7801\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u901a\u8fc7\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u4fee\u9970\u7b26\u200b\uff0c\u200b\u60a8\u200b\u53ef\u4ee5\u200b\u7cbe\u786e\u200b\u63a7\u5236\u7a0b\u5e8f\u200b\u7684\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u4ee3\u7801\u200b\u7684\u200b\u53ef\u8bfb\u6027\u200b\u548c\u200b\u5065\u58ee\u6027\u200b\u3002\u200b\u8bb0\u4f4f\u200b\u8981\u200b\u59cb\u7ec8\u200b\u8003\u8651\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u65f6\u200b\u3002\u200b\u968f\u7740\u200b\u7ecf\u9a8c\u200b\u7684\u200b\u79ef\u7d2f\u200b\uff0c\u200b\u76f8\u4fe1\u200b\u4f60\u200b\u4e00\u5b9a\u200b\u80fd\u200b\u7f16\u5199\u51fa\u200b\u66f4\u200b\u9ad8\u8d28\u91cf\u200b\u7684\u200b C \u200b\u7a0b\u5e8f\u200b\u3002</p>"},{"location":"programming/cpp/","title":"C++ Programming","text":"<p>Welcome to the C++ programming section! This comprehensive collection covers modern C++ programming from fundamental concepts to advanced techniques, with special emphasis on C++20 features and best practices.</p>"},{"location":"programming/cpp/#featured-content","title":"Featured Content","text":""},{"location":"programming/cpp/#c20-comprehensive-guide","title":"C++20 Comprehensive Guide","text":"<p>Complete coverage of C++20 features and improvements: - Concepts - Type constraints and requirements - Modules - Modern code organization - Coroutines - Asynchronous programming - Ranges - Functional programming with STL - Three-way Comparison - Spaceship operator - Template Improvements - Enhanced template programming</p>"},{"location":"programming/cpp/#type-erasure-techniques","title":"Type Erasure Techniques","text":"<p>Advanced design patterns for flexible code: - Virtual Function Approach - Traditional polymorphism - std::variant - Type-safe unions - std::any - Runtime type flexibility - Custom Type Erasure - Building your own solutions</p>"},{"location":"programming/cpp/#string-operations-guide","title":"String Operations Guide","text":"<p>Complete guide to C++ string handling: - C-style Strings - Legacy string operations - std::string - Modern string class - std::string_view - Efficient string references - Performance Comparisons - Choosing the right approach - Best Practices - Modern C++ string techniques</p>"},{"location":"programming/cpp/#advanced-topics","title":"Advanced Topics","text":""},{"location":"programming/cpp/#template-programming","title":"Template Programming","text":"<ul> <li>CTAD (Class Template Argument Deduction) - Automatic type deduction</li> <li>Type Traits - Compile-time type information</li> <li>Template Metaprogramming - Compile-time computation</li> <li>Concepts - Constraining template parameters</li> </ul>"},{"location":"programming/cpp/#modern-c-features","title":"Modern C++ Features","text":"<ul> <li>Smart Pointers - Automatic memory management</li> <li>Move Semantics - Efficient resource transfer</li> <li>Lambda Expressions - Functional programming</li> <li>Structured Bindings - Multiple return values</li> </ul>"},{"location":"programming/cpp/#performance-and-optimization","title":"Performance and Optimization","text":"<ul> <li>Memory Management - Efficient allocation strategies</li> <li>Compiler Optimizations - Understanding compiler behavior</li> <li>Profiling and Benchmarking - Measuring performance</li> <li>Cache-friendly Programming - Hardware-aware optimization</li> </ul>"},{"location":"programming/cpp/#learning-path","title":"Learning Path","text":""},{"location":"programming/cpp/#beginner-to-intermediate","title":"Beginner to Intermediate","text":"<ol> <li>String Operations - Master fundamental string handling</li> <li>Modern C++ Basics - Learn C++11/14/17 features</li> <li>Template Fundamentals - Understand generic programming</li> </ol>"},{"location":"programming/cpp/#intermediate-to-advanced","title":"Intermediate to Advanced","text":"<ol> <li>C++20 Features - Explore the latest standard</li> <li>Type Erasure - Advanced design patterns</li> <li>Template Metaprogramming - Compile-time programming</li> </ol>"},{"location":"programming/cpp/#expert-level","title":"Expert Level","text":"<ol> <li>Performance Optimization - Hardware-aware programming</li> <li>Library Design - Creating reusable components</li> <li>Standards Compliance - Following best practices</li> </ol>"},{"location":"programming/cpp/#code-organization","title":"Code Organization","text":""},{"location":"programming/cpp/#project-structure","title":"Project Structure","text":"<pre><code>cpp/\n\u251c\u2500\u2500 cpp20.md              # C++20 comprehensive guide\n\u251c\u2500\u2500 type-erasure/         # Type erasure techniques\n\u251c\u2500\u2500 noob/                 # Beginner-friendly guides\n\u251c\u2500\u2500 ctad/                 # Class Template Argument Deduction\n\u251c\u2500\u2500 type-traits/          # Type traits and metaprogramming\n\u2514\u2500\u2500 number/               # Numeric programming\n</code></pre>"},{"location":"programming/cpp/#best-practices","title":"Best Practices","text":"<ul> <li>Modern C++ Standards - Use latest language features appropriately</li> <li>RAII Principles - Resource Acquisition Is Initialization</li> <li>Exception Safety - Write exception-safe code</li> <li>Const Correctness - Proper use of const qualifiers</li> </ul>"},{"location":"programming/cpp/#key-features-covered","title":"Key Features Covered","text":""},{"location":"programming/cpp/#language-features","title":"Language Features","text":"<ul> <li>Core Language - Syntax, semantics, and best practices</li> <li>Standard Library - STL containers, algorithms, and utilities</li> <li>Memory Model - Understanding C++ memory semantics</li> <li>Concurrency - Multi-threading and synchronization</li> </ul>"},{"location":"programming/cpp/#development-practices","title":"Development Practices","text":"<ul> <li>Code Quality - Writing maintainable, readable code</li> <li>Testing - Unit testing and test-driven development</li> <li>Debugging - Effective debugging techniques</li> <li>Documentation - Code documentation best practices</li> </ul>"},{"location":"programming/cpp/#integration-and-deployment","title":"Integration and Deployment","text":"<ul> <li>Build Systems - CMake, Make, and modern build tools</li> <li>Package Management - vcpkg, Conan, and dependency management</li> <li>Cross-platform Development - Portable C++ code</li> <li>Performance Profiling - Tools and techniques</li> </ul> <p>Each section includes: - \ud83d\udcd6 Comprehensive Explanations - Detailed concept coverage - \ud83d\udcbb Working Examples - Tested, practical code samples - \ud83c\udfaf Best Practices - Industry-standard approaches - \u26a1 Performance Tips - Optimization techniques - \ud83d\udd27 Tool Integration - Development workflow enhancement</p> <p>Start with the C++20 guide for modern features, or dive into specific topics based on your current needs and experience level!</p>"},{"location":"programming/cpp/cpp20/","title":"C++20: A Comprehensive English Tutorial","text":""},{"location":"programming/cpp/cpp20/#introduction","title":"Introduction","text":"<p>C++20 represents a significant evolution in the C++ programming language, introducing numerous new features and improvements that enhance both the language's expressiveness and its efficiency. This tutorial provides a detailed exploration of C++20's key features, offering insights into their usage, benefits, and implementation details. Whether you're a seasoned C++ developer looking to update your skills or a beginner interested in modern C++, this guide will serve as your comprehensive resource to mastering C++20.</p>"},{"location":"programming/cpp/cpp20/#core-language-features","title":"Core Language Features","text":""},{"location":"programming/cpp/cpp20/#concepts","title":"Concepts","text":"<p>Concepts in C++20 represent a revolutionary approach to writing templates. They allow you to define constraints on template parameters, improving code readability and maintainability. The primary goal of concepts is to model semantic categories (like Number, Range, RegularFunction) rather than just syntactic restrictions (HasPlus, Array) [18].</p>"},{"location":"programming/cpp/cpp20/#basic-usage","title":"Basic Usage","text":"<p>Concepts enable you to specify what operations are required for a type to be used in a particular context. For example, if you want to write a function that requires its argument to support addition, you can use the <code>std::ranges::addable</code> concept.</p> <pre><code>template&lt;concept std::ranges::addable T&gt;\nT add(T a, T b) {\n    return a + b;\n}\n</code></pre> <p>Prior to concepts, achieving similar type checking would require complex SFINAE (Substitution Failure Is Not An Error) techniques, making code harder to read and maintain [27].</p>"},{"location":"programming/cpp/cpp20/#standard-library-concepts","title":"Standard Library Concepts","text":"<p>C++20 introduces a set of predefined concepts in the standard library, which can be used to constrain template parameters. These include:</p> <ul> <li><code>std::equality_comparable</code> - Types that can be compared for equality</li> <li><code>std::default_initializable</code> - Types that can be default-initialized</li> <li><code>std::constructible_from</code> - Types that can be constructed from specific arguments</li> <li><code>std::regular</code> - Types that are equality-comparable, swappable, and copyable/movable These concepts provide a standardized way to express common requirements, promoting consistency across codebases [30].</li> </ul>"},{"location":"programming/cpp/cpp20/#modules","title":"Modules","text":"<p>Modules in C++20 offer a modern alternative to traditional header files, addressing many of their limitations and improving compilation times and code organization.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_1","title":"Basic Usage","text":"<p>A module is a collection of declarations and definitions that can be imported by other translation units. To create a module, you define it in a source file and specify its exports:</p> <pre><code>// mymodule.cpp\nexport module MyModule;\nexport int add(int a, int b) {\n    return a + b;\n}\n</code></pre> <p>Other files can then import this module:</p> <pre><code>// main.cpp\nimport MyModule;\nint main() {\n    int result = add(3, 4); // Uses the function from MyModule\n    return 0;\n}\n</code></pre> <p>This approach eliminates the need for header files and reduces redundant inclusions [22].</p>"},{"location":"programming/cpp/cpp20/#submodules-and-partitions","title":"Submodules and Partitions","text":"<p>Modules can be organized into submodules for better structure:</p> <pre><code>// mymodule/algorithm.cpp\nexport module MyModule::algorithm;\nexport int find_max(int* array, size_t size) {\n    // Implementation\n}\n</code></pre> <p>And imported selectively:</p> <pre><code>import MyModule::algorithm; // Only imports the algorithm submodule\n</code></pre> <p>This selective import capability helps manage dependencies and improve compilation efficiency [23].</p>"},{"location":"programming/cpp/cpp20/#compilation-process","title":"Compilation Process","text":"<p>Modules require a two-step compilation process:</p> <ol> <li>First, the module is compiled into a Binary Module Interface (BMI) file</li> <li>Then, the BMI file is used when compiling other files that import the module This separation of interface from implementation significantly reduces compilation time, especially in large projects [24].</li> </ol>"},{"location":"programming/cpp/cpp20/#coroutines","title":"Coroutines","text":"<p>Coroutines in C++20 provide a powerful way to write asynchronous code that's both efficient and easy to read. A coroutine is a function that can suspend execution to be resumed later, making it ideal for handling I/O operations, animations, or any scenario requiring cooperative multitasking.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_2","title":"Basic Usage","text":"<p>A simple coroutine can be defined using the <code>co_await</code>, <code>co_yield</code>, and <code>co_return</code> keywords:</p> <pre><code>async_task&lt;int&gt; computeAsync() {\n    // Simulate some computation\n    co_await std::chrono::milliseconds(100);\n    return 42;\n}\n</code></pre> <p>The caller can then await the result:</p> <pre><code>async_task&lt;void&gt; main() {\n    int result = co_await computeAsync();\n    std::cout &lt;&lt; \"Result: \" &lt;&lt; result &lt;&lt; std::endl;\n}\n</code></pre> <p>This syntax closely resembles the way synchronous code is written, making it easier to understand and maintain [39].</p>"},{"location":"programming/cpp/cpp20/#stackless-execution","title":"Stackless Execution","text":"<p>One of the key features of coroutines is that they are stackless: they suspend execution by returning to the caller. This means they don't consume stack space while waiting for asynchronous operations to complete, making them more efficient than traditional threading approaches [39].</p>"},{"location":"programming/cpp/cpp20/#use-cases","title":"Use Cases","text":"<p>Coroutines are particularly useful in scenarios where:</p> <ul> <li>You need to perform multiple I/O operations concurrently</li> <li>You're implementing complex state machines</li> <li>You're working with real-time systems that require deterministic resource usage</li> <li>You're developing games or simulations that need to manage multiple simultaneous processes Their ability to suspend and resume execution makes them a perfect fit for these kinds of applications [37].</li> </ul>"},{"location":"programming/cpp/cpp20/#ranges","title":"Ranges","text":"<p>The Ranges library in C++20 revolutionizes how we work with collections of data, providing a modern, consistent, and flexible way to perform operations on sequences.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_3","title":"Basic Usage","text":"<p>The Ranges library introduces the concept of Views, which are a new composable approach to algorithms. Views allow you to chain operations together in a way that's both intuitive and efficient:</p> <pre><code>#include &lt;ranges&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nint main() {\n    std::vector&lt;int&gt; v = {1, 2, 3, 4, 5};\n\n    // Use ranges to filter even numbers and multiply by 2\n    auto transformed = v | std::views::filter([](int x) { return x % 2 != 0; })\n                         | std::views::transform([](int x) { return x * 2; });\n\n    // Print the results\n    for (int num : transformed) {\n        std::cout &lt;&lt; num &lt;&lt; \" \";\n    }\n    // Output: 2 6 10\n}\n</code></pre> <p>This example demonstrates how ranges allow you to create a pipeline of operations that's both readable and efficient [33].</p>"},{"location":"programming/cpp/cpp20/#lazy-evaluation","title":"Lazy Evaluation","text":"<p>One of the key features of ranges is lazy evaluation. Operations on ranges are not executed immediately but are deferred until the results are actually needed. This allows for significant performance improvements, especially when working with large datasets or complex transformations [34].</p>"},{"location":"programming/cpp/cpp20/#range-adapters","title":"Range Adapters","text":"<p>Ranges come with a variety of built-in adapters that make common operations straightforward:</p> <pre><code>// Reversing a range\nfor (int i : v | std::views::reverse) {\n    std::cout &lt;&lt; i &lt;&lt; \" \";\n}\n// Output: 5 4 3 2 1\n// Converting to a different type\nauto doubles = v | std::views::transform([](int x) { return static_cast&lt;double&gt;(x); });\n</code></pre> <p>These adapters can be combined in any way, allowing for expressive and concise code [36].</p>"},{"location":"programming/cpp/cpp20/#three-way-comparison","title":"Three-Way Comparison","text":"<p>The three-way comparison operator <code>&lt;=&gt;</code> in C++20 provides a concise and efficient way to compare objects, returning one of three possible outcomes: less than, equal to, or greater than.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_4","title":"Basic Usage","text":"<p>The three-way comparison operator is often just called the spaceship operator due to its appearance. It compares two items and describes the result [43]:</p> <pre><code>struct Point {\n    int x, y;\n\n    // Define the three-way comparison\n    auto operator&lt;=&gt;(const Point&amp; other) const = default;\n};\nPoint p1{1, 2};\nPoint p2{3, 4};\nstd::cout &lt;&lt; (p1 &lt;=&gt; p2) &lt;&lt; std::endl; // Output: -1 (p1 is less than p2)\n</code></pre> <p>The result of the <code>&lt;=&gt;</code> operator is of type <code>std::strong_ordering</code>, which can be one of:</p> <ul> <li><code>-1</code> (less than)</li> <li><code>0</code> (equal to)</li> <li><code>1</code> (greater than)</li> </ul>"},{"location":"programming/cpp/cpp20/#default-comparisons","title":"Default Comparisons","text":"<p>C++20 also introduces default comparison operators for classes. If you don't define any comparison operators for your class, the compiler can generate them for you:</p> <pre><code>struct Person {\n    std::string name;\n    int age;\n};\nPerson p1{\"Alice\", 30};\nPerson p2{\"Bob\", 25};\nif (p1 &gt; p2) {\n    // This comparison works without explicitly defining operator&gt;\n}\n</code></pre> <p>Comparison operator functions can be explicitly defaulted to request the compiler to generate the corresponding default comparison for a class [44].</p>"},{"location":"programming/cpp/cpp20/#use-cases_1","title":"Use Cases","text":"<p>The three-way comparison operator is particularly useful in:</p> <ul> <li>Custom data structures where natural ordering is needed</li> <li>Sorting algorithms</li> <li>Binary search operations</li> <li>Any scenario where you need to determine the relative order of two objects It provides a single point of definition for comparison logic, reducing code duplication and maintaining consistency across different comparison operations [42].</li> </ul>"},{"location":"programming/cpp/cpp20/#lambda-improvements","title":"Lambda Improvements","text":"<p>C++20 significantly enhances lambda expressions, making them more powerful and flexible. These improvements bring lambdas closer to manually defined function objects while maintaining their conciseness and convenience.</p>"},{"location":"programming/cpp/cpp20/#template-parameters-for-lambdas","title":"Template Parameters for Lambdas","text":"<p>One of the most notable improvements is the ability to define template parameters for lambdas:</p> <pre><code>auto add = [](auto a, auto b) { return a + b; }; // Pre-C++20\n// C++20 allows explicit template parameters\nauto add = [](typename T, T a, T b) { return a + b; };\n</code></pre> <p>This explicit typing can improve code clarity and performance, especially when working with complex types or when the lambda is used in contexts where type deduction isn't sufficient [46].</p>"},{"location":"programming/cpp/cpp20/#capture-expressions","title":"Capture Expressions","text":"<p>C++20 introduces \"pack init-capture\", which provides a concise and intuitive way to capture parameter packs in lambda expressions:</p> <pre><code>template&lt;typename... Args&gt;\nvoid example(Args... args) {\n    // C++17 way\n    auto f1 = [&amp;, args...]() { /* use args... */ };\n\n    // C++20 way\n    auto f2 = [args...]() { /* use args... */ };\n}\n</code></pre> <p>This syntax simplifies the capture of parameter packs, making the code cleaner and less error-prone [48].</p>"},{"location":"programming/cpp/cpp20/#classic-syntax-for-lambda-definitions","title":"Classic Syntax for Lambda Definitions","text":"<p>Another enhancement in C++20 is the introduction of a classic syntax to define lambdas, bringing them even closer to manually defined function objects:</p> <pre><code>auto f = [](int x) { return x * 2; }; // Traditional lambda syntax\n// C++20 alternative syntax\nauto f = [] (int x) -&gt; int { return x * 2; };\n</code></pre> <p>This syntax makes lambda definitions more explicit and consistent with function declarations [47].</p>"},{"location":"programming/cpp/cpp20/#constexpr-and-consteval","title":"Constexpr and Consteval","text":"<p>C++20 enhances compile-time programming with the introduction of <code>consteval</code> functions, which complement the existing <code>constexpr</code> functions.</p>"},{"location":"programming/cpp/cpp20/#constexpr-functions","title":"Constexpr Functions","text":"<p>A <code>constexpr</code> function can be executed at compile time when used in a <code>constexpr</code> context, or it can be executed at runtime:</p> <pre><code>constexpr int square(int x) {\n    return x * x;\n}\nint main() {\n    constexpr int a = square(5); // Compile-time evaluation\n    int b = square(5);           // Run-time evaluation\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/cpp20/#consteval-functions","title":"Consteval Functions","text":"<p>A <code>consteval</code> function must run at compile time when used in a <code>constexpr</code> context, or the result is requested at compile time:</p> <pre><code>consteval int square(int x) {\n    return x * x;\n}\nint main() {\n    constexpr int a = square(5); // Must compile-time evaluate\n    // int b = square(5);        // Compile-time error, cannot run at runtime\n    return 0;\n}\n</code></pre> <p>This distinction is important when working with functions that have side effects or require compile-time guarantees [55].</p>"},{"location":"programming/cpp/cpp20/#exception-handling-in-constexpr","title":"Exception Handling in Constexpr","text":"<p>C++20 also improves <code>constexpr</code> functions by allowing try-catch blocks:</p> <pre><code>constexpr int safeDivide(int a, int b) {\n    try {\n        if (b == 0) throw std::runtime_error(\"Division by zero\");\n        return a / b;\n    } catch (const std::runtime_error&amp; e) {\n        return 0;\n    }\n}\n</code></pre> <p>In this example, the exception-handling structures are ignored in constant expressions, but the function can still return a valid value even when division by zero occurs [57].</p>"},{"location":"programming/cpp/cpp20/#volatile-and-other-small-improvements","title":"Volatile and Other Small Improvements","text":"<p>C++20 includes several smaller but useful improvements to the language, including changes to how <code>volatile</code> is handled and other quality-of-life enhancements.</p>"},{"location":"programming/cpp/cpp20/#volatile-qualifier","title":"Volatile Qualifier","text":"<p>C++20 makes several changes to the <code>volatile</code> qualifier to make it more useful and less error-prone:</p> <ul> <li>Access to volatile objects is now sequenced</li> <li>Consecutive accesses to volatile objects cannot be reordered</li> <li>The compiler must respect the volatility of references These changes make <code>volatile</code> more predictable and easier to use in concurrent programming scenarios [58].</li> </ul>"},{"location":"programming/cpp/cpp20/#other-language-improvements","title":"Other Language Improvements","text":"<p>C++20 introduces numerous smaller features and improvements related to <code>constexpr</code>, union, and other language constructs. With around 70 language features and 80 library changes in C++20, there's a lot to explore beyond the major features [59].</p>"},{"location":"programming/cpp/cpp20/#standard-library-features","title":"Standard Library Features","text":""},{"location":"programming/cpp/cpp20/#formatting-library","title":"Formatting Library","text":"<p>The formatting library in C++20 provides a safe and extensible alternative to the <code>printf</code> family of functions, complementing the existing C++ I/O facilities.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_5","title":"Basic Usage","text":"<p>The <code>std::format</code> function allows you to format arguments according to a format string and return the result as a string:</p> <pre><code>#include &lt;format&gt;\n#include &lt;string&gt;\n#include &lt;memory&gt;\n#include &lt;chrono&gt;\nint main() {\n    std::string name = \"Alice\";\n    int age = 30;\n    double height = 1.75;\n\n    // Format a string with multiple arguments\n    std::string greeting = std::format(\"Hello, {}! You are {} years old and {:.2f} meters tall.\", name, age, height);\n\n    // Format a string with named arguments (C++23)\n    std::string farewell = std::format(\"Goodbye, {name}! You will be missed.\", std::make_format_args(name=name));\n\n    // Format a string with localization\n    std::string number = std::format(std::locale(\"en_US.UTF-8\"), \"{0,number} people attended the event.\", 1234);\n\n    // Format a string with custom types\n    std::unique_ptr&lt;int&gt; ptr = std::make_unique&lt;int&gt;(42);\n    std::string ptr_str = std::format(\"Pointer value: {}\", ptr);\n\n    // Format a string with time and date\n    auto now = std::chrono::system_clock::now();\n    std::string time_str = std::format(\"{:%H:%M:%S}\", now);\n\n    return 0;\n}\n</code></pre> <p>The format specifier allows you to specify the width, precision, and type of the value, providing fine-grained control over how data is presented [61].</p>"},{"location":"programming/cpp/cpp20/#format-string-syntax","title":"Format String Syntax","text":"<p>The format string uses placeholders marked by curly braces <code>{}</code>, with optional format specifications:</p> <pre><code>{[argument_index][,alignment][:format_spec]}\n</code></pre> <p>For example:</p> <ul> <li><code>{}</code> - Simple placeholder with default formatting</li> <li><code>{0:d}</code> - Formats the first argument as a decimal integer</li> <li><code>{-1}</code> - Formats the last argument with default formatting</li> <li><code>{name}</code> - Formats the argument named \"name\" (C++23) The format specifications cover a wide range of types, including:</li> <li><code>d</code> - Decimal integer</li> <li><code>x</code> - Hexadecimal integer</li> <li><code>f</code> - Fixed-point floating-point</li> <li><code>e</code> - Exponential floating-point</li> <li><code>s</code> - String</li> <li><code>c</code> - Character</li> <li><code>p</code> - Pointer</li> <li><code>b</code> - Boolean And many more, providing comprehensive formatting capabilities [64].</li> </ul>"},{"location":"programming/cpp/cpp20/#string-views","title":"String Views","text":"<p>The <code>std::string_view</code> class template in C++17 (and enhanced in C++20/23) provides an efficient way to work with string data without owning it, offering performance benefits and reducing unnecessary string copies.</p>"},{"location":"programming/cpp/cpp20/#basic-usage_6","title":"Basic Usage","text":"<p><code>std::string_view</code> can be used to optimize both performance and readability in code sections that handle strings:</p> <pre><code>#include &lt;string&gt;\n#include &lt;string_view&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nvoid processString(const std::string&amp; str) {\n    std::string_view view(str);\n\n    // Search for a substring\n    size_t pos = view.find(\"example\");\n    if (pos != std::string_view::npos) {\n        std::cout &lt;&lt; \"Found at position: \" &lt;&lt; pos &lt;&lt; std::endl;\n\n        // Extract a substring\n        std::string_view substring = view.substr(pos, 7);\n        std::cout &lt;&lt; \"Substring: \" &lt;&lt; substring &lt;&lt; std::endl;\n    }\n\n    // Iterate over characters\n    for (char c : view) {\n        std::cout &lt;&lt; c &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n}\nint main() {\n    // Create a string view from a literal\n    std::string_view view1 = \"Hello, World!\";\n\n    // Create a string view from a std::string\n    std::string str = \"Hello, World!\";\n    std::string_view view2(str);\n\n    // Create a string view from a character array\n    char arr[] = \"Hello, World!\";\n    std::string_view view3(arr, 13);\n\n    return 0;\n}\n</code></pre> <p><code>std::string_view</code> can be used to optimize both performance and readability in code sections which handle strings. However, it could also cause unwanted behavior if not used correctly [69].</p>"},{"location":"programming/cpp/cpp20/#six-handy-operations-for-string-processing","title":"Six Handy Operations for String Processing","text":"<p>C++20 and C++23 introduce six practical string processing operations that enhance the capabilities of string views:</p> <ol> <li>Concatenation: Efficiently concatenate multiple string views</li> <li>Join: Join a range of string views with a delimiter</li> <li>Transform: Apply a transformation function to each character</li> <li>Replace Substring: Replace occurrences of a substring with another string</li> <li>Split: Split a string view into parts based on a delimiter</li> <li>Partition: Partition a string view into substrings based on a predicate These features represent an evolution in string processing, making it more efficient and expressive [66].</li> </ol>"},{"location":"programming/cpp/cpp20/#string-view-adapters","title":"String View Adapters","text":"<p>C++20 introduces several string view adapters that provide specialized views of string data:</p> <pre><code>#include &lt;string&gt;\n#include &lt;string_view&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\nint main() {\n    std::string str = \"Hello, World!\";\n\n    // Create a const string view from the string\n    std::string_view view(str);\n\n    // Create a mutable string view (C++20)\n    std::stringMutableView mview(str);\n\n    // Create a reverse string view\n    std::string_view reverse_view(str.rbegin(), str.rend());\n\n    // Create a transformed string view\n    auto upper_view = std::views::all(str) | std::views::transform([](char c) { return toupper(c); });\n\n    // Create a filtered string view\n    auto vowels_view = std::views::all(str) | std::views::filter([](char c) { return std::string(\"aeiouAEIOU\").find(c) != std::string::npos; });\n\n    return 0;\n}\n</code></pre> <p>These adapters allow you to work with different aspects of string data without modifying the original string, promoting efficient and expressive string processing [68].</p>"},{"location":"programming/cpp/cpp20/#smart-pointers","title":"Smart Pointers","text":"<p>C++20 continues to evolve smart pointers, providing more capabilities and use cases for these essential resource management tools.</p>"},{"location":"programming/cpp/cpp20/#shared-pointers","title":"Shared Pointers","text":"<p><code>std::shared_ptr</code> is a smart pointer that owns (is responsible for) and manages another object via a pointer and subsequently disposes of that object. One of its key features is reference counting, which allows multiple shared pointers to share ownership of the same object:</p> <pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\nint main() {\n    // Create a shared_ptr\n    std::shared_ptr&lt;int&gt; ptr1 = std::make_shared&lt;int&gt;(42);\n\n    // Copy the shared_ptr (share ownership)\n    std::shared_ptr&lt;int&gt; ptr2 = ptr1;\n\n    // The use_count() method returns the number of shared owners\n    std::cout &lt;&lt; \"Use count: \" &lt;&lt; ptr1.use_count() &lt;&lt; std::endl; // Output: 2\n\n    // The get() method returns the raw pointer\n    std::cout &lt;&lt; \"Value: \" &lt;&lt; *ptr1.get() &lt;&lt; std::endl; // Output: 42\n\n    // Access the managed object using operator*\n    std::cout &lt;&lt; \"Value: \" &lt;&lt; *ptr1 &lt;&lt; std::endl; // Output: 42\n\n    // Check if a shared_ptr owns an object\n    if (ptr1) {\n        std::cout &lt;&lt; \"ptr1 owns an object\" &lt;&lt; std::endl;\n    }\n\n    // Reset the shared_ptr (decrement the use count)\n    ptr2.reset();\n\n    // The use_count() method now returns 1\n    std::cout &lt;&lt; \"Use count: \" &lt;&lt; ptr1.use_count() &lt;&lt; std::endl; // Output: 1\n\n    return 0;\n}\n</code></pre> <p>A shared_ptr can share ownership of an object while storing a pointer to another object. This feature can be used to point to member objects [52].</p>"},{"location":"programming/cpp/cpp20/#unique-pointers","title":"Unique Pointers","text":"<p><code>std::unique_ptr</code> is a smart pointer that owns (is responsible for) and manages another object via a pointer and subsequently disposes of that object. Unlike <code>std::shared_ptr</code>, a <code>std::unique_ptr</code> provides exclusive ownership:</p> <pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\nint main() {\n    // Create a unique_ptr\n    std::unique_ptr&lt;int&gt; ptr = std::make_unique&lt;int&gt;(42);\n\n    // Access the managed object using operator*\n    std::cout &lt;&lt; \"Value: \" &lt;&lt; *ptr &lt;&lt; std::endl; // Output: 42\n\n    // Move the unique_ptr (transfer ownership)\n    std::unique_ptr&lt;int&gt; ptr2 = std::move(ptr);\n\n    // The original ptr is now empty\n    if (!ptr) {\n        std::cout &lt;&lt; \"ptr does not own an object\" &lt;&lt; std::endl;\n    }\n\n    // Use the moved ptr2\n    std::cout &lt;&lt; \"Value: \" &lt;&lt; *ptr2 &lt;&lt; std::endl; // Output: 42\n\n    // Reset the unique_ptr\n    ptr2.reset();\n\n    // The unique_ptr no longer owns an object\n    if (ptr2) {\n        std::cout &lt;&lt; \"ptr2 owns an object\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"ptr2 does not own an object\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p><code>std::unique_ptr</code> is a smart pointer that owns (is responsible for) and manages another object via a pointer and subsequently disposes of that object [53].</p>"},{"location":"programming/cpp/cpp20/#raw-pointer-conversions","title":"Raw Pointer Conversions","text":"<p>C++20 introduces new ways to convert between raw pointers and smart pointers, enhancing flexibility and safety:</p> <pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\nint main() {\n    // Create a raw pointer\n    int* raw_ptr = new int(42);\n\n    // Adopt the raw pointer into a unique_ptr\n    std::unique_ptr&lt;int&gt; ptr(raw_ptr);\n\n    // The raw pointer is now managed by the unique_ptr\n    // Deleting it would cause a double-free error\n    // delete raw_ptr; // Unsafe\n\n    // Access the managed object\n    std::cout &lt;&lt; \"Value: \" &lt;&lt; *ptr &lt;&lt; std::endl; // Output: 42\n\n    return 0;\n}\n</code></pre> <p>This capability allows you to safely manage memory that was previously allocated with raw pointers, reducing the risk of memory leaks and double deletions.</p>"},{"location":"programming/cpp/cpp20/#smart-pointer-use-cases","title":"Smart Pointer Use Cases","text":"<p>Smart pointers are particularly useful in scenarios where:</p> <ul> <li>You need to manage the lifetime of dynamically allocated objects</li> <li>You want to avoid memory leaks and double deletions</li> <li>You're working with complex data structures that require shared ownership</li> <li>You're implementing resource management for objects that are expensive to copy</li> <li>You need to manage resources other than memory, such as file handles or network connections By using smart pointers, you can write safer and more maintainable code, reducing the risk of resource leaks and dangling references.</li> </ul>"},{"location":"programming/cpp/cpp20/#c20-compiler-support","title":"C++20 Compiler Support","text":""},{"location":"programming/cpp/cpp20/#compiler-support-overview","title":"Compiler Support Overview","text":"<p>C++20 introduces numerous new features and language extensions, and compiler support varies across different compilers. Understanding which features are supported by your compiler is crucial for effective C++20 development.</p>"},{"location":"programming/cpp/cpp20/#major-compiler-support","title":"Major Compiler Support","text":"<p>Different compilers implement C++20 features at different rates. The following table provides an overview of C++20 core language features and their support status in major compilers:</p> Feature GCC Clang MSVC Intel Access checking on specializations Yes Yes Yes Yes Default constructible and assignable stateless lambdas Yes Yes Yes Yes Designated initializers Partial Partial Partial Partial Lambda parameters Yes Yes Yes Yes Modules Experimental Experimental Yes No Ranges Yes Yes Yes Partial Coroutines Yes Yes Yes No Concepts Yes Yes Yes No This table is based on the official compiler support documentation for C++20 [13]."},{"location":"programming/cpp/cpp20/#compiler-options","title":"Compiler Options","text":"<p>To enable C++20 features in your compiler, you typically need to specify the appropriate language standard option:</p> <ul> <li>GCC and Clang: Use <code>-std=c++20</code></li> <li>MSVC: Use <code>/std:c++20</code> or <code>/Qstd:c++20</code></li> <li>Intel: Use <code>-std=c++20</code> or <code>/Qstd=c++20</code> Using these options ensures that your compiler recognizes and correctly processes C++20 syntax and features [16].</li> </ul>"},{"location":"programming/cpp/cpp20/#migration-considerations","title":"Migration Considerations","text":"<p>Moving to C++20 from earlier C++ standards requires careful consideration of several factors to ensure a smooth transition and maximize the benefits of the new features.</p>"},{"location":"programming/cpp/cpp20/#key-migration-steps","title":"Key Migration Steps","text":"<p>Here are some recommended steps for migrating to C++20:</p> <ol> <li>Update your build system: Ensure your build system supports the C++20 standard and the appropriate compiler options.</li> <li>Identify compiler support: Determine which C++20 features are supported by your compiler and plan accordingly.</li> <li>Replace deprecated features: Identify and replace any deprecated C++ features in your codebase with their modern C++20 equivalents.</li> <li>Adopt new idioms: Update your coding practices to take advantage of C++20's new features and idioms.</li> <li>Test thoroughly: Conduct thorough testing to ensure that your migrated code behaves as expected.</li> </ol>"},{"location":"programming/cpp/cpp20/#migration-challenges","title":"Migration Challenges","text":"<p>Several challenges may arise during the migration process:</p> <ul> <li>Feature completeness: Not all C++20 features are fully implemented in all compilers.</li> <li>Library compatibility: Some libraries may not yet be fully compatible with C++20.</li> <li>Learning curve: Developers may need time to become familiar with C++20's new features and best practices.</li> <li>Toolchain support: Development tools, IDEs, and static analyzers may not fully support C++20 initially.</li> <li>Performance considerations: Some C++20 features may have different performance characteristics than their C++17 counterparts.</li> </ul>"},{"location":"programming/cpp/cpp20/#migration-best-practices","title":"Migration Best Practices","text":"<p>To ensure a successful migration to C++20, consider the following best practices:</p> <ul> <li>Start with a small project: Migrate a small, well-contained project first to gain experience with C++20 in your environment.</li> <li>Use feature branches: Create feature branches for C++20 migrations to isolate changes and make it easier to roll back if necessary.</li> <li>Implement incrementally: Introduce C++20 features one at a time rather than attempting a complete migration in one step.</li> <li>Leverage gradual adoption: Use compiler warnings and options to gradually adopt new C++20 practices.</li> <li>Document changes: Keep detailed documentation of the changes made during the migration process for future reference.</li> <li>Seek community support: Engage with the C++ community for guidance and best practices related to C++20 adoption. By following these steps and considerations, you can successfully migrate your codebase to C++20 and start taking advantage of its powerful new features while minimizing disruption and risk.</li> </ul>"},{"location":"programming/cpp/cpp20/#conclusion","title":"Conclusion","text":"<p>C++20 represents a significant advancement in the C++ programming language, introducing numerous new features and improvements that enhance both the language's expressiveness and its efficiency. From the revolutionary concepts and modules to the powerful coroutines and ranges, C++20 provides developers with new ways to write safer, more maintainable, and more efficient code. The new three-way comparison operator simplifies object comparison, while improved lambdas make anonymous functions more powerful and flexible. The formatting library offers a safe and extensible alternative to traditional string formatting, and string views provide efficient ways to work with string data. With its comprehensive set of features, C++20 continues to evolve the language while maintaining backward compatibility, allowing developers to gradually adopt new features and practices. As compiler support continues to mature, C++20 will become an essential tool for modern C++ development, enabling developers to write better code faster and with more confidence. By understanding and applying the principles and techniques outlined in this tutorial, you can start leveraging the power of C++20 in your own projects, taking advantage of its modern features to write cleaner, safer, and more efficient code.</p>"},{"location":"programming/cpp/cpp20/#references","title":"References","text":"<p>[13] Compiler support for C++20 - cppreference.com. https://en.cppreference.com/w/cpp/compiler_support/20. [16] C++20 Features Supported by Intel\u00ae C++ Compiler. https://www.intel.com/content/www/us/en/developer/articles/technical/c20-features-supported-by-intel-cpp-compiler.html. [18] Constraints and concepts (since C++20) - cppreference.com. https://en.cppreference.com/w/cpp/language/constraints. [22] Named modules tutorial in C++ - Learn Microsoft. https://learn.microsoft.com/en-us/cpp/cpp/tutorial-named-modules-cpp?view=msvc-170. [23] C++20 Modules | A Practical Guide - StudyPlan.dev. https://www.studyplan.dev/pro-cpp/modules. [24] C++ 20 Modules \u200b\u5c1d\u9c9c\u200b - Fing's Blog. https://blog.imfing.com/2020/06/cpp-20-modules-hello-world/. [27] C++20 Concepts - a Quick Introduction - C++ Stories. https://www.cppstories.com/2021/concepts-intro/. [30] C++20 Concept | Nihil. https://nihil.cc/posts/cpp20_concept/. [33] C++20 Ranges \u2014 Complete Guide | ITNEXT. https://itnext.io/c-20-ranges-complete-guide-4d26e3511db0. [34] C++ 20 \u200b\u65b0\u200b\u7279\u6027\u200branges \u200b\u7cbe\u8bb2\u200b - \u200b\u77e5\u4e4e\u200b\u4e13\u680f\u200b. https://zhuanlan.zhihu.com/p/600126585. [36] \u200b\u6d45\u8c08\u200bc++20 ranges \u200b\u7684\u200b\u7528\u6cd5\u200b- \u200b\u849f\u200b\u9171\u200b - \u200b\u535a\u5ba2\u56ed\u200b. https://www.cnblogs.com/bxjz/p/ranges.html. [37] My tutorial and take on C++20 coroutines. https://www.scs.stanford.edu/~dm/blog/c++-coroutines.html. [39] Coroutines (C++20) - cppreference.com. https://en.cppreference.com/w/cpp/language/coroutines. [42] C++20: The Three-Way Comparison Operator - Modernes C++. https://www.modernescpp.com/index.php/c-20-the-three-way-comparison-operator/. [43] How can I synthesize a C++20 three-way comparison from two-way .... https://devblogs.microsoft.com/oldnewthing/20220516-52/?p=106661. [44] Default comparisons (since C++20) - cppreference.com. https://en.cppreference.com/w/cpp/language/default_comparisons. [46] More Powerful Lambdas with C++20 \u2013 MC++ BLOG - Modernes C++. https://www.modernescpp.com/index.php/more-powerful-lambdas-with-c-20/. [47] The Evolutions of Lambdas in C++14, C++17 and C++20 - Fluent C++. https://www.fluentcpp.com/2021/12/13/the-evolutions-of-lambdas-in-c14-c17-and-c20/. [48] \u3010C++ 20 \u200b\u65b0\u200b\u7279\u6027\u200b\u3011\u200b\u53c2\u6570\u200b\u5305\u200b\u521d\u59cb\u5316\u200b\u6355\u83b7\u200b\u7684\u200b\u9b45\u529b\u200b(\"pack init-capture\" in C .... https://blog.csdn.net/qq_21438461/article/details/132974126. [52] std::shared_ptr - cppreference.com - C++ Reference. https://en.cppreference.com/w/cpp/memory/shared_ptr. [53] std::unique_ptr - cppreference.com. https://en.cppreference.com/w/cpp/memory/unique_ptr. [55] constexpr and consteval Functions in C++20 - Modernes C++. https://www.modernescpp.com/index.php/constexpr-and-consteval-functions-in-c-20/. [57] Exploring C++20 Features: Exception Handling in constexpr .... https://levelup.gitconnected.com/exploring-c-20-features-exception-handling-in-constexpr-functions-and-deprecation-of-comma-39c749cd64c9. [58] volatile and Other Small Improvements in C++20 - Modernes C++. https://www.modernescpp.com/index.php/volatile-and-other-small-improvements-in-c-20/. [59] 20 Smaller yet Handy C++20 Features - C++ Stories. https://www.cppstories.com/2022/20-smaller-cpp20-features/. [61] std::format - cppreference.com - C++ Reference. https://en.cppreference.com/w/cpp/utility/format/format. [64] The Formatting Library in C++20: The Format String - Modernes C++. https://www.modernescpp.com/index.php/the-formatting-library-in-c20-the-format-string/. [66] Six Handy Operations for String Processing in C++20/23 - C++ Stories. https://www.cppstories.com/2023/six-handy-ops-for-string-processing/. [68] String Views in C++ using std::string_view | A Practical Guide. https://www.studyplan.dev/pro-cpp/string-views. [69] The View of the String - Breaking Down std::string_view - CodeProject. https://www.codeproject.com/Articles/5359566/The-View-of-the-String-Breaking-Down-std-string-vi.</p>"},{"location":"programming/cpp/ctad/ctad/","title":"\u7c7b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\uff08CTAD\uff09\u200b\u6280\u672f\u200b\u6df1\u5ea6\u200b\u89e3\u6790\u200b\u4e0e\u200b\u5e94\u7528\u200b\u5b9e\u8df5\u200b\u6307\u5357","text":""},{"location":"programming/cpp/ctad/ctad/#_1","title":"\u7c7b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\u7684\u200b\u6838\u5fc3\u200b\u5de5\u4f5c\u200b\u539f\u7406","text":"<p>\u200b\u7c7b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\uff08CTAD\uff09\u200b\u662f\u200bC++17\u200b\u5f15\u5165\u200b\u7684\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u673a\u5236\u200b\uff0c\u200b\u5176\u200b\u6838\u5fc3\u200b\u5728\u4e8e\u200b\u5141\u8bb8\u200b\u7f16\u8bd1\u5668\u200b\u901a\u8fc7\u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u53cd\u5411\u200b\u63a8\u5bfc\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u3002\u200b\u8be5\u200b\u673a\u5236\u200b\u5305\u542b\u200b\u4e09\u4e2a\u200b\u5173\u952e\u200b\u5c42\u9762\u200b\uff1a</p> <p>\u200b\u6784\u9020\u200b\u51fd\u6570\u53c2\u6570\u200b\u7c7b\u578b\u200b\u6620\u5c04\u200b\uff1a</p> <pre><code>template &lt;typename T&gt;\nstruct DataWrapper {\n    T storage;\n    DataWrapper(const T&amp; init_val) : storage(init_val) {}\n};\n\nDataWrapper dw{5};  // T\u200b\u63a8\u5bfc\u200b\u4e3a\u200bint\nDataWrapper dw2{3.14}; // T\u200b\u63a8\u5bfc\u200b\u4e3a\u200bdouble\n</code></pre> <p>\u200b\u7f16\u8bd1\u5668\u200b\u901a\u8fc7\u200b\u6784\u9020\u200b\u51fd\u6570\u53c2\u6570\u200b<code>5</code>\u200b\u7684\u200b\u7c7b\u578b\u200b<code>int</code>\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b<code>T=int</code>\uff0c\u200b\u65e0\u9700\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b<code>DataWrapper&lt;int&gt;</code></p> <p>\u200b\u9690\u5f0f\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\u751f\u6210\u200b\u89c4\u5219\u200b\uff1a</p> <ul> <li>\u200b\u6bcf\u4e2a\u200b\u6784\u9020\u51fd\u6570\u200b\u751f\u6210\u200b\u5bf9\u5e94\u200b\u7684\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b</li> <li>\u200b\u751f\u6210\u200b\u89c4\u5219\u200b\uff1a<code>TemplateName(P1, P2...) -&gt; TemplateName&lt;T1, T2...&gt;</code></li> <li>\u200b\u793a\u4f8b\u200b\u5206\u6790\u200b\uff1a</li> </ul> <pre><code>template&lt;typename A, typename B&gt;\nstruct Pair {\n    Pair(A&amp;&amp;, B&amp;&amp;);  // \u200b\u751f\u6210\u200bPair(A, B) -&gt; Pair&lt;A, B&gt;\n    Pair(const A&amp;, B&amp;); // \u200b\u751f\u6210\u200bPair(const A&amp;, B&amp;) -&gt; Pair&lt;A, B&gt;\n};\n</code></pre> <p>\u200b\u663e\u5f0f\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\u7684\u200b\u4f18\u5148\u7ea7\u200b\u89c4\u5219\u200b\uff1a</p> <ul> <li>\u200b\u81ea\u5b9a\u4e49\u200b\u6307\u5357\u200b\u4f18\u5148\u7ea7\u200b\u9ad8\u4e8e\u200b\u9690\u5f0f\u200b\u751f\u6210\u200b</li> <li>\u200b\u793a\u4f8b\u200b\u573a\u666f\u200b\uff1a</li> </ul> <pre><code>template&lt;typename T&gt;\nstruct CustomBox {\n    CustomBox(T) {}\n};\n\n// \u200b\u81ea\u5b9a\u4e49\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\ntemplate&lt;typename T&gt; \nCustomBox(T) -&gt; CustomBox&lt;std::decay_t&lt;T&gt;&gt;;\n\nCustomBox cb1{5};     // \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u6307\u5357\u200b\uff0cT=int\nCustomBox cb2{\"text\"};// \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u6307\u5357\u200b\uff0cT=const char* =&gt; std::decay_t\u200b\u4e3a\u200bchar[5]\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_2","title":"\u63a8\u5bfc\u200b\u6307\u5357\u200b\u7684\u200b\u8bbe\u8ba1\u6a21\u5f0f\u200b\u4e0e\u200b\u5178\u578b\u200b\u5e94\u7528","text":""},{"location":"programming/cpp/ctad/ctad/#_3","title":"\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u5904\u7406\u200b\u6a21\u5f0f","text":"<p>\u200b\u89e3\u51b3\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u63a8\u5bfc\u200b\u4e3a\u200b<code>const char*</code>\u200b\u7684\u200b\u95ee\u9898\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nstruct StringHolder {\n    T content;\n    StringHolder(const T&amp; str) : content(str) {}\n};\n\n// \u200b\u7279\u5316\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\nStringHolder(const char*) -&gt; StringHolder&lt;std::string&gt;;\n\nStringHolder sh1{\"Hello\"};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bStringHolder&lt;std::string&gt;\nStringHolder sh2{L\"World\"}; // \u200b\u63a8\u5bfc\u200b\u5931\u8d25\u200b\uff0c\u200b\u9700\u200b\u989d\u5916\u200bwchar_t\u200b\u5904\u7406\u200b\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_4","title":"\u53ef\u53d8\u200b\u53c2\u6570\u200b\u6a21\u677f\u200b\u63a8\u5bfc\u200b\u6280\u5de7","text":"<p>\u200b\u5904\u7406\u200b\u53c2\u6570\u200b\u5305\u200b\u7684\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\uff1a</p> <pre><code>template&lt;typename... Ts&gt;\nstruct Tuple {\n    Tuple(Ts...);\n};\n\n// \u200b\u53c2\u6570\u200b\u5305\u200b\u5c55\u5f00\u200b\u63a8\u5bfc\u200b\nTuple t{1, 3.14, \"text\"};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bTuple&lt;int, double, const char*&gt;\n\n// \u200b\u7a7a\u200b\u53c2\u6570\u200b\u5305\u200b\u5904\u7406\u200b\ntemplate&lt;typename... Ts&gt;\nstruct OptionalTuple {\n    OptionalTuple(Ts...);\n    OptionalTuple() = default;\n};\n\nOptionalTuple ot1{};         // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bOptionalTuple&lt;&gt;\nOptionalTuple ot2{1, 2.0};   // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bOptionalTuple&lt;int, double&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_5","title":"\u7ee7\u627f\u200b\u4f53\u7cfb\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u7b56\u7565","text":"<p>\u200b\u5904\u7406\u200b\u6d3e\u751f\u7c7b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\uff1a</p> <pre><code>template&lt;typename BaseT&gt;\nclass BaseWrapper { /*...*/ };\n\ntemplate&lt;typename T&gt;\nclass DerivedWrapper : public BaseWrapper&lt;T&gt; {\npublic:\n    DerivedWrapper(T val) : BaseWrapper&lt;T&gt;(val) {}\n};\n\n// \u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\ntemplate&lt;typename T&gt;\nDerivedWrapper(T) -&gt; DerivedWrapper&lt;T&gt;;\n\nDerivedWrapper dw{5};  // \u200b\u6b63\u786e\u200b\u63a8\u5bfc\u200b\u4e3a\u200bDerivedWrapper&lt;int&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#ctad_1","title":"CTAD\u200b\u7684\u200b\u9650\u5236\u200b\u573a\u666f\u200b\u4e0e\u200b\u89e3\u51b3\u65b9\u6848","text":""},{"location":"programming/cpp/ctad/ctad/#_6","title":"\u975e\u200b\u9759\u6001\u200b\u6210\u5458\u200b\u521d\u59cb\u5316\u200b\u95ee\u9898","text":"<p>\u200b\u7c7b\u200b\u6210\u5458\u200b\u58f0\u660e\u200b\u65f6\u200b\u65e0\u6cd5\u200b\u8fdb\u884c\u200b\u6a21\u677f\u200b\u63a8\u5bfc\u200b\u7684\u200b\u6839\u672c\u539f\u56e0\u200b\uff1a</p> <ul> <li>C++\u200b\u6807\u51c6\u89c4\u5b9a\u200b\u975e\u200b\u9759\u6001\u200b\u6210\u5458\u200b\u521d\u59cb\u5316\u200b\u5fc5\u987b\u200b\u5b8c\u5168\u200b\u786e\u5b9a\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u89e3\u51b3\u65b9\u6848\u200b\u793a\u4f8b\u200b\uff1a</li> </ul> <pre><code>template&lt;typename T = int&gt;\nstruct DefaultConfig {\n    T value;\n    DefaultConfig(T v = T{}) : value(v) {}\n};\n\nclass Application {\n    DefaultConfig&lt;&gt; config;  // \u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200bint\u200b\u7c7b\u578b\u200b\n    // DefaultConfig config;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u65e0\u6cd5\u200b\u63a8\u5bfc\u200b\n};\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_7","title":"\u6784\u9020\u51fd\u6570\u200b\u6a21\u677f\u200b\u7684\u200b\u63a8\u5bfc\u200b\u9650\u5236","text":"<p>\u200b\u5904\u7406\u200b\u5e26\u200b\u6a21\u677f\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nstruct GenericContainer {\n    template&lt;typename U&gt;\n    GenericContainer(U&amp;&amp; init_val);\n};\n\n// \u200b\u5fc5\u987b\u200b\u663e\u5f0f\u200b\u58f0\u660e\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\ntemplate&lt;typename U&gt;\nGenericContainer(U&amp;&amp;) -&gt; GenericContainer&lt;std::decay_t&lt;U&gt;&gt;;\n\nGenericContainer gc1{5};    // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bGenericContainer&lt;int&gt;\nGenericContainer gc2{5.0};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bGenericContainer&lt;double&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_8","title":"\u5d4c\u5957\u200b\u6a21\u677f\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5904\u7406\u200b\u591a\u5c42\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nstruct Outer {\n    template&lt;typename U&gt;\n    struct Inner {\n        Inner(U&amp;&amp;);\n    };\n};\n\n// \u200b\u9700\u8981\u200b\u4e24\u5c42\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b\ntemplate&lt;typename T, typename U&gt;\nOuter&lt;T&gt;::Inner(U&amp;&amp;) -&gt; Outer&lt;T&gt;::Inner&lt;U&gt;;\n\nOuter&lt;int&gt;::Inner inner{5.0};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bOuter&lt;int&gt;::Inner&lt;double&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#ctad_2","title":"\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u7684\u200bCTAD\u200b\u5e94\u7528\u200b\u5b9e\u4f8b\u200b\u5206\u6790","text":""},{"location":"programming/cpp/ctad/ctad/#_9","title":"\u5bb9\u5668\u200b\u7c7b\u200b\u7684\u200b\u7b80\u5316\u200b\u58f0\u660e","text":"<p>\u200b\u5bf9\u6bd4\u200bC++17\u200b\u524d\u540e\u200b\u7684\u200b\u5bb9\u5668\u200b\u58f0\u660e\u200b\uff1a</p> <pre><code>// C++17\u200b\u524d\u200b\nstd::vector&lt;std::complex&lt;double&gt;&gt; data;\ndata.push_back(std::complex&lt;double&gt;(1.0, 2.0));\n\n// C++17\u200b\u540e\u200b\nstd::vector data{std::complex{1.0, 2.0}};  // \u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u4e3a\u200bvector&lt;complex&lt;double&gt;&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_10","title":"\u667a\u80fd\u200b\u6307\u9488\u200b\u7684\u200b\u6539\u8fdb\u200b\u7528\u6cd5","text":"<p>\u200b\u7b80\u5316\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u7684\u200b\u521b\u5efa\u200b\uff1a</p> <pre><code>// \u200b\u4f20\u7edf\u200b\u5de5\u5382\u200b\u51fd\u6570\u200b\u65b9\u5f0f\u200b\nauto p1 = std::make_shared&lt;std::mutex&gt;();\n\n// CTAD\u200b\u76f4\u63a5\u200b\u521d\u59cb\u5316\u200b\nstd::shared_ptr p2{new std::mutex};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bshared_ptr&lt;std::mutex&gt;\n\n// \u200b\u5904\u7406\u200b\u81ea\u5b9a\u4e49\u200b\u5220\u9664\u200b\u5668\u200b\nstruct FileDeleter { void operator()(FILE* f) { fclose(f); } };\nstd::unique_ptr file{fopen(\"data.txt\", \"r\")};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bunique_ptr&lt;FILE, FileDeleter&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_11","title":"\u7c7b\u578b\u200b\u64e6\u9664\u200b\u5bb9\u5668\u200b\u7684\u200b\u5e94\u7528","text":"<p>\u200b\u7ed3\u5408\u200bCTAD\u200b\u5b9e\u73b0\u200b\u66f4\u200b\u7b80\u6d01\u200b\u7684\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\uff1a</p> <pre><code>std::any data = 42;         // any\u200b\u63a8\u5bfc\u200b\u4e3a\u200bany\nstd::variant var = 3.14;    // variant\u200b\u63a8\u5bfc\u200b\u4e3a\u200bvariant&lt;double&gt;\nstd::optional opt = \"text\"; // optional\u200b\u63a8\u5bfc\u200b\u4e3a\u200boptional&lt;const char*&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_12","title":"\u5de5\u7a0b\u200b\u5b9e\u8df5\u200b\u4e2d\u200b\u7684\u200b\u5173\u952e\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/cpp/ctad/ctad/#_13","title":"\u6a21\u677f\u200b\u9ed8\u8ba4\u200b\u53c2\u6570\u200b\u8bbe\u8ba1\u200b\u7b56\u7565","text":"<p>\u200b\u5408\u7406\u200b\u8bbe\u7f6e\u200b\u9ed8\u8ba4\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u4ee5\u200b\u589e\u5f3a\u200b\u7075\u6d3b\u6027\u200b\uff1a</p> <pre><code>template&lt;typename T = int, size_t N = 10&gt;\nstruct Buffer {\n    T data[N];\n    Buffer() = default;\n    Buffer(std::initializer_list&lt;T&gt; init) { /*...*/ }\n};\n\nBuffer buf1;              // \u200b\u9ed8\u8ba4\u200bBuffer&lt;int, 10&gt;\nBuffer buf2{1.0, 2.0};    // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bBuffer&lt;double, 2&gt;\nBuffer&lt;float, 20&gt; buf3{}; // \u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u53c2\u6570\u200b\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_14","title":"\u8de8\u200b\u7248\u672c\u200b\u517c\u5bb9\u6027\u200b\u5904\u7406","text":"<p>\u200b\u5b9e\u73b0\u200b\u591a\u200b\u7248\u672c\u200bC++\u200b\u6807\u51c6\u200b\u7684\u200b\u517c\u5bb9\u200b\uff1a</p> <pre><code>#if __cplusplus &gt;= 201703L\n    #define CTAD_GUIDE(...) __VA_ARGS__\n#else\n    #define CTAD_GUIDE(...)\n#endif\n\ntemplate&lt;typename T&gt;\nstruct LegacyWrapper {\n    T value;\n    LegacyWrapper(T v) : value(v) {}\n};\n\nCTAD_GUIDE(\ntemplate&lt;typename T&gt; \nLegacyWrapper(T) -&gt; LegacyWrapper&lt;T&gt;;\n)\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_15","title":"\u8c03\u8bd5\u200b\u4e0e\u200b\u7c7b\u578b\u200b\u9a8c\u8bc1\u200b\u6280\u672f","text":"<p>\u200b\u786e\u4fdd\u200bCTAD\u200b\u63a8\u5bfc\u200b\u7ed3\u679c\u200b\u7b26\u5408\u200b\u9884\u671f\u200b\uff1a</p> <pre><code>template&lt;typename Expected, typename Actual&gt;\nvoid check_type() {\n    static_assert(std::is_same_v&lt;Expected, Actual&gt;, \n                 \"Type deduction mismatch!\");\n}\n\nauto vec = std::vector{1, 2, 3};\ncheck_type&lt;std::vector&lt;int&gt;, decltype(vec)&gt;();\n\nauto tpl = std::tuple{42, \"text\", 3.14};\ncheck_type&lt;std::tuple&lt;int, const char*, double&gt;, decltype(tpl)&gt;();\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_16","title":"\u9ad8\u7ea7\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u4e0e\u200b\u4f18\u5316\u200b\u6280\u5de7","text":""},{"location":"programming/cpp/ctad/ctad/#sfinae","title":"SFINAE\u200b\u7ea6\u675f\u200b\u63a8\u5bfc\u200b\u6307\u5357","text":"<p>\u200b\u7ed3\u5408\u200b\u7c7b\u578b\u200b\u7279\u5f81\u200b\u9650\u5236\u200b\u63a8\u5bfc\u200b\u8303\u56f4\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nstruct NumericVector {\n    template&lt;typename U, typename = std::enable_if_t&lt;std::is_arithmetic_v&lt;U&gt;&gt;&gt;\n    NumericVector(U init) {}\n};\n\ntemplate&lt;typename U&gt;\nNumericVector(U) -&gt; NumericVector&lt;std::decay_t&lt;U&gt;&gt;;\n\nNumericVector nv1{5};     // \u200b\u5408\u6cd5\u200b\nNumericVector nv2{\"text\"};// \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff1a\u200b\u4e0d\u200b\u6ee1\u8db3\u200bis_arithmetic\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_17","title":"\u79fb\u52a8\u200b\u8bed\u4e49\u200b\u4e0e\u200b\u5b8c\u7f8e\u200b\u8f6c\u53d1","text":"<p>\u200b\u4f18\u5316\u200b\u6784\u9020\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u53c2\u6570\u4f20\u9012\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nclass ForwardContainer {\n    T element;\npublic:\n    template&lt;typename U&gt;\n    ForwardContainer(U&amp;&amp; arg) : element(std::forward&lt;U&gt;(arg)) {}\n};\n\ntemplate&lt;typename U&gt;\nForwardContainer(U&amp;&amp;) -&gt; ForwardContainer&lt;std::decay_t&lt;U&gt;&gt;;\n\nForwardContainer fc1{std::string(\"test\")};  // \u200b\u79fb\u52a8\u200b\u6784\u9020\u200b\nstd::string s = \"data\";\nForwardContainer fc2{s};                   // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u200b\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#ctad_3","title":"\u5143\u200b\u7f16\u7a0b\u200b\u4e0e\u200bCTAD\u200b\u7ed3\u5408","text":"<p>\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8ba1\u7b97\u200b\u4e2d\u200b\u5e94\u7528\u200bCTAD\uff1a</p> <pre><code>template&lt;size_t N&gt;\nstruct FixedString {\n    char data[N+1];\n    constexpr FixedString(const char (&amp;str)[N]) {\n        std::copy_n(str, N, data);\n    }\n};\n\n// \u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\ntemplate&lt;size_t N&gt;\nFixedString(const char (&amp;)[N]) -&gt; FixedString&lt;N-1&gt;;\n\nconstexpr auto str = FixedString{\"Hello\"};  // \u200b\u63a8\u5bfc\u200b\u4e3a\u200bFixedString&lt;5&gt;\nstatic_assert(sizeof(str.data) == 6);\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_18","title":"\u6027\u80fd\u200b\u4f18\u5316\u200b\u4e0e\u200b\u8c03\u8bd5\u200b\u6280\u5de7","text":""},{"location":"programming/cpp/ctad/ctad/#_19","title":"\u7f16\u8bd1\u200b\u65f6\u200b\u5f00\u9500\u200b\u63a7\u5236","text":"<p>\u200b\u51cf\u5c11\u200b\u6a21\u677f\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u6570\u91cf\u200b\uff1a</p> <ul> <li>\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b\u9690\u5f0f\u200b\u63a8\u5bfc\u200b\u6307\u5357\u200b</li> <li>\u200b\u907f\u514d\u200b\u8fc7\u5ea6\u200b\u590d\u6742\u200b\u7684\u200b\u6307\u5357\u200b\u5d4c\u5957\u200b</li> <li>\u200b\u793a\u4f8b\u200b\u5bf9\u6bd4\u200b\uff1a</li> </ul> <pre><code>// \u200b\u4f4e\u6548\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u591a\u91cd\u200b\u6761\u4ef6\u200b\u63a8\u5bfc\u200b\ntemplate&lt;typename T&gt;\nstruct ComplexWrapper {\n    ComplexWrapper(T) {}\n    ComplexWrapper(T, int) {}\n    ComplexWrapper(T, double) {}\n};\n\n// \u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u7edf\u4e00\u200b\u63a5\u53e3\u200b\ntemplate&lt;typename T&gt;\nstruct EfficientWrapper {\n    template&lt;typename... Args&gt;\n    EfficientWrapper(Args&amp;&amp;... args) {}\n};\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_20","title":"\u8fd0\u884c\u200b\u65f6\u200b\u6027\u80fd\u200b\u4f18\u5316","text":"<p>\u200b\u786e\u4fdd\u200b\u63a8\u5bfc\u200b\u7ed3\u679c\u200b\u4e0d\u4f1a\u200b\u5f15\u5165\u200b\u989d\u5916\u200b\u5f00\u9500\u200b\uff1a</p> <pre><code>auto vec = std::vector{1, 2, 3};  // \u200b\u4e0e\u200b\u663e\u5f0f\u200b\u58f0\u660e\u200bvector&lt;int&gt;\u200b\u751f\u6210\u200b\u7684\u200b\u4ee3\u7801\u200b\u5b8c\u5168\u76f8\u540c\u200b\nauto tpl = std::tuple{1, 2.0};    // \u200b\u7b49\u4ef7\u200b\u4e8e\u200btuple&lt;int, double&gt;\n</code></pre>"},{"location":"programming/cpp/ctad/ctad/#_21","title":"\u8c03\u8bd5\u4fe1\u606f\u200b\u589e\u5f3a","text":"<p>\u200b\u5229\u7528\u200b\u7c7b\u578b\u200b\u7279\u5f81\u200b\u8f93\u51fa\u200b\u63a8\u5bfc\u200b\u7ed3\u679c\u200b\uff1a</p> <pre><code>template&lt;typename T&gt;\nvoid debug_type() {\n    std::cout &lt;&lt; typeid(T).name() &lt;&lt; std::endl;\n}\n\nauto complex_obj = std::vector{std::tuple{1, 3.14}};\ndebug_type&lt;decltype(complex_obj)&gt;();  // \u200b\u8f93\u51fa\u200b\u7c7b\u4f3c\u200bSt6vectorISt5tupleIJidEESaIS1_EE\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u6df1\u5165\u200b\u7406\u89e3\u200bCTAD\u200b\u7684\u200b\u5185\u90e8\u200b\u673a\u5236\u200b\u548c\u200b\u5e94\u7528\u200b\u6280\u5de7\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u6a21\u677f\u200b\u4ee3\u7801\u200b\u7684\u200b\u7b80\u6d01\u6027\u200b\u548c\u200b\u53ef\u7ef4\u62a4\u6027\u200b\u3002\u200b\u4f46\u200b\u5728\u200b\u5b9e\u9645\u200b\u5de5\u7a0b\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u9700\u8981\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u7684\u200b\u8fb9\u754c\u6761\u4ef6\u200b\uff0c\u200b\u7ed3\u5408\u200b\u9759\u6001\u200b\u65ad\u8a00\u200b\u548c\u200b\u7c7b\u578b\u200b\u7279\u5f81\u200b\u68c0\u67e5\u200b\u6765\u200b\u786e\u4fdd\u200b\u4ee3\u7801\u200b\u7684\u200b\u5065\u58ee\u6027\u200b\u3002\u200b\u968f\u7740\u200bC++20\u200b\u6982\u5ff5\u200b\u7684\u200b\u5f15\u5165\u200b\uff0cCTAD\u200b\u7684\u200b\u7c7b\u578b\u200b\u7ea6\u675f\u200b\u80fd\u529b\u200b\u5c06\u200b\u5f97\u5230\u200b\u8fdb\u4e00\u6b65\u200b\u52a0\u5f3a\u200b\uff0c\u200b\u4e3a\u200b\u6784\u5efa\u200b\u66f4\u200b\u5b89\u5168\u200b\u9ad8\u6548\u200b\u7684\u200b\u6a21\u677f\u200b\u7cfb\u7edf\u200b\u63d0\u4f9b\u200b\u65b0\u200b\u7684\u200b\u53ef\u80fd\u6027\u200b\u3002</p>"},{"location":"programming/cpp/noob/class-constructor/","title":"C++\u200b\u4e2d\u200b\u7684\u200b\"\u200b\u751f\u6b7b\u200b\u5927\u4e8b\u200b\"\uff1a\u200b\u6784\u9020\u200b\u4e0e\u6790\u6784\u200b\u51fd\u6570\u200b\u5b8c\u5168\u200b\u6307\u5357","text":""},{"location":"programming/cpp/noob/class-constructor/#1","title":"1. \u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u751f\u4e0e\u6b7b\u200b\"\uff1a\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u5728\u200bC++\u200b\u7684\u200b\u4e16\u754c\u200b\u91cc\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\"\u200b\u751f\u547d\u200b\u6545\u4e8b\u200b\"\uff0c\u200b\u800c\u200b\u6784\u9020\u51fd\u6570\u200b\u548c\u6790\u6784\u200b\u51fd\u6570\u200b\u5c31\u662f\u200b\u8fd9\u4e2a\u200b\u6545\u4e8b\u200b\u7684\u200b\"\u200b\u5f00\u7bc7\u200b\"\u200b\u548c\u200b\"\u200b\u7ed3\u5c3e\u200b\"\u3002</p> <ul> <li>\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u63a5\u751f\u5a46\u200b\"\uff0c\u200b\u8d1f\u8d23\u200b\u5c06\u200b\u5bf9\u8c61\u200b\u5e26\u5230\u200b\u8fd9\u4e2a\u200b\u4e16\u754c\u200b\u5e76\u200b\u521d\u59cb\u5316\u200b\u5b83\u200b\u7684\u200b\u6240\u6709\u200b\u5c5e\u6027\u200b\u3002\u200b\u5c31\u200b\u50cf\u200b\u7ed9\u200b\u65b0\u751f\u513f\u200b\u6d17\u6fa1\u200b\u3001\u200b\u7a7f\u8863\u670d\u200b\u4e00\u6837\u200b\uff01</li> <li>\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff1a\u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u544a\u522b\u4eea\u5f0f\u200b\u4e3b\u6301\u4eba\u200b\"\uff0c\u200b\u5f53\u200b\u5bf9\u8c61\u200b\u8981\u200b\"\u200b\u79bb\u5f00\u200b\u4eba\u4e16\u200b\"\u200b\u65f6\u200b\uff0c\u200b\u8d1f\u8d23\u200b\u6e05\u7406\u200b\u73b0\u573a\u200b\u5e76\u200b\u5f52\u8fd8\u200b\u5360\u7528\u200b\u7684\u200b\u8d44\u6e90\u200b\u3002\u200b\u5c31\u200b\u50cf\u200b\u9000\u200b\u623f\u524d\u200b\u8981\u200b\u786e\u4fdd\u200b\u623f\u95f4\u200b\u6574\u6d01\u200b\u4e00\u6837\u200b\uff01</li> </ul>"},{"location":"programming/cpp/noob/class-constructor/#2","title":"2. \u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u51fa\u751f\u8bc1\u660e\u200b\"","text":""},{"location":"programming/cpp/noob/class-constructor/#21","title":"2.1 \u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u7279\u70b9","text":"\u7279\u6027\u200b \u200b\u63cf\u8ff0\u200b \u200b\u51fd\u6570\u200b\u540d\u200b \u200b\u4e0e\u200b\u7c7b\u540d\u200b\u76f8\u540c\u200b\uff08\u200b\u5c31\u200b\u50cf\u200b\u4f60\u200b\u7684\u200b\u540d\u5b57\u200b\u548c\u200b\u59d3\u6c0f\u200b\u4e00\u6837\u200b\uff09 \u200b\u8fd4\u56de\u503c\u200b \u200b\u6ca1\u6709\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff08\u200b\u8fde\u200bvoid\u200b\u90fd\u200b\u4e0d\u662f\u200b\uff0c\u200b\u5c31\u662f\u200b\u8fd9\u4e48\u200b\u7279\u7acb\u72ec\u884c\u200b\uff09 \u200b\u91cd\u8f7d\u200b \u200b\u53ef\u4ee5\u200b\u6709\u200b\u591a\u4e2a\u200b\uff08\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7684\u200b\"\u200b\u51fa\u751f\u200b\u65b9\u5f0f\u200b\"\uff09 \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u5bf9\u8c61\u200b\u521b\u5efa\u200b\u65f6\u200b\u81ea\u52a8\u200b\u558a\u200b\u5b83\u200b\u51fa\u573a\u200b \u200b\u4f5c\u7528\u200b \u200b\u7ed9\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\"\u200b\u6d17\u793c\u200b\""},{"location":"programming/cpp/noob/class-constructor/#22","title":"2.2 \u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\"\u200b\u5bb6\u65cf\u200b\u6210\u5458\u200b\"","text":""},{"location":"programming/cpp/noob/class-constructor/#221","title":"2.2.1 \u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u7b80\u5355\u200b\u7c97\u66b4\u200b\u578b","text":"<p>\u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\u5c31\u200b\u50cf\u200b\u5feb\u9910\u5e97\u200b\u7684\u200b\"\u200b\u6807\u51c6\u200b\u5957\u9910\u200b\"\u2014\u2014\u200b\u4e0d\u7528\u200b\u70b9\u200b\uff0c\u200b\u76f4\u63a5\u200b\u7ed9\u200b\u4f60\u200b\u4e0a\u200b\uff01</p> <pre><code>class Student {\npublic:\n    // \u200b\u9ed8\u8ba4\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u4e0d\u200b\u6311\u98df\u200b\u578b\u200b\n    Student() {\n        name = \"\u200b\u65e0\u540d\u5c0f\u5352\u200b\";  // \u200b\u8fd8\u200b\u6ca1\u6709\u200b\u53d6\u540d\u200b\u7684\u200b\u5a03\u200b\n        age = 0;           // \u200b\u521a\u51fa\u751f\u200b\uff0c\u200b\u96f6\u5c81\u200b\n        score = 0.0;       // \u200b\u8fd8\u200b\u6ca1\u200b\u5f00\u59cb\u200b\u5b66\u4e60\u200b\u5462\u200b\n    }\n\nprivate:\n    std::string name;\n    int age;\n    double score;\n};\n\n// \u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\nStudent s1; // \u200b\u556a\u200b\uff01\u200b\u4e00\u4e2a\u200b\u5b66\u751f\u200b\u5c31\u200b\u8fd9\u4e48\u200b\u8bde\u751f\u200b\u4e86\u200b\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#222","title":"2.2.2 \u200b\u5e26\u200b\u53c2\u6570\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u5b9a\u5236\u200b\u6b3e","text":"<pre><code>class Student {\npublic:\n    // \u200b\u5e26\u200b\u53c2\u6570\u200b\u6784\u9020\u51fd\u6570\u200b\uff1aVIP\u200b\u5b9a\u5236\u200b\u7248\u200b\n    Student(std::string n, int a, double s) {\n        name = n;       // \u200b\u7236\u6bcd\u200b\u5df2\u7ecf\u200b\u60f3\u200b\u597d\u200b\u540d\u5b57\u200b\u4e86\u200b\n        age = a;        // \u200b\u53ef\u4ee5\u200b\"\u200b\u7a7f\u8d8a\u200b\"\u200b\u76f4\u63a5\u200b\u957f\u5230\u200b\u67d0\u4e2a\u200b\u5e74\u9f84\u200b\n        score = s;      // \u200b\u81ea\u5e26\u200b\u5206\u6570\u200b\u5165\u5b66\u200b\uff0c\u200b\u771f\u662f\u200b\u4eba\u751f\u200b\u8d62\u5bb6\u200b\n    }\n\nprivate:\n    std::string name;\n    int age;\n    double score;\n};\n\n// \u200b\u7528\u6cd5\u200b\nStudent s2(\"\u200b\u806a\u660e\u200b\u86cb\u200b\", 18, 99.5); // \u200b\u4e00\u4e2a\u200b\u5b66\u9738\u200b\u8bde\u751f\u200b\u4e86\u200b\uff01\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#223","title":"2.2.3 \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u590d\u5236\u7c98\u8d34\u200b\u5927\u5e08","text":"<p>\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\u5c31\u200b\u50cf\u200b\u514b\u9686\u6280\u672f\u200b\uff0c\"\u200b\u7167\u7740\u200b\u4f60\u200b\u7684\u200b\u6837\u5b50\u200b\u518d\u6765\u4e00\u4e2a\u200b\"\u3002</p> <pre><code>class Student {\npublic:\n    // \u200b\u57fa\u672c\u200b\u6b3e\u200b\n    Student(std::string n, int a, double s) : name(n), age(a), score(s) {}\n\n    // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u590d\u5236\u7c98\u8d34\u200b\u5927\u6cd5\u200b\u597d\u200b\n    Student(const Student&amp; other) {\n        name = other.name;    // \u200b\u540c\u540d\u540c\u59d3\u200b\n        age = other.age;      // \u200b\u540c\u4e00\u200b\u5e74\u9f84\u200b\n        score = other.score;  // \u200b\u8fde\u5206\u6570\u200b\u90fd\u200b\u4e00\u6837\u200b\uff0c\u200b\u8fd9\u662f\u200b\u53cc\u80de\u80ce\u200b\u5417\u200b\uff1f\n    }\n\nprivate:\n    std::string name;\n    int age;\n    double score;\n};\n\n// \u200b\u5b9e\u6218\u200b\u64cd\u4f5c\u200b\nStudent original(\"\u200b\u5929\u624d\u200b\", 20, 95.0);\nStudent clone = original; // \u200b\u514b\u9686\u7f8a\u200b\u591a\u8389\u200b\u5c31\u662f\u200b\u8fd9\u4e48\u200b\u6765\u200b\u7684\u200b\nStudent twin(original);   // \u200b\u8fd9\u200b\u4e5f\u200b\u662f\u200b\u514b\u9686\u200b\uff0c\u200b\u53ea\u662f\u200b\u5199\u6cd5\u200b\u4e0d\u540c\u200b\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#224","title":"2.2.4 \u200b\u79fb\u52a8\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u642c\u5bb6\u200b\u516c\u53f8","text":"<p>\u200b\u79fb\u52a8\u200b\u6784\u9020\u51fd\u6570\u200b\u5c31\u200b\u50cf\u200b\u4e13\u4e1a\u200b\u642c\u5bb6\u200b\u516c\u53f8\u200b\uff0c\u200b\u628a\u200b\u6240\u6709\u200b\u4e1c\u897f\u200b\u4ece\u200b\u65e7\u200b\u623f\u5b50\u200b\u642c\u200b\u5230\u200b\u65b0\u623f\u5b50\u200b\uff0c\u200b\u7136\u540e\u200b\u628a\u200b\u65e7\u200b\u623f\u5b50\u200b\u94a5\u5319\u200b\u6536\u8d70\u200b\u3002</p> <pre><code>class DynamicArray {\npublic:\n    // \u200b\u666e\u901a\u200b\u6784\u9020\u200b\uff1a\u200b\u4ece\u200b\u96f6\u200b\u5efa\u623f\u200b\n    DynamicArray(int size) {\n        data = new int[size];  // \u200b\u4e70\u200b\u4e86\u200b\u4e00\u5757\u200b\u5730\u5efa\u200b\u623f\u5b50\u200b\n        length = size;\n    }\n\n    // \u200b\u62c6\u8fc1\u200b\u961f\u200b\n    ~DynamicArray() {\n        delete[] data;  // \u200b\u62c6\u200b\u623f\u5b50\u200b\n    }\n\n    // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u200b\uff1a\u200b\u7167\u200b\u56fe\u7eb8\u200b\u518d\u5efa\u200b\u4e00\u4e2a\u200b\u4e00\u6a21\u4e00\u6837\u200b\u7684\u200b\n    DynamicArray(const DynamicArray&amp; other) {\n        length = other.length;\n        data = new int[length];  // \u200b\u65b0\u4e70\u200b\u5730\u200b\u5efa\u623f\u200b\n        for (int i = 0; i &lt; length; i++) {\n            data[i] = other.data[i];  // \u200b\u628a\u200b\u5bb6\u5177\u200b\u4e00\u4ef6\u4ef6\u200b\u590d\u5236\u200b\n        }\n    }\n\n    // \u200b\u79fb\u52a8\u200b\u6784\u9020\u200b\uff1a\u200b\u76f4\u63a5\u200b\u4f4f\u8fdb\u200b\u5df2\u6709\u200b\u7684\u200b\u623f\u5b50\u200b\uff0c\u200b\u539f\u200b\u4e3b\u4eba\u200b\u8d70\u200b\u4eba\u200b\n    DynamicArray(DynamicArray&amp;&amp; other) noexcept {\n        data = other.data;       // \u200b\u62ff\u8d70\u200b\u94a5\u5319\u200b\uff0c\u200b\u8fd9\u200b\u623f\u5b50\u200b\u6211\u200b\u7684\u200b\u4e86\u200b\n        length = other.length;\n\n        other.data = nullptr;    // \u200b\u524d\u200b\u623f\u4e3b\u200b\u5931\u53bb\u200b\u623f\u6743\u200b\n        other.length = 0;        // \u200b\u6e05\u200b\u7a7a\u524d\u200b\u623f\u4e3b\u200b\u7684\u200b\u4f4f\u5740\u200b\u4fe1\u606f\u200b\n    }\n\nprivate:\n    int* data;   // \u200b\u623f\u5b50\u200b\u7684\u200b\u5730\u5740\u200b\n    int length;  // \u200b\u623f\u5b50\u200b\u5927\u5c0f\u200b\n};\n\n// \u200b\u5b9e\u4f8b\u200b\u5c55\u793a\u200b\nDynamicArray mansion(1000);                // \u200b\u5efa\u4e86\u200b\u4e00\u680b\u200b\u5927\u623f\u5b50\u200b\nDynamicArray newOwner = std::move(mansion); // \u200b\u623f\u5b50\u200b\u6613\u4e3b\u200b\u4e86\u200b\uff01\u200b\u539f\u200b\u623f\u4e3b\u200b\u54ed\u200b\u6655\u200b\u5728\u200b\u5395\u6240\u200b\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#23","title":"2.3 \u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\"\u200b\u9ad8\u7ea7\u200b\u6280\u5de7\u200b\"","text":""},{"location":"programming/cpp/noob/class-constructor/#231","title":"2.3.1 \u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\uff1a\u200b\u9ad8\u6548\u200b\u7684\u200b\"\u200b\u4e00\u7ad9\u5f0f\u200b\u670d\u52a1\u200b\"","text":"<p>\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\u5c31\u200b\u50cf\u200b\u4e00\u7ad9\u5f0f\u200b\u5a5a\u793c\u200b\u670d\u52a1\u200b\uff0c\u200b\u6240\u6709\u200b\u4e8b\u60c5\u200b\u4e00\u6b21\u200b\u641e\u5b9a\u200b\uff0c\u200b\u7701\u65f6\u200b\u53c8\u200b\u7701\u529b\u200b\u3002</p> <pre><code>class Rectangle {\npublic:\n    // \u200b\u4f7f\u7528\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\uff1a\u200b\u4e00\u6761\u9f99\u200b\u670d\u52a1\u200b\n    Rectangle(double w, double h) : \n        width(w),         // \u200b\u7b2c\u4e00\u9879\u200b\uff1a\u200b\u5bbd\u5ea6\u200b\n        height(h),        // \u200b\u7b2c\u4e8c\u9879\u200b\uff1a\u200b\u9ad8\u5ea6\u200b \n        area(w * h)       // \u200b\u7b2c\u4e09\u9879\u200b\uff1a\u200b\u987a\u4fbf\u200b\u628a\u200b\u9762\u79ef\u200b\u4e5f\u200b\u7b97\u200b\u597d\u200b\u4e86\u200b\uff01\n    {}\n\n    void display() const {\n        std::cout &lt;&lt; \"\u200b\u5bbd\u5ea6\u200b: \" &lt;&lt; width &lt;&lt; \", \u200b\u9ad8\u5ea6\u200b: \" &lt;&lt; height \n                  &lt;&lt; \", \u200b\u9762\u79ef\u200b\u65e9\u7b97\u200b\u597d\u200b\u5566\u200b: \" &lt;&lt; area &lt;&lt; std::endl;\n    }\n\nprivate:\n    double width;\n    double height;\n    const double area;  // \u200b\u5e38\u91cf\u200b\u6210\u5458\u200b\u5fc5\u987b\u200b\u5728\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\"\u200b\u9884\u5b9a\u200b\"\n};\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#232","title":"2.3.2 \u200b\u59d4\u6258\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u7529\u9505\u200b\u80fd\u624b","text":"<p>\u200b\u59d4\u6258\u200b\u6784\u9020\u51fd\u6570\u200b\u5c31\u200b\u50cf\u200b\u516c\u53f8\u200b\u91cc\u200b\u7684\u200b\"\u200b\u7529\u9505\u200b\u9ad8\u624b\u200b\"\uff0c\u200b\u81ea\u5df1\u200b\u4e0d\u200b\u5e72\u6d3b\u200b\uff0c\u200b\u5168\u63a8\u200b\u7ed9\u200b\u522b\u4eba\u200b\u505a\u200b\u3002</p> <pre><code>class Person {\npublic:\n    // \u200b\u5168\u80fd\u200b\u9009\u624b\u200b\n    Person(std::string n, int a, std::string addr) \n        : name(n), age(a), address(addr) {\n        std::cout &lt;&lt; \"\u200b\u6211\u200b\u505a\u200b\u4e86\u200b\u6240\u6709\u200b\u5de5\u4f5c\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u7529\u9505\u200b\u4e00\u53f7\u200b\n    Person(std::string n, int a) \n        : Person(n, a, \"\u200b\u5730\u5740\u200b\u4e0d\u8be6\u200b\") {\n        std::cout &lt;&lt; \"\u200b\u6211\u200b\u628a\u200b\u5730\u5740\u200b\u90a3\u200b\u90e8\u5206\u200b\u5de5\u4f5c\u200b\u7529\u200b\u7ed9\u200b\u522b\u4eba\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u7529\u9505\u200b\u4e8c\u53f7\u200b\n    Person() \n        : Person(\"\u200b\u65e0\u540d\u6c0f\u200b\", 0, \"\u200b\u6d41\u6d6a\u200b\u8857\u5934\u200b\") {\n        std::cout &lt;&lt; \"\u200b\u6211\u200b\u4ec0\u4e48\u200b\u90fd\u200b\u6ca1\u200b\u505a\u200b\uff0c\u200b\u5168\u63a8\u200b\u7ed9\u200b\u522b\u4eba\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\nprivate:\n    std::string name;\n    int age;\n    std::string address;\n};\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#233-explicit","title":"2.3.3 explicit\u200b\u5173\u952e\u5b57\u200b\uff1a\u200b\u9632\u9a97\u200b\u4e13\u5bb6","text":"<p>explicit\u200b\u5173\u952e\u5b57\u200b\u5c31\u200b\u50cf\u200b\u9152\u5427\u200b\u95e8\u53e3\u200b\u7684\u200b\u5b89\u4fdd\u200b\uff0c\u200b\u9632\u6b62\u200b\u6709\u4eba\u200b\u8499\u6df7\u8fc7\u5173\u200b\u3002</p> <pre><code>class ConversionExample {\npublic:\n    // \u200b\u6ca1\u200b\u8bbe\u9632\u200b\u7684\u200b\u5927\u95e8\u200b\n    ConversionExample(int x) {\n        value = x;\n        std::cout &lt;&lt; \"\u200b\u8ba9\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u5047\u626e\u200b\u6210\u200b\u6211\u200b\uff1f\u200b\u884c\u200b\u5427\u200b...\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6709\u200b\u5b89\u4fdd\u200b\u7684\u200b\u5165\u53e3\u200b\n    explicit ConversionExample(double y) {\n        value = static_cast&lt;int&gt;(y);\n        std::cout &lt;&lt; \"\u200b\u60f3\u200b\u7528\u200b\u5c0f\u6570\u200b\u6df7\u8fdb\u6765\u200b\uff1f\u200b\u6ca1\u95e8\u200b\uff01\u200b\u5fc5\u987b\u200b\u660e\u786e\u200b\u8868\u660e\u200b\u8eab\u4efd\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    int getValue() const { return value; }\n\nprivate:\n    int value;\n};\n\nvoid testFunction() {\n    ConversionExample a = 10;         // \u200b\u6210\u529f\u200b\u6df7\u5165\u200b\uff1a\u200b\u6574\u6570\u200b\u4f2a\u88c5\u6210\u200b\u4e86\u200b\u5bf9\u8c61\u200b\n    // ConversionExample b = 10.5;    // \u200b\u88ab\u200b\u62e6\u4e0b\u200b\uff1a\u200b\u5c0f\u6570\u200b\u60f3\u200b\u6df7\u8fdb\u6765\u200b\uff0c\u200b\u6ca1\u95e8\u200b\uff01\n    ConversionExample c(10.5);        // \u200b\u83b7\u51c6\u200b\u8fdb\u5165\u200b\uff1a\u200b\u8fd9\u4f4d\u200b\u5c0f\u6570\u200b\u51fa\u793a\u200b\u4e86\u200b\u8bc1\u4ef6\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#234-defaultdelete","title":"2.3.4 =default\u200b\u548c\u200b=delete\uff1a\u200b\u5f00\u5173\u200b\u5927\u5e08","text":"<pre><code>class ControlExample {\npublic:\n    // \u200b\u61d2\u4eba\u200b\u65b9\u5f0f\u200b\uff1a\"\u200b\u6309\u200b\u9ed8\u8ba4\u200b\u65b9\u5f0f\u200b\u6765\u200b\u5c31\u200b\u884c\u200b\"\n    ControlExample() = default;\n\n    // \u200b\u81ea\u5b9a\u4e49\u200b\u65b9\u5f0f\u200b\n    ControlExample(int x) : value(x) {}\n\n    // \u200b\u7981\u6b62\u200b\u590d\u5236\u200b\uff1a\"\u200b\u8fd9\u662f\u200b\u7edd\u7248\u200b\uff0c\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u5c71\u5be8\u200b\uff01\"\n    ControlExample(const ControlExample&amp;) = delete;\n\n    // \u200b\u7981\u6b62\u200b\u8f6c\u8ba9\u200b\uff1a\"\u200b\u8fd9\u662f\u200b\u4f20\u5bb6\u5b9d\u200b\uff0c\u200b\u4e0d\u5916\u501f\u200b\uff01\"\n    ControlExample&amp; operator=(const ControlExample&amp;) = delete;\n\nprivate:\n    int value = 0;\n};\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#3","title":"3. \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff1a\u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u544a\u522b\u200b\u6d3e\u5bf9\u200b\"","text":""},{"location":"programming/cpp/noob/class-constructor/#31","title":"3.1 \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u7684\u200b\u7279\u70b9","text":"\u7279\u6027\u200b \u200b\u63cf\u8ff0\u200b \u200b\u51fd\u6570\u200b\u540d\u200b \u200b\u7c7b\u540d\u200b\u524d\u9762\u200b\u52a0\u4e2a\u200b\u6ce2\u6d6a\u200b\u53f7\u200b~\uff08\u200b\u5c31\u200b\u50cf\u200b\u5bf9\u8c61\u200b\u5728\u200b\u6325\u624b\u544a\u522b\u200b\uff09 \u200b\u53c2\u6570\u200b \u200b\u65e0\u200b\u53c2\u6570\u200b\uff08\u200b\u8d70\u200b\u7684\u200b\u65f6\u5019\u200b\u4e24\u624b\u7a7a\u7a7a\u200b\uff09 \u200b\u8fd4\u56de\u503c\u200b \u200b\u6ca1\u6709\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff08\u200b\u4eba\u200b\u90fd\u200b\u8d70\u200b\u4e86\u200b\uff0c\u200b\u8fd8\u200b\u8fd4\u56de\u200b\u5565\u200b\uff09 \u200b\u6570\u91cf\u200b \u200b\u6bcf\u200b\u7c7b\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\uff08\u200b\u751f\u200b\u53ef\u4ee5\u200b\u6709\u200b\u5343\u4e07\u79cd\u200b\uff0c\u200b\u6b7b\u200b\u53ea\u6709\u200b\u4e00\u79cd\u200b\uff09 \u200b\u8c03\u7528\u200b\u65f6\u673a\u200b \u200b\u5bf9\u8c61\u200b\"\u200b\u54bd\u6c14\u200b\"\u200b\u65f6\u200b\u81ea\u52a8\u200b\u88ab\u53eb\u200b\u6765\u200b \u200b\u4f5c\u7528\u200b \u200b\u6536\u62fe\u200b\u70c2\u644a\u5b50\u200b\uff0c\u200b\u6253\u626b\u6218\u573a"},{"location":"programming/cpp/noob/class-constructor/#32","title":"3.2 \u200b\u57fa\u672c\u200b\u7528\u6cd5","text":"<pre><code>class ResourceManager {\npublic:\n    ResourceManager() {\n        resource = new int[100];\n        std::cout &lt;&lt; \"\u200b\u6211\u200b\u7533\u8bf7\u200b\u4e86\u200b\u4e00\u5757\u200b\u5185\u5b58\u200b\uff0c\u200b\u5730\u5740\u200b\u6211\u8bb0\u200b\u5728\u200b\u5c0f\u200b\u672c\u672c\u200b\u4e0a\u200b\u4e86\u200b\" &lt;&lt; std::endl;\n    }\n\n    ~ResourceManager() {\n        delete[] resource;  // \u200b\u8fd8\u200b\u56de\u53bb\u200b\n        std::cout &lt;&lt; \"\u200b\u4e34\u6b7b\u524d\u200b\uff0c\u200b\u6211\u200b\u628a\u200b\u501f\u200b\u7684\u200b\u5185\u5b58\u200b\u90fd\u200b\u8fd8\u200b\u56de\u53bb\u200b\u4e86\u200b\uff0c\u200b\u505a\u4e2a\u200b\u5e72\u51c0\u200b\u7684\u200b\u9b3c\u200b\" &lt;&lt; std::endl;\n    }\n\nprivate:\n    int* resource;  // \u200b\u8bb0\u5728\u200b\u5c0f\u200b\u672c\u672c\u200b\u4e0a\u200b\u7684\u200b\u5730\u5740\u200b\n};\n\nvoid testLifetime() {\n    std::cout &lt;&lt; \"\u200b\u5f00\u59cb\u200b\u8868\u6f14\u200b...\" &lt;&lt; std::endl;\n    ResourceManager rm;     // \u200b\u65b0\u200b\u5bf9\u8c61\u200b\u8bde\u751f\u200b\n    std::cout &lt;&lt; \"\u200b\u5bf9\u8c61\u200b\u6b63\u200b\u5feb\u4e50\u200b\u5730\u200b\u6d3b\u7740\u200b\" &lt;&lt; std::endl;\n    // \u200b\u51fd\u6570\u200b\u5373\u5c06\u200b\u7ed3\u675f\u200b\uff0crm\u200b\u5373\u5c06\u200b\u9762\u4e34\u200b\"\u200b\u751f\u547d\u200b\u5c3d\u5934\u200b\"\uff0c\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u84c4\u52bf\u5f85\u53d1\u200b\n}  // rm\u200b\u5bff\u7ec8\u6b63\u5bdd\u200b\uff0c\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u51fa\u573a\u200b\u6536\u5c38\u200b\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#33","title":"3.3 \u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b\uff1a\u200b\u9632\u6b62\u200b\"\u200b\u8bc8\u5c38\u200b\"\u200b\u7684\u200b\u6cd5\u5b9d","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u7528\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u6d3e\u751f\u7c7b\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u4e0d\u662f\u200b\u865a\u200b\u51fd\u6570\u200b\uff0c\u200b\u9500\u6bc1\u200b\u65f6\u200b\u5c31\u200b\u4f1a\u200b\u51fa\u73b0\u200b\"\u200b\u8bc8\u5c38\u200b\"\u200b\u73b0\u8c61\u200b\u2014\u2014\u200b\u90e8\u5206\u200b\u8d44\u6e90\u200b\u6ca1\u200b\u91ca\u653e\u200b\u5e72\u51c0\u200b\uff01</p> <pre><code>class Base {\npublic:\n    Base() { std::cout &lt;&lt; \"\u200b\u57fa\u7c7b\u200b\uff1a\u200b\u6211\u200b\u51fa\u751f\u200b\u5566\u200b\uff01\" &lt;&lt; std::endl; }\n\n    // \u200b\u666e\u901a\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    // ~Base() { std::cout &lt;&lt; \"\u200b\u57fa\u7c7b\u200b\uff1a\u200b\u6211\u200b\u53bb\u4e16\u200b\u4e86\u200b...\" &lt;&lt; std::endl; }\n\n    // \u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b(\u200b\u6b63\u786e\u200b\u59ff\u52bf\u200b)\n    virtual ~Base() { std::cout &lt;&lt; \"\u200b\u57fa\u7c7b\u200b\uff1a\u200b\u6211\u200b\u53bb\u4e16\u200b\u4e86\u200b\uff0c\u200b\u8bb0\u5f97\u200b\u628a\u200b\u7ee7\u627f\u4eba\u200b\u4e5f\u200b\u5b89\u6392\u200b\u597d\u200b...\" &lt;&lt; std::endl; }\n};\n\nclass Derived : public Base {\npublic:\n    Derived() { \n        data = new int[10];\n        std::cout &lt;&lt; \"\u200b\u6d3e\u751f\u7c7b\u200b\uff1a\u200b\u6211\u200b\u4e5f\u200b\u6765\u200b\u5566\u200b\uff01\u200b\u8fd8\u200b\u5e26\u200b\u4e86\u200b\u5341\u4e2a\u200b\u5c0f\u5f1f\u200b\uff01\" &lt;&lt; std::endl; \n    }\n\n    ~Derived() { \n        delete[] data;\n        std::cout &lt;&lt; \"\u200b\u6d3e\u751f\u7c7b\u200b\uff1a\u200b\u6211\u200b\u8d70\u200b\u4e86\u200b\uff0c\u200b\u628a\u200b\u5c0f\u5f1f\u200b\u4eec\u200b\u90fd\u200b\u5e26\u8d70\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl; \n    }\n\nprivate:\n    int* data;  // \u200b\u5341\u4e2a\u200b\u5c0f\u5f1f\u200b\n};\n\nvoid testVirtualDestructor() {\n    Base* ptr = new Derived();  // \u200b\u6d3e\u751f\u7c7b\u200b\u5bf9\u8c61\u200b\u7a7f\u7740\u200b\u57fa\u7c7b\u200b\u7684\u200b\u5916\u5957\u200b\n\n    // \u200b\u5982\u679c\u200b~Base()\u200b\u4e0d\u662f\u200b\u865a\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0b\u9762\u200b\u8fd9\u200b\u884c\u200b\u4ee3\u7801\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\"\u200b\u7075\u9b42\u200b\u51fa\u7a8d\u200b\"\uff1a\n    // \u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u8eaf\u58f3\u200b\u8fd8\u200b\u5728\u200b\uff08\u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b\uff09\uff0c\u200b\u53ea\u6709\u200b\u57fa\u7c7b\u200b\u7684\u200b\u90e8\u5206\u200b\u5f97\u5230\u200b\u4e86\u200b\u5b89\u606f\u200b\n    delete ptr;  \n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#4","title":"4. \u200b\u751f\u6b7b\u200b\u8f6e\u56de\u200b\uff1a\u200b\u6784\u9020\u200b\u548c\u6790\u6784\u200b\u7684\u200b\u6267\u884c\u200b\u987a\u5e8f","text":""},{"location":"programming/cpp/noob/class-constructor/#41","title":"4.1 \u200b\u5355\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u751f\u6b7b\u200b\u5386\u7a0b","text":"\u9636\u6bb5\u200b \u200b\u6267\u884c\u200b\u987a\u5e8f\u200b \u200b\u8bde\u751f\u200b 1. \u200b\u5148\u200b\u8ba9\u200b\u7236\u8f88\u200b\u6295\u80ce\u200b\uff08\u200b\u8c03\u7528\u200b\u57fa\u7c7b\u200b\u6784\u9020\u51fd\u6570\u200b\uff092. \u200b\u518d\u200b\u6309\u200b\u51fa\u751f\u8bc1\u660e\u200b\u987a\u5e8f\u200b\u521d\u59cb\u5316\u200b\u6240\u6709\u200b\u90e8\u4ef6\u200b3. \u200b\u6700\u540e\u200b\u6267\u884c\u200b\u81ea\u5df1\u200b\u7684\u200b\u6784\u9020\u200b\u4eea\u5f0f\u200b \u200b\u79bb\u4e16\u200b 1. \u200b\u5148\u200b\u6267\u884c\u200b\u81ea\u5df1\u200b\u7684\u200b\u9057\u5631\u200b\uff08\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u4f53\u200b\uff092. \u200b\u518d\u200b\u6309\u200b\u4e0e\u200b\u51fa\u751f\u200b\u76f8\u53cd\u200b\u987a\u5e8f\u200b\u5904\u7406\u200b\u6240\u6709\u200b\u90e8\u4ef6\u200b3. \u200b\u6700\u540e\u200b\u901a\u77e5\u200b\u7236\u8f88\u200b\u53ef\u4ee5\u200b\u5b89\u606f\u200b\u4e86"},{"location":"programming/cpp/noob/class-constructor/#42","title":"4.2 \u200b\u5bb6\u65cf\u200b\u6811\u4e2d\u200b\u7684\u200b\u751f\u6b7b\u200b\u8f6e\u56de","text":"<pre><code>class Base {\npublic:\n    Base() { std::cout &lt;&lt; \"\u200b\u7237\u7237\u200b\u51fa\u751f\u200b\" &lt;&lt; std::endl; }\n    ~Base() { std::cout &lt;&lt; \"\u200b\u7237\u7237\u200b\u53bb\u4e16\u200b\" &lt;&lt; std::endl; }\n};\n\nclass Middle : public Base {\npublic:\n    Middle() { std::cout &lt;&lt; \"\u200b\u7238\u7238\u200b\u51fa\u751f\u200b\" &lt;&lt; std::endl; }\n    ~Middle() { std::cout &lt;&lt; \"\u200b\u7238\u7238\u200b\u53bb\u4e16\u200b\" &lt;&lt; std::endl; }\n};\n\nclass Derived : public Middle {\npublic:\n    Derived() { std::cout &lt;&lt; \"\u200b\u6211\u200b\u51fa\u751f\u200b\" &lt;&lt; std::endl; }\n    ~Derived() { std::cout &lt;&lt; \"\u200b\u6211\u200b\u53bb\u4e16\u200b\" &lt;&lt; std::endl; }\n};\n\n// \u200b\u6d4b\u8bd5\u200b\u4e00\u4e0b\u200b\nvoid testOrder() {\n    std::cout &lt;&lt; \"\u200b\u5bb6\u65cf\u200b\u5f00\u59cb\u200b\u7e41\u884d\u200b...\" &lt;&lt; std::endl;\n    Derived d;  // \u200b\u8f93\u51fa\u200b: \u200b\u7237\u7237\u200b\u51fa\u751f\u200b \u2192 \u200b\u7238\u7238\u200b\u51fa\u751f\u200b \u2192 \u200b\u6211\u200b\u51fa\u751f\u200b\n    std::cout &lt;&lt; \"\u200b\u5bb6\u65cf\u200b\u5f00\u59cb\u200b\u51cb\u96f6\u200b...\" &lt;&lt; std::endl;\n}  // \u200b\u8f93\u51fa\u200b: \u200b\u6211\u200b\u53bb\u4e16\u200b \u2192 \u200b\u7238\u7238\u200b\u53bb\u4e16\u200b \u2192 \u200b\u7237\u7237\u200b\u53bb\u4e16\u200b (\u200b\u5148\u6b7b\u200b\u540e\u8f88\u200b\uff0c\u200b\u540e\u200b\u6b7b\u200b\u7956\u5148\u200b)\n</code></pre> <p>C++\u200b\u4e2d\u200b\u7684\u200b\u751f\u6b7b\u200b\u89c4\u5219\u200b\uff1a\u200b\u51fa\u751f\u200b\u6309\u200b\u8f88\u5206\u200b\u4ece\u200b\u8001\u5230\u200b\u5c11\u200b\uff0c\u200b\u79bb\u4e16\u200b\u5219\u200b\u4ece\u200b\u5c11\u200b\u5230\u200b\u8001\u200b\u3002\u200b\u6b63\u5982\u200b\u4e2d\u56fd\u200b\u7684\u200b\u53e4\u8bdd\u200b\uff1a\"\u200b\u957f\u6c5f\u540e\u6d6a\u63a8\u524d\u6d6a\u200b\uff0c\u200b\u524d\u6d6a\u200b\u6b7b\u200b\u5728\u200b\u6c99\u6ee9\u200b\u4e0a\u200b\"\u3002</p>"},{"location":"programming/cpp/noob/class-constructor/#43","title":"4.3 \u200b\u96c6\u4f53\u6237\u200b\u7684\u200b\u751f\u6b7b\u200b\u6392\u961f","text":"<p>\u200b\u5bf9\u8c61\u200b\u6570\u7ec4\u200b\u5c31\u200b\u50cf\u200b\u96c6\u4f53\u200b\u5bbf\u820d\u200b\uff0c\u200b\u4e00\u8d77\u200b\u8fdb\u200b\uff0c\u200b\u4e00\u8d77\u200b\u51fa\u200b\uff0c\u200b\u4f46\u662f\u200b\u6709\u200b\u987a\u5e8f\u200b\uff01</p> <pre><code>class Simple {\npublic:\n    Simple() { \n        std::cout &lt;&lt; \"\u200b\u7b2c\u200b\" &lt;&lt; ++count &lt;&lt; \"\u200b\u53f7\u200b\u6210\u5458\u200b\u62a5\u200b\u5230\u200b!\" &lt;&lt; std::endl; \n    }\n\n    ~Simple() { \n        std::cout &lt;&lt; \"\u200b\u7b2c\u200b\" &lt;&lt; count-- &lt;&lt; \"\u200b\u53f7\u200b\u6210\u5458\u200b\u5149\u8363\u200b\u9000\u4f11\u200b!\" &lt;&lt; std::endl; \n    }\n\n    static int count;\n};\n\nint Simple::count = 0;\n\nvoid testArrayOrder() {\n    std::cout &lt;&lt; \"\u200b\u5f00\u59cb\u200b\u5efa\u7acb\u200b\u96c6\u4f53\u200b\u5bbf\u820d\u200b...\" &lt;&lt; std::endl;\n    Simple arr[3];  // \u200b\u4f9d\u6b21\u200b\u6784\u9020\u200b3\u200b\u4e2a\u200b\u5bf9\u8c61\u200b\n    std::cout &lt;&lt; \"\u200b\u96c6\u4f53\u200b\u5bbf\u820d\u200b\u5f00\u59cb\u200b\u62c6\u8fc1\u200b...\" &lt;&lt; std::endl;\n\n    // \u200b\u51fd\u6570\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u6309\u7167\u200b\"\u200b\u540e\u8fdb\u5148\u51fa\u200b\"\u200b\u7684\u200b\u987a\u5e8f\u200b\u6790\u6784\u200b\n    // \u200b\u5c31\u200b\u50cf\u200b\u53e0\u200b\u76d8\u5b50\u200b\uff0c\u200b\u6700\u540e\u200b\u653e\u4e0a\u53bb\u200b\u7684\u200b\u6700\u5148\u200b\u62ff\u200b\u4e0b\u6765\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#5","title":"5. \u200b\u5b9e\u6218\u200b\u5e94\u7528\u200b\uff1a\u200b\u6784\u9020\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u7684\u200b\u6c5f\u6e56\u200b\u7528\u9014","text":""},{"location":"programming/cpp/noob/class-constructor/#51-raii","title":"5.1 \u200b\u8d44\u6e90\u7ba1\u7406\u200b\u4fa0\u5ba2\u200b\uff08RAII\u200b\u6a21\u5f0f\u200b\uff09","text":"<p>RAII\u200b\u6a21\u5f0f\u200b\u5c31\u200b\u50cf\u662f\u200b\u6c5f\u6e56\u200b\u4e0a\u200b\u7684\u200b\"\u200b\u4fdd\u6d01\u200b\u4fa0\u200b\"\uff1a\u200b\u8fdb\u95e8\u200b\u6574\u7406\u200b\uff0c\u200b\u51fa\u95e8\u200b\u6253\u626b\u200b\uff0c\u200b\u4ece\u4e0d\u200b\u7559\u4e0b\u200b\u70c2\u644a\u5b50\u200b\u3002</p> <pre><code>class FileHandler {\npublic:\n    FileHandler(const std::string&amp; filename) {\n        file = fopen(filename.c_str(), \"r\");\n        if (!file) {\n            throw std::runtime_error(\"\u200b\u6587\u4ef6\u200b\u6253\u4e0d\u5f00\u200b\uff0c\u200b\u5927\u4fa0\u200b\u8fd8\u662f\u200b\u53e6\u5bfb\u200b\u4ed6\u5904\u200b\u5427\u200b\");\n        }\n        std::cout &lt;&lt; \"\u200b\u6587\u4ef6\u200b\u5df2\u200b\u5f00\u542f\u200b\uff0c\u200b\u8bf7\u200b\u968f\u610f\u200b\u7ffb\u9605\u200b\" &lt;&lt; std::endl;\n    }\n\n    ~FileHandler() {\n        if (file) {\n            fclose(file);\n            std::cout &lt;&lt; \"\u200b\u5ba2\u5b98\u200b\u6162\u8d70\u200b\uff0c\u200b\u5c0f\u5e97\u200b\u5df2\u200b\u5173\u95e8\u200b\u6253\u70ca\u200b\" &lt;&lt; std::endl;\n        }\n    }\n\n    // \u200b\u8bfb\u53d6\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\u7b49\u200b\u65b9\u6cd5\u200b...\n\nprivate:\n    FILE* file;  // \u200b\u5e97\u94fa\u200b\u94a5\u5319\u200b\n};\n\nvoid processFile() {\n    try {\n        std::cout &lt;&lt; \"\u200b\u51c6\u5907\u200b\u62dc\u8bbf\u200b\u6587\u4ef6\u200b\u5c0f\u5e97\u200b...\" &lt;&lt; std::endl;\n        FileHandler handler(\"secret_book.txt\");\n        std::cout &lt;&lt; \"\u200b\u6b63\u5728\u200b\u9605\u8bfb\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b...\" &lt;&lt; std::endl;\n        // \u200b\u4f7f\u7528\u200b\u6587\u4ef6\u200b...\n    } catch (const std::exception&amp; e) {\n        std::cout &lt;&lt; \"\u200b\u906d\u9047\u200b\u610f\u5916\u200b: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n    }\n    // \u200b\u65e0\u8bba\u200b\u6b63\u5e38\u200b\u9000\u51fa\u200b\u8fd8\u662f\u200b\u88ab\u200b\u6b66\u6797\u9ad8\u624b\u200b\u8e22\u200b\u51fa\u200b\uff0c\u200b\u5e97\u95e8\u200b\u90fd\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5173\u95ed\u200b\n    std::cout &lt;&lt; \"\u200b\u544a\u522b\u200b\u6587\u4ef6\u200b\u5c0f\u5e97\u200b...\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#52","title":"5.2 \u200b\u5355\u4f8b\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u72ec\u4e00\u65e0\u4e8c\u200b\u7684\u200b\u6c5f\u6e56\u200b\u638c\u95e8","text":"<p>\u200b\u5355\u4f8b\u200b\u6a21\u5f0f\u200b\u5c31\u200b\u50cf\u200b\u5c11\u6797\u5bfa\u200b\u65b9\u4e08\u200b\u2014\u2014\u200b\u6574\u4e2a\u200b\u6c5f\u6e56\u200b\u53ea\u80fd\u200b\u6709\u200b\u4e00\u4f4d\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u590d\u5236\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u4f20\u4f4d\u200b\u3002</p> <pre><code>class Singleton {\nprivate:\n    // \u200b\u79c1\u6709\u200b\u6784\u9020\u51fd\u6570\u200b - \u200b\u5916\u4eba\u200b\u4e0d\u80fd\u200b\u968f\u4fbf\u200b\u521b\u5efa\u200b\u638c\u95e8\u200b\n    Singleton() {\n        std::cout &lt;&lt; \"\u200b\u6c5f\u6e56\u200b\u638c\u95e8\u200b\u51fa\u4e16\u200b\uff0c\u200b\u5929\u4e0b\u200b\u5171\u5c0a\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u79c1\u6709\u200b\u6790\u6784\u200b\u51fd\u6570\u200b - \u200b\u5916\u4eba\u200b\u4e0d\u80fd\u200b\u968f\u4fbf\u200b\u706d\u6389\u200b\u638c\u95e8\u200b\n    ~Singleton() {\n        std::cout &lt;&lt; \"\u200b\u638c\u95e8\u200b\u5706\u5bc2\u200b\uff0c\u200b\u6c5f\u6e56\u200b\u9707\u52a8\u200b\" &lt;&lt; std::endl;\n    }\n\npublic:\n    // \u200b\u7981\u6b62\u200b\u590d\u5236\u200b - \u200b\u638c\u95e8\u200b\u53ea\u6709\u200b\u4e00\u4e2a\u200b\n    Singleton(const Singleton&amp;) = delete;\n    Singleton&amp; operator=(const Singleton&amp;) = delete;\n\n    // \u200b\u83b7\u53d6\u200b\u552f\u4e00\u200b\u5b9e\u4f8b\u200b\u7684\u200b\u65b9\u6cd5\u200b\n    static Singleton&amp; getInstance() {\n        static Singleton instance;  // \u200b\u53ea\u200b\u521b\u5efa\u200b\u4e00\u6b21\u200b\n        return instance;\n    }\n\n    void teachKungFu() {\n        std::cout &lt;&lt; \"\u200b\u638c\u95e8\u200b\u5f00\u59cb\u200b\u4f20\u6388\u200b\u7edd\u4e16\u6b66\u529f\u200b\" &lt;&lt; std::endl;\n    }\n};\n\nvoid testSingleton() {\n    // Singleton s; // \u200b\u9519\u8bef\u200b: \u200b\u6784\u9020\u51fd\u6570\u200b\u662f\u200b\u79c1\u6709\u200b\u7684\u200b\n\n    // \u200b\u6b63\u786e\u200b\u65b9\u5f0f\u200b: \u200b\u62dc\u89c1\u200b\u638c\u95e8\u200b\n    Singleton&amp; master = Singleton::getInstance();\n    master.teachKungFu();\n\n    // \u200b\u7a0b\u5e8f\u200b\u7ed3\u675f\u200b\u65f6\u200b\uff0c\u200b\u638c\u95e8\u200b\u81ea\u52a8\u200b\u5706\u5bc2\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#53","title":"5.3 \u200b\u667a\u80fd\u200b\u6307\u9488\u200b\uff1a\u200b\u81ea\u52a8\u200b\u6536\u5c38\u200b\u7684\u200b\u6c5f\u6e56\u200b\u6e38\u4fa0","text":"<p>\u200b\u867d\u7136\u200b\u81ea\u5df1\u200b\u5199\u200b\u7684\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u5df2\u7ecf\u200b\u8fc7\u65f6\u200b\uff08\u200b\u73b0\u4ee3\u200bC++\u200b\u63d0\u4f9b\u200b\u4e86\u200bstd::unique_ptr\u200b\u548c\u200bstd::shared_ptr\uff09\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5c55\u793a\u200b\u4e86\u200b\u6784\u9020\u200b/\u200b\u6790\u6784\u200b\u7684\u200b\u7ecf\u5178\u200b\u7528\u6cd5\u200b\uff1a</p> <pre><code>template &lt;typename T&gt;\nclass SmartPointer {\npublic:\n    // \u200b\u6784\u9020\u200b\u65f6\u200b\u63a5\u7ba1\u200b\u8d44\u6e90\u200b\n    explicit SmartPointer(T* ptr = nullptr) : resource(ptr) {\n        std::cout &lt;&lt; \"\u200b\u8d44\u6e90\u200b\u5df2\u200b\u88ab\u200b\u667a\u80fd\u200b\u4fa0\u200b\u63a5\u7ba1\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6790\u6784\u200b\u65f6\u200b\u81ea\u52a8\u200b\u6e05\u7406\u200b\n    ~SmartPointer() {\n        if (resource) {\n            delete resource;\n            std::cout &lt;&lt; \"\u200b\u667a\u80fd\u200b\u4fa0\u200b\u5df2\u200b\u6e05\u7406\u200b\u6218\u573a\u200b\uff0c\u200b\u4e0d\u7559\u200b\u4e00\u4e1d\u200b\u75d5\u8ff9\u200b\" &lt;&lt; std::endl;\n        }\n    }\n\n    // \u200b\u63d0\u4f9b\u200b\u8bbf\u95ee\u200b\u8d44\u6e90\u200b\u7684\u200b\u65b9\u6cd5\u200b\n    T* operator-&gt;() const { return resource; }\n    T&amp; operator*() const { return *resource; }\n\nprivate:\n    T* resource;  // \u200b\u88ab\u200b\u7ba1\u7406\u200b\u7684\u200b\u8d44\u6e90\u200b\n};\n\nclass Treasure {\npublic:\n    Treasure() { std::cout &lt;&lt; \"\u200b\u4e00\u4ef6\u200b\u5b9d\u7269\u200b\u51fa\u4e16\u200b\" &lt;&lt; std::endl; }\n    ~Treasure() { std::cout &lt;&lt; \"\u200b\u5b9d\u7269\u200b\u88ab\u200b\u9500\u6bc1\u200b\" &lt;&lt; std::endl; }\n    void shine() { std::cout &lt;&lt; \"\u200b\u5b9d\u7269\u200b\u53d1\u51fa\u200b\u8000\u773c\u200b\u5149\u8292\u200b\" &lt;&lt; std::endl; }\n};\n\nvoid useTreasure() {\n    std::cout &lt;&lt; \"\u200b\u5bfb\u5b9d\u200b\u5f00\u59cb\u200b...\" &lt;&lt; std::endl;\n    {\n        SmartPointer&lt;Treasure&gt; magic(new Treasure());\n        magic-&gt;shine();  // \u200b\u4f7f\u7528\u200b\u5b9d\u7269\u200b\n\n        // \u200b\u65e0\u9700\u200b\u624b\u52a8\u200b\u5220\u9664\u200b\uff0c\u200b\u667a\u80fd\u200b\u4fa0\u4f1a\u200b\u5904\u7406\u200b\n    }\n    std::cout &lt;&lt; \"\u200b\u5bfb\u5b9d\u200b\u7ed3\u675f\u200b\uff0c\u200b\u4e00\u5207\u200b\u5df2\u200b\u88ab\u200b\u6e05\u7406\u200b\u5e72\u51c0\u200b\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#6","title":"6. \u200b\u7f16\u5199\u200b\u4f18\u96c5\u200b\u7684\u200b\u6784\u9020\u200b/\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff1a\u200b\u6c5f\u6e56\u200b\u79d8\u7c4d","text":""},{"location":"programming/cpp/noob/class-constructor/#61","title":"6.1 \u200b\u6784\u9020\u51fd\u6570\u200b\u7684\u200b\u9ec4\u91d1\u200b\u6cd5\u5219","text":"\u79d8\u7c4d\u200b \u200b\u8bf4\u660e\u200b \u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b\u738b\u200b \u200b\u7528\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\u4ee3\u66ff\u200b\u8d4b\u503c\u200b\uff0c\u200b\u4e0d\u4f46\u200b\u6548\u7387\u9ad8\u200b\u8fd8\u200b\u80fd\u200b\u521d\u59cb\u5316\u200b\u5e38\u91cf\u200b\u6210\u5458\u200b \u200b\u5f02\u5e38\u200b\u5b89\u5168\u200b \u200b\u6784\u9020\u51fd\u6570\u200b\u8981\u4e48\u200b\u6210\u529f\u200b\u5b8c\u6210\u200b\uff0c\u200b\u8981\u4e48\u200b\u4e0d\u7559\u200b\u4efb\u4f55\u200b\u5783\u573e\u200b\uff08\u200b\u5f02\u5e38\u200b\u65f6\u200b\u4e5f\u200b\u8981\u200b\u6e05\u7406\u200b\u5e72\u51c0\u200b\uff09 \u200b\u4e0d\u8981\u200b\u592a\u200b\u590d\u6742\u200b \u200b\u5927\u4fa0\u200b\u51fa\u573a\u200b\u7b80\u5355\u200b\u5229\u843d\u200b\uff0c\u200b\u590d\u6742\u200b\u4e8b\u60c5\u200b\u4ea4\u7ed9\u200b\u666e\u901a\u200b\u51fd\u6570\u200b \u200b\u8003\u8651\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b \u200b\u73b0\u4ee3\u200bC++\u200b\u6c5f\u6e56\u200b\uff0c\u200b\u8981\u200b\u61c2\u5f97\u200b\u4e0d\u200b\u590d\u5236\u200b\u8d44\u6e90\u200b\u800c\u662f\u200b\u8f6c\u79fb\u200b\u6240\u6709\u6743"},{"location":"programming/cpp/noob/class-constructor/#62","title":"6.2 \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u7684\u200b\u94c1\u8840\u200b\u5b88\u5219","text":"\u79d8\u7c4d\u200b \u200b\u8bf4\u660e\u200b \u200b\u4ece\u4e0d\u200b\u629b\u200b\u5f02\u5e38\u200b \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u4e2d\u200b\u7684\u200b\u5f02\u5e38\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u7a0b\u5e8f\u200b\u5d29\u6e83\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u9001\u846c\u200b\u65f6\u200b\u5927\u558a\u200b\"\u200b\u6709\u9b3c\u200b\"\u200b\u4e00\u6837\u200b\u4e0d\u59a5\u200b \u200b\u57fa\u7c7b\u200b\u865a\u6790\u6784\u200b \u200b\u53ea\u8981\u200b\u4f60\u200b\u7684\u200b\u7c7b\u200b\u53ef\u80fd\u200b\u88ab\u200b\u7ee7\u627f\u200b\uff0c\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u5c31\u200b\u5e94\u8be5\u200b\u662f\u200b\u865a\u200b\u51fd\u6570\u200b \u200b\u53ca\u65f6\u200b\u6e05\u7406\u200b\u8d44\u6e90\u200b \"\u200b\u6709\u501f\u6709\u8fd8\u200b\"\u200b\u662f\u200b\u6c5f\u6e56\u200b\u9053\u4e49\u200b\uff0c\u200b\u501f\u200b\u7684\u200b\u5185\u5b58\u200b\u3001\u200b\u6587\u4ef6\u200b\u3001\u200b\u8fde\u63a5\u200b\u90fd\u200b\u8981\u200b\u8fd8\u200b\u56de\u53bb\u200b \u200b\u8003\u8651\u200b\u79fb\u52a8\u200b\u540e\u200b\u7684\u200b\u72b6\u6001\u200b \u200b\u88ab\u200b\u79fb\u52a8\u200b\u8fc7\u200b\u7684\u200b\u5bf9\u8c61\u200b\u4ecd\u4f1a\u200b\u88ab\u6790\u6784\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5b83\u200b\u5904\u4e8e\u200b\u5b89\u5168\u200b\u72b6\u6001"},{"location":"programming/cpp/noob/class-constructor/#63","title":"6.3 \u200b\u6700\u540e\u200b\u7684\u200b\u6c5f\u6e56\u200b\u5fe0\u544a","text":"<pre><code>// \u200b\u4e00\u4e2a\u200b\u7b26\u5408\u200b\u6c5f\u6e56\u200b\u89c4\u77e9\u200b\u7684\u200b\u7c7b\u200b\nclass GoodCitizen {\npublic:\n    // \u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u7b80\u5355\u660e\u4e86\u200b\uff0c\u200b\u4f7f\u7528\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\n    GoodCitizen(const std::string&amp; name) \n        : name_(name), \n          resource_(new Resource()) {\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u52a0\u5165\u200b\u6c5f\u6e56\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff1a\u200b\u5e72\u51c0\u5229\u843d\u200b\uff0c\u200b\u4e0d\u7559\u200b\u540e\u60a3\u200b\n    ~GoodCitizen() {\n        delete resource_;\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u91d1\u76c6\u6d17\u624b\u200b\uff0c\u200b\u9000\u51fa\u200b\u6c5f\u6e56\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u200b\uff1a\u200b\u6df1\u200b\u590d\u5236\u200b\uff0c\u200b\u4e0d\u200b\u5171\u4eab\u8d44\u6e90\u200b\n    GoodCitizen(const GoodCitizen&amp; other)\n        : name_(other.name_ + \"\u200b\u7684\u200b\u5f92\u5f1f\u200b\"),\n          resource_(new Resource(*other.resource_)) {\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u62dc\u5e08\u5b66\u827a\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u79fb\u52a8\u200b\u6784\u9020\u200b\uff1a\u200b\u8f6c\u79fb\u200b\u8d44\u6e90\u200b\uff0c\u200b\u907f\u514d\u200b\u590d\u5236\u200b\n    GoodCitizen(GoodCitizen&amp;&amp; other) noexcept\n        : name_(std::move(other.name_)),\n          resource_(other.resource_) {\n        other.resource_ = nullptr; // \u200b\u9632\u6b62\u200b\u539f\u200b\u5bf9\u8c61\u200b\u6790\u6784\u200b\u65f6\u200b\u5220\u9664\u200b\u8d44\u6e90\u200b\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u7ee7\u627f\u8863\u94b5\u200b\" &lt;&lt; std::endl;\n    }\n\nprivate:\n    std::string name_;\n    Resource* resource_;\n};\n</code></pre>"},{"location":"programming/cpp/noob/class-constructor/#7","title":"7. \u200b\u7ed3\u8bed\u200b\uff1a\u200b\u6784\u9020\u200b\u4e0e\u6790\u6784\u200b\u7684\u200b\u6b66\u6797\u200b\u79d8\u7c4d","text":"<p>C++\u200b\u4e2d\u200b\u7684\u200b\u6784\u9020\u200b\u548c\u6790\u6784\u200b\u51fd\u6570\u200b\u770b\u4f3c\u200b\u7b80\u5355\u200b\uff0c\u200b\u5b9e\u5219\u200b\u8574\u542b\u200b\u6df1\u610f\u200b\u3002\u200b\u638c\u63e1\u200b\u4e86\u200b\u5b83\u4eec\u200b\u5c31\u200b\u50cf\u200b\u6b66\u6797\u9ad8\u624b\u200b\u638c\u63e1\u200b\u4e86\u200b\u5185\u529f\u200b\u5fc3\u6cd5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u590d\u6742\u200b\u7684\u200b\u6c5f\u6e56\u200b\u4e2d\u200b\u6e38\u5203\u6709\u4f59\u200b\uff0c\u200b\u5199\u51fa\u200b\u5065\u58ee\u200b\u3001\u200b\u9ad8\u6548\u200b\u3001\u200b\u4e0d\u7559\u200b\u5185\u5b58\u200b\u5783\u573e\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p> <p>\u200b\u8bb0\u4f4f\u200b\uff0c\u200b\u4e00\u4e2a\u200b\u597d\u200b\u7684\u200bC++\u200b\u4fa0\u5ba2\u200b\uff1a</p> <ul> <li>\u200b\u6765\u65f6\u200b\u5149\u660e\u6b63\u5927\u200b\uff08\u200b\u6784\u9020\u51fd\u6570\u200b\u505a\u597d\u200b\u521d\u59cb\u5316\u200b\uff09</li> <li>\u200b\u8d70\u65f6\u200b\u4e00\u8eab\u6e05\u767d\u200b\uff08\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u91ca\u653e\u200b\u6240\u6709\u200b\u8d44\u6e90\u200b\uff09</li> <li>\u200b\u8fc7\u7a0b\u200b\u606a\u5b88\u200b\u89c4\u77e9\u200b\uff08\u200b\u9075\u5faa\u200bC++\u200b\u7f16\u7a0b\u200b\u89c4\u8303\u200b\uff09</li> </ul> <p>\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4f60\u200b\u7684\u200b\u4ee3\u7801\u200b\u5c31\u200b\u4f1a\u200b\u53d7\u5230\u200b\u6c5f\u6e56\u200b\u540c\u9053\u200b\u7684\u200b\u5c0a\u656c\u200b\uff0c\u200b\u7a0b\u5e8f\u200b\u4e5f\u200b\u4f1a\u200b\u7a33\u5b9a\u200b\u5982\u200b\u6cf0\u5c71\u200b\uff01</p> <p>\u200b\u5e0c\u671b\u200b\u8fd9\u4efd\u200b\"\u200b\u6784\u9020\u200b\u6790\u6784\u200b\u79d8\u7c4d\u200b\"\u200b\u80fd\u52a9\u200b\u4f60\u200b\u5728\u200bC++\u200b\u6c5f\u6e56\u200b\u4e2d\u200b\u62ab\u8346\u65a9\u68d8\u200b\uff0c\u200b\u6240\u5411\u65e0\u654c\u200b\uff01</p>"},{"location":"programming/cpp/noob/copy/","title":"\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\uff1aC++\u200b\u5bf9\u8c61\u200b\u7684\u200b\"\u200b\u5206\u8eab\u672f\u200b\"\u200b\u8be6\u89e3","text":""},{"location":"programming/cpp/noob/copy/#1","title":"1. \u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u57fa\u672c\u6982\u5ff5","text":"<p>\u200b\u5728\u200bC++\u200b\u7684\u200b\u6c5f\u6e56\u200b\u4e2d\u200b\uff0c\u200b\u5bf9\u8c61\u200b\u62f7\u8d1d\u200b\u662f\u200b\u4e00\u95e8\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\u7684\u200b\"\u200b\u5206\u8eab\u672f\u200b\"\u3002\u200b\u4f46\u200b\u8fd9\u95e8\u200b\u529f\u592b\u200b\u5206\u4e3a\u200b\u4e24\u79cd\u200b\u6d41\u6d3e\u200b\uff1a\u200b\u6d45\u200b\u62f7\u8d1d\u200b\uff08\u200b\u6d45\u529f\u200b\u6d3e\u200b\uff09\u200b\u548c\u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff08\u200b\u6df1\u529f\u200b\u6d3e\u200b\uff09\u3002</p>"},{"location":"programming/cpp/noob/copy/#_1","title":"\u4e24\u79cd\u200b\u5206\u8eab\u672f\u200b\u7684\u200b\u6c5f\u6e56\u200b\u5b9a\u4e49","text":"\u529f\u6cd5\u200b \u200b\u63cf\u8ff0\u200b \u200b\u6d45\u200b\u62f7\u8d1d\u200b \u200b\u6309\u4f4d\u200b\u590d\u5236\u200b\uff0c\u200b\u53ea\u200b\u590d\u5236\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5916\u8868\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u6307\u9488\u200b\u6210\u5458\u200b\uff0c\u200b\u53ea\u200b\u590d\u5236\u200b\u5730\u5740\u200b\u503c\u200b \u200b\u6df1\u200b\u62f7\u8d1d\u200b \u200b\u5b8c\u5168\u200b\u590d\u5236\u200b\uff0c\u200b\u4e0d\u4ec5\u200b\u590d\u5236\u200b\u5bf9\u8c61\u200b\u672c\u8eab\u200b\uff0c\u200b\u8fd8\u200b\u590d\u5236\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u7684\u200b\u6240\u6709\u200b\u5185\u5bb9\u200b <p>![\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u793a\u610f\u56fe\u200b]</p> <pre><code>// \u200b\u60f3\u8c61\u200b\u4e0b\u9762\u200b\u8fd9\u4e2a\u200b\u7b80\u5355\u200b\u56fe\u89e3\u200b\uff1a\n\n// \u200b\u6d45\u200b\u62f7\u8d1d\u200b\uff1a                \u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff1a\n// \u200b\u5bf9\u8c61\u200bA \u2500\u2500\u2510              \u200b\u5bf9\u8c61\u200bA \u2500\u2500\u2510\n//         \u2502                      \u2502\n//         \u2193                      \u2193\n//       \u200b\u8d44\u6e90\u200b1              \u200b\u8d44\u6e90\u200b1(\u200b\u539f\u4ef6\u200b)\n//         \u2191                      \n// \u200b\u5bf9\u8c61\u200bB \u2500\u2500\u2518              \u200b\u5bf9\u8c61\u200bB \u2500\u2500\u2192 \u200b\u8d44\u6e90\u200b1(\u200b\u590d\u5236\u54c1\u200b)\n//\n// \u200b\u6d45\u200b\u62f7\u8d1d\u200b\u540e\u200b\uff0c\u200b\u4e24\u4e2a\u200b\u5bf9\u8c61\u200b\u5171\u4eab\u200b\u4e00\u4e2a\u200b\u8d44\u6e90\u200b\n// \u200b\u6df1\u200b\u62f7\u8d1d\u200b\u540e\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u6709\u200b\u81ea\u5df1\u200b\u72ec\u7acb\u200b\u7684\u200b\u8d44\u6e90\u200b\n</code></pre>"},{"location":"programming/cpp/noob/copy/#2","title":"2. \u200b\u6d45\u200b\u62f7\u8d1d\u200b\uff1a\"\u200b\u5f71\u200b\u5206\u8eab\u200b\u4e4b\u672f\u200b\"","text":"<p>\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u5c31\u200b\u50cf\u200b\u5fcd\u8005\u200b\u7684\u200b\"\u200b\u5f71\u200b\u5206\u8eab\u672f\u200b\"\uff0c\u200b\u770b\u8d77\u6765\u200b\u521b\u9020\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5206\u8eab\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u5206\u8eab\u200b\u548c\u200b\u672c\u5c0a\u200b\u5171\u4eab\u200b\u540c\u200b\u4e00\u5957\u200b\u88c5\u5907\u200b\u3002</p>"},{"location":"programming/cpp/noob/copy/#21","title":"2.1 \u200b\u9ed8\u8ba4\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\uff1a\u200b\u81ea\u5e26\u200b\u6d45\u200b\u62f7\u8d1d","text":"<p>\u200b\u5982\u679c\u200b\u4e0d\u200b\u81ea\u5b9a\u4e49\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u63d0\u4f9b\u200b\u4e00\u4e2a\u200b\u6267\u884c\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u7248\u672c\u200b\uff1a</p> <pre><code>class ShadowClone {\npublic:\n    ShadowClone(const char* name) {\n        namePtr = new char[strlen(name) + 1];\n        strcpy(namePtr, name);\n        std::cout &lt;&lt; namePtr &lt;&lt; \"\u200b\u51fa\u73b0\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    ~ShadowClone() {\n        std::cout &lt;&lt; namePtr &lt;&lt; \"\u200b\u6d88\u5931\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n        delete[] namePtr;  // \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\n    }\n\n    // \u200b\u7f16\u8bd1\u5668\u200b\u7684\u200b\u9ed8\u8ba4\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\u5927\u81f4\u200b\u76f8\u5f53\u4e8e\u200b\uff1a\n    // ShadowClone(const ShadowClone&amp; other) {\n    //     namePtr = other.namePtr;  // \u200b\u53ea\u200b\u590d\u5236\u200b\u6307\u9488\u200b\uff0c\u200b\u4e0d\u200b\u590d\u5236\u200b\u5185\u5bb9\u200b\uff01\n    // }\n\nprivate:\n    char* namePtr;  // \u200b\u6307\u5411\u200b\u52a8\u6001\u200b\u5206\u914d\u5185\u5b58\u200b\u7684\u200b\u6307\u9488\u200b\n};\n\nvoid troubleMaker() {\n    ShadowClone ninja(\"\u200b\u5fcd\u8005\u200b\u5c0f\u592a\u90ce\u200b\");\n\n    {\n        ShadowClone clone = ninja;  // \u200b\u4f7f\u7528\u200b\u9ed8\u8ba4\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b(\u200b\u6d45\u200b\u62f7\u8d1d\u200b)\n        std::cout &lt;&lt; \"\u200b\u5206\u8eab\u200b\u5728\u200b\u6218\u6597\u200b\uff01\" &lt;&lt; std::endl;\n    }  // clone\u200b\u88ab\u200b\u9500\u6bc1\u200b\uff0c\u200b\u8c03\u7528\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff0c\u200b\u91ca\u653e\u200bnamePtr\u200b\u6307\u5411\u200b\u7684\u200b\u5185\u5b58\u200b\n\n    // \u200b\u707e\u96be\u200b\u5373\u5c06\u200b\u53d1\u751f\u200b...\n    std::cout &lt;&lt; \"\u200b\u539f\u200b\u5fcd\u8005\u200b\u60f3\u200b\u7ee7\u7eed\u200b\u6218\u6597\u200b...\" &lt;&lt; std::endl;\n    // \u200b\u539f\u200b\u5fcd\u8005\u200b\u7684\u200bnamePtr\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u91ca\u653e\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4f1a\u200b\u53d1\u751f\u200b\"\u200b\u4e8c\u6b21\u200b\u91ca\u653e\u200b\"\u200b\u9519\u8bef\u200b\uff01\n}  // ninja\u200b\u88ab\u200b\u9500\u6bc1\u200b\uff0c\u200b\u518d\u6b21\u200b\u5c1d\u8bd5\u200b\u91ca\u653e\u200b\u5df2\u7ecf\u200b\u88ab\u200b\u91ca\u653e\u200b\u8fc7\u200b\u7684\u200b\u5185\u5b58\u200b -&gt; \ud83d\udca5\u200b\u5d29\u6e83\u200b\n</code></pre>"},{"location":"programming/cpp/noob/copy/#22","title":"2.2 \u200b\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u707e\u96be\u200b\u73b0\u573a","text":"<p>\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u95ee\u9898\u200b\u5c31\u200b\u50cf\u200b\u4e24\u4e2a\u200b\u4eba\u200b\u62ff\u200b\u7740\u200b\u540c\u4e00\u200b\u628a\u200b\u94a5\u5319\u200b\uff0c\u200b\u5176\u4e2d\u200b\u4e00\u4e2a\u200b\u4eba\u200b\u6254\u6389\u200b\u4e86\u200b\u94a5\u5319\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u4eba\u200b\u5374\u200b\u8fd8\u200b\u4ee5\u4e3a\u200b\u94a5\u5319\u200b\u5728\u200b\u81ea\u5df1\u200b\u53e3\u888b\u200b\u91cc\u200b\uff1a</p> <ol> <li>\u200b\u8d44\u6e90\u200b\u88ab\u200b\u91cd\u590d\u200b\u91ca\u653e\u200b\uff1a\u200b\u5f53\u200b\u4e24\u4e2a\u200b\u5bf9\u8c61\u200b\u6790\u6784\u200b\u65f6\u200b\uff0c\u200b\u540c\u4e00\u200b\u5757\u5185\u5b58\u200b\u88ab\u200b\u91ca\u653e\u200b\u4e24\u6b21\u200b</li> <li>\u200b\u79bb\u5f00\u200b\u4f5c\u7528\u57df\u200b\u540e\u200b\u8bbf\u95ee\u200b\u5931\u6548\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u6790\u6784\u200b\u540e\u200b\uff0c\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u7ee7\u7eed\u200b\u4f7f\u7528\u200b\u5df2\u200b\u91ca\u653e\u200b\u7684\u200b\u8d44\u6e90\u200b</li> <li>\u200b\u5355\u65b9\u9762\u200b\u4fee\u6539\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u6240\u6709\u200b\u526f\u672c\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\u4fee\u6539\u200b\u8d44\u6e90\u200b\uff0c\u200b\u5176\u4ed6\u200b\u5bf9\u8c61\u200b\u4e5f\u200b\u4f1a\u200b\u53d7\u200b\u5f71\u54cd\u200b</li> </ol>"},{"location":"programming/cpp/noob/copy/#23","title":"2.3 \u200b\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u9002\u7528\u200b\u573a\u666f","text":"<p>\u200b\u5c3d\u7ba1\u200b\u95ee\u9898\u200b\u591a\u591a\u200b\uff0c\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u5728\u200b\u67d0\u4e9b\u200b\u573a\u666f\u200b\u4e0b\u200b\u4ecd\u7136\u200b\u6709\u7528\u200b\uff1a</p> <ul> <li>\u200b\u4e0d\u200b\u542b\u200b\u52a8\u6001\u200b\u8d44\u6e90\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff1a\u200b\u5982\u679c\u200b\u7c7b\u200b\u53ea\u200b\u5305\u542b\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u6216\u200b\u4e0d\u200b\u9700\u8981\u200b\u7ba1\u7406\u200b\u7684\u200b\u8d44\u6e90\u200b</li> <li>\u200b\u523b\u610f\u200b\u9700\u8981\u200b\u5171\u4eab\u8d44\u6e90\u200b\uff1a\u200b\u6bd4\u5982\u200b\u8bbe\u8ba1\u200b\u5171\u4eab\u200b\u72b6\u6001\u200b\u7684\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u5c01\u88c5\u200b\u4e86\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u7684\u200b\u8d44\u6e90\u7ba1\u7406\u200b\uff1a\u200b\u5982\u200b\u67d0\u4e9b\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u5b9e\u73b0\u200b</li> </ul>"},{"location":"programming/cpp/noob/copy/#3","title":"3. \u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff1a\"\u200b\u771f\u200b\u00b7\u200b\u5206\u8eab\u200b\u4e4b\u672f\u200b\"","text":"<p>\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u5c31\u200b\u50cf\u200b\"\u200b\u771f\u200b\u00b7\u200b\u5206\u8eab\u672f\u200b\"\uff0c\u200b\u521b\u9020\u200b\u7684\u200b\u4e0d\u4ec5\u200b\u662f\u200b\u5916\u8868\u200b\u76f8\u540c\u200b\u7684\u200b\u5206\u8eab\u200b\uff0c\u200b\u8fde\u200b\u88c5\u5907\u200b\u90fd\u200b\u662f\u200b\u5168\u65b0\u200b\u590d\u5236\u200b\u7684\u200b\u4e00\u5957\u200b\u3002</p>"},{"location":"programming/cpp/noob/copy/#31","title":"3.1 \u200b\u81ea\u5b9a\u4e49\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u6df1\u200b\u62f7\u8d1d","text":"<pre><code>class DeepClone {\npublic:\n    DeepClone(const char* name) {\n        namePtr = new char[strlen(name) + 1];\n        strcpy(namePtr, name);\n        std::cout &lt;&lt; namePtr &lt;&lt; \"\u200b\u51fa\u73b0\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6df1\u200b\u62f7\u8d1d\u200b\u7684\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\n    DeepClone(const DeepClone&amp; other) {\n        // \u200b\u5206\u914d\u200b\u65b0\u200b\u5185\u5b58\u200b\n        namePtr = new char[strlen(other.namePtr) + 1];\n        // \u200b\u590d\u5236\u200b\u5185\u5bb9\u200b\n        strcpy(namePtr, other.namePtr);\n        std::cout &lt;&lt; namePtr &lt;&lt; \"\u200b\u7684\u200b\u5b8c\u7f8e\u200b\u590d\u5236\u54c1\u200b\u51fa\u73b0\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    ~DeepClone() {\n        std::cout &lt;&lt; namePtr &lt;&lt; \"\u200b\u6d88\u5931\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n        delete[] namePtr;\n    }\n\nprivate:\n    char* namePtr;\n};\n\nvoid safeCloning() {\n    DeepClone ninja(\"\u200b\u5fcd\u8005\u200b\u5c0f\u592a\u90ce\u200b\");\n\n    {\n        DeepClone clone = ninja;  // \u200b\u8c03\u7528\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\n        std::cout &lt;&lt; \"\u200b\u5206\u8eab\u200b\u5728\u200b\u6218\u6597\u200b\uff01\" &lt;&lt; std::endl;\n    }  // clone\u200b\u88ab\u200b\u5b89\u5168\u200b\u9500\u6bc1\u200b\uff0c\u200b\u91ca\u653e\u200b\u81ea\u5df1\u200b\u7684\u200bnamePtr\n\n    // \u200b\u8fd9\u6b21\u200b\u4e0d\u4f1a\u200b\u51fa\u200b\u95ee\u9898\u200b\n    std::cout &lt;&lt; \"\u200b\u539f\u200b\u5fcd\u8005\u200b\u7ee7\u7eed\u200b\u6218\u6597\u200b\uff01\" &lt;&lt; std::endl;\n}  // ninja\u200b\u88ab\u200b\u5b89\u5168\u200b\u9500\u6bc1\u200b\uff0c\u200b\u91ca\u653e\u200b\u81ea\u5df1\u200b\u7684\u200bnamePtr\n</code></pre>"},{"location":"programming/cpp/noob/copy/#32","title":"3.2 \u200b\u6df1\u200b\u62f7\u8d1d\u200b\u4e0e\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26","text":"<p>\u200b\u522b\u5fd8\u4e86\u200b\uff0c\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u8fd8\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\uff01</p> <pre><code>class DeepCloneWithAssignment {\npublic:\n    // \u200b\u6784\u9020\u51fd\u6570\u200b\n    DeepCloneWithAssignment(const char* name) {\n        namePtr = new char[strlen(name) + 1];\n        strcpy(namePtr, name);\n    }\n\n    // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\uff08\u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff09\n    DeepCloneWithAssignment(const DeepCloneWithAssignment&amp; other) {\n        namePtr = new char[strlen(other.namePtr) + 1];\n        strcpy(namePtr, other.namePtr);\n    }\n\n    // \u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\uff08\u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff09\n    DeepCloneWithAssignment&amp; operator=(const DeepCloneWithAssignment&amp; other) {\n        // \u200b\u81ea\u6211\u200b\u8d4b\u503c\u200b\u68c0\u67e5\u200b\n        if (this == &amp;other) return *this;\n\n        // 1. \u200b\u91ca\u653e\u200b\u65e7\u200b\u8d44\u6e90\u200b\n        delete[] namePtr;\n\n        // 2. \u200b\u5206\u914d\u200b\u65b0\u200b\u5185\u5b58\u200b\n        namePtr = new char[strlen(other.namePtr) + 1];\n\n        // 3. \u200b\u590d\u5236\u200b\u6570\u636e\u200b\n        strcpy(namePtr, other.namePtr);\n\n        // 4. \u200b\u8fd4\u56de\u200b\u81ea\u200b\u5f15\u7528\u200b\n        return *this;\n    }\n\n    // \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    ~DeepCloneWithAssignment() {\n        delete[] namePtr;\n    }\n\nprivate:\n    char* namePtr;\n};\n\nvoid testAssignment() {\n    DeepCloneWithAssignment ninja1(\"\u200b\u5fcd\u8005\u200b\u5c0f\u592a\u90ce\u200b\");\n    DeepCloneWithAssignment ninja2(\"\u200b\u5fcd\u8005\u200b\u82b1\u5b50\u200b\");\n\n    ninja2 = ninja1;  // \u200b\u8c03\u7528\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u6267\u884c\u200b\u6df1\u200b\u62f7\u8d1d\u200b\n\n    // \u200b\u4e24\u4e2a\u200b\u5fcd\u8005\u200b\u73b0\u5728\u200b\u6709\u200b\u76f8\u540c\u200b\u7684\u200b\u540d\u5b57\u200b\uff0c\u200b\u4f46\u200b\u5b58\u50a8\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u5185\u5b58\u200b\u4f4d\u7f6e\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/copy/#4","title":"4. \u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u5b9e\u6218\u200b\u6848\u4f8b","text":""},{"location":"programming/cpp/noob/copy/#41","title":"4.1 \u200b\u591a\u79cd\u200b\u8d44\u6e90\u200b\u7684\u200b\u6df1\u200b\u62f7\u8d1d","text":"<p>\u200b\u73b0\u5b9e\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u200b\u5f80\u5f80\u200b\u5305\u542b\u200b\u591a\u79cd\u200b\u8d44\u6e90\u200b\uff0c\u200b\u9700\u8981\u200b\u5168\u9762\u200b\u8003\u8651\u200b\u6df1\u200b\u62f7\u8d1d\u200b\uff1a</p> <pre><code>class Warrior {\npublic:\n    // \u200b\u6784\u9020\u51fd\u6570\u200b\n    Warrior(const char* name, int weaponCount) \n        : weaponCount_(weaponCount) {\n\n        // \u200b\u590d\u5236\u200b\u540d\u5b57\u200b\n        name_ = new char[strlen(name) + 1];\n        strcpy(name_, name);\n\n        // \u200b\u5206\u914d\u200b\u6b66\u5668\u200b\u6570\u7ec4\u200b\n        weapons_ = new std::string[weaponCount];\n\n        // \u200b\u521d\u59cb\u5316\u200b\u6b66\u5668\u200b\n        for (int i = 0; i &lt; weaponCount; i++) {\n            weapons_[i] = \"\u200b\u672a\u547d\u540d\u200b\u6b66\u5668\u200b\" + std::to_string(i);\n        }\n\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u6b66\u58eb\u200b\u8bde\u751f\u200b\uff0c\u200b\u62e5\u6709\u200b\" &lt;&lt; weaponCount &lt;&lt; \"\u200b\u4ef6\u200b\u6b66\u5668\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6df1\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\n    Warrior(const Warrior&amp; other) \n        : weaponCount_(other.weaponCount_) {\n\n        // \u200b\u590d\u5236\u200b\u540d\u5b57\u200b\n        name_ = new char[strlen(other.name_) + 1];\n        strcpy(name_, other.name_);\n\n        // \u200b\u590d\u5236\u200b\u6b66\u5668\u200b\n        weapons_ = new std::string[weaponCount_];\n        for (int i = 0; i &lt; weaponCount_; i++) {\n            weapons_[i] = other.weapons_[i] + \"(\u200b\u590d\u5236\u54c1\u200b)\";\n        }\n\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u6b66\u58eb\u200b\u7684\u200b\u590d\u5236\u54c1\u200b\u8bde\u751f\u200b\u4e86\u200b\uff01\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n    Warrior&amp; operator=(const Warrior&amp; other) {\n        if (this == &amp;other) return *this;\n\n        // \u200b\u91ca\u653e\u200b\u65e7\u200b\u8d44\u6e90\u200b\n        delete[] name_;\n        delete[] weapons_;\n\n        // \u200b\u590d\u5236\u200b\u65b0\u200b\u6570\u636e\u200b\n        weaponCount_ = other.weaponCount_;\n\n        name_ = new char[strlen(other.name_) + 1];\n        strcpy(name_, other.name_);\n\n        weapons_ = new std::string[weaponCount_];\n        for (int i = 0; i &lt; weaponCount_; i++) {\n            weapons_[i] = other.weapons_[i] + \"(\u200b\u8d4b\u503c\u200b\u54c1\u200b)\";\n        }\n\n        return *this;\n    }\n\n    // \u200b\u4fee\u6539\u200b\u6b66\u5668\u200b\u540d\u200b\n    void renameWeapon(int index, const std::string&amp; newName) {\n        if (index &gt;= 0 &amp;&amp; index &lt; weaponCount_) {\n            weapons_[index] = newName;\n        }\n    }\n\n    // \u200b\u663e\u793a\u4fe1\u606f\u200b\n    void display() const {\n        std::cout &lt;&lt; \"\u200b\u6b66\u58eb\u200b: \" &lt;&lt; name_ &lt;&lt; \", \u200b\u6b66\u5668\u200b:\" &lt;&lt; std::endl;\n        for (int i = 0; i &lt; weaponCount_; i++) {\n            std::cout &lt;&lt; \" - \" &lt;&lt; weapons_[i] &lt;&lt; std::endl;\n        }\n    }\n\n    // \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    ~Warrior() {\n        std::cout &lt;&lt; name_ &lt;&lt; \"\u200b\u6b66\u58eb\u200b\u89e3\u7532\u5f52\u7530\u200b\uff01\" &lt;&lt; std::endl;\n        delete[] name_;\n        delete[] weapons_;\n    }\n\nprivate:\n    char* name_;\n    std::string* weapons_;\n    int weaponCount_;\n};\n\nvoid warriorTest() {\n    Warrior miyamoto(\"\u200b\u5bab\u672c\u200b\u6b66\u85cf\u200b\", 2);\n    miyamoto.renameWeapon(0, \"\u200b\u592a\u5200\u200b\");\n    miyamoto.renameWeapon(1, \"\u200b\u80c1\u5dee\u200b\");\n    miyamoto.display();\n\n    // \u200b\u4f7f\u7528\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u521b\u5efa\u200b\u526f\u672c\u200b\n    Warrior clone = miyamoto;\n    clone.display();  // \u200b\u6b66\u5668\u200b\u4f1a\u200b\u6709\u200b\"(\u200b\u590d\u5236\u54c1\u200b)\"\u200b\u540e\u7f00\u200b\n\n    // \u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u6b66\u58eb\u200b\u7684\u200b\u6b66\u5668\u200b\n    miyamoto.renameWeapon(0, \"\u200b\u65b0\u592a\u5200\u200b\");\n\n    // \u200b\u9a8c\u8bc1\u200b\u53d8\u5316\u200b\u662f\u5426\u200b\u72ec\u7acb\u200b\n    std::cout &lt;&lt; \"\u200b\u539f\u200b\u6b66\u58eb\u200b\u4fee\u6539\u200b\u6b66\u5668\u200b\u540e\u200b:\" &lt;&lt; std::endl;\n    miyamoto.display();\n    std::cout &lt;&lt; \"\u200b\u590d\u5236\u200b\u6b66\u58eb\u200b\u4e0d\u200b\u53d7\u200b\u5f71\u54cd\u200b:\" &lt;&lt; std::endl;\n    clone.display();\n\n    // \u200b\u6d4b\u8bd5\u200b\u8d4b\u503c\u200b\n    Warrior sasaki(\"\u200b\u4f50\u4f50\u6728\u200b\u5c0f\u200b\u6b21\u90ce\u200b\", 1);\n    sasaki.renameWeapon(0, \"\u200b\u957f\u5200\u200b\");\n\n    std::cout &lt;&lt; \"\u200b\u8d4b\u503c\u200b\u524d\u200b:\" &lt;&lt; std::endl;\n    sasaki.display();\n\n    sasaki = miyamoto;  // \u200b\u8c03\u7528\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n\n    std::cout &lt;&lt; \"\u200b\u8d4b\u503c\u200b\u540e\u200b:\" &lt;&lt; std::endl;\n    sasaki.display();  // \u200b\u6b66\u5668\u200b\u4f1a\u200b\u6709\u200b\"(\u200b\u8d4b\u503c\u200b\u54c1\u200b)\"\u200b\u540e\u7f00\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/copy/#42","title":"4.2 \u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u6027\u80fd\u200b\u5bf9\u6bd4","text":"<p>\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u867d\u7136\u200b\u5b89\u5168\u200b\uff0c\u200b\u4f46\u200b\u6709\u65f6\u200b\u4f1a\u200b\u5e26\u6765\u200b\u6027\u80fd\u200b\u5f00\u9500\u200b\uff1a</p> \u200b\u529f\u80fd\u200b \u200b\u6d45\u200b\u62f7\u8d1d\u200b \u200b\u6df1\u200b\u62f7\u8d1d\u200b \u200b\u901f\u5ea6\u200b \u200b\u5feb\u200b\uff08\u200b\u53ea\u200b\u590d\u5236\u200b\u6307\u9488\u200b\uff09 \u200b\u6162\u200b\uff08\u200b\u9700\u200b\u5206\u914d\u5185\u5b58\u200b\u5e76\u200b\u590d\u5236\u200b\u6570\u636e\u200b\uff09 \u200b\u5185\u5b58\u200b\u5360\u7528\u200b \u200b\u4f4e\u200b\uff08\u200b\u5171\u4eab\u8d44\u6e90\u200b\uff09 \u200b\u9ad8\u200b\uff08\u200b\u6bcf\u4e2a\u200b\u526f\u672c\u200b\u6709\u200b\u72ec\u7acb\u200b\u8d44\u6e90\u200b\uff09 \u200b\u5b89\u5168\u6027\u200b \u200b\u4f4e\u200b\uff08\u200b\u8d44\u6e90\u5171\u4eab\u200b\u5bfc\u81f4\u200b\u95ee\u9898\u200b\uff09 \u200b\u9ad8\u200b\uff08\u200b\u8d44\u6e90\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\uff09 \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u4e34\u65f6\u200b\u5bf9\u8c61\u200b\u3001\u200b\u53ea\u8bfb\u200b\u8bbf\u95ee\u200b \u200b\u9700\u200b\u72ec\u7acb\u200b\u4fee\u6539\u200b\u8d44\u6e90\u200b\u7684\u200b\u60c5\u51b5"},{"location":"programming/cpp/noob/copy/#5","title":"5. \u200b\u4f55\u65f6\u200b\u9009\u62e9\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\uff1f","text":""},{"location":"programming/cpp/noob/copy/#51","title":"5.1 \u200b\u4f7f\u7528\u200b\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u60c5\u51b5","text":"<ol> <li> <p>\u200b\u8f7b\u91cf\u7ea7\u200b\u590d\u5236\u200b\uff1a\u200b\u5f53\u200b\u5bf9\u8c61\u200b\u5f88\u5927\u200b\u4f46\u200b\u53ea\u200b\u9700\u200b\u4e34\u65f6\u200b\u8bbf\u95ee\u200b\u65f6\u200b</p> </li> <li> <p>\u200b\u5171\u4eab\u200b\u8bed\u4e49\u200b\u660e\u786e\u200b\uff1a\u200b\u5982\u200b\u8bbe\u8ba1\u6a21\u5f0f\u200b\u4e2d\u200b\u7684\u200b\u4eab\u5143\u200b\u6a21\u5f0f\u200b(Flyweight)</p> </li> <li>\u200b\u53ea\u8bfb\u200b\u8d44\u6e90\u200b\uff1a\u200b\u5f53\u200b\u591a\u4e2a\u200b\u5bf9\u8c61\u200b\u53ea\u200b\u9700\u200b\u8bfb\u53d6\u200b\u5171\u4eab\u8d44\u6e90\u200b\u800c\u200b\u4e0d\u200b\u4fee\u6539\u200b\u65f6\u200b</li> <li>\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u7cfb\u7edf\u200b\uff1a\u200b\u5df2\u6709\u200b\u8d44\u6e90\u7ba1\u7406\u200b\u7cfb\u7edf\u200b\u8ddf\u8e2a\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u7684\u200b\u60c5\u51b5\u200b</li> </ol>"},{"location":"programming/cpp/noob/copy/#52","title":"5.2 \u200b\u4f7f\u7528\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u7684\u200b\u60c5\u51b5","text":"<ol> <li>\u200b\u8d44\u6e90\u200b\u72ec\u7acb\u200b\u4fee\u6539\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u9700\u8981\u200b\u72ec\u7acb\u200b\u4fee\u6539\u200b\u81ea\u5df1\u200b\u7684\u200b\u8d44\u6e90\u200b</li> <li>\u200b\u907f\u514d\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u51b2\u7a81\u200b\uff1a\u200b\u9632\u6b62\u200b\u591a\u6b21\u200b\u91ca\u653e\u200b\u540c\u4e00\u200b\u8d44\u6e90\u200b</li> <li>\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u8003\u8651\u200b\uff1a\u200b\u591a\u7ebf\u7a0b\u200b\u73af\u5883\u200b\u4e0b\u200b\u907f\u514d\u200b\u8d44\u6e90\u200b\u7ade\u4e89\u200b</li> <li>\u200b\u751f\u547d\u5468\u671f\u200b\u4e0d\u53ef\u200b\u9884\u6d4b\u200b\uff1a\u200b\u5bf9\u8c61\u200b\u751f\u547d\u5468\u671f\u200b\u76f8\u4e92\u200b\u72ec\u7acb\u200b\u65f6\u200b</li> </ol>"},{"location":"programming/cpp/noob/copy/#53-cow","title":"5.3 \u200b\u6298\u4e2d\u200b\u65b9\u6848\u200b\uff1a\u200b\u5199\u65f6\u200b\u590d\u5236\u200b(COW)","text":"<p>\u200b\u5199\u65f6\u200b\u590d\u5236\u200b(Copy-On-Write)\u200b\u662f\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\"\u200b\u592a\u6781\u62f3\u200b\"\u2014\u2014\u200b\u521a\u67d4\u5e76\u6d4e\u200b\uff1a</p> <pre><code>class CowString {\npublic:\n    // \u200b\u6784\u9020\u51fd\u6570\u200b\n    CowString(const char* str) {\n        data_ = new StringData(str);\n    }\n\n    // \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b - \u200b\u6d45\u200b\u62f7\u8d1d\u200b\u52a0\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\n    CowString(const CowString&amp; other) : data_(other.data_) {\n        data_-&gt;addRef();\n    }\n\n    // \u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n    CowString&amp; operator=(const CowString&amp; other) {\n        if (this != &amp;other) {\n            // \u200b\u51cf\u5c11\u200b\u5f53\u524d\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\n            release();\n\n            // \u200b\u589e\u52a0\u200b\u65b0\u200b\u7684\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\n            data_ = other.data_;\n            data_-&gt;addRef();\n        }\n        return *this;\n    }\n\n    // \u200b\u4fee\u6539\u200b\u5b57\u7b26\u200b - \u200b\u5199\u65f6\u200b\u590d\u5236\u200b!\n    void setChar(size_t index, char c) {\n        // \u200b\u5982\u679c\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b&gt;1\uff0c\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u526f\u672c\u200b\n        if (data_-&gt;refCount() &gt; 1) {\n            StringData* newData = new StringData(*data_);\n            release();\n            data_ = newData;\n        }\n\n        // \u200b\u73b0\u5728\u200b\u53ef\u4ee5\u200b\u5b89\u5168\u200b\u4fee\u6539\u200b\n        if (index &lt; data_-&gt;length()) {\n            data_-&gt;setChar(index, c);\n        }\n    }\n\n    // \u200b\u83b7\u53d6\u200b\u5b57\u7b26\u4e32\u200b\n    const char* c_str() const {\n        return data_-&gt;c_str();\n    }\n\n    // \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    ~CowString() {\n        release();\n    }\n\nprivate:\n    // \u200b\u91ca\u653e\u200b\u5f53\u524d\u200b\u6570\u636e\u200b\n    void release() {\n        if (data_-&gt;decRef() == 0) {\n            delete data_;\n        }\n    }\n\n    // \u200b\u5185\u90e8\u200b\u6570\u636e\u200b\u7c7b\u200b\n    class StringData {\n    public:\n        StringData(const char* str) {\n            size_ = strlen(str);\n            data_ = new char[size_ + 1];\n            strcpy(data_, str);\n            refs_ = 1;\n        }\n\n        // \u200b\u590d\u5236\u200b\u6784\u9020\u200b\n        StringData(const StringData&amp; other) {\n            size_ = other.size_;\n            data_ = new char[size_ + 1];\n            strcpy(data_, other.data_);\n            refs_ = 1;\n        }\n\n        // \u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u7ba1\u7406\u200b\n        void addRef() { ++refs_; }\n        int decRef() { return --refs_; }\n        int refCount() const { return refs_; }\n\n        // \u200b\u6570\u636e\u200b\u8bbf\u95ee\u200b\n        size_t length() const { return size_; }\n        const char* c_str() const { return data_; }\n\n        // \u200b\u4fee\u6539\u200b\u5b57\u7b26\u200b\n        void setChar(size_t index, char c) {\n            if (index &lt; size_) {\n                data_[index] = c;\n            }\n        }\n\n        // \u200b\u6790\u6784\u200b\n        ~StringData() {\n            delete[] data_;\n        }\n\n    private:\n        char* data_;\n        size_t size_;\n        int refs_;  // \u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\n    };\n\n    StringData* data_;\n};\n\nvoid testCOW() {\n    CowString s1(\"Hello\");\n    CowString s2 = s1;  // \u200b\u6d45\u200b\u62f7\u8d1d\u200b+\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\n\n    std::cout &lt;&lt; \"s1: \" &lt;&lt; s1.c_str() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"s2: \" &lt;&lt; s2.c_str() &lt;&lt; std::endl;\n\n    // \u200b\u4fee\u6539\u200bs2\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u5199\u65f6\u200b\u590d\u5236\u200b\n    s2.setChar(0, 'J');\n\n    std::cout &lt;&lt; \"\u200b\u4fee\u6539\u200b\u540e\u200b:\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"s1: \" &lt;&lt; s1.c_str() &lt;&lt; std::endl;  // \u200b\u4ecd\u7136\u200b\u662f\u200b\"Hello\"\n    std::cout &lt;&lt; \"s2: \" &lt;&lt; s2.c_str() &lt;&lt; std::endl;  // \u200b\u53d8\u6210\u200b\u4e86\u200b\"Jello\"\n}\n</code></pre> <p>COW\u200b\u7684\u200b\u4f18\u7f3a\u70b9\u200b\uff1a</p> \u200b\u7279\u6027\u200b \u200b\u8bf4\u660e\u200b \u200b\u4f18\u70b9\u200b 1. \u200b\u5ef6\u8fdf\u200b\u590d\u5236\u200b\uff0c\u200b\u8282\u7701\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u5185\u5b58\u200b\u5206\u914d\u200b2. \u200b\u53ea\u8bfb\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u6027\u80fd\u200b\u63a5\u8fd1\u200b\u6d45\u200b\u62f7\u8d1d\u200b3. \u200b\u4fee\u6539\u200b\u65f6\u200b\u5b89\u5168\u6027\u200b\u4e0e\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u76f8\u540c\u200b \u200b\u7f3a\u70b9\u200b 1. \u200b\u5b9e\u73b0\u200b\u590d\u6742\u5ea6\u200b\u9ad8\u200b2. \u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b\u7ba1\u7406\u200b\u6709\u200b\u5f00\u9500\u200b3. \u200b\u591a\u7ebf\u7a0b\u200b\u73af\u5883\u200b\u4e0b\u200b\u9700\u8981\u200b\u989d\u5916\u200b\u540c\u6b65"},{"location":"programming/cpp/noob/copy/#6-c","title":"6. \u200b\u73b0\u4ee3\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u62f7\u8d1d\u200b\u63a7\u5236","text":""},{"location":"programming/cpp/noob/copy/#61-rule-of-three","title":"6.1 Rule of Three\uff08\u200b\u4e09\u200b\u6cd5\u5219\u200b\uff09","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u9700\u8981\u200b\u81ea\u5b9a\u4e49\u200b\u4efb\u4f55\u200b\u4e00\u4e2a\u200b\uff1a\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\u3001\u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\u6216\u200b\u62f7\u8d1d\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\uff0c\u200b\u90a3\u4e48\u200b\u4f60\u200b\u5f88\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u81ea\u5b9a\u4e49\u200b\u6240\u6709\u200b\u4e09\u4e2a\u200b\u3002</p> <pre><code>class RuleOfThree {\npublic:\n    RuleOfThree(const char* data) {\n        size_ = strlen(data) + 1;\n        data_ = new char[size_];\n        strcpy(data_, data);\n    }\n\n    // 1. \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    ~RuleOfThree() {\n        delete[] data_;\n    }\n\n    // 2. \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\n    RuleOfThree(const RuleOfThree&amp; other) {\n        size_ = other.size_;\n        data_ = new char[size_];\n        strcpy(data_, other.data_);\n    }\n\n    // 3. \u200b\u62f7\u8d1d\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n    RuleOfThree&amp; operator=(const RuleOfThree&amp; other) {\n        if (this != &amp;other) {\n            delete[] data_;\n            size_ = other.size_;\n            data_ = new char[size_];\n            strcpy(data_, other.data_);\n        }\n        return *this;\n    }\n\nprivate:\n    char* data_;\n    size_t size_;\n};\n</code></pre>"},{"location":"programming/cpp/noob/copy/#62-rule-of-five-c11","title":"6.2 Rule of Five\uff08\u200b\u4e94\u200b\u6cd5\u5219\u200b\uff09- C++11\u200b\u53ca\u200b\u4ee5\u540e","text":"<p>\u200b\u73b0\u4ee3\u200bC++\u200b\u5f15\u5165\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b\u540e\u200b\uff0c\u200b\u4e09\u200b\u6cd5\u5219\u200b\u6269\u5c55\u200b\u4e3a\u200b\u4e94\u200b\u6cd5\u5219\u200b\uff1a</p> <pre><code>class RuleOfFive {\npublic:\n    RuleOfFive(const char* data) {\n        size_ = strlen(data) + 1;\n        data_ = new char[size_];\n        strcpy(data_, data);\n    }\n\n    // 1. \u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    ~RuleOfFive() {\n        delete[] data_;\n    }\n\n    // 2. \u200b\u62f7\u8d1d\u200b\u6784\u9020\u51fd\u6570\u200b\n    RuleOfFive(const RuleOfFive&amp; other) {\n        size_ = other.size_;\n        data_ = new char[size_];\n        strcpy(data_, other.data_);\n    }\n\n    // 3. \u200b\u62f7\u8d1d\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n    RuleOfFive&amp; operator=(const RuleOfFive&amp; other) {\n        if (this != &amp;other) {\n            delete[] data_;\n            size_ = other.size_;\n            data_ = new char[size_];\n            strcpy(data_, other.data_);\n        }\n        return *this;\n    }\n\n    // 4. \u200b\u79fb\u52a8\u200b\u6784\u9020\u51fd\u6570\u200b (\u200b\u6d45\u200b\u62f7\u8d1d\u200b+\u200b\u8d44\u6e90\u8f6c\u79fb\u200b)\n    RuleOfFive(RuleOfFive&amp;&amp; other) noexcept\n        : data_(other.data_), size_(other.size_) {\n        other.data_ = nullptr;\n        other.size_ = 0;\n    }\n\n    // 5. \u200b\u79fb\u52a8\u200b\u8d4b\u503c\u200b\u8fd0\u7b97\u7b26\u200b\n    RuleOfFive&amp; operator=(RuleOfFive&amp;&amp; other) noexcept {\n        if (this != &amp;other) {\n            delete[] data_;\n\n            data_ = other.data_;\n            size_ = other.size_;\n\n            other.data_ = nullptr;\n            other.size_ = 0;\n        }\n        return *this;\n    }\n\nprivate:\n    char* data_;\n    size_t size_;\n};\n</code></pre>"},{"location":"programming/cpp/noob/copy/#63-rule-of-zero","title":"6.3 Rule of Zero\uff08\u200b\u96f6\u200b\u6cd5\u5219\u200b\uff09","text":"<p>\u200b\u66f4\u200b\u73b0\u4ee3\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u8ba9\u200b\u6807\u51c6\u200b\u5bb9\u5668\u200b\u548c\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u4e3a\u200b\u4f60\u200b\u7ba1\u7406\u200b\u8d44\u6e90\u200b\uff1a</p> <pre><code>class RuleOfZero {\npublic:\n    RuleOfZero(const std::string&amp; data) \n        : data_(data) {\n    }\n\n    // \u200b\u4e0d\u200b\u9700\u8981\u200b\u58f0\u660e\u200b\u7279\u6b8a\u200b\u6210\u5458\u200b\u51fd\u6570\u200b:\n    // - \u200b\u4e0d\u200b\u9700\u8981\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n    // - \u200b\u4e0d\u200b\u9700\u8981\u200b\u62f7\u8d1d\u200b\u6784\u9020\u200b\n    // - \u200b\u4e0d\u200b\u9700\u8981\u200b\u62f7\u8d1d\u200b\u8d4b\u503c\u200b\n    // - \u200b\u4e0d\u200b\u9700\u8981\u200b\u79fb\u52a8\u200b\u6784\u9020\u200b\n    // - \u200b\u4e0d\u200b\u9700\u8981\u200b\u79fb\u52a8\u200b\u8d4b\u503c\u200b\n\n    // \u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u6240\u6709\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\uff0c\n    // \u200b\u5e76\u4e14\u200bstd::string\u200b\u4f1a\u200b\u6b63\u786e\u5904\u7406\u200b\u81ea\u5df1\u200b\u7684\u200b\u6df1\u200b\u62f7\u8d1d\u200b\n\nprivate:\n    std::string data_;  // \u200b\u4f7f\u7528\u200b\u6807\u51c6\u200b\u5e93\u7c7b\u200b\u7ba1\u7406\u200b\u8d44\u6e90\u200b\n};\n</code></pre>"},{"location":"programming/cpp/noob/copy/#7","title":"7. \u200b\u5b9e\u6218\u200b\u603b\u7ed3\u200b\uff1a\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":"\u573a\u666f\u200b \u200b\u63a8\u8350\u200b\u65b9\u6848\u200b \u200b\u7b80\u5355\u200b\u6570\u636e\u7c7b\u578b\u200b \u200b\u9ed8\u8ba4\u200b\u62f7\u8d1d\u200b\u884c\u4e3a\u200b\u8db3\u591f\u200b \u200b\u53ea\u200b\u5305\u542b\u200b\u6807\u51c6\u200b\u5bb9\u5668\u200b \u200b\u9075\u5faa\u200bRule of Zero\uff0c\u200b\u4f9d\u8d56\u200b\u6807\u51c6\u200b\u5e93\u200b \u200b\u81ea\u5b9a\u4e49\u200b\u8d44\u6e90\u7ba1\u7406\u200b \u200b\u9075\u5faa\u200bRule of Five\uff0c\u200b\u5b9e\u73b0\u200b\u5b8c\u6574\u200b\u6df1\u200b\u62f7\u8d1d\u200b \u200b\u5171\u4eab\u8d44\u6e90\u200b\u8bbe\u8ba1\u200b \u200b\u4f7f\u7528\u200bstd::shared_ptr\u200b\u6216\u200b\u5b9e\u73b0\u200b\u5f15\u7528\u200b\u8ba1\u6570\u200b \u200b\u5927\u578b\u200b\u8d44\u6e90\u200b\u4f18\u5316\u200b \u200b\u8003\u8651\u200b\u5199\u65f6\u200b\u590d\u5236\u200b(COW)\u200b\u6216\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b \u200b\u4e0d\u200b\u5141\u8bb8\u200b\u62f7\u8d1d\u200b \u200b\u4f7f\u7528\u200b <code>= delete</code> \u200b\u5220\u9664\u200b\u62f7\u8d1d\u200b\u64cd\u4f5c"},{"location":"programming/cpp/noob/copy/#c_1","title":"\u6700\u7ec8\u200b\u5fe0\u544a\u200b\uff1aC++\u200b\u4e2d\u200b\u7684\u200b\u8d44\u6e90\u7ba1\u7406\u200b\u539f\u5219","text":"<ol> <li>\u200b\u660e\u786e\u200b\u6240\u6709\u6743\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u8d44\u6e90\u200b\u5e94\u6709\u200b\u660e\u786e\u200b\u7684\u200b\u6240\u6709\u8005\u200b</li> <li>\u200b\u8d23\u4efb\u200b\u5206\u660e\u200b\uff1a\u200b\u8c01\u200b\u5206\u914d\u200b\u8c01\u200b\u91ca\u653e\u200b\uff0c\u200b\u6216\u200b\u4f7f\u7528\u200bRAII\u200b\u539f\u5219\u200b</li> <li>\u200b\u907f\u514d\u200b\u539f\u59cb\u200b\u6307\u9488\u200b\uff1a\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u548c\u200b\u6807\u51c6\u200b\u5bb9\u5668\u200b</li> <li>\u200b\u6e05\u6670\u200b\u8bed\u4e49\u200b\uff1a\u200b\u5171\u4eab\u8d44\u6e90\u200b\u8fd8\u662f\u200b\u72ec\u5360\u200b\u8d44\u6e90\u200b\uff0c\u200b\u8bbe\u8ba1\u200b\u5e94\u200b\u660e\u786e\u200b</li> <li>\u200b\u9075\u5faa\u200b\u89c4\u5219\u200b\uff1a\u200b\u9075\u5faa\u200b\u4e09\u200b/\u200b\u4e94\u200b/\u200b\u96f6\u200b\u6cd5\u5219\u200b\uff0c\u200b\u4fdd\u6301\u200b\u4e00\u81f4\u6027\u200b</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u6df1\u5165\u200b\u7406\u89e3\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u7684\u200b\u539f\u7406\u200b\u548c\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b\u5b83\u4eec\u200b\uff0c\u200b\u4f60\u200b\u5c31\u200b\u80fd\u200b\u907f\u514d\u200bC++\u200b\u4e2d\u200b\u5e38\u89c1\u200b\u7684\u200b\u8d44\u6e90\u7ba1\u7406\u200b\u9677\u9631\u200b\uff0c\u200b\u5199\u51fa\u200b\u66f4\u52a0\u200b\u5065\u58ee\u200b\u3001\u200b\u9ad8\u6548\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002\u200b\u8bb0\u4f4f\u200b\uff1a\u200b\u6df1\u6d45\u200b\u62f7\u8d1d\u200b\u4e0d\u662f\u200b\u5355\u7eaf\u200b\u7684\u200b\u597d\u574f\u200b\u95ee\u9898\u200b\uff0c\u200b\u800c\u662f\u200b\u9002\u7528\u200b\u573a\u666f\u200b\u4e0d\u540c\u200b\u7684\u200b\u4e24\u79cd\u200b\u5de5\u5177\u200b\uff0c\u200b\u5173\u952e\u5728\u4e8e\u200b\u5728\u200b\u6b63\u786e\u200b\u7684\u200b\u573a\u666f\u200b\u4f7f\u7528\u200b\u6b63\u786e\u200b\u7684\u200b\u5de5\u5177\u200b\uff01</p> <p>\u200b\u795d\u200b\u4f60\u200b\u5728\u200bC++\u200b\u7684\u200b\u6c5f\u6e56\u200b\u4e2d\u200b\u6e38\u5203\u6709\u4f59\u200b\uff0c\u200b\u6240\u5411\u62ab\u9761\u200b\uff01</p>"},{"location":"programming/cpp/noob/four_cast/","title":"C++ \u200b\u7c7b\u578b\u8f6c\u6362\u200b (Cast) \u200b\u8be6\u89e3","text":"<p>C++ \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u56db\u79cd\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u4e5f\u200b\u79f0\u4e3a\u200b <code>cast</code>\uff0c\u200b\u5206\u522b\u200b\u662f\u200b <code>static_cast</code>\u3001<code>dynamic_cast</code>\u3001<code>const_cast</code> \u200b\u548c\u200b <code>reinterpret_cast</code>\u3002\u200b\u5b83\u4eec\u200b\u5404\u81ea\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u7528\u9014\u200b\u548c\u200b\u9650\u5236\u200b\uff0c\u200b\u5728\u200b C++ \u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u626e\u6f14\u7740\u200b\u91cd\u8981\u200b\u7684\u200b\u89d2\u8272\u200b\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#1-static_cast","title":"1. <code>static_cast</code>","text":""},{"location":"programming/cpp/noob/four_cast/#11","title":"1.1 \u200b\u7b80\u4ecb","text":"<p><code>static_cast</code> \u200b\u7528\u4e8e\u200b\u6267\u884c\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u3002\u200b\u5b83\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u60c5\u51b5\u200b\uff1a</p> <ul> <li>\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b\uff1a\u200b\u4f8b\u5982\u200b <code>int</code> \u200b\u5230\u200b <code>float</code>\uff0c<code>float</code> \u200b\u5230\u200b <code>int</code> \u200b\u7b49\u200b</li> <li>\u200b\u5177\u6709\u200b\u7ee7\u627f\u200b\u5173\u7cfb\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b\uff1a</li> <li>\u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\uff08\u200b\u5c06\u200b\u6d3e\u751f\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\uff09</li> <li>\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\uff08\u200b\u5c06\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6d3e\u751f\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\uff09\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u662f\u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b</li> <li><code>void*</code> \u200b\u4e0e\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u6307\u9488\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b</li> <li>\u200b\u7c7b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u51fd\u6570\u200b</li> <li>\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u4e0e\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#12","title":"1.2 \u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u53ca\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/four_cast/#_1","title":"\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int i = 10;\n    float f = static_cast&lt;float&gt;(i); // int -&gt; float\n    std::cout &lt;&lt; \"float f = \" &lt;&lt; f &lt;&lt; std::endl;\n\n    float pi = 3.14159;\n    int truncated_pi = static_cast&lt;int&gt;(pi); // float -&gt; int (\u200b\u622a\u65ad\u200b)\n    std::cout &lt;&lt; \"int truncated_pi = \" &lt;&lt; truncated_pi &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#_2","title":"\u5177\u6709\u200b\u7ee7\u627f\u200b\u5173\u7cfb\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n\nclass Base {\npublic:\n    virtual void print() {\n        std::cout &lt;&lt; \"Base class\" &lt;&lt; std::endl;\n    }\n};\n\nclass Derived : public Base {\npublic:\n    void print() override {\n        std::cout &lt;&lt; \"Derived class\" &lt;&lt; std::endl;\n    }\n    void derived_function() {\n        std::cout &lt;&lt; \"Derived class specific function\" &lt;&lt; std::endl;\n    }\n};\n\nint main() {\n    Base* base_ptr = new Derived(); // \u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\uff08\u200b\u9690\u5f0f\u200b\uff09\n    base_ptr-&gt;print(); // \u200b\u8f93\u51fa\u200b \"Derived class\" (\u200b\u865a\u200b\u51fd\u6570\u200b)\n\n    Derived* derived_ptr = static_cast&lt;Derived*&gt;(base_ptr); // \u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\n    derived_ptr-&gt;print(); // \u200b\u8f93\u51fa\u200b \"Derived class\"\n    derived_ptr-&gt;derived_function(); // \u200b\u53ef\u4ee5\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7279\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\n\n    return 0;\n}\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a\u200b\u5728\u200b\u4e0a\u9762\u200b\u7684\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b <code>static_cast&lt;Derived*&gt;(base_ptr)</code> \u200b\u662f\u200b\u5b89\u5168\u200b\u7684\u200b\uff0c\u200b\u56e0\u4e3a\u200b <code>base_ptr</code> \u200b\u5b9e\u9645\u4e0a\u200b\u6307\u5411\u200b\u4e00\u4e2a\u200b <code>Derived</code> \u200b\u5bf9\u8c61\u200b\u3002\u200b\u4f46\u662f\u200b\uff0c\u200b\u5982\u679c\u200b <code>base_ptr</code> \u200b\u6307\u5411\u200b\u4e00\u4e2a\u200b <code>Base</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u90a3\u4e48\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\u3002\u200b\u901a\u5e38\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>dynamic_cast</code> \u200b\u8fdb\u884c\u200b\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u662f\u200b\u66f4\u597d\u200b\u7684\u200b\u9009\u62e9\u200b\uff08\u200b\u9700\u8981\u200b RTTI \u200b\u652f\u6301\u200b\uff09\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#void","title":"<code>void*</code> \u200b\u4e0e\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u6307\u9488\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int i = 10;\n    void* void_ptr = &amp;i; // \u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u7684\u200b\u6307\u9488\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u9690\u5f0f\u200b\u8f6c\u6362\u200b\u4e3a\u200b void*\n\n    int* int_ptr = static_cast&lt;int*&gt;(void_ptr); // void* -&gt; int*\n    std::cout &lt;&lt; \"*int_ptr = \" &lt;&lt; *int_ptr &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#_3","title":"\u7c7b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u51fd\u6570","text":"<pre><code>#include &lt;iostream&gt;\n\nclass MyInt {\nprivate:\n    int value;\npublic:\n    MyInt(int val) : value(val) {}\n    operator int() const { // \u200b\u7c7b\u578b\u8f6c\u6362\u200b\u51fd\u6570\u200b\uff1aMyInt -&gt; int\n        return value;\n    }\n};\n\nint main() {\n    MyInt my_int(20);\n    int i = static_cast&lt;int&gt;(my_int); // \u200b\u4f7f\u7528\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u51fd\u6570\u200b\n    std::cout &lt;&lt; \"int i = \" &lt;&lt; i &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#_4","title":"\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u4e0e\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n\nenum class Color {\n    RED,\n    GREEN,\n    BLUE\n};\n\nint main() {\n    Color c = Color::GREEN;\n    int color_index = static_cast&lt;int&gt;(c); // \u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b -&gt; int\n    std::cout &lt;&lt; \"color_index = \" &lt;&lt; color_index &lt;&lt; std::endl;\n\n    Color another_color = static_cast&lt;Color&gt;(2); // int -&gt; \u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b, \u200b\u9700\u8981\u200b\u5c0f\u5fc3\u200b\uff0c\u200b\u786e\u4fdd\u200b\u503c\u200b\u5728\u200b\u679a\u4e3e\u200b\u8303\u56f4\u200b\u5185\u200b\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#13","title":"1.3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff1a<code>static_cast</code> \u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b</li> <li>\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff1a\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b</li> <li>\u200b\u5b89\u5168\u6027\u200b\uff1a\u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\u5b89\u5168\u200b\uff0c\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u4e0d\u200b\u5b89\u5168\u200b</li> <li>\u200b\u4e0d\u8981\u200b\u7528\u4e8e\u200b\u79fb\u9664\u200b <code>const</code> \u200b\u6216\u200b <code>volatile</code>\uff1a\u200b\u5e94\u200b\u4f7f\u7528\u200b <code>const_cast</code></li> <li>\u200b\u4f18\u4e8e\u200b C \u200b\u98ce\u683c\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff1a\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u597d\u200b\u7684\u200b\u7c7b\u578b\u200b\u5b89\u5168\u6027\u200b\u548c\u200b\u53ef\u8bfb\u6027\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#14","title":"1.4 \u200b\u5b89\u5168\u6027\u200b\u63d0\u5347\u200b\u65b9\u6848","text":"<p><code>static_cast</code> \u200b\u672c\u8eab\u200b\u5e76\u200b\u4e0d\u200b\u5b89\u5168\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u65b9\u6cd5\u200b\uff08\u200b\u4f8b\u5982\u200b <code>gsl::narrow</code>\u3001\u200b\u5217\u8868\u200b\u521d\u59cb\u5316\u200b\u6216\u200b\u7528\u6237\u200b\u5b9a\u4e49\u200b\u7684\u200b\u5b89\u5168\u200b\u8f6c\u6362\u200b\uff09\u200b\u6765\u200b\u5b9e\u73b0\u200b\u66f4\u200b\u5b89\u5168\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#2-dynamic_cast","title":"2. <code>dynamic_cast</code>","text":""},{"location":"programming/cpp/noob/four_cast/#21","title":"2.1 \u200b\u7b80\u4ecb","text":"<p><code>dynamic_cast</code> \u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u7ee7\u627f\u200b\u5c42\u6b21\u7ed3\u6784\u200b\u4e2d\u200b\u3002\u200b\u5b83\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\uff08\u200b\u5c06\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6d3e\u751f\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\uff09\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#22","title":"2.2 \u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u53ca\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/four_cast/#_5","title":"\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt; // for bad_cast\n\nclass Base {\npublic:\n    virtual void print() {\n        std::cout &lt;&lt; \"Base class\" &lt;&lt; std::endl;\n    }\n    virtual ~Base() {} // \u200b\u5fc5\u987b\u200b\u6709\u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b\u624d\u80fd\u200b\u4f7f\u7528\u200b dynamic_cast\n};\n\nclass Derived : public Base {\npublic:\n    void print() override {\n        std::cout &lt;&lt; \"Derived class\" &lt;&lt; std::endl;\n    }\n    void derived_function() {\n        std::cout &lt;&lt; \"Derived class specific function\" &lt;&lt; std::endl;\n    }\n};\n\nint main() {\n    Base* base_ptr = new Derived(); // \u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\uff08\u200b\u9690\u5f0f\u200b\uff09\n    base_ptr-&gt;print(); // \u200b\u8f93\u51fa\u200b \"Derived class\" (\u200b\u865a\u200b\u51fd\u6570\u200b)\n\n    // \u200b\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\uff1a\n    Derived* derived_ptr = dynamic_cast&lt;Derived*&gt;(base_ptr);\n    if (derived_ptr) {\n        derived_ptr-&gt;print(); // \u200b\u8f93\u51fa\u200b \"Derived class\"\n        derived_ptr-&gt;derived_function(); // \u200b\u53ef\u4ee5\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7279\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\n    } else {\n        std::cout &lt;&lt; \"dynamic_cast failed: base_ptr does not point to a Derived object\" &lt;&lt; std::endl;\n    }\n\n    delete base_ptr;\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#dynamic_cast","title":"\u4f7f\u7528\u200b\u5f15\u7528\u200b\u8fdb\u884c\u200b <code>dynamic_cast</code>","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt; // for bad_cast\n\nclass Base {\npublic:\n    virtual void print() {\n        std::cout &lt;&lt; \"Base class\" &lt;&lt; std::endl;\n    }\n    virtual ~Base() {}\n};\n\nclass Derived : public Base {\npublic:\n    void print() override {\n        std::cout &lt;&lt; \"Derived class\" &lt;&lt; std::endl;\n    }\n    void derived_function() {\n        std::cout &lt;&lt; \"Derived class specific function\" &lt;&lt; std::endl;\n    }\n};\n\nint main() {\n    Base* base_ptr = new Derived();\n    Base&amp; base_ref = *base_ptr; // \u200b\u57fa\u7c7b\u200b\u5f15\u7528\u200b\n\n    try {\n        Derived&amp; derived_ref = dynamic_cast&lt;Derived&amp;&gt;(base_ref); // \u200b\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\uff08\u200b\u5f15\u7528\u200b\uff09\n        derived_ref.print();\n        derived_ref.derived_function();\n    } catch (const std::bad_cast&amp; e) {\n        std::cout &lt;&lt; \"dynamic_cast failed: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n    }\n\n    delete base_ptr;\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#23","title":"2.3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>RTTI \u200b\u652f\u6301\u200b\uff1a\u200b\u9700\u8981\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7c7b\u578b\u4fe1\u606f\u200b\uff08RTTI\uff09\u200b\u7684\u200b\u652f\u6301\u200b</li> <li>\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u7528\u4e8e\u200b\u57fa\u672c\u200b\u6570\u636e\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b</li> <li>\u200b\u5fc5\u987b\u200b\u6709\u200b\u865a\u200b\u51fd\u6570\u200b\uff1a\u200b\u57fa\u7c7b\u200b\u5fc5\u987b\u200b\u81f3\u5c11\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u865a\u200b\u51fd\u6570\u200b</li> <li>\u200b\u6027\u80fd\u200b\u5f00\u9500\u200b\uff1a\u200b\u6bd4\u200b <code>static_cast</code> \u200b\u6162\u200b</li> <li>\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\uff1a\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u5b89\u5168\u200b\u7684\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#24","title":"2.4 \u200b\u5b89\u5168\u6027","text":"<p><code>dynamic_cast</code> \u200b\u5728\u200b\u4f20\u9012\u200b\u6709\u6548\u200b\u6307\u9488\u200b\uff08\u200b\u5305\u62ec\u200b NULL \u200b\u6307\u9488\u200b\uff09\u200b\u65f6\u200b\u662f\u200b\u5b89\u5168\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u4f20\u9012\u200b\u60ac\u5782\u200b\u6307\u9488\u200b\u6216\u200b\u5783\u573e\u200b\u503c\u4f1a\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#25","title":"2.5 \u200b\u4f7f\u7528\u200b\u5c40\u9650\u6027","text":"<ul> <li>\u200b\u8fd0\u884c\u200b\u65f6\u200b\u5f00\u9500\u200b</li> <li>RTTI \u200b\u8981\u6c42\u200b</li> <li>\u200b\u8bbe\u8ba1\u200b\u95ee\u9898\u200b\uff1a\u200b\u8fc7\u5ea6\u200b\u4f7f\u7528\u200b\u53ef\u80fd\u200b\u8868\u660e\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u5b58\u5728\u200b\u5176\u4ed6\u200b\u95ee\u9898\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#26","title":"2.6 \u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ul> <li>\u200b\u907f\u514d\u200b\u8fc7\u5ea6\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u4f7f\u7528\u200b\u865a\u200b\u51fd\u6570\u200b</li> <li>\u200b\u4f18\u5148\u9009\u62e9\u200b\u9759\u6001\u200b\u591a\u6001\u6027\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#3-const_cast","title":"3. <code>const_cast</code>","text":""},{"location":"programming/cpp/noob/four_cast/#31","title":"3.1 \u200b\u7b80\u4ecb","text":"<p><code>const_cast</code> \u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u79fb\u9664\u200b\u6216\u200b\u6dfb\u52a0\u200b\u7c7b\u578b\u200b\u7684\u200b <code>const</code> \u200b\u6216\u200b <code>volatile</code> \u200b\u9650\u5b9a\u7b26\u200b\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#32","title":"3.2 \u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u53ca\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/four_cast/#c-api","title":"\u4e0e\u200b C API \u200b\u4ea4\u4e92","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nvoid c_function(char* str) {\n    std::cout &lt;&lt; \"C function received: \" &lt;&lt; str &lt;&lt; std::endl;\n}\n\nint main() {\n    const char* const_string = \"Hello from C++\";\n    c_function(const_cast&lt;char*&gt;(const_string));\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#_6","title":"\u4fee\u6539\u200b\u975e\u5e38\u200b\u91cf\u200b\u5bf9\u8c61","text":"<pre><code>#include &lt;iostream&gt;\n\nstruct Data {\n    int value;\n};\n\nvoid modify_data(const Data* const_data) {\n    Data* mutable_data = const_cast&lt;Data*&gt;(const_data);\n    mutable_data-&gt;value = 42;\n}\n\nint main() {\n    Data data = { 10 };\n    const Data* const_data = &amp;data;\n    modify_data(const_data);\n    std::cout &lt;&lt; \"Data value: \" &lt;&lt; data.value &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#33","title":"3.3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u4fee\u6539\u200b <code>const</code> \u200b\u5bf9\u8c61\u200b\uff1a\u200b\u7edd\u5bf9\u200b\u7981\u6b62\u200b</li> <li><code>volatile</code> \u200b\u5bf9\u8c61\u200b\uff1a\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u6dfb\u52a0\u200b\u6216\u200b\u79fb\u9664\u200b <code>volatile</code> \u200b\u9650\u5b9a\u7b26\u200b</li> <li>\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff1a\u200b\u4e0d\u200b\u63d0\u4f9b\u200b\u7c7b\u578b\u200b\u5b89\u5168\u68c0\u67e5\u200b</li> <li>\u200b\u53ea\u80fd\u200b\u4fee\u6539\u200b <code>const/volatile</code>\uff1a\u200b\u4e0d\u80fd\u200b\u7528\u4e8e\u200b\u6539\u53d8\u200b\u5bf9\u8c61\u200b\u7684\u200b\u7c7b\u578b\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#34","title":"3.4 \u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":"<ul> <li>\u200b\u5c3d\u91cf\u907f\u514d\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u53ea\u200b\u5728\u200b\u5fc5\u8981\u200b\u65f6\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u8003\u8651\u200b\u66ff\u4ee3\u200b\u65b9\u6848\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#4-reinterpret_cast","title":"4. <code>reinterpret_cast</code>","text":""},{"location":"programming/cpp/noob/four_cast/#41","title":"4.1 \u200b\u7b80\u4ecb","text":"<p><code>reinterpret_cast</code> \u200b\u662f\u200b C++ \u200b\u4e2d\u200b\u6700\u200b\u5371\u9669\u200b\u7684\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u64cd\u4f5c\u7b26\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4efb\u4f55\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u7684\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u3002</p> <p>\u200b\u91cd\u8981\u200b\u8b66\u544a\u200b\uff1a\u200b\u5e94\u8be5\u200b\u6781\u5c11\u200b\u4f7f\u7528\u200b\uff0c\u200b\u53ea\u6709\u200b\u5728\u200b\u7edd\u5bf9\u200b\u5fc5\u8981\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u624d\u80fd\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"programming/cpp/noob/four_cast/#42","title":"4.2 \u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u53ca\u200b\u4ee3\u7801\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/four_cast/#_7","title":"\u6307\u9488\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int i = 10;\n    int* int_ptr = &amp;i;\n    float* float_ptr = reinterpret_cast&lt;float*&gt;(int_ptr);\n    std::cout &lt;&lt; \"*float_ptr = \" &lt;&lt; *float_ptr &lt;&lt; std::endl; // \u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\uff01\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#_8","title":"\u5c06\u200b\u6307\u9488\u200b\u8f6c\u6362\u200b\u4e3a\u200b\u6574\u6570\u200b\u7c7b\u578b","text":"<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int i = 10;\n    int* int_ptr = &amp;i;\n    uintptr_t ptr_address = reinterpret_cast&lt;uintptr_t&gt;(int_ptr);\n    std::cout &lt;&lt; \"int_ptr address = \" &lt;&lt; int_ptr &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"ptr_address = \" &lt;&lt; ptr_address &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/four_cast/#43","title":"4.3 \u200b\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b</li> <li>\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b</li> <li>\u200b\u4ec5\u200b\u5728\u200b\u7edd\u5bf9\u200b\u5fc5\u8981\u200b\u65f6\u200b\u4f7f\u7528\u200b</li> <li>\u200b\u7406\u89e3\u200b\u5185\u5b58\u200b\u5e03\u5c40\u200b</li> <li>\u200b\u907f\u514d\u200b\u4f7f\u7528\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#44","title":"4.4 \u200b\u5982\u4f55\u200b\u89c4\u907f\u200b\u9650\u5236","text":"<ul> <li>\u200b\u4f7f\u7528\u200b <code>std::bit_cast</code> (C++20)</li> <li>\u200b\u907f\u514d\u200b\u7c7b\u578b\u200b\u53cc\u5173\u200b</li> </ul>"},{"location":"programming/cpp/noob/four_cast/#5-cast","title":"5. \u200b\u56db\u79cd\u200b\u7c7b\u578b\u8f6c\u6362\u200b <code>cast</code> \u200b\u5bf9\u6bd4\u200b\u8868\u683c","text":"\u7279\u6027\u200b <code>static_cast</code> <code>dynamic_cast</code> <code>const_cast</code> <code>reinterpret_cast</code> \u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u200b\u7f16\u8bd1\u200b\u65f6\u200b \u200b\u8fd0\u884c\u200b\u65f6\u200b\uff08\u200b\u9700\u8981\u200b RTTI \u200b\u652f\u6301\u200b\uff09 \u200b\u65e0\u200b \u200b\u65e0\u200b \u200b\u5b89\u5168\u6027\u200b \u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\u5b89\u5168\u200b\uff0c\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u4e0d\u200b\u5b89\u5168\u200b \u200b\u5411\u4e0a\u200b\u8f6c\u578b\u200b\u5b89\u5168\u200b\uff0c\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b\u4f1a\u200b\u8fdb\u884c\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u200b\u76f8\u5bf9\u200b\u5b89\u5168\u200b \u200b\u6700\u200b\u4e0d\u200b\u5b89\u5168\u200b \u200b\u9002\u7528\u200b\u573a\u666f\u200b \u200b\u57fa\u672c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u3001\u200b\u7ee7\u627f\u200b\u5173\u7cfb\u200b\u8f6c\u6362\u200b\u3001<code>void*</code> \u200b\u8f6c\u6362\u200b\u7b49\u200b \u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u5177\u6709\u200b\u7ee7\u627f\u200b\u5173\u7cfb\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5b89\u5168\u200b\u5411\u4e0b\u200b\u8f6c\u578b\u200b \u200b\u79fb\u9664\u200b <code>const</code> \u200b\u6216\u200b <code>volatile</code> \u200b\u9650\u5b9a\u7b26\u200b \u200b\u6781\u5c11\u200b\u4f7f\u7528\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5e95\u5c42\u200b\u7f16\u7a0b\u200b \u200b\u6027\u80fd\u200b \u200b\u5feb\u200b \u200b\u8f83\u6162\u200b \u200b\u5f88\u5feb\u200b \u200b\u6700\u5feb\u200b \u200b\u662f\u5426\u200b\u53ef\u79fb\u690d\u200b \u200b\u9ad8\u200b \u200b\u4e2d\u200b \u200b\u9ad8\u200b \u200b\u4f4e\u200b \u200b\u9519\u8bef\u5904\u7406\u200b \u200b\u4e0d\u200b\u8fdb\u884c\u200b\u8fd0\u884c\u200b\u65f6\u200b\u9519\u8bef\u200b\u68c0\u67e5\u200b \u200b\u6307\u9488\u200b\u7c7b\u578b\u200b\u8fd4\u56de\u200b <code>nullptr</code>\uff0c\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u629b\u51fa\u200b <code>std::bad_cast</code> \u200b\u5f02\u5e38\u200b \u200b\u4e0d\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u200b\u4e0d\u200b\u8fdb\u884c\u200b\u4efb\u4f55\u200b\u9519\u8bef\u200b\u68c0\u67e5"},{"location":"programming/cpp/noob/inline/","title":"C++\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u5168\u200b\u89e3\u6790\u200b\uff1a\u200b\u4ece\u200b\u539f\u7406\u200b\u5230\u200b\u5b9e\u8df5","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u662f\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u91cd\u8981\u200b\u7279\u6027\u200b\uff0c\u200b\u5b83\u200b\u65e2\u200b\u63d0\u5347\u200b\u4e86\u200b\u7a0b\u5e8f\u200b\u6027\u80fd\u200b\uff0c\u200b\u53c8\u200b\u4fdd\u7559\u200b\u4e86\u200b\u51fd\u6570\u200b\u7684\u200b\u6240\u6709\u200b\u4f18\u52bf\u200b\u3002\u200b\u4f5c\u4e3a\u200b\u4e00\u540d\u200bC++\u200b\u5f00\u53d1\u8005\u200b\uff0c\u200b\u7406\u89e3\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5de5\u4f5c\u200b\u673a\u5236\u200b\u53ca\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u5bf9\u200b\u7f16\u5199\u200b\u9ad8\u6548\u200b\u4ee3\u7801\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u4eca\u5929\u200b\u5c31\u8ba9\u200b\u6211\u4eec\u200b\u6df1\u5165\u63a2\u8ba8\u200b\u8fd9\u4e2a\u200b\u8bdd\u9898\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#_1","title":"\u4ec0\u4e48\u200b\u662f\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff1f","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u672c\u8d28\u200b\u4e0a\u200b\u662f\u200b\u4e00\u79cd\u200b\u7f16\u8bd1\u200b\u671f\u200b\u4f18\u5316\u200b\u6280\u672f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5728\u200b\u8c03\u7528\u200b\u70b9\u200b\u76f4\u63a5\u200b\u5c55\u5f00\u200b\u51fd\u6570\u200b\u4f53\u6765\u200b\u6d88\u9664\u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u5f00\u9500\u200b\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u5c06\u200b\u51fd\u6570\u200b\u58f0\u660e\u200b\u4e3a\u200b\u5185\u8054\u200b\u65f6\u200b\uff0c\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200b\u5411\u200b\u7f16\u8bd1\u5668\u200b\u63d0\u51fa\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u8bf7\u6c42\u200b\uff1a\"\u200b\u8bf7\u200b\u5c06\u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u8c03\u7528\u200b\u66ff\u6362\u200b\u4e3a\u200b\u5176\u200b\u5b9e\u9645\u200b\u4ee3\u7801\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u751f\u6210\u200b\u4f20\u7edf\u200b\u7684\u200b\u51fd\u6570\u8c03\u7528\u200b\u6307\u4ee4\u200b\u3002\"</p> <p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u50cf\u662f\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u548c\u200b\u666e\u901a\u200b\u51fd\u6570\u200b\u7684\u200b\u5b8c\u7f8e\u200b\u7ed3\u5408\u4f53\u200b\uff0c\u200b\u65e2\u6709\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6548\u7387\u200b\uff0c\u200b\u53c8\u200b\u4fdd\u7559\u200b\u4e86\u200b\u51fd\u6570\u200b\u7684\u200b\u5b89\u5168\u6027\u200b\u548c\u200b\u7075\u6d3b\u6027\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#_2","title":"\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u58f0\u660e\u200b\u65b9\u5f0f","text":"<p>C++\u200b\u4e2d\u6709\u200b\u51e0\u79cd\u200b\u58f0\u660e\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff1a</p>"},{"location":"programming/cpp/noob/inline/#inline","title":"\u4f7f\u7528\u200binline\u200b\u5173\u952e\u5b57","text":"<p>\u200b\u6700\u200b\u76f4\u63a5\u200b\u7684\u200b\u65b9\u5f0f\u200b\u662f\u200b\u4f7f\u7528\u200b<code>inline</code>\u200b\u5173\u952e\u5b57\u200b\uff1a</p> <pre><code>inline double calculateArea(double radius) {\n    return 3.14159 * radius * radius;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_3","title":"\u7c7b\u5185\u200b\u5b9a\u4e49\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570","text":"<p>\u200b\u5728\u200b\u7c7b\u200b\u5b9a\u4e49\u200b\u5185\u90e8\u200b\u76f4\u63a5\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u4f1a\u200b\u88ab\u200b\u9690\u5f0f\u200b\u5730\u200b\u89c6\u4e3a\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff1a</p> <pre><code>class Timer {\npublic:\n    void start() {\n        startTime = std::chrono::high_resolution_clock::now();\n    }\n\n    void stop() {\n        endTime = std::chrono::high_resolution_clock::now();\n    }\n\nprivate:\n    std::chrono::time_point&lt;std::chrono::high_resolution_clock&gt; startTime, endTime;\n};\n</code></pre>"},{"location":"programming/cpp/noob/inline/#inline_1","title":"\u5728\u200b\u7c7b\u5916\u200b\u4f7f\u7528\u200binline\u200b\u5173\u952e\u5b57","text":"<p>\u200b\u5bf9\u4e8e\u200b\u5728\u200b\u7c7b\u200b\u58f0\u660e\u200b\u5916\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>inline</code>\u200b\u5173\u952e\u5b57\u200b\uff1a</p> <pre><code>class Vector {\npublic:\n    Vector(double x, double y, double z);\n    double length() const;\n};\n\ninline Vector::Vector(double x, double y, double z) : x(x), y(y), z(z) {}\n\ninline double Vector::length() const {\n    return std::sqrt(x*x + y*y + z*z);\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_4","title":"\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5de5\u4f5c\u200b\u539f\u7406","text":"<p>\u200b\u4e3a\u4e86\u200b\u7406\u89e3\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff0c\u200b\u6211\u4eec\u200b\u770b\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>inline int square(int x) {\n    return x * x;\n}\n\nint main() {\n    int a = 5;\n    int result = square(a);\n    return 0;\n}\n</code></pre> <p>\u200b\u5f53\u200b\u7f16\u8bd1\u5668\u200b\u5904\u7406\u200b\u8fd9\u200b\u6bb5\u200b\u4ee3\u7801\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u51b3\u5b9a\u200b\u5185\u8054\u200b<code>square</code>\u200b\u51fd\u6570\u200b\uff0c\u200b\u6700\u7ec8\u200b\u751f\u6210\u200b\u7684\u200b\u4ee3\u7801\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\uff1a</p> <pre><code>int main() {\n    int a = 5;\n    int result = a * a; // square(a)\u200b\u88ab\u200b\u66ff\u6362\u200b\u4e3a\u4e86\u200ba * a\n    return 0;\n}\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u66ff\u6362\u200b\u53d1\u751f\u200b\u5728\u200b\u7f16\u8bd1\u200b\u9636\u6bb5\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u8fd0\u884c\u200b\u65f6\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8282\u7701\u200b\u4e86\u200b\uff1a</p> <ul> <li>\u200b\u51fd\u6570\u8c03\u7528\u200b\u7684\u200b\u5f00\u9500\u200b\uff08\u200b\u4fdd\u5b58\u200b\u7a0b\u5e8f\u200b\u8ba1\u6570\u5668\u200b\uff09</li> <li>\u200b\u53c2\u6570\u200b\u5165\u6808\u200b\u7684\u200b\u5f00\u9500\u200b</li> <li>\u200b\u521b\u5efa\u200b\u65b0\u6808\u200b\u5e27\u200b\u7684\u200b\u5f00\u9500\u200b</li> <li>\u200b\u8fd4\u56de\u503c\u200b\u5904\u7406\u200b\u7684\u200b\u5f00\u9500\u200b</li> <li>\u200b\u6062\u590d\u200b\u8c03\u7528\u200b\u70b9\u200b\u7684\u200b\u5f00\u9500\u200b</li> </ul>"},{"location":"programming/cpp/noob/inline/#_5","title":"\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u4f18\u52bf","text":""},{"location":"programming/cpp/noob/inline/#_6","title":"\u6027\u80fd\u200b\u63d0\u5347","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u6700\u200b\u663e\u8457\u200b\u7684\u200b\u597d\u5904\u200b\u662f\u200b\u63d0\u9ad8\u200b\u8fd0\u884c\u200b\u6548\u7387\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9891\u7e41\u200b\u8c03\u7528\u200b\u7684\u200b\u5c0f\u200b\u51fd\u6570\u200b\uff0c\u200b\u6d88\u9664\u200b\u51fd\u6570\u8c03\u7528\u200b\u5f00\u9500\u200b\u80fd\u200b\u5e26\u6765\u200b\u660e\u663e\u200b\u7684\u200b\u6027\u80fd\u200b\u63d0\u5347\u200b\u3002\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5faa\u73af\u200b\u4e2d\u200b\u8c03\u7528\u200b\u7684\u200b\u7b80\u77ed\u200b\u51fd\u6570\u200b\uff0c\u200b\u5185\u8054\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u51cf\u5c11\u200b\u6307\u4ee4\u200b\u8df3\u8f6c\u200b\uff0c\u200b\u63d0\u9ad8\u200bCPU\u200b\u6307\u4ee4\u200b\u7f13\u5b58\u200b\u7684\u200b\u547d\u4e2d\u7387\u200b\u3002</p> <pre><code>// \u200b\u4e0d\u200b\u5185\u8054\u200b\u7248\u672c\u200b\ndouble sum(const std::vector&lt;double&gt;&amp; values) {\n    double result = 0.0;\n    for (size_t i = 0; i &lt; values.size(); ++i) {\n        result += process(values[i]); // \u200b\u51fd\u6570\u8c03\u7528\u200b\u5f00\u9500\u200b\u5728\u200b\u5faa\u73af\u200b\u4e2d\u200b\u7d2f\u79ef\u200b\n    }\n    return result;\n}\n\n// \u200b\u5185\u8054\u200b\u7248\u672c\u200b\u53ef\u80fd\u200b\u66f4\u200b\u9ad8\u6548\u200b\ninline double process(double value) {\n    return value * 2.5 + 3.0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_7","title":"\u7c7b\u578b\u200b\u5b89\u5168","text":"<p>\u200b\u4e0e\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u5b8f\u200b\u76f8\u6bd4\u200b\uff0c\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u662f\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u3002\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u68c0\u67e5\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u5339\u914d\u200b\uff0c\u200b\u800c\u5b8f\u200b\u53ea\u662f\u200b\u7b80\u5355\u200b\u7684\u200b\u6587\u672c\u200b\u66ff\u6362\u200b\u3002</p> <pre><code>// \u200b\u5b8f\u200b\u5b9a\u4e49\u200b - \u200b\u4e0d\u200b\u5b89\u5168\u200b\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\n\n// \u200b\u5185\u8054\u200b\u51fd\u6570\u200b - \u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\ntemplate &lt;typename T&gt;\ninline T max(T a, T b) {\n    return a &gt; b ? a : b;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_8","title":"\u907f\u514d\u200b\u5b8f\u200b\u7684\u200b\u526f\u4f5c\u7528","text":"<p>\u200b\u4f7f\u7528\u200b\u5b8f\u65f6\u200b\u5e38\u89c1\u200b\u7684\u200b\u95ee\u9898\u200b\u662f\u200b\u53c2\u6570\u200b\u53ef\u80fd\u200b\u88ab\u200b\u591a\u6b21\u200b\u8ba1\u7b97\u200b\uff1a</p> <pre><code>#define SQUARE(x) ((x) * (x))\n\nint main() {\n    int i = 5;\n    int result = SQUARE(i++); // \u200b\u5c55\u5f00\u200b\u4e3a\u200b ((i++) * (i++)) - \u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b!\n    return 0;\n}\n</code></pre> <p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u5219\u200b\u4e0d\u200b\u5b58\u5728\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff1a</p> <pre><code>inline int square(int x) {\n    return x * x;\n}\n\nint main() {\n    int i = 5;\n    int result = square(i++); // i++\u200b\u53ea\u200b\u8ba1\u7b97\u200b\u4e00\u6b21\u200b\uff0c\u200b\u7ed3\u679c\u200b\u662f\u200b25\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_9","title":"\u547d\u540d\u200b\u7a7a\u95f4\u200b\u548c\u200b\u4f5c\u7528\u57df\u200b\u89c4\u5219","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u9075\u5faa\u200bC++\u200b\u7684\u200b\u6b63\u5e38\u200b\u4f5c\u7528\u57df\u200b\u548c\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u89c4\u5219\u200b\uff0c\u200b\u800c\u5b8f\u662f\u200b\u5168\u5c40\u200b\u7684\u200b\uff0c\u200b\u4e0d\u200b\u53d7\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u9650\u5236\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#_10","title":"\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5c40\u9650\u6027","text":"<p>\u200b\u867d\u7136\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u6709\u200b\u8bf8\u591a\u200b\u4f18\u52bf\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5e76\u975e\u200b\u4e07\u80fd\u200b\u7684\u200b\u3002\u200b\u4e86\u89e3\u200b\u5176\u200b\u5c40\u9650\u6027\u200b\u540c\u6837\u200b\u91cd\u8981\u200b\uff1a</p>"},{"location":"programming/cpp/noob/inline/#_11","title":"\u5185\u8054\u200b\u53ea\u662f\u200b\u5efa\u8bae\u6027\u200b\u7684","text":"<p>\u200b\u6700\u200b\u91cd\u8981\u200b\u7684\u200b\u4e00\u70b9\u200b\uff1a<code>inline</code>\u200b\u5173\u952e\u5b57\u200b\u53ea\u662f\u200b\u5411\u200b\u7f16\u8bd1\u5668\u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5efa\u8bae\u200b\uff0c\u200b\u800c\u200b\u975e\u200b\u547d\u4ee4\u200b\u3002\u200b\u7f16\u8bd1\u5668\u200b\u6709\u200b\u5b8c\u5168\u200b\u7684\u200b\u81ea\u7531\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u771f\u6b63\u200b\u5185\u8054\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u3002\u200b\u901a\u5e38\u200b\u4ee5\u4e0b\u200b\u60c5\u51b5\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u62d2\u7edd\u200b\u5185\u8054\u200b\uff1a</p> <ul> <li>\u200b\u51fd\u6570\u200b\u5305\u542b\u200b\u590d\u6742\u200b\u7684\u200b\u63a7\u5236\u6d41\u200b\uff08\u200b\u5982\u200b\u5faa\u73af\u200b\u3001switch\u200b\u8bed\u53e5\u200b\u7b49\u200b\uff09</li> <li>\u200b\u51fd\u6570\u200b\u8fc7\u4e8e\u200b\u590d\u6742\u200b\u6216\u200b\u8fc7\u200b\u5927\u200b</li> <li>\u200b\u51fd\u6570\u200b\u662f\u200b\u9012\u5f52\u200b\u7684\u200b</li> <li>\u200b\u51fd\u6570\u200b\u5305\u542b\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b</li> <li>\u200b\u51fd\u6570\u200b\u662f\u200b\u865a\u200b\u51fd\u6570\u200b\uff08\u200b\u56e0\u4e3a\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u8c03\u7528\u200b\u53ea\u80fd\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u786e\u5b9a\u200b\uff09</li> </ul>"},{"location":"programming/cpp/noob/inline/#_12","title":"\u4ee3\u7801\u200b\u81a8\u80c0","text":"<p>\u200b\u8fc7\u5ea6\u200b\u4f7f\u7528\u200b\u5185\u200b\u8054\u4f1a\u200b\u5bfc\u81f4\u200b\u4ee3\u7801\u200b\u81a8\u80c0\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u5185\u8054\u200b\u51fd\u6570\u8c03\u7528\u200b\u5904\u200b\u90fd\u200b\u4f1a\u200b\u590d\u5236\u200b\u4e00\u4efd\u200b\u51fd\u6570\u200b\u4ee3\u7801\u200b\uff0c\u200b\u5982\u679c\u200b\u51fd\u6570\u200b\u4f53\u200b\u8f83\u5927\u200b\u4e14\u200b\u88ab\u200b\u591a\u5904\u200b\u8c03\u7528\u200b\uff0c\u200b\u6700\u7ec8\u200b\u7684\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b\u4f1a\u200b\u6bd4\u200b\u4f7f\u7528\u200b\u5e38\u89c4\u200b\u51fd\u6570\u8c03\u7528\u200b\u5927\u5f97\u591a\u200b\u3002\u200b\u8fd9\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u6267\u884c\u6587\u4ef6\u200b\u4f53\u79ef\u200b\u589e\u5927\u200b</li> <li>\u200b\u6307\u4ee4\u200b\u7f13\u5b58\u200b\u547d\u4e2d\u7387\u200b\u4e0b\u964d\u200b</li> <li>\u200b\u9875\u9762\u200b\u9519\u8bef\u200b\u589e\u52a0\u200b</li> <li>\u200b\u6574\u4f53\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b</li> </ul>"},{"location":"programming/cpp/noob/inline/#_13","title":"\u7f16\u8bd1\u200b\u65f6\u95f4\u200b\u589e\u52a0","text":"<p>\u200b\u5927\u91cf\u200b\u4f7f\u7528\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u4f1a\u200b\u589e\u52a0\u200b\u7f16\u8bd1\u200b\u65f6\u95f4\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u7f16\u8bd1\u5668\u200b\u9700\u8981\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8c03\u7528\u200b\u70b9\u200b\u5c55\u5f00\u200b\u51fd\u6570\u200b\u4f53\u200b\uff0c\u200b\u5e76\u200b\u8fdb\u884c\u200b\u76f8\u5e94\u200b\u7684\u200b\u4f18\u5316\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#_14","title":"\u4e8c\u8fdb\u5236\u200b\u517c\u5bb9\u6027\u95ee\u9898","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u4fee\u6539\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u6240\u6709\u200b\u8c03\u7528\u200b\u5b83\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u5e93\u200b\u5f00\u53d1\u8005\u200b\u6765\u8bf4\u200b\uff0c\u200b\u66f4\u6539\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9e\u73b0\u200b\u53ef\u80fd\u200b\u7834\u574f\u200b\u4e8c\u8fdb\u5236\u200b\u517c\u5bb9\u6027\u200b\uff0c\u200b\u8feb\u4f7f\u200b\u7528\u6237\u200b\u91cd\u65b0\u200b\u7f16\u8bd1\u200b\u4ed6\u4eec\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#vs","title":"\u5185\u8054\u200b\u51fd\u6570\u200b vs \u200b\u5b8f\u200b\u5b9a\u4e49","text":"<p>\u200b\u8bb8\u591a\u200b\u5f00\u53d1\u8005\u200b\u5e38\u5e38\u200b\u7ea0\u7ed3\u200b\u4e8e\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u5b8f\u200b\u5b9a\u4e49\u200b\u3002\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8be6\u7ec6\u200b\u6bd4\u8f83\u200b\uff1a</p> \u200b\u7279\u6027\u200b \u200b\u5185\u8054\u200b\u51fd\u6570\u200b \u200b\u5b8f\u200b\u5b9a\u4e49\u200b \u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u2705 \u200b\u5b8c\u5168\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u274c \u200b\u65e0\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b \u200b\u53c2\u6570\u200b\u8ba1\u7b97\u200b \u2705 \u200b\u53ea\u200b\u8ba1\u7b97\u200b\u4e00\u6b21\u200b \u274c \u200b\u53ef\u80fd\u200b\u591a\u6b21\u200b\u8ba1\u7b97\u200b \u200b\u8c03\u8bd5\u200b\u652f\u6301\u200b \u2705 \u200b\u53ef\u4ee5\u200b\u5355\u6b65\u200b\u8c03\u8bd5\u200b \u274c \u200b\u8c03\u8bd5\u200b\u56f0\u96be\u200b \u200b\u4f5c\u7528\u57df\u200b\u89c4\u5219\u200b \u2705 \u200b\u9075\u5faa\u200b\u5e38\u89c4\u200b\u4f5c\u7528\u57df\u200b\u89c4\u5219\u200b \u274c \u200b\u5168\u5c40\u200b\u4f5c\u7528\u200b \u200b\u8bbf\u95ee\u63a7\u5236\u200b \u2705 \u200b\u652f\u6301\u200b\u79c1\u6709\u200b/\u200b\u4fdd\u62a4\u200b\u6210\u5458\u200b\u8bbf\u95ee\u200b \u274c \u200b\u4e0d\u200b\u652f\u6301\u200b \u200b\u9012\u5f52\u200b\u652f\u6301\u200b \u2705 \u200b\u53ef\u4ee5\u200b\u9012\u5f52\u200b \u274c \u200b\u4e0d\u80fd\u200b\u9012\u5f52\u200b \u200b\u64cd\u4f5c\u7b26\u200b\u4f18\u5148\u7ea7\u200b \u2705 \u200b\u9075\u5faa\u200b\u6b63\u5e38\u200b\u89c4\u5219\u200b \u274c \u200b\u9700\u8981\u200b\u5c0f\u5fc3\u200b\u5904\u7406\u200b \u200b\u7f16\u8bd1\u200b\u671f\u200b\u6267\u884c\u200b \u274c \u200b\u4e0d\u200b\u652f\u6301\u200b \u2705 \u200b\u652f\u6301\u200b\uff08\u200b\u5982\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\uff09 <p>\u200b\u8fd9\u4e9b\u200b\u6bd4\u8f83\u6e05\u695a\u200b\u5730\u200b\u8868\u660e\u200b\uff0c\u200b\u5728\u200b\u7edd\u5927\u591a\u6570\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u662f\u200b\u6bd4\u5b8f\u200b\u66f4\u597d\u200b\u7684\u200b\u9009\u62e9\u200b\u3002\u200b\u53ea\u6709\u200b\u5728\u200b\u9700\u8981\u200b\u9884\u200b\u5904\u7406\u5668\u200b\u7279\u6027\u200b\uff08\u200b\u5982\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\uff09\u200b\u65f6\u200b\uff0c\u200b\u5b8f\u624d\u200b\u662f\u200b\u5fc5\u8981\u200b\u7684\u200b\u3002</p>"},{"location":"programming/cpp/noob/inline/#_15","title":"\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9e\u9645\u200b\u5e94\u7528","text":""},{"location":"programming/cpp/noob/inline/#1-getters-and-setters","title":"1. \u200b\u5b58\u53d6\u200b\u5668\u200b\u548c\u200b\u4fee\u6539\u5668\u200b\uff08Getters and Setters\uff09","text":"<p>\u200b\u7c7b\u200b\u7684\u200b\u7b80\u5355\u200b\u5b58\u53d6\u200b\u5668\u200b\u548c\u200b\u4fee\u6539\u5668\u200b\u51fd\u6570\u200b\u662f\u200b\u5185\u8054\u200b\u7684\u200b\u7edd\u4f73\u200b\u5019\u9009\u200b\uff1a</p> <pre><code>class Complex {\nprivate:\n    double real, imag;\n\npublic:\n    inline double getReal() const { return real; }\n    inline double getImag() const { return imag; }\n    inline void setReal(double r) { real = r; }\n    inline void setImag(double i) { imag = i; }\n};\n</code></pre>"},{"location":"programming/cpp/noob/inline/#2","title":"2. \u200b\u5c0f\u578b\u200b\u5de5\u5177\u200b\u51fd\u6570","text":"<p>\u200b\u7b80\u77ed\u200b\u4e14\u200b\u9891\u7e41\u200b\u8c03\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\u9002\u5408\u200b\u5185\u8054\u200b\uff1a</p> <pre><code>inline bool isEven(int num) {\n    return num % 2 == 0;\n}\n\ninline double toRadians(double degrees) {\n    return degrees * 0.01745329251994329576923690768489; // PI/180\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#3","title":"3. \u200b\u6a21\u677f\u200b\u51fd\u6570","text":"<p>\u200b\u6a21\u677f\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u5b9a\u4e49\u200b\u5728\u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u5185\u8054\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u591a\u91cd\u200b\u5b9a\u4e49\u200b\u9519\u8bef\u200b\uff1a</p> <pre><code>template &lt;typename T&gt;\ninline T clamp(T value, T min, T max) {\n    if (value &lt; min) return min;\n    if (value &gt; max) return max;\n    return value;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#4","title":"4. \u200b\u5e38\u91cf\u200b\u8868\u8fbe\u5f0f\u200b\u51fd\u6570","text":"<p>C++11\u200b\u5f15\u5165\u200b\u7684\u200b<code>constexpr</code>\u200b\u51fd\u6570\u200b\u9690\u542b\u200b\u5185\u8054\u200b\u6027\u8d28\u200b\uff1a</p> <pre><code>constexpr int factorial(int n) {\n    return (n &lt;= 1) ? 1 : n * factorial(n - 1);\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#c_1","title":"\u73b0\u4ee3\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u5185\u8054\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":"<p>\u200b\u968f\u7740\u200b\u7f16\u8bd1\u5668\u200b\u6280\u672f\u200b\u7684\u200b\u8fdb\u6b65\u200b\uff0c\u200b\u5185\u8054\u200b\u7b56\u7565\u200b\u4e5f\u200b\u5728\u200b\u4e0d\u65ad\u200b\u6f14\u53d8\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e9b\u200b\u73b0\u4ee3\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u5185\u8054\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff1a</p>"},{"location":"programming/cpp/noob/inline/#_16","title":"\u8ba9\u200b\u7f16\u8bd1\u5668\u200b\u505a\u200b\u51b3\u5b9a","text":"<p>\u200b\u73b0\u4ee3\u200b\u7f16\u8bd1\u5668\u200b\u6bd4\u200b\u65e9\u671f\u200b\u7248\u672c\u200b\u667a\u80fd\u200b\u5f97\u200b\u591a\u200b\uff0c\u200b\u5b83\u4eec\u200b\u5177\u6709\u200b\u590d\u6742\u200b\u7684\u200b\u542f\u53d1\u5f0f\u200b\u7b97\u6cd5\u200b\u6765\u200b\u51b3\u5b9a\u200b\u54ea\u4e9b\u200b\u51fd\u6570\u200b\u5e94\u8be5\u200b\u5185\u8054\u200b\u3002\u200b\u5728\u200b\u8bb8\u591a\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5373\u4f7f\u200b\u6ca1\u6709\u200b<code>inline</code>\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u7f16\u8bd1\u5668\u200b\u4e5f\u200b\u4f1a\u200b\u81ea\u884c\u51b3\u5b9a\u200b\u5185\u8054\u200b\u5c0f\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>// \u200b\u6ca1\u6709\u200binline\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u4f46\u200b\u7f16\u8bd1\u5668\u200b\u53ef\u80fd\u200b\u81ea\u52a8\u200b\u5185\u8054\u200b\nbool isEmpty(const std::string&amp; str) {\n    return str.empty();\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_17","title":"\u4f7f\u7528\u200b\u7f16\u8bd1\u5668\u200b\u4f18\u5316\u200b\u6807\u5fd7","text":"<p>\u200b\u73b0\u4ee3\u200bC++\u200b\u5f00\u53d1\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u901a\u8fc7\u200b\u7f16\u8bd1\u5668\u200b\u4f18\u5316\u200b\u6807\u5fd7\u200b\uff08\u200b\u5982\u200b<code>-O2</code>\u3001<code>-O3</code>\uff09\u200b\u6765\u200b\u63a7\u5236\u200b\u5185\u8054\u200b\u7b56\u7565\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u8fc7\u5ea6\u200b\u4f9d\u8d56\u200b<code>inline</code>\u200b\u5173\u952e\u5b57\u200b\uff1a</p> <pre><code>g++ -O2 -finline-limit=1000 myprogram.cpp -o myprogram\n</code></pre>"},{"location":"programming/cpp/noob/inline/#always_inline","title":"\u4f7f\u7528\u200b<code>[[always_inline]]</code>\u200b\u5c5e\u6027\u200b\uff08\u200b\u5bf9\u4e8e\u200b\u5173\u952e\u200b\u6027\u80fd\u200b\u4ee3\u7801\u200b\uff09","text":"<p>\u200b\u5bf9\u4e8e\u200b\u7edd\u5bf9\u200b\u9700\u8981\u200b\u5185\u8054\u200b\u7684\u200b\u6027\u80fd\u200b\u5173\u952e\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b\u7279\u5b9a\u200b\u7f16\u8bd1\u5668\u200b\u7684\u200b\u5c5e\u6027\u200b\uff1a</p> <pre><code>// GCC/Clang\u200b\u7248\u672c\u200b\n__attribute__((always_inline)) int criticalFunction(int x) {\n    return x * x + 2 * x + 1;\n}\n\n// C++11\u200b\u6807\u51c6\u200b\u5c5e\u6027\u8bed\u6cd5\u200b\uff08\u200b\u9700\u200b\u7f16\u8bd1\u5668\u200b\u652f\u6301\u200b\uff09\n[[gnu::always_inline]] int criticalFunction(int x) {\n    return x * x + 2 * x + 1;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_18","title":"\u6a21\u5757\u5316\u200b\u8bbe\u8ba1\u200b\u4e2d\u200b\u7684\u200b\u5185\u8054","text":"<p>C++20\u200b\u5f15\u5165\u200b\u7684\u200b\u6a21\u5757\u200b\u7cfb\u7edf\u5bf9\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u4f7f\u7528\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4ea7\u751f\u200b\u5f71\u54cd\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u6a21\u5757\u200b\u5141\u8bb8\u200b\u5728\u200b\u7f16\u8bd1\u200b\u5355\u5143\u200b\u4e4b\u95f4\u200b\u5171\u4eab\u200b\u5b9a\u4e49\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4ec5\u4ec5\u200b\u662f\u200b\u58f0\u660e\u200b\uff1a</p> <pre><code>// \u200b\u672a\u6765\u200b\u7684\u200bC++\u200b\u4ee3\u7801\u200b\u53ef\u80fd\u200b\u662f\u200b\u8fd9\u6837\u200b\nexport module math;\n\nexport inline double pythagoras(double a, double b) {\n    return std::sqrt(a*a + b*b);\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_19","title":"\u6df1\u5165\u200b\u7406\u89e3\u200b\uff1a\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u5185\u90e8\u200b\u673a\u5236","text":"<p>\u200b\u4e3a\u4e86\u200b\u66f4\u200b\u6df1\u5165\u200b\u7406\u89e3\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff0c\u200b\u8ba9\u200b\u6211\u4eec\u200b\u7b80\u8981\u200b\u63a2\u8ba8\u200b\u4e00\u4e0b\u200b\u5b83\u200b\u7684\u200b\u5185\u90e8\u200b\u5b9e\u73b0\u200b\u673a\u5236\u200b\uff1a</p>"},{"location":"programming/cpp/noob/inline/#_20","title":"\u7f16\u8bd1\u5668\u200b\u7684\u200b\u5185\u8054\u200b\u51b3\u7b56\u200b\u8fc7\u7a0b","text":"<p>\u200b\u5f53\u200b\u7f16\u8bd1\u5668\u200b\u9047\u5230\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u5b83\u200b\u901a\u5e38\u200b\u4f1a\u200b\uff1a</p> <ol> <li>\u200b\u5206\u6790\u200b\u51fd\u6570\u200b\u7684\u200b\u590d\u6742\u5ea6\u200b\uff08\u200b\u6307\u4ee4\u200b\u6570\u91cf\u200b\u3001\u200b\u63a7\u5236\u6d41\u200b\u7ed3\u6784\u200b\u7b49\u200b\uff09</li> <li>\u200b\u8003\u8651\u200b\u8c03\u7528\u200b\u9891\u7387\u200b\uff08\u200b\u57fa\u4e8e\u200b\u9759\u6001\u200b\u5206\u6790\u200b\u6216\u200b\u5256\u6790\u200b\u4fe1\u606f\u200b\uff09</li> <li>\u200b\u8bc4\u4f30\u200b\u5185\u8054\u200b\u540e\u200b\u7684\u200b\u4ee3\u7801\u200b\u81a8\u80c0\u200b\u7a0b\u5ea6\u200b</li> <li>\u200b\u5224\u65ad\u200b\u5185\u8054\u200b\u662f\u5426\u200b\u4f1a\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\uff08\u200b\u51cf\u5c11\u200b\u51fd\u6570\u8c03\u7528\u200b\u3001\u200b\u542f\u7528\u200b\u66f4\u200b\u591a\u200b\u4f18\u5316\u200b\u7b49\u200b\uff09</li> <li>\u200b\u57fa\u4e8e\u200b\u4ee5\u4e0a\u200b\u56e0\u7d20\u200b\u505a\u51fa\u200b\u5185\u8054\u200b\u51b3\u7b56\u200b</li> </ol>"},{"location":"programming/cpp/noob/inline/#lto","title":"\u94fe\u63a5\u200b\u65f6\u200b\u4f18\u5316\u200b\uff08LTO\uff09","text":"<p>\u200b\u73b0\u4ee3\u200b\u7f16\u8bd1\u5668\u200b\u652f\u6301\u200b\u94fe\u63a5\u200b\u65f6\u200b\u4f18\u5316\u200b\uff0c\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u5185\u8054\u200b\u51b3\u7b56\u200b\u53ef\u4ee5\u200b\u8de8\u8d8a\u200b\u7f16\u8bd1\u200b\u5355\u5143\u200b\u8fb9\u754c\u200b\uff1a</p> <pre><code>// \u200b\u5728\u200b\u4e0d\u540c\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u7684\u200b\u51fd\u6570\u200b\u4e5f\u200b\u53ef\u80fd\u200b\u88ab\u200b\u5185\u8054\u200b\n// file1.cpp\ninline void helper() {\n    // ...\n}\n\n// file2.cpp\nextern void helper();\nvoid main() {\n    helper(); // \u200b\u901a\u8fc7\u200bLTO\uff0c\u200b\u8fd9\u91cc\u200b\u7684\u200b\u8c03\u7528\u200b\u53ef\u80fd\u200b\u88ab\u200b\u5185\u8054\u200b\n}\n</code></pre> <p>\u200b\u7f16\u8bd1\u200b\u547d\u4ee4\u200b\uff1a</p> <pre><code>g++ -flto -O2 file1.cpp file2.cpp -o program\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_21","title":"\u8c03\u8bd5\u200b\u5185\u8054\u200b\u51fd\u6570","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u5728\u200b\u8c03\u8bd5\u200b\u65f6\u200b\u53ef\u80fd\u200b\u5e26\u6765\u200b\u4e00\u4e9b\u200b\u6311\u6218\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u51fd\u6570\u200b\u4f53\u200b\u88ab\u200b\u5408\u5e76\u200b\u5230\u200b\u8c03\u7528\u200b\u70b9\u200b\uff1a</p> <ol> <li>\u200b\u4f7f\u7528\u200b<code>-g -O0</code>\u200b\u7f16\u8bd1\u200b\u6807\u5fd7\u200b\u7981\u7528\u200b\u4f18\u5316\u200b\u4ee5\u4fbf\u200b\u8c03\u8bd5\u200b</li> <li>\u200b\u67d0\u4e9b\u200b\u7f16\u8bd1\u5668\u200b\u63d0\u4f9b\u200b\u7279\u6b8a\u200b\u8c03\u8bd5\u200b\u9009\u9879\u200b\uff08\u200b\u5982\u200bGCC\u200b\u7684\u200b<code>-fno-inline</code>\uff09</li> <li>\u200b\u73b0\u4ee3\u200b\u8c03\u8bd5\u5668\u200b\u8d8a\u6765\u8d8a\u200b\u5584\u4e8e\u200b\u5904\u7406\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\uff0c\u200b\u663e\u793a\u200b\u6e90\u4ee3\u7801\u200b\u6620\u5c04\u200b</li> </ol>"},{"location":"programming/cpp/noob/inline/#_22","title":"\u5b9e\u7528\u200b\u793a\u4f8b\u200b\uff1a\u200b\u4f55\u65f6\u200b\u8be5\u7528\u200b\u5185\u8054","text":"<p>\u200b\u4e0b\u9762\u200b\u662f\u200b\u4e00\u4e9b\u200b\u5b9e\u9645\u200b\u5f00\u53d1\u200b\u4e2d\u200b\u7684\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\uff1a</p>"},{"location":"programming/cpp/noob/inline/#_23","title":"\u6570\u5b66\u200b\u5e93\u4e2d\u200b\u7684\u200b\u57fa\u672c\u200b\u8fd0\u7b97","text":"<pre><code>namespace Math {\ninline double square(double x) { return x * x; }\ninline double cube(double x) { return x * x * x; }\n\ninline double degToRad(double deg) { return deg * 0.017453292519943295; }\ninline double radToDeg(double rad) { return rad * 57.29577951308232; }\n}  // namespace Math\n\n#include &lt;iostream&gt;\n\nint main() {\n    double x = 3.0;\n    std::cout &lt;&lt; \"Square of \" &lt;&lt; x &lt;&lt; \" is \" &lt;&lt; Math::square(x) &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Cube of \" &lt;&lt; x &lt;&lt; \" is \" &lt;&lt; Math::cube(x) &lt;&lt; std::endl;\n\n    double deg = 45.0;\n    std::cout &lt;&lt; deg &lt;&lt; \" degrees in radians is \" &lt;&lt; Math::degToRad(deg)\n              &lt;&lt; std::endl;\n\n    double rad = 0.7853981633974483;\n    std::cout &lt;&lt; rad &lt;&lt; \" radians in degrees is \" &lt;&lt; Math::radToDeg(rad)\n              &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_24","title":"\u6e38\u620f\u200b\u5f00\u53d1\u200b\u4e2d\u200b\u7684\u200b\u5411\u91cf\u200b\u8fd0\u7b97","text":"<pre><code>#include &lt;cmath&gt;\n#include &lt;iostream&gt;\n\nclass Vector2D {\nprivate:\n    float x, y;\n\npublic:\n    Vector2D(float x = 0, float y = 0) : x(x), y(y) {}\n\n    inline float getX() const { return x; }\n    inline float getY() const { return y; }\n\n    inline float length() const { return std::sqrt(x * x + y * y); }\n\n    inline float dot(const Vector2D&amp; other) const {\n        return x * other.x + y * other.y;\n    }\n\n    inline Vector2D normalized() const {\n        float len = length();\n        if (len &gt; 0.0001f)\n            return Vector2D(x / len, y / len);\n        return *this;\n    }\n};\n\nint main() {\n    Vector2D v1(3.0f, 4.0f);\n    Vector2D v2(1.0f, 2.0f);\n\n    std::cout &lt;&lt; \"Length of v1: \" &lt;&lt; v1.length() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Dot product of v1 and v2: \" &lt;&lt; v1.dot(v2) &lt;&lt; std::endl;\n\n    Vector2D v3 = v1.normalized();\n    std::cout &lt;&lt; \"Normalized v1: (\" &lt;&lt; v3.getX() &lt;&lt; \", \" &lt;&lt; v3.getY() &lt;&lt; \")\"\n              &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_25","title":"\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u5de5\u5177","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nnamespace StringUtils {\ninline bool startsWith(const std::string&amp; str, const std::string&amp; prefix) {\n    return str.size() &gt;= prefix.size() &amp;&amp;\n           str.compare(0, prefix.size(), prefix) == 0;\n}\n\ninline bool endsWith(const std::string&amp; str, const std::string&amp; suffix) {\n    return str.size() &gt;= suffix.size() &amp;&amp;\n           str.compare(str.size() - suffix.size(), suffix.size(), suffix) == 0;\n}\n\ninline std::string trim(const std::string&amp; str) {\n    size_t first = str.find_first_not_of(\" \\t\\n\\r\");\n    if (first == std::string::npos)\n        return \"\";\n    size_t last = str.find_last_not_of(\" \\t\\n\\r\");\n    return str.substr(first, last - first + 1);\n}\n}  // namespace StringUtils\n\nint main() {\n    std::string testStr = \"   Hello, World!   \";\n\n    std::cout &lt;&lt; \"Original: '\" &lt;&lt; testStr &lt;&lt; \"'\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Trimmed: '\" &lt;&lt; StringUtils::trim(testStr) &lt;&lt; \"'\" &lt;&lt; std::endl;\n\n    std::cout &lt;&lt; \"Starts with 'Hello': \"\n              &lt;&lt; (StringUtils::startsWith(testStr, \"Hello\") ? \"true\" : \"false\")\n              &lt;&lt; std::endl;\n\n    std::cout &lt;&lt; \"Ends with 'World!': \"\n              &lt;&lt; (StringUtils::endsWith(testStr, \"World!\") ? \"true\" : \"false\")\n              &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/inline/#_26","title":"\u603b\u7ed3\u200b\u4e0e\u200b\u53cd\u601d","text":"<p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u662f\u200bC++\u200b\u4e2d\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u800c\u200b\u5fae\u5999\u200b\u7684\u200b\u7279\u6027\u200b\u3002\u200b\u7406\u89e3\u200b\u5b83\u200b\u7684\u200b\u672c\u8d28\u200b\u662f\u200b\u7f16\u8bd1\u5668\u200b\u4f18\u5316\u200b\u800c\u200b\u975e\u200b\u8bed\u8a00\u200b\u7279\u6027\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u6211\u4eec\u200b\u66f4\u200b\u5408\u7406\u200b\u5730\u200b\u4f7f\u7528\u200b\u5b83\u200b\u3002</p> <p>\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u7684\u200b\u6700\u4f73\u200b\u4f7f\u7528\u200b\u65f6\u673a\u200b\uff1a</p> <ul> <li>\u200b\u5c0f\u578b\u200b\u3001\u200b\u7b80\u5355\u200b\u4e14\u200b\u9891\u7e41\u200b\u8c03\u7528\u200b\u7684\u200b\u51fd\u6570\u200b</li> <li>\u200b\u6027\u80fd\u200b\u5173\u952e\u200b\u8def\u5f84\u200b\u4e0a\u200b\u7684\u200b\u51fd\u6570\u200b</li> <li>\u200b\u6a21\u677f\u200b\u5b9e\u73b0\u200b</li> <li>getter/setter\u200b\u7b49\u200b\u5b58\u53d6\u200b\u51fd\u6570\u200b</li> </ul> <p>\u200b\u4f55\u65f6\u200b\u907f\u514d\u200b\u4f7f\u7528\u200b\u5185\u8054\u200b\uff1a</p> <ul> <li>\u200b\u590d\u6742\u200b\u7684\u200b\u51fd\u6570\u200b\u4f53\u200b</li> <li>\u200b\u5305\u542b\u200b\u5faa\u73af\u200b\u6216\u200b\u9012\u5f52\u200b\u7684\u200b\u51fd\u6570\u200b</li> <li>\u200b\u9891\u7e41\u200b\u4fee\u6539\u200b\u7684\u200b\u63a5\u53e3\u51fd\u6570\u200b</li> <li>\u200b\u865a\u200b\u51fd\u6570\u200b</li> </ul> <p>\u200b\u6700\u540e\u200b\u4e00\u70b9\u200b\u5fe0\u544a\u200b\uff1a\u200b\u4e0d\u8981\u200b\u8fc7\u65e9\u200b\u4f18\u5316\u200b\u3002\u200b\u5148\u200b\u5199\u51fa\u200b\u6b63\u786e\u200b\u3001\u200b\u6e05\u6670\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u518d\u200b\u6839\u636e\u200b\u6027\u80fd\u200b\u5206\u6790\u200b\u7ed3\u679c\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u9700\u8981\u200b\u5185\u8054\u200b\u4f18\u5316\u200b\u3002\u200b\u8ba9\u200b\u7f16\u8bd1\u5668\u200b\u6765\u200b\u5e2e\u200b\u4f60\u200b\u505a\u200b\u5927\u90e8\u5206\u200b\u51b3\u7b56\u200b\uff0c\u200b\u5b83\u200b\u5f80\u5f80\u200b\u6bd4\u200b\u6211\u4eec\u200b\u4eba\u7c7b\u200b\u66f4\u200b\u61c2\u5f97\u200b\u4f55\u65f6\u200b\u5185\u8054\u200b\u662f\u200b\u6709\u76ca\u200b\u7684\u200b\u3002</p> <p>\u200b\u5728\u200bC++\u200b\u7f16\u7a0b\u200b\u7684\u200b\u65c5\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u5185\u8054\u200b\u51fd\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u503c\u5f97\u200b\u638c\u63e1\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u4f46\u200b\u50cf\u200b\u6240\u6709\u200b\u5de5\u5177\u200b\u4e00\u6837\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u4ef7\u503c\u200b\u5728\u4e8e\u200b\u5408\u7406\u200b\u4f7f\u7528\u200b\uff0c\u200b\u800c\u200b\u975e\u200b\u8fc7\u5ea6\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/","title":"Day01 - C++\u200b\u4e2d\u200b\u7684\u200b\u8f93\u5165\u8f93\u51fa\u200b\u63a7\u5236\u200b(IO\u200b\u6d41\u200b)","text":"<p>C++\u200b\u7684\u200b\u8f93\u5165\u8f93\u51fa\u200b\u63a7\u5236\u200b\uff08I/O\u200b\u6d41\u200b\uff09\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u4e14\u200b\u7075\u6d3b\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u80fd\u591f\u200b\u4ee5\u200b\u9762\u5411\u5bf9\u8c61\u200b\u7684\u200b\u65b9\u5f0f\u200b\u9ad8\u6548\u200b\u5904\u7406\u200b\u63a7\u5236\u53f0\u200b\u3001\u200b\u6587\u4ef6\u200b\u548c\u200b\u5176\u4ed6\u200b\u8bbe\u5907\u200b\u7684\u200b\u8f93\u5165\u8f93\u51fa\u200b\u64cd\u4f5c\u200b\u3002\u200b\u672c\u6587\u200b\u5c06\u200b\u901a\u8fc7\u200b\u5bf9\u6bd4\u200b\u5206\u6790\u200b\u3001\u200b\u5b9e\u7528\u200b\u793a\u4f8b\u200b\u548c\u200b\u5e38\u89c1\u200b\u573a\u666f\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u4f60\u200b\u5168\u9762\u200b\u638c\u63e1\u200bI/O\u200b\u6d41\u200b\u7684\u200b\u7cbe\u9ad3\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/#c-vs-cio","title":"C++ vs C\u200b\u8bed\u8a00\u200bIO\u200b\u5bf9\u6bd4","text":"\u7279\u6027\u200b C++\u200b\u5b9e\u73b0\u200b C\u200b\u8bed\u8a00\u200b\u5b9e\u73b0\u200b \u200b\u4f18\u52bf\u200b\u5bf9\u6bd4\u200b \u200b\u63a7\u5236\u53f0\u200b\u8f93\u51fa\u200b <code>cout &lt;&lt; \"Hello\"</code> <code>printf(\"Hello\")</code> \u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff0c\u200b\u65e0\u9700\u200b\u683c\u5f0f\u200b\u6307\u5b9a\u200b\u7b26\u200b \u200b\u63a7\u5236\u53f0\u200b\u8f93\u5165\u200b <code>cin &gt;&gt; variable</code> <code>scanf(\"%d\", &amp;var)</code> \u200b\u81ea\u52a8\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\uff0c\u200b\u66f4\u200b\u7b80\u6d01\u200b \u200b\u6587\u4ef6\u200b\u5199\u5165\u200b <code>ofstream</code>\u200b\u5bf9\u8c61\u200b <code>FILE*</code>+<code>fprintf</code> \u200b\u81ea\u52a8\u200b\u8d44\u6e90\u7ba1\u7406\u200b\uff08RAII\uff09 \u200b\u9519\u8bef\u5904\u7406\u200b \u200b\u6d41\u200b\u72b6\u6001\u200b\u68c0\u67e5\u200b \u200b\u8fd4\u56de\u503c\u200b\u68c0\u67e5\u200b \u200b\u66f4\u200b\u9762\u5411\u5bf9\u8c61\u200b\uff0c\u200b\u72b6\u6001\u200b\u53ef\u8ffd\u8e2a\u200b \u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b <code>setprecision</code>\u200b\u7b49\u200b <code>%f</code>\u200b\u7b49\u200b\u683c\u5f0f\u200b\u7b26\u200b \u200b\u53ef\u200b\u94fe\u5f0f\u200b\u8c03\u7528\u200b\uff0c\u200b\u66f4\u200b\u6613\u8bfb\u200b <p>\u200b\u573a\u666f\u200b\u5bf9\u6bd4\u200b\u793a\u4f8b\u200b </p> <pre><code>// C++\u200b\u8f93\u51fa\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u6570\u636e\u200b\u65e0\u9700\u200b\u683c\u5f0f\u200b\u7b26\u200b\ncout &lt;&lt; \"\u200b\u6574\u6570\u200b\uff1a\" &lt;&lt; 42 &lt;&lt; \"\uff0c\u200b\u6d6e\u70b9\u6570\u200b\uff1a\" &lt;&lt; 3.14 &lt;&lt; endl;\n\n// C\u200b\u8bed\u8a00\u200b\u9700\u8981\u200b\u7cbe\u786e\u200b\u5339\u914d\u200b\u683c\u5f0f\u200b\u7b26\u200b\nprintf(\"\u200b\u6574\u6570\u200b\uff1a%d\uff0c\u200b\u6d6e\u70b9\u6570\u200b\uff1a%f\", 42, 3.14);  // \u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b\u65f6\u200b\u53ef\u80fd\u200b\u5d29\u6e83\u200b\uff01\n</code></pre>"},{"location":"programming/cpp/noob/io/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"programming/cpp/noob/io/#_2","title":"\u6d41\u7c7b\u200b\u5c42\u6b21\u7ed3\u6784","text":"<p>C++\u200b\u7684\u200bIO\u200b\u6d41\u200b\u57fa\u4e8e\u200b\u4ee5\u4e0b\u200b\u51e0\u4e2a\u200b\u7c7b\u200b\uff1a</p> <ul> <li><code>ios_base</code>\uff1a\u200b\u8fd9\u662f\u200b\u6240\u6709\u200b\u8f93\u5165\u8f93\u51fa\u200b\u7c7b\u200b\u7684\u200b\u57fa\u7840\u200b\u7c7b\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u57fa\u672c\u200b\u7684\u200b\u529f\u80fd\u200b\uff0c\u200b\u5982\u200b\u8bbe\u7f6e\u200b\u683c\u5f0f\u200b\u548c\u200b\u9519\u8bef\u200b\u72b6\u6001\u200b\u7684\u200b\u68c0\u67e5\u200b\u3002</li> <li><code>istream</code> \u200b\u548c\u200b <code>ostream</code>\uff1a\u200b\u5206\u522b\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u64cd\u4f5c\u200b\u7684\u200b\u57fa\u7c7b\u200b\u3002<code>istream</code>\u200b\u8d1f\u8d23\u200b\u8bfb\u53d6\u6570\u636e\u200b\uff0c\u200b\u800c\u200b<code>ostream</code>\u200b\u8d1f\u8d23\u200b\u5199\u5165\u200b\u6570\u636e\u200b\u3002</li> <li><code>iostream</code>\uff1a\u200b\u540c\u65f6\u200b\u7ee7\u627f\u200b\u81ea\u200b<code>istream</code>\u200b\u548c\u200b<code>ostream</code>\uff0c\u200b\u5141\u8bb8\u200b\u8fdb\u884c\u200b\u53cc\u5411\u200b\u7684\u200b\u8f93\u5165\u8f93\u51fa\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u4e0e\u200b\u6587\u4ef6\u200b\u6216\u200b\u5176\u4ed6\u200b\u9700\u8981\u200b\u53cc\u5411\u901a\u4fe1\u200b\u8bbe\u5907\u200b\u7684\u200b\u4ea4\u4e92\u200b\u3002</li> </ul>"},{"location":"programming/cpp/noob/io/#_3","title":"\u6807\u51c6\u200b\u6d41\u200b\u5bf9\u8c61","text":"<p>C++\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u6d41\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6807\u51c6\u200b\u8f93\u5165\u8f93\u51fa\u200b\uff1a</p> <ul> <li><code>cin</code>\uff1a\u200b\u6807\u51c6\u200b\u8f93\u5165\u200b\u6d41\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b\u952e\u76d8\u200b\u8bfb\u53d6\u200b\u8f93\u5165\u200b\u3002</li> <li><code>cout</code>\uff1a\u200b\u6807\u51c6\u200b\u8f93\u51fa\u200b\u6d41\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5411\u200b\u5c4f\u5e55\u200b\u8f93\u51fa\u200b\u6570\u636e\u200b\u3002</li> <li><code>cerr</code>\uff1a\u200b\u6807\u51c6\u200b\u9519\u8bef\u200b\u8f93\u51fa\u200b\u6d41\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u8f93\u51fa\u200b\u9519\u8bef\u4fe1\u606f\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u4fe1\u606f\u200b\u901a\u5e38\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u91cd\u5b9a\u5411\u200b\u3002</li> <li><code>clog</code>\uff1a\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b<code>cerr</code>\uff0c\u200b\u4f46\u200b\u5176\u200b\u8f93\u51fa\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u7f13\u51b2\u200b\uff0c\u200b\u5177\u4f53\u200b\u884c\u4e3a\u200b\u7531\u200b\u5b9e\u73b0\u200b\u5b9a\u4e49\u200b\u3002</li> </ul>"},{"location":"programming/cpp/noob/io/#_4","title":"\u683c\u5f0f\u200b\u63a7\u5236","text":"<p>\u200b\u683c\u5f0f\u200b\u63a7\u5236\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5b9a\u5236\u200b\u8f93\u5165\u8f93\u51fa\u200b\u6570\u636e\u200b\u7684\u200b\u663e\u793a\u65b9\u5f0f\u200b\uff0c\u200b\u5305\u62ec\u200b\u7cbe\u5ea6\u200b\u3001\u200b\u5bbd\u5ea6\u200b\u3001\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\u3001\u200b\u57fa\u6570\u200b\u548c\u200b\u8fdb\u5236\u200b\u663e\u793a\u200b\u7b49\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/#_5","title":"\u5e38\u7528\u200b\u683c\u5f0f\u200b\u8bbe\u7f6e\u200b\u7b26","text":"<ul> <li><code>setprecision</code>\uff1a\u200b\u63a7\u5236\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</li> </ul> <pre><code>double amount = 123.4567;\ncout &lt;&lt; setprecision(2) &lt;&lt; amount &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1a123.46\n</code></pre> <ul> <li><code>setw</code>\uff1a\u200b\u8bbe\u7f6e\u200b\u5b57\u200b\u6bb5\u200b\u5bbd\u5ea6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5bf9\u9f50\u200b\u548c\u200b\u586b\u8865\u200b\u7a7a\u683c\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</li> </ul> <pre><code>int number = 42;\ncout &lt;&lt; setw(5) &lt;&lt; number &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b: \"  42\"\uff08\u200b\u5047\u8bbe\u200b\u603b\u200b\u5bbd\u5ea6\u200b\u4e3a\u200b5\uff09\n</code></pre> <ul> <li><code>setfill</code>\uff1a\u200b\u8bbe\u7f6e\u200b\u586b\u5145\u200b\u5b57\u7b26\u200b\uff0c\u200b\u914d\u5408\u200b<code>setw</code>\u200b\u4f7f\u7528\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</li> </ul> <pre><code>cout &lt;&lt; setw(5) &lt;&lt; setfill('*') &lt;&lt; number &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b: \"**42\"\n</code></pre> <ul> <li><code>fixed</code> \u200b\u548c\u200b <code>scientific</code>\uff1a\u200b\u5206\u522b\u200b\u7528\u4e8e\u200b\u4ee5\u200b\u5b9a\u70b9\u200b\u6216\u200b\u79d1\u5b66\u200b\u8bb0\u6570\u6cd5\u200b\u663e\u793a\u200b\u6d6e\u70b9\u6570\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</li> </ul> <pre><code>cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; 123.4567 &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1a123.46\ncout &lt;&lt; scientific &lt;&lt; setprecision(2) &lt;&lt; 123.4567 &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1a1.23e+02\n</code></pre> <ul> <li><code>left</code>, <code>right</code> \u200b\u548c\u200b <code>internal</code>\uff1a\u200b\u63a7\u5236\u200b\u5bf9\u9f50\u200b\u65b9\u5f0f\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</li> </ul> <pre><code>cout &lt;&lt; setw(10) &lt;&lt; right &lt;&lt; 42 &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u53f3\u200b\u5bf9\u9f50\u200b\ncout &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; 42 &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5de6\u200b\u5bf9\u9f50\u200b\n</code></pre>"},{"location":"programming/cpp/noob/io/#_6","title":"\u5934\u6587\u4ef6\u200b\u548c\u200b\u547d\u540d\u200b\u7a7a\u95f4","text":"<p>\u200b\u683c\u5f0f\u200b\u63a7\u5236\u7b26\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u5305\u542b\u200b\u5934\u6587\u4ef6\u200b<code>&lt;iomanip&gt;</code>\uff0c\u200b\u5e76\u4e14\u200b\u4f7f\u7528\u200b<code>std::</code>\u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#include &lt;iomanip&gt;\n...\nusing namespace std; // \u200b\u6216\u8005\u200b\u5728\u200b\u4f7f\u7528\u200b\u65f6\u200b\u52a0\u4e0a\u200bstd::\n</code></pre>"},{"location":"programming/cpp/noob/io/#_7","title":"\u6570\u636e\u200b\u8f93\u5165\u200b\u548c\u200b\u8f93\u51fa\u200b\u64cd\u4f5c\u7b26","text":""},{"location":"programming/cpp/noob/io/#_8","title":"\u8f93\u51fa\u200b\u8fd0\u7b97\u7b26\u200b<code>&lt;&lt;</code>","text":"<p>\u200b\u5de6\u79fb\u200b\u8fd0\u7b97\u7b26\u200b<code>&lt;&lt;</code>\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6570\u636e\u200b\u5199\u5165\u200b\u6d41\u200b\u3002\u200b\u652f\u6301\u200b\u591a\u79cd\u200b\u6570\u636e\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4f1a\u200b\u81ea\u52a8\u200b\u8c03\u7528\u200b\u76f8\u5e94\u200b\u7684\u200b\u6d41\u200b\u63d2\u5165\u200b\u51fd\u6570\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>int num = 10;\ndouble pi = 3.14159;\nstring name = \"Alice\";\ncout &lt;&lt; \"Number: \" &lt;&lt; num &lt;&lt; \", Pi: \" &lt;&lt; pi &lt;&lt; \", Name: \" &lt;&lt; name &lt;&lt; endl;\n</code></pre> <pre><code>#include &lt;iomanip&gt;\n\n// \u200b\u91d1\u989d\u200b\u683c\u5f0f\u5316\u200b\uff1a\u200b\u56fa\u5b9a\u200b\u4e24\u4f4d\u200b\u5c0f\u6570\u200b\uff0c\u200b\u5343\u4f4d\u200b\u5206\u9694\u7b26\u200b\ndouble price = 12345.6789;\ncout &lt;&lt; fixed &lt;&lt; setprecision(2) \n     &lt;&lt; \"\u200b\u603b\u4ef7\u200b\uff1a\" &lt;&lt; put_money(price) &lt;&lt; endl;\n// \u200b\u8f93\u51fa\u200b\uff1a\u200b\u603b\u4ef7\u200b\uff1a$12,345.68\n\n// \u200b\u8868\u683c\u200b\u5bf9\u9f50\u200b\uff1a\u200b\u4e0d\u540c\u200b\u6570\u636e\u7c7b\u578b\u200b\u7edf\u4e00\u200b\u5bf9\u9f50\u200b\ncout &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; \"\u200b\u59d3\u540d\u200b\" \n     &lt;&lt; setw(8) &lt;&lt; right &lt;&lt; \"\u200b\u5e74\u9f84\u200b\" &lt;&lt; endl\n     &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; \"\u200b\u5f20\u4e09\u200b\" \n     &lt;&lt; setw(8) &lt;&lt; right &lt;&lt; 25 &lt;&lt; endl\n     &lt;&lt; setw(10) &lt;&lt; left &lt;&lt; \"\u200b\u674e\u56db\u200b\" \n     &lt;&lt; setw(8) &lt;&lt; right &lt;&lt; 30 &lt;&lt; endl;\n/*\n\u200b\u8f93\u51fa\u200b\uff1a\n\u200b\u59d3\u540d\u200b        \u200b\u5e74\u9f84\u200b\n\u200b\u5f20\u4e09\u200b          25\n\u200b\u674e\u56db\u200b          30\n*/\n</code></pre>"},{"location":"programming/cpp/noob/io/#_9","title":"\u8f93\u5165\u200b\u8fd0\u7b97\u7b26\u200b<code>&gt;&gt;</code>","text":"<p>\u200b\u53f3\u79fb\u200b\u8fd0\u7b97\u7b26\u200b<code>&gt;&gt;</code>\u200b\u7528\u4e8e\u200b\u4ece\u6d41\u200b\u4e2d\u200b\u8bfb\u53d6\u6570\u636e\u200b\u3002\u200b\u652f\u6301\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4f1a\u200b\u8df3\u200b\u8fc7\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>int age;\ncout &lt;&lt; \"Enter your age: \";\ncin &gt;&gt; age;\n</code></pre>"},{"location":"programming/cpp/noob/io/#_10","title":"\u6587\u4ef6\u200b\u6d41","text":"<p>\u200b\u6587\u4ef6\u200b\u6d41\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5c06\u200b\u6570\u636e\u200b\u8bfb\u53d6\u200b\u5230\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u6216\u200b\u5c06\u200b\u6570\u636e\u200b\u5199\u5165\u200b\u6587\u4ef6\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/#41-ifstream-ofstream","title":"4.1 <code>ifstream</code> \u200b\u548c\u200b <code>ofstream</code>","text":"<ul> <li><code>ifstream</code>\uff1a\u200b\u6587\u4ef6\u200b\u8f93\u5165\u200b\u6d41\u200b\u3002</li> <li><code>ofstream</code>\uff1a\u200b\u6587\u4ef6\u200b\u8f93\u51fa\u200b\u6d41\u200b\u3002</li> </ul> <pre><code>#include &lt;fstream&gt;\nusing namespace std;\n\nint main() {\n    ofstream outFile(\"output.txt\");\n    if (!outFile) {\n        cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b!\" &lt;&lt; endl;\n        return 1;\n    }\n    outFile &lt;&lt; \"Hello, File!\" &lt;&lt; endl;\n    outFile.close();\n\n    ifstream inFile(\"output.txt\");\n    if (!inFile) {\n        cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b!\" &lt;&lt; endl;\n        return 1;\n    }\n    string line;\n    getline(inFile, line);\n    cout &lt;&lt; line &lt;&lt; endl;\n    inFile.close();\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/io/#_11","title":"\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\u64cd\u4f5c","text":"<p>\u200b\u901a\u8fc7\u200b\u8bbe\u7f6e\u200b\u6587\u4ef6\u200b\u6253\u5f00\u200b\u6a21\u5f0f\u200b\u4e3a\u200b\u4e8c\u8fdb\u5236\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5904\u7406\u200b\u4e8c\u8fdb\u5236\u200b\u6587\u4ef6\u200b\uff1a</p> <pre><code>ofstream outFile(\"data.bin\", ios::binary);\noutFile.write((const char*)&amp;num, sizeof(num));\noutFile.close();\n\nifstream inFile(\"data.bin\", ios::binary);\ninFile.read((char*)&amp;readNum, sizeof(readNum));\ninFile.close();\n</code></pre>"},{"location":"programming/cpp/noob/io/#_12","title":"\u5b89\u5168\u200b\u8f93\u5165\u200b\u6a21\u677f","text":"<pre><code>template&lt;typename T&gt;\nT getInput(const string&amp; prompt) {\n    T value;\n    while(true) {\n        cout &lt;&lt; prompt;\n        if(cin &gt;&gt; value) break;\n        cin.clear();\n        cin.ignore(1024, '\\n');\n        cerr &lt;&lt; \"\u200b\u8f93\u5165\u200b\u65e0\u6548\u200b\uff0c\u200b\u8bf7\u200b\u91cd\u8bd5\u200b\uff01\\n\";\n    }\n    cin.ignore(1024, '\\n');  // \u200b\u6e05\u200b\u9664\u975e\u200b\u6570\u5b57\u200b\u5b57\u7b26\u200b\n    return value;\n}\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\ndouble price = getInput&lt;double&gt;(\"\u200b\u8bf7\u200b\u8f93\u5165\u200b\u4ef7\u683c\u200b\uff1a\");\n</code></pre>"},{"location":"programming/cpp/noob/io/#_13","title":"\u683c\u5f0f\u5316\u200b\u8f93\u5165\u8f93\u51fa","text":""},{"location":"programming/cpp/noob/io/#_14","title":"\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b\u793a\u4f8b","text":"<p>\u200b\u63a7\u5236\u200b\u6d6e\u70b9\u6570\u200b\u663e\u793a\u200b\uff1a</p> <pre><code>double amount = 1234.5678;\ncout &lt;&lt; \"Amount: \" &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; amount &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1aAmount: 1234.57\n</code></pre> <p>\u200b\u5bf9\u9f50\u200b\u548c\u200b\u586b\u5145\u200b\uff1a</p> <pre><code>cout &lt;&lt; \"Score: \" &lt;&lt; setw(10) &lt;&lt; setfill('*') &lt;&lt; left &lt;&lt; 99 &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1aScore: ********99\n</code></pre> <p>\u200b\u66f4\u52a0\u200b\u73b0\u4ee3\u5316\u200b\u7684\u200b <code>std::format</code></p> <pre><code>#include &lt;format&gt;\n\n// \u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u683c\u5f0f\u5316\u200b\uff08\u200b\u6bd4\u200bprintf\u200b\u66f4\u200b\u5b89\u5168\u200b\uff01\uff09\ncout &lt;&lt; format(\"\u200b\u5706\u5468\u7387\u200b\uff1a{:.2f}\", 3.1415926); // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5706\u5468\u7387\u200b\uff1a3.14\n\n// \u200b\u652f\u6301\u200b\u590d\u6742\u200b\u683c\u5f0f\u5316\u200b\ncout &lt;&lt; format(\"{:*^20}\", \"\u200b\u5c45\u4e2d\u200b\u663e\u793a\u200b\"); // \u200b\u7528\u200b*\u200b\u586b\u5145\u200b\u4f7f\u200b\u6587\u672c\u200b\u5c45\u4e2d\u200b\n</code></pre> <p>\u200b\u66f4\u52a0\u200b\u66f4\u52a0\u200b\u73b0\u4ee3\u5316\u200b\u7684\u200b <code>std::print</code>\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u652f\u6301\u200bc++23\u200b\u548c\u200b<code>&lt;format&gt;</code>\uff08\u200b\u6ce8\u610f\u200bgcc-13+\uff09\uff1a</p> <pre><code>#include &lt;print&gt;\n\n// \u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u683c\u5f0f\u5316\u200b\uff08\u200b\u6bd4\u200bprintf\u200b\u66f4\u200b\u5b89\u5168\u200b\uff01\uff09\nstd::print(\"\u200b\u5706\u5468\u7387\u200b\uff1a{:.2f}\", 3.1415926); // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5706\u5468\u7387\u200b\uff1a3.14\n// \u200b\u652f\u6301\u200b\u590d\u6742\u200b\u683c\u5f0f\u5316\u200b\nstd::print(\"{:*^20}\", \"\u200b\u5c45\u4e2d\u200b\u663e\u793a\u200b\"); // \u200b\u7528\u200b*\u200b\u586b\u5145\u200b\u4f7f\u200b\u6587\u672c\u200b\u5c45\u4e2d\u200b\n</code></pre>"},{"location":"programming/cpp/noob/io/#_15","title":"\u683c\u5f0f\u5316\u200b\u8f93\u5165\u200b\u793a\u4f8b","text":"<p>\u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u5e76\u200b\u8df3\u200b\u8fc7\u200b\u7a7a\u767d\u200b\uff1a</p> <pre><code>int a, b;\ncin &gt;&gt; a &gt;&gt; b; // \u200b\u8bfb\u53d6\u200b\u4e24\u4e2a\u200b\u6574\u6570\u200b\uff0c\u200b\u8df3\u8fc7\u200b\u4e2d\u95f4\u200b\u7684\u200b\u7a7a\u683c\u200b\n</code></pre> <p>\u200b\u8bfb\u53d6\u200b\u7279\u5b9a\u200b\u683c\u5f0f\u200b\u7684\u200b\u6570\u636e\u200b\uff1a</p> <pre><code>string date;\ncin &gt;&gt; setw(5) &gt;&gt; date; // \u200b\u8bfb\u53d6\u200b5\u200b\u4e2a\u5b57\u7b26\u200b\n</code></pre>"},{"location":"programming/cpp/noob/io/#_16","title":"\u6d41\u200b\u64cd\u7eb5\u5668","text":""},{"location":"programming/cpp/noob/io/#_17","title":"\u81ea\u5b9a\u4e49\u200b\u6d41\u200b\u64cd\u7eb5\u5668","text":"<pre><code>// \u200b\u521b\u5efa\u200b\u989c\u8272\u200b\u63a7\u5236\u200b\u64cd\u7eb5\u5668\u200b\nostream&amp; red(ostream&amp; os) {\n    return os &lt;&lt; \"\\033[31m\";\n}\n\nostream&amp; reset(ostream&amp; os) {\n    return os &lt;&lt; \"\\033[0m\";\n}\n\ncout &lt;&lt; red &lt;&lt; \"\u200b\u9519\u8bef\u4fe1\u606f\u200b\uff01\" &lt;&lt; reset &lt;&lt; endl;\n</code></pre>"},{"location":"programming/cpp/noob/io/#_18","title":"\u72b6\u6001\u200b\u4fdd\u5b58\u200b\u4e0e\u200b\u6062\u590d","text":"<pre><code>// \u200b\u4fdd\u5b58\u200b\u539f\u59cb\u200b\u683c\u5f0f\u200b\nios init(nullptr);\ninit.copyfmt(cout);\n\n// \u200b\u4fee\u6539\u200b\u683c\u5f0f\u200b\ncout &lt;&lt; hex &lt;&lt; showbase &lt;&lt; 255;  // \u200b\u8f93\u51fa\u200b0xff\n\n// \u200b\u6062\u590d\u200b\u539f\u59cb\u200b\u683c\u5f0f\u200b\ncout.copyfmt(init);\ncout &lt;&lt; 255;  // \u200b\u8f93\u51fa\u200b255\n</code></pre>"},{"location":"programming/cpp/noob/io/#_19","title":"\u6027\u80fd\u200b\u4f18\u5316\u200b\u6280\u5de7","text":"<p>\u200b\u51cf\u5c11\u200b\u683c\u5f0f\u200b\u5207\u6362\u200b\uff1a\u200b\u9891\u7e41\u200b\u4fee\u6539\u200b\u683c\u5f0f\u200b\u6807\u5fd7\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u6027\u80fd\u200b</p> <pre><code>// \u200b\u4f18\u5316\u200b\u524d\u200b\uff08\u200b\u591a\u6b21\u200b\u683c\u5f0f\u200b\u8bbe\u7f6e\u200b\uff09\ncout &lt;&lt; setw(8) &lt;&lt; a &lt;&lt; setw(8) &lt;&lt; b;\n\n// \u200b\u4f18\u5316\u200b\u540e\u200b\uff08\u200b\u7edf\u4e00\u200b\u8bbe\u7f6e\u200b\uff09\ncout &lt;&lt; setw(8);\ncout &lt;&lt; a &lt;&lt; b;\n</code></pre> <p>\u200b\u7f13\u51b2\u533a\u200b\u7ba1\u7406\u200b\uff1a\u200b\u624b\u52a8\u200b\u5237\u65b0\u200b\u63d0\u5347\u200b\u5173\u952e\u200b\u8f93\u51fa\u200b</p> <pre><code>cout &lt;&lt; \"\u200b\u91cd\u8981\u200b\u6d88\u606f\u200b...\" &lt;&lt; flush;  // \u200b\u7acb\u5373\u200b\u8f93\u51fa\u200b\n</code></pre> <p>\u200b\u6d41\u200b\u7ed1\u5b9a\u200b\uff1a\u200b\u540c\u6b65\u200b\u8f93\u5165\u8f93\u51fa\u200b\u6d41\u200b</p> <pre><code>cin.tie(&amp;cout);  // \u200b\u8f93\u5165\u200b\u524d\u200b\u81ea\u52a8\u200b\u5237\u65b0\u200b\u8f93\u51fa\u200b\u7f13\u51b2\u533a\u200b\n</code></pre>"},{"location":"programming/cpp/noob/io/#_20","title":"\u5176\u4ed6\u200b\u5b9e\u7528\u200b\u51fd\u6570","text":""},{"location":"programming/cpp/noob/io/#_21","title":"\u6539\u53d8\u200b\u5b57\u7b26\u4e32\u200b\u5927\u5c0f\u5199","text":"<p>\u200b\u867d\u7136\u200bC++\u200b\u6807\u51c6\u200b\u5e93\u200b\u6ca1\u6709\u200b\u76f4\u63a5\u200b\u63d0\u4f9b\u200b\u5b57\u7b26\u4e32\u200b\u5927\u5c0f\u5199\u200b\u7684\u200b\u8f6c\u6362\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u51fd\u6570\u200b\u6216\u200b\u5229\u7528\u200b\u5e73\u53f0\u200b\u7279\u5b9a\u200b\u7684\u200b\u51fd\u6570\u200b\u5982\u200b<code>strupr</code>\u200b\u548c\u200b<code>strlwr</code>\uff08\u200b\u4f46\u200b\u5728\u200bWindows\u200b\u73af\u5883\u200b\u4e0b\u200b\uff09\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>char text[] = \"hello, world!\";\nstrupr(text); // \u200b\u7ed3\u679c\u200b\uff1a\"HELLO, WORLD!\"\nstrlwr(text); // \u200b\u7ed3\u679c\u200b\uff1a\"hello, world!\"\n</code></pre>"},{"location":"programming/cpp/noob/io/#_22","title":"\u5b9e\u7528\u200b\u51fd\u6570\u200b\u548c\u200b\u65b9\u6cd5","text":"<ul> <li><code>getline</code>\uff1a\u200b\u8bfb\u53d6\u200b\u4e00\u884c\u200b\u8f93\u5165\u200b\uff0c\u200b\u5305\u62ec\u200b\u7a7a\u683c\u200b\u3002</li> <li><code>tellg</code> \u200b\u548c\u200b <code>seekg</code>\uff1a\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u548c\u200b\u8bbe\u7f6e\u200b\u8f93\u5165\u200b\u6d41\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6307\u9488\u200b\u3002</li> <li><code>tellp</code> \u200b\u548c\u200b <code>seekp</code>\uff1a\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u548c\u200b\u8bbe\u7f6e\u200b\u8f93\u51fa\u200b\u6d41\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u6307\u9488\u200b\u3002</li> </ul>"},{"location":"programming/cpp/noob/io/#_23","title":"\u5e38\u89c1\u95ee\u9898\u200b\u548c\u200b\u89e3\u51b3\u200b\u65b9\u6cd5","text":""},{"location":"programming/cpp/noob/io/#_24","title":"\u8f93\u5165\u200b\u591a\u4f59\u200b\u7684\u200b\u5b57\u7b26","text":"<p>\u200b\u5f53\u200b\u7528\u200b<code>cin &gt;&gt;</code>\u200b\u8bfb\u53d6\u200b\u8f93\u5165\u200b\u65f6\u200b\uff0c\u200b\u591a\u4f59\u200b\u7684\u200b\u5b57\u7b26\u200b\u4f1a\u200b\u88ab\u200b\u7559\u5728\u200b\u8f93\u5165\u200b\u6d41\u4e2d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u540e\u7eed\u200b\u7684\u200b\u8f93\u5165\u200b\u64cd\u4f5c\u200b\u5f02\u5e38\u200b\u3002\u200b\u5904\u7406\u200b\u8fd9\u79cd\u200b\u60c5\u51b5\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>cin.ignore()</code>\u200b\u548c\u200b<code>cin.clear()</code>\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>int num;\ncin &gt;&gt; num;\nif (cin.fail()) {\n    cin.clear(); // \u200b\u91cd\u7f6e\u200b\u9519\u8bef\u200b\u72b6\u6001\u200b\n    cin.ignore(numeric_limits&lt;streamsize&gt;::max(), '\\n'); // \u200b\u5ffd\u7565\u200b\u5269\u4f59\u200b\u5b57\u7b26\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/io/#_25","title":"\u8bbe\u7f6e\u200b\u6587\u672c\u200b\u5bf9\u9f50","text":"<p>\u200b\u4f7f\u7528\u200b<code>setw</code>\u200b\u548c\u200b<code>setfill</code>\u200b\u6765\u200b\u5bf9\u9f50\u200b\u6587\u672c\u200b\uff1a</p> <pre><code>cout &lt;&lt; setw(20) &lt;&lt; setfill(' ') &lt;&lt; \"Hello\" &lt;&lt; endl; // \u200b\u5de6\u200b\u5bf9\u9f50\u200b\ncout &lt;&lt; setw(20) &lt;&lt; setfill('-') &lt;&lt; \"World\" &lt;&lt; endl; // \u200b\u586b\u5145\u200b\u5b57\u7b26\u200b\u4e3a\u200b'-'\uff0c\u200b\u5de6\u200b\u5bf9\u9f50\u200b\n</code></pre>"},{"location":"programming/cpp/noob/io/#_26","title":"\u6d6e\u70b9\u6570\u200b\u7cbe\u5ea6\u200b\u95ee\u9898","text":"<p>\u200b\u6d6e\u70b9\u6570\u200b\u5728\u200b\u5b58\u50a8\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u51fa\u73b0\u200b\u7cbe\u5ea6\u200b\u635f\u5931\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>fixed</code>\u200b\u548c\u200b<code>setprecision</code>\u200b\u53ef\u4ee5\u200b\u63a7\u5236\u200b\u663e\u793a\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u3002\u200b\u5bf9\u4e8e\u200b\u9ad8\u7cbe\u5ea6\u200b\u9700\u6c42\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>long double</code>\u200b\u7c7b\u578b\u200b\u6216\u200b\u8f6c\u5411\u200b\u5b9a\u70b9\u6570\u200b\u5904\u7406\u200b\u5e93\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/#_27","title":"\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u5f02\u5e38\u200b\u5904\u7406","text":"<p>\u200b\u5728\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\uff0c\u200b\u5e94\u200b\u68c0\u67e5\u200b\u6587\u4ef6\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u6253\u5f00\u200b\uff1a</p> <pre><code>ofstream outfile(\"data.txt\");\nif (!outfile) {\n    cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b!\" &lt;&lt; endl;\n    return 1;\n}\n</code></pre>"},{"location":"programming/cpp/noob/io/#_28","title":"\u5c0f\u7ed3","text":"<p>C++\u200b\u7684\u200bIO\u200b\u6d41\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u5f3a\u5927\u200b\u7684\u200b\u673a\u5236\u200b\u6765\u200b\u5904\u7406\u200b\u8f93\u5165\u8f93\u51fa\u200b\uff0c\u200b\u683c\u5f0f\u200b\u63a7\u5236\u200b\u7075\u6d3b\u591a\u6837\u200b\uff0c\u200b\u652f\u6301\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e14\u200b\u6613\u4e8e\u200b\u6269\u5c55\u200b\u3002\u200b\u901a\u8fc7\u200b\u638c\u63e1\u200b\u8fd9\u4e9b\u200b\u57fa\u672c\u6982\u5ff5\u200b\u548c\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u60a8\u200b\u80fd\u591f\u200b\u7f16\u5199\u200b\u66f4\u52a0\u200b\u9ad8\u6548\u200b\u548c\u200b\u53ef\u8bfb\u200b\u7684\u200bC++\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"programming/cpp/noob/io/#_29","title":"\u7ed9\u200b\u65b0\u624b\u200b\u7684\u200b\u5efa\u8bae","text":"<ol> <li>\u200b\u5fd8\u8bb0\u200bprintf/scanf\uff1a\u200b\u7528\u200bcout/cin\u200b\u66f4\u200b\u5b89\u5168\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u51fa\u73b0\u200b<code>%d</code>\u200b\u4e0e\u200b\u53d8\u91cf\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u5d29\u6e83\u200b</li> <li>\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200bRAII\uff1a\u200b\u6587\u4ef6\u200b\u6d41\u200b\u5bf9\u8c61\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5173\u95ed\u200b\uff0c\u200b\u907f\u514d\u200b\u5fd8\u8bb0\u200bfclose</li> <li>\u200b\u5c1d\u8bd5\u200b\u73b0\u4ee3\u200b\u7279\u6027\u200b\uff1astd::format\u200b\u6bd4\u200b\u62fc\u63a5\u200b\u5b57\u7b26\u4e32\u200b\u66f4\u200b\u9ad8\u6548\u200b\u5b89\u5168\u200b</li> <li>\u200b\u5584\u7528\u200bIDE\u200b\u63d0\u793a\u200b\uff1a\u200b\u8f93\u5165\u200b<code>cout &lt;&lt;</code>\u200b\u65f6\u200bIDE\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u63d0\u793a\u200b\u53ef\u7528\u200b\u64cd\u4f5c\u7b26\u200b</li> </ol>"},{"location":"programming/cpp/noob/io/#_30","title":"\u5e38\u89c1\u200b\u9677\u9631","text":"<pre><code>int a;\nstring s;\n\n// \u200b\u9519\u8bef\u200b\uff1a\u200b\u6df7\u5408\u200b\u4f7f\u7528\u200b\u65f6\u200b\u7f13\u51b2\u533a\u200b\u95ee\u9898\u200b\ncin &gt;&gt; a;\ngetline(cin, s); // \u200b\u4f1a\u200b\u8bfb\u53d6\u200b\u5230\u200b\u6362\u884c\u7b26\u200b\uff01\n\n// \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\uff1a\ncin &gt;&gt; a;\ncin.ignore(); // \u200b\u6e05\u9664\u200b\u6362\u884c\u7b26\u200b\ngetline(cin, s);\n</code></pre>"},{"location":"programming/cpp/noob/io/#9","title":"9. \u200b\u793a\u4f8b\u200b\u4ee3\u7801","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7efc\u5408\u200b\u793a\u4f8b\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200bC++ IO\u200b\u6d41\u200b\u7684\u200b\u5404\u79cd\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;limits&gt;\n#include &lt;cctype&gt; // for tolower and toupper\n\nusing namespace std;\n\n// \u200b\u81ea\u5b9a\u4e49\u200b\u5927\u5c0f\u5199\u200b\u8f6c\u6362\u200b\u51fd\u6570\u200b\nvoid toUpper(char* str) {\n    while (*str) {\n        *str = toupper(*str);\n        ++str;\n    }\n}\n\nvoid toLower(char* str) {\n    while (*str) {\n        *str = tolower(*str);\n        ++str;\n    }\n}\n\nint main() {\n    // \u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b\n    double pi = 3.1415926535;\n    cout &lt;&lt; fixed &lt;&lt; setprecision(2) &lt;&lt; \"Pi: \" &lt;&lt; pi &lt;&lt; endl;\n    cout &lt;&lt; scientific &lt;&lt; setprecision(4) &lt;&lt; \"Pi: \" &lt;&lt; pi &lt;&lt; endl;\n\n    // \u200b\u5bf9\u9f50\u200b\u548c\u200b\u586b\u5145\u200b\n    cout &lt;&lt; \"Scores: \" &lt;&lt; setw(5) &lt;&lt; setfill('*') &lt;&lt; 100 &lt;&lt; endl;\n\n    // \u200b\u6587\u4ef6\u200b\u5199\u5165\u200b\n    ofstream outfile(\"test.txt\");\n    if (outfile.is_open()) {\n        outfile &lt;&lt; \"\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u6d4b\u8bd5\u200b\u6587\u4ef6\u200b\u3002\" &lt;&lt; endl;\n        outfile &lt;&lt; \"\u200b\u7b2c\u4e8c\u884c\u200b\u5185\u5bb9\u200b\u3002\" &lt;&lt; endl;\n        outfile.close();\n    } else {\n        cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b!\" &lt;&lt; endl;\n    }\n\n    // \u200b\u6587\u4ef6\u200b\u8bfb\u53d6\u200b\n    ifstream infile(\"test.txt\");\n    if (infile.is_open()) {\n        string line;\n        while (getline(infile, line)) {\n            cout &lt;&lt; line &lt;&lt; endl;\n        }\n        infile.close();\n    } else {\n        cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b!\" &lt;&lt; endl;\n    }\n\n    // \u200b\u5b57\u7b26\u4e32\u200b\u5927\u5c0f\u5199\u200b\u8f6c\u6362\u200b\n    char text[] = \"Hello, World!\";\n    toUpper(text);\n    cout &lt;&lt; text &lt;&lt; endl; // \u200b\u8f93\u51fa\u200b\uff1aHELLO, WORLD!\n\n    // \u200b\u8f93\u5165\u200b\u5904\u7406\u200b\n    string input;\n    cout &lt;&lt; \"\u200b\u8f93\u5165\u200b\u4e00\u884c\u200b\u6587\u672c\u200b: \";\n    getline(cin, input);\n    cout &lt;&lt; \"\u200b\u4f60\u200b\u8f93\u5165\u200b\u7684\u200b\u5185\u5bb9\u200b: \" &lt;&lt; input &lt;&lt; endl;\n\n    // \u200b\u5904\u7406\u200b\u8f93\u5165\u200b\u9519\u8bef\u200b\n    int num;\n    cout &lt;&lt; \"\u200b\u8f93\u5165\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b: \";\n    if (cin &gt;&gt; num) {\n        cout &lt;&lt; \"\u200b\u4f60\u200b\u8f93\u5165\u200b\u7684\u200b\u6574\u6570\u200b\u662f\u200b: \" &lt;&lt; num &lt;&lt; endl;\n    } else {\n        cin.clear();\n        cin.ignore(numeric_limits&lt;streamsize&gt;::max(), '\\n');\n        cerr &lt;&lt; \"\u200b\u8f93\u5165\u200b\u9519\u8bef\u200b\uff0c\u200b\u8bf7\u200b\u8f93\u5165\u200b\u6574\u6570\u200b!\" &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u6db5\u76d6\u200b\u4e86\u200b\u683c\u5f0f\u5316\u200b\u8f93\u51fa\u200b\u3001\u200b\u6587\u4ef6\u200b\u64cd\u4f5c\u200b\u3001\u200b\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u4ee5\u53ca\u200b\u8f93\u5165\u200b\u9519\u8bef\u5904\u7406\u200b\u7b49\u200b\u5185\u5bb9\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u5168\u9762\u200b\u7406\u89e3\u200bC++ IO\u200b\u6d41\u200b\u7684\u200b\u4f7f\u7528\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/","title":"C++\u200b\u4e2d\u200b\u7684\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\uff1anew&amp;delete","text":"<p>\u200b\u672c\u6587\u200b\u8be6\u7ec6\u200b\u8bb2\u89e3\u200bC++\u200b\u4e2d\u200bnew\u200b\u64cd\u4f5c\u7b26\u200b\u7684\u200b\u65b9\u65b9\u9762\u9762\u200b\uff0c\u200b\u4ece\u200b\u57fa\u7840\u200b\u7528\u6cd5\u200b\u5230\u200bC++20\u200b\u7684\u200b\u6700\u65b0\u200b\u7279\u6027\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u4f60\u200b\u5168\u9762\u200b\u7406\u89e3\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/#new","title":"\u57fa\u7840\u77e5\u8bc6\u200b\uff1a\u200b\u8ba4\u8bc6\u200bnew\u200b\u64cd\u4f5c\u7b26","text":""},{"location":"programming/cpp/noob/new/#new_1","title":"\u4ec0\u4e48\u200b\u662f\u200bnew\u200b\u64cd\u4f5c\u7b26\u200b\uff1f","text":"<p>\u200b\u5728\u200bC++\u200b\u4e2d\u200b\uff0cnew\u200b\u662f\u200b\u4e00\u4e2a\u200b\u64cd\u4f5c\u7b26\u200b\u800c\u200b\u975e\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u7528\u4e8e\u200b\u5728\u200b\u7a0b\u5e8f\u8fd0\u884c\u200b\u65f6\u200b\u5728\u200b\u5806\u200b(\u200b\u4e5f\u200b\u79f0\u200b\u81ea\u7531\u200b\u5b58\u50a8\u200b\u533a\u200b)\u200b\u4e0a\u200b\u5206\u914d\u5185\u5b58\u200b\u3002\u200b\u4e0e\u200bC\u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200bmalloc\u200b\u76f8\u6bd4\u200b\uff0cnew\u200b\u4e0d\u4ec5\u200b\u5206\u914d\u5185\u5b58\u200b\uff0c\u200b\u8fd8\u4f1a\u200b\u81ea\u52a8\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\u3002</p> <p>\u200b\u8bb8\u591a\u200b\u521d\u5b66\u8005\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6df7\u6dc6\u200bnew\u200b\u548c\u200bmalloc\uff0c\u200b\u8ba9\u200b\u6211\u4eec\u200b\u770b\u770b\u200b\u5b83\u4eec\u200b\u7684\u200b\u4e3b\u8981\u200b\u533a\u522b\u200b\uff1a</p> \u200b\u7279\u6027\u200b new malloc \u200b\u7c7b\u578b\u200b \u200b\u64cd\u4f5c\u7b26\u200b \u200b\u51fd\u6570\u200b \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b \u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\u7684\u200b\u6307\u9488\u200b void* \u200b\u5185\u5b58\u4e0d\u8db3\u200b\u65f6\u200b \u200b\u629b\u51fa\u200bstd::bad_alloc\u200b\u5f02\u5e38\u200b \u200b\u8fd4\u56de\u200bNULL \u200b\u6784\u9020\u51fd\u6570\u200b \u200b\u81ea\u52a8\u200b\u8c03\u7528\u200b \u200b\u4e0d\u200b\u8c03\u7528\u200b \u200b\u6307\u5b9a\u200b\u5185\u5b58\u5927\u5c0f\u200b \u200b\u81ea\u52a8\u200b\u8ba1\u7b97\u200b \u200b\u9700\u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b \u200b\u81ea\u5b9a\u4e49\u200b\u80fd\u529b\u200b \u200b\u53ef\u4ee5\u200b\u91cd\u8f7d\u200b \u200b\u4e0d\u53ef\u200b\u91cd\u8f7d"},{"location":"programming/cpp/noob/new/#new_2","title":"new\u200b\u80cc\u540e\u200b\u7684\u200b\u9b54\u6cd5\u200b\uff1a\u200b\u6267\u884c\u200b\u6b65\u9aa4","text":"<p>\u200b\u5f53\u200b\u4f60\u200b\u5199\u4e0b\u200b<code>T* ptr = new T</code>\u200b\u8fd9\u6837\u200b\u7b80\u5355\u200b\u7684\u200b\u4e00\u884c\u200b\u4ee3\u7801\u200b\u65f6\u200b\uff0cC++\u200b\u5b9e\u9645\u4e0a\u200b\u5728\u200b\u80cc\u540e\u200b\u5b8c\u6210\u200b\u4e86\u200b\u4e09\u4e2a\u200b\u5173\u952e\u6b65\u9aa4\u200b\uff1a</p> <ol> <li>\u200b\u8c03\u7528\u200boperator new\u200b\u5206\u914d\u200b\u8db3\u591f\u200b\u5927\u200b\u7684\u200b\u539f\u59cb\u200b\u5185\u5b58\u200b\uff08\u200b\u5927\u5c0f\u200b\u81f3\u5c11\u200b\u4e3a\u200bsizeof(T)\uff09</li> <li>\u200b\u5728\u200b\u5206\u914d\u200b\u7684\u200b\u5185\u5b58\u200b\u4e0a\u200b\u8c03\u7528\u200bT\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u521d\u59cb\u5316\u200b\u5bf9\u8c61\u200b</li> <li>\u200b\u8fd4\u56de\u200b\u6307\u5411\u200b\u65b0\u200b\u6784\u9020\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6307\u9488\u200b\uff08\u200b\u7c7b\u578b\u200b\u4e3a\u200bT*\uff09</li> </ol> <p>\u200b\u5982\u679c\u200b\u7528\u4f2a\u200b\u4ee3\u7801\u200b\u8868\u793a\u200b\uff0c\u200b\u5927\u6982\u200b\u662f\u200b\u8fd9\u6837\u200b\u7684\u200b\uff1a</p> <pre><code>// new\u200b\u7684\u200b\u5185\u90e8\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\uff1a\nvoid* memory = operator new(sizeof(T));  // \u200b\u6b65\u9aa4\u200b1: \u200b\u5206\u914d\u5185\u5b58\u200b\nT* ptr = new(memory) T();                // \u200b\u6b65\u9aa4\u200b2: \u200b\u6784\u9020\u200b\u5bf9\u8c61\u200b\nreturn ptr;                              // \u200b\u6b65\u9aa4\u200b3: \u200b\u8fd4\u56de\u200b\u6307\u9488\u200b\n</code></pre> <p>\u200b\u800c\u200b\u5bf9\u5e94\u200b\u7684\u200b<code>delete ptr</code>\u200b\u5219\u200b\u4f1a\u200b\uff1a</p> <ol> <li>\u200b\u8c03\u7528\u200bptr\u200b\u6307\u5411\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6790\u6784\u200b\u51fd\u6570\u200b</li> <li>\u200b\u8c03\u7528\u200boperator delete\u200b\u91ca\u653e\u200b\u5185\u5b58\u200b</li> </ol> <pre><code>// delete\u200b\u7684\u200b\u5185\u90e8\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\uff1a\nptr-&gt;~T();                // \u200b\u6b65\u9aa4\u200b1: \u200b\u8c03\u7528\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\noperator delete(ptr);     // \u200b\u6b65\u9aa4\u200b2: \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\n</code></pre>"},{"location":"programming/cpp/noob/new/#new_3","title":"\u5b9e\u6218\u200b\u5e94\u7528\u200b\uff1anew\u200b\u7684\u200b\u57fa\u672c\u200b\u7528\u6cd5","text":""},{"location":"programming/cpp/noob/new/#_1","title":"\u5206\u914d\u200b\u5355\u4e2a\u200b\u5bf9\u8c61","text":"<p>\u200b\u5728\u200b\u65e5\u5e38\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u5206\u914d\u200b\u5355\u4e2a\u200b\u5bf9\u8c61\u200b\u662f\u200b\u6700\u200b\u5e38\u89c1\u200b\u7684\u200b\u64cd\u4f5c\u200b\uff1a</p> <pre><code>// \u200b\u4e0d\u5e26\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u5206\u914d\u200b\nint* p1 = new int;       // \u200b\u5206\u914d\u200b\u672a\u200b\u521d\u59cb\u5316\u200b\u7684\u200bint\uff08\u200b\u503c\u200b\u4e0d\u200b\u786e\u5b9a\u200b\uff09\n\n// \u200b\u5e26\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u5206\u914d\u200b\nint* p2 = new int(42);   // \u200b\u5206\u914d\u200b\u5e76\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b42\nint* p3 = new int();     // \u200b\u5206\u914d\u200b\u5e76\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b0\nint* p4 = new int{};     // C++11\u200b\u8d77\u200b\uff0c\u200b\u4e0e\u200b\u4e0a\u9762\u200b\u7b49\u4ef7\u200b\n\n// \u200b\u5206\u914d\u200b\u81ea\u5b9a\u4e49\u200b\u7c7b\u578b\u200b\nclass MyClass {\npublic:\n    MyClass(int x) : value(x) { std::cout &lt;&lt; \"\u200b\u6784\u9020\u200b: \" &lt;&lt; value &lt;&lt; std::endl; }\n    ~MyClass() { std::cout &lt;&lt; \"\u200b\u6790\u6784\u200b: \" &lt;&lt; value &lt;&lt; std::endl; }\nprivate:\n    int value;\n};\n\nMyClass* obj = new MyClass(10);  // \u200b\u4f1a\u200b\u8c03\u7528\u200bMyClass\u200b\u7684\u200b\u6784\u9020\u51fd\u6570\u200b\n// \u200b\u7528\u200b\u5b8c\u540e\u200b\u522b\u5fd8\u4e86\u200b\ndelete obj;  // \u200b\u4f1a\u200b\u8c03\u7528\u200bMyClass\u200b\u7684\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\n</code></pre>"},{"location":"programming/cpp/noob/new/#_2","title":"\u52a8\u6001\u200b\u6570\u7ec4\u200b\u7684\u200b\u5206\u914d","text":"<p>\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u4e00\u7ec4\u200b\u6570\u636e\u200b\uff1f\u200b\u52a8\u6001\u200b\u6570\u7ec4\u200b\u662f\u200b\u4f60\u200b\u7684\u200b\u597d\u5e2e\u624b\u200b\uff1a</p> <pre><code>// \u200b\u5206\u914d\u200bint\u200b\u6570\u7ec4\u200b\nint* arr1 = new int[5];       // \u200b\u5206\u914d\u200b5\u200b\u4e2a\u200b\u672a\u200b\u521d\u59cb\u5316\u200b\u7684\u200bint\n\n// \u200b\u5206\u914d\u200b\u5e76\u200b\u521d\u59cb\u5316\u200b\u6570\u7ec4\u200b\nint* arr2 = new int[5]();     // \u200b\u5206\u914d\u200b5\u200b\u4e2a\u200b\u521d\u59cb\u5316\u200b\u4e3a\u200b0\u200b\u7684\u200bint\nint* arr3 = new int[5]{};     // C++11\u200b\u8d77\u200b\uff0c\u200b\u4e0e\u200b\u4e0a\u9762\u200b\u7b49\u4ef7\u200b\nint* arr4 = new int[5]{1,2,3}; // \u200b\u524d\u200b3\u200b\u4e2a\u200b\u4e3a\u200b1,2,3\uff0c\u200b\u540e\u200b2\u200b\u4e2a\u200b\u4e3a\u200b0\n\n// \u200b\u4ece\u200b\u7528\u6237\u200b\u8f93\u5165\u200b\u786e\u5b9a\u200b\u6570\u7ec4\u200b\u5927\u5c0f\u200b\uff08C++11\u200b\u8d77\u200b\u652f\u6301\u200b\uff09\nint size;\nstd::cin &gt;&gt; size;\nint* dynamicArr = new int[size];\n\n// \u200b\u91ca\u653e\u200b\u6570\u7ec4\u200b\uff08\u200b\u6ce8\u610f\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200bdelete[]\uff09\ndelete[] arr1;  // \u200b\u6b63\u786e\u200b\u7684\u200b\u91ca\u653e\u200b\u65b9\u5f0f\u200b\n// delete arr1;  // \u200b\u9519\u8bef\u200b\uff01\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\n</code></pre>"},{"location":"programming/cpp/noob/new/#_3","title":"\u591a\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u5904\u7406","text":"<p>\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u7684\u200b\u5206\u914d\u200b\u6709\u200b\u4e24\u79cd\u200b\u5e38\u89c1\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>// \u200b\u65b9\u6cd5\u200b1\uff1a\u200b\u4e00\u6b21\u6027\u200b\u5206\u914d\u200b\uff08\u200b\u77e9\u5f62\u200b\u5185\u5b58\u200b\u5757\u200b\uff09\nint (*arr2d1)[5] = new int[4][5];  // 4\u200b\u884c\u200b5\u200b\u5217\u200b\n\n// \u200b\u65b9\u6cd5\u200b2\uff1a\u200b\u5206\u6bb5\u200b\u5206\u914d\u200b\uff08\u200b\u66f4\u200b\u7075\u6d3b\u200b\uff0c\u200b\u884c\u200b\u957f\u5ea6\u200b\u53ef\u200b\u4e0d\u540c\u200b\uff09\nint arr2d2 = new int*[4];  // \u200b\u5148\u200b\u5206\u914d\u200b4\u200b\u4e2a\u200b\u6307\u9488\u200b\nfor (int i = 0; i &lt; 4; ++i) {\n    arr2d2[i] = new int[5];  // \u200b\u6bcf\u4e2a\u200b\u6307\u9488\u200b\u5206\u914d\u200b5\u200b\u4e2a\u200bint\n}\n\n// \u200b\u91ca\u653e\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\n// \u200b\u65b9\u6cd5\u200b1\u200b\u91ca\u653e\u200b\ndelete[] arr2d1;\n\n// \u200b\u65b9\u6cd5\u200b2\u200b\u91ca\u653e\u200b\uff08\u200b\u6ce8\u610f\u200b\u987a\u5e8f\u200b\uff09\nfor (int i = 0; i &lt; 4; ++i) {\n    delete[] arr2d2[i];  // \u200b\u5148\u200b\u91ca\u653e\u200b\u6bcf\u884c\u200b\n}\ndelete[] arr2d2;  // \u200b\u518d\u200b\u91ca\u653e\u200b\u884c\u200b\u6307\u9488\u200b\u6570\u7ec4\u200b\n</code></pre>"},{"location":"programming/cpp/noob/new/#_4","title":"\u6df1\u5165\u200b\u7406\u89e3\u200b\uff1a\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7684\u200b\u5e95\u5c42\u200b\u673a\u5236","text":""},{"location":"programming/cpp/noob/new/#operator-new","title":"operator new\u200b\u7684\u200b\u5de5\u4f5c\u200b\u539f\u7406","text":"<p>\u200b\u597d\u5947\u200bnew\u200b\u662f\u200b\u5982\u4f55\u200b\u5b9e\u73b0\u200b\u7684\u200b\uff1f\u200b\u8fd9\u91cc\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7b80\u5316\u7248\u200b\u7684\u200boperator new\u200b\u5b9e\u73b0\u200b\uff1a</p> <pre><code>// operator new\u200b\u7684\u200b\u5178\u578b\u200b\u5b9e\u73b0\u200b\nvoid* operator new(std::size_t size) {\n    void* ptr = std::malloc(size);\n    if (ptr == nullptr) {\n        throw std::bad_alloc();\n    }\n    return ptr;\n}\n\n// operator delete\u200b\u7684\u200b\u5178\u578b\u200b\u5b9e\u73b0\u200b\nvoid operator delete(void* ptr) noexcept {\n    std::free(ptr);\n}\n</code></pre> <p>\u200b\u7edd\u5927\u591a\u6570\u200bC++\u200b\u5b9e\u73b0\u200b\u4e2d\u200b\uff0coperator new\u200b\u6700\u7ec8\u200b\u4f1a\u200b\u8c03\u7528\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200bmalloc\u200b\u51fd\u6570\u200b\uff0c\u200b\u4e0d\u540c\u4e4b\u5904\u200b\u5728\u4e8e\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\u65f6\u200b\u7684\u200b\u5904\u7406\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/#operator-newdelete","title":"\u81ea\u5b9a\u4e49\u200b\u5168\u5c40\u200boperator new/delete","text":"<p>\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u91cd\u8f7d\u200b\u5168\u5c40\u200b\u7684\u200boperator new\u200b\u548c\u200bdelete\uff0c\u200b\u4ee5\u200b\u5b9e\u73b0\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code>#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n\nvoid* operator new(std::size_t size) {\n    std::cout &lt;&lt; \"\u200b\u81ea\u5b9a\u4e49\u200b\u5168\u5c40\u200bnew: \u200b\u5206\u914d\u200b \" &lt;&lt; size &lt;&lt; \" \u200b\u5b57\u8282\u200b\" &lt;&lt; std::endl;\n    void* ptr = std::malloc(size);\n    if (ptr == nullptr) {\n        throw std::bad_alloc();\n    }\n    return ptr;\n}\n\nvoid operator delete(void* ptr) noexcept {\n    std::cout &lt;&lt; \"\u200b\u81ea\u5b9a\u4e49\u200b\u5168\u5c40\u200bdelete: \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\" &lt;&lt; std::endl;\n    std::free(ptr);\n}\n\nvoid operator delete(void* ptr, std::size_t size) noexcept {\n    std::cout &lt;&lt; \"\u200b\u81ea\u5b9a\u4e49\u200b\u5168\u5c40\u200bdelete: \u200b\u91ca\u653e\u200b \" &lt;&lt; size &lt;&lt; \" \u200b\u5b57\u8282\u200b\" &lt;&lt; std::endl;\n    std::free(ptr);\n}\n\nint main() {\n    int* p = new int(42);  // \u200b\u4f1a\u200b\u8c03\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200boperator new\n    delete p;              // \u200b\u4f1a\u200b\u8c03\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200boperator delete\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#_5","title":"\u7c7b\u200b\u7279\u5b9a\u200b\u7684\u200b\u5185\u5b58\u200b\u5206\u914d","text":"<p>\u200b\u4f60\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u7279\u5b9a\u200b\u7c7b\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n\nclass MyClass {\npublic:\n    MyClass() { std::cout &lt;&lt; \"MyClass\u200b\u6784\u9020\u51fd\u6570\u200b\" &lt;&lt; std::endl; }\n    ~MyClass() { std::cout &lt;&lt; \"MyClass\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\" &lt;&lt; std::endl; }\n\n    void* operator new(std::size_t size) {\n        std::cout &lt;&lt; \"MyClass::operator new: \" &lt;&lt; size &lt;&lt; \"\u200b\u5b57\u8282\u200b\" &lt;&lt; std::endl;\n        return ::operator new(size);\n    }\n\n    void operator delete(void* ptr) noexcept {\n        std::cout &lt;&lt; \"MyClass::operator delete\" &lt;&lt; std::endl;\n        ::operator delete(ptr);\n    }\n};\n\nint main() {\n    MyClass* obj = new MyClass();\n    delete obj;\n    return 0;\n}\n</code></pre> <p>\u200b\u8fd9\u200b\u5728\u200b\u5185\u5b58\u200b\u6c60\u200b\u4f18\u5316\u200b\u3001\u200b\u5185\u5b58\u200b\u4f7f\u7528\u200b\u8ddf\u8e2a\u200b\u7b49\u200b\u573a\u666f\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/#newnew","title":"new\u200b\u7684\u200b\u591a\u91cd\u200b\u9762\u8c8c\u200b\uff1a\u200b\u5404\u79cd\u200b\u5f62\u5f0f\u200b\u7684\u200bnew","text":""},{"location":"programming/cpp/noob/new/#new_4","title":"\u666e\u901a\u200bnew\uff1a\u200b\u6211\u4eec\u200b\u6700\u200b\u719f\u6089\u200b\u7684\u200b\u5f62\u5f0f","text":"<pre><code>int* p = new int(42);  // \u200b\u5206\u914d\u200b\u5355\u4e2a\u200bint\uff0c\u200b\u503c\u4e3a\u200b42\n</code></pre>"},{"location":"programming/cpp/noob/new/#new_5","title":"\u6570\u7ec4\u200bnew\uff1a\u200b\u5904\u7406\u200b\u591a\u4e2a\u200b\u5143\u7d20","text":"<pre><code>int* arr = new int[10];  // \u200b\u5206\u914d\u200b10\u200b\u4e2a\u200b\u8fde\u7eed\u200b\u7684\u200bint\n\n// C++11\u200b\u8d77\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u521d\u59cb\u5316\u200b\u5217\u8868\u200b\nint* arr2 = new int[5]{1, 2, 3, 4, 5};\n\n// \u200b\u4f7f\u7528\u200b\u5b8c\u6bd5\u200b\u540e\u200b\ndelete[] arr;\ndelete[] arr2;\n</code></pre>"},{"location":"programming/cpp/noob/new/#placement-new","title":"placement new\uff1a\u200b\u5728\u200b\u6307\u5b9a\u200b\u4f4d\u7f6e\u200b\u6784\u9020\u200b\u5bf9\u8c61","text":"<p>placement new\u200b\u5141\u8bb8\u200b\u5728\u200b\u5df2\u200b\u5206\u914d\u200b\u7684\u200b\u5185\u5b58\u200b\u4e0a\u200b\u6784\u9020\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e0d\u200b\u8fdb\u884c\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u3002\u200b\u8fd9\u662f\u200bnew\u200b\u64cd\u4f5c\u7b26\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u90a3\u4e48\u200b\u4e3a\u4eba\u6240\u77e5\u200b\u4f46\u200b\u975e\u5e38\u200b\u5f3a\u5927\u200b\u7684\u200b\u5f62\u5f0f\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;new&gt; // clangd \u200b\u53ef\u80fd\u200b\u4f1a\u62a5\u200b\u672a\u200b\u4f7f\u7528\u200b\u7684\u200b\u8b66\u544a\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u5ffd\u7565\u200b\n\nclass MyClass {\npublic:\n    MyClass() { std::cout &lt;&lt; \"MyClass constructed.\" &lt;&lt; std::endl; }\n    ~MyClass() { std::cout &lt;&lt; \"MyClass destructed.\" &lt;&lt; std::endl; }\n};\n\nint main() {\n    char buffer[sizeof(MyClass)];           // \u200b\u9884\u5148\u200b\u5206\u914d\u200b\u7684\u200b\u5185\u5b58\u200b\n    MyClass* obj = new (buffer) MyClass();  // \u200b\u5728\u200bbuffer\u200b\u4e0a\u200b\u6784\u9020\u200bMyClass\u200b\u5bf9\u8c61\u200b\n\n    // \u200b\u4f7f\u7528\u200b\u5b8c\u6bd5\u200b\u540e\u200b\uff0c\u200b\u663e\u5f0f\u200b\u8c03\u7528\u200b\u6790\u6784\u200b\u51fd\u6570\u200b\uff08\u200b\u4e0d\u80fd\u200b\u4f7f\u7528\u200bdelete\uff0c\u200b\u56e0\u4e3a\u200b\u5185\u5b58\u200b\u4e0d\u662f\u200b\u7528\u200bnew\u200b\u5206\u914d\u200b\u7684\u200b\uff09\n    obj-&gt;~MyClass();\n}\n</code></pre> <p>placement new\u200b\u7684\u200b\u4e3b\u8981\u7528\u9014\u200b\uff1a</p> <ul> <li>\u200b\u5b9e\u73b0\u200b\u9ad8\u6027\u80fd\u200b\u5185\u5b58\u200b\u6c60\u200b</li> <li>\u200b\u907f\u514d\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7684\u200b\u5f00\u9500\u200b\uff08\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5b9e\u65f6\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\uff09</li> <li>\u200b\u9700\u8981\u200b\u7cbe\u786e\u200b\u63a7\u5236\u200b\u5bf9\u8c61\u200b\u4f4d\u7f6e\u200b\u65f6\u200b\uff08\u200b\u5982\u200b\u5171\u4eab\u5185\u5b58\u200b\u3001\u200b\u5185\u5b58\u200b\u6620\u5c04\u200bIO\uff09</li> </ul>"},{"location":"programming/cpp/noob/new/#nothrow-new","title":"nothrow new\uff1a\u200b\u4e0d\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\u7684\u200b\u5206\u914d","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u4e0d\u60f3\u200b\u5904\u7406\u200b\u5f02\u5e38\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200bnothrow new\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;new&gt;\n\nint main() {\n    // \u200b\u5931\u8d25\u200b\u65f6\u200b\u4e0d\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\uff0c\u200b\u800c\u662f\u200b\u8fd4\u56de\u200bnullptr\n    int* p = new (std::nothrow) int(42);\n    if (p == nullptr) {\n        // \u200b\u5904\u7406\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\n        std::cout &lt;&lt; \"\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\" &lt;&lt; std::endl;\n    }\n    else {\n        std::cout &lt;&lt; \"\u200b\u5206\u914d\u200b\u7684\u200b\u503c\u200b: \" &lt;&lt; *p &lt;&lt; std::endl;\n        delete p;  // \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#placement-new_1","title":"\u5e26\u200b\u81ea\u5b9a\u4e49\u200b\u53c2\u6570\u200b\u7684\u200bplacement new","text":"<p>\u200b\u4f60\u200b\u751a\u81f3\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u5e26\u6709\u200b\u81ea\u5b9a\u4e49\u200b\u53c2\u6570\u200b\u7684\u200bplacement new\uff1a</p> <pre><code>#include &lt;iostream&gt;\n\nvoid* operator new(std::size_t size, const char* file, int line) {\n    std::cout &lt;&lt; \"Allocation at \" &lt;&lt; file &lt;&lt; \":\" &lt;&lt; line &lt;&lt; std::endl;\n    return ::operator new(size);\n}\n\n#define MY_NEW new (__FILE__, __LINE__)\n\nint main() {\n    int* p = MY_NEW int(42);\n    std::cout &lt;&lt; \"\u200b\u5206\u914d\u200b\u7684\u200b\u503c\u200b: \" &lt;&lt; *p &lt;&lt; std::endl;\n    delete p;\n}\n</code></pre> <p>\u200b\u8fd9\u200b\u5728\u200b\u8c03\u8bd5\u200b\u5185\u5b58\u200b\u95ee\u9898\u200b\u65f6\u200b\u7279\u522b\u200b\u6709\u7528\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/#cnew","title":"C++\u200b\u6f14\u5316\u200b\uff1a\u200b\u5404\u200b\u7248\u672c\u200b\u4e2d\u200b\u7684\u200bnew\u200b\u6539\u8fdb","text":""},{"location":"programming/cpp/noob/new/#c11c","title":"C++11\uff1a\u200b\u73b0\u4ee3\u200bC++\u200b\u7684\u200b\u5960\u57fa\u77f3","text":"<p>C++11\u200b\u5bf9\u200bnew\u200b\u64cd\u4f5c\u7b26\u200b\u5e26\u6765\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u6539\u8fdb\u200b\uff1a</p>"},{"location":"programming/cpp/noob/new/#_6","title":"\u7edf\u4e00\u200b\u521d\u59cb\u5316\u200b\u8bed\u6cd5","text":"<pre><code>// \u200b\u4f7f\u7528\u200b\u82b1\u200b\u62ec\u53f7\u200b\u521d\u59cb\u5316\u200b\nint* p = new int{42};\ndouble* d = new double{3.14};\n\n// \u200b\u6570\u7ec4\u200b\u521d\u59cb\u5316\u200b\nint* arr = new int[3]{1, 2, 3};\n</code></pre>"},{"location":"programming/cpp/noob/new/#_7","title":"\u5bf9\u9f50\u200b\u5185\u5b58\u200b\u5206\u914d","text":"<pre><code>// \u200b\u4f7f\u7528\u200balignas\u200b\u6307\u5b9a\u200b\u5bf9\u9f50\u200b\u8981\u6c42\u200b\nstruct alignas(16) AlignedStruct {\n    int data[4];\n};\n\nAlignedStruct* as = new AlignedStruct();  // 16\u200b\u5b57\u8282\u200b\u5bf9\u9f50\u200b\n</code></pre>"},{"location":"programming/cpp/noob/new/#_8","title":"\u53ef\u53d8\u200b\u53c2\u6570\u200b\u6a21\u677f\u200b\u652f\u6301","text":"<pre><code>template&lt;typename T, typename... Args&gt;\nT* createObject(Args&amp;&amp;... args) {\n    return new T(std::forward&lt;Args&gt;(args)...);\n}\n\n// \u200b\u4f7f\u7528\u200b\nclass Test {\npublic:\n    Test(int a, double b, std::string c) {}\n};\n\nTest* t = createObject&lt;Test&gt;(1, 2.5, \"test\");\n</code></pre>"},{"location":"programming/cpp/noob/new/#c14","title":"C++14\uff1a\u200b\u66f4\u200b\u591a\u200b\u4fbf\u5229\u6027\u200b\u6539\u8fdb","text":"<p>C++14\u200b\u6dfb\u52a0\u200b\u4e86\u200bstd::make_unique\uff0c\u200b\u4f7f\u200b\u521b\u5efa\u200bunique_ptr\u200b\u66f4\u200b\u5b89\u5168\u200b\uff1a</p> <pre><code>auto p = std::make_unique&lt;int&gt;(42);  // \u200b\u66ff\u4ee3\u200b unique_ptr&lt;int&gt;(new int(42))\uff0c\u200b\u8c01\u200b\u77e5\u9053\u200b\u6807\u51c6\u200b\u4e3a\u5565\u200b\u4e00\u200b\u5f00\u59cb\u200b\u5fd8\u200b\u4e86\u200b\u52a0\u200b\u8fd9\u4e2a\u200b\uff1f\n</code></pre>"},{"location":"programming/cpp/noob/new/#c17","title":"C++17\uff1a\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u7684\u200b\u8fdb\u4e00\u6b65\u200b\u6807\u51c6\u5316","text":"<p>C++17\u200b\u4e3b\u8981\u200b\u5e26\u6765\u200b\u4e86\u200b\u8fd9\u4e9b\u200b\u6539\u8fdb\u200b\uff1a</p>"},{"location":"programming/cpp/noob/new/#_9","title":"\u5bf9\u9f50\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u6807\u51c6\u5316","text":"<p>C++17\u200b\u8fdb\u4e00\u6b65\u200b\u6807\u51c6\u5316\u200b\u4e86\u200bover-aligned\u200b\u7c7b\u578b\u200b\u7684\u200bnew\u200b\u548c\u200bdelete\u200b\u64cd\u4f5c\u7b26\u200b\uff1a</p> <pre><code>struct alignas(64) BigAligned {\n    char data[64];\n};\n\nBigAligned* ptr = new BigAligned();\n</code></pre>"},{"location":"programming/cpp/noob/new/#pmr","title":"\u591a\u6001\u200b\u5185\u5b58\u200b\u8d44\u6e90\u200b(PMR)","text":"<p>C++17\u200b\u5f15\u5165\u200b\u4e86\u200b\u591a\u6001\u200b\u5185\u5b58\u200b\u8d44\u6e90\u200b(PMR)\u200b\u5e93\u200b\uff0c\u200b\u5141\u8bb8\u200b\u5bb9\u5668\u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7b56\u7565\u200b\uff1a</p> <pre><code>#include &lt;memory_resource&gt;\n\nint main() {\n    // \u200b\u4f7f\u7528\u200b\u6808\u4e0a\u200b\u7f13\u51b2\u533a\u200b\u4f5c\u4e3a\u200b\u5185\u5b58\u200b\u6e90\u200b\n    char buffer[1024];\n    std::pmr::monotonic_buffer_resource pool{buffer, sizeof(buffer)};\n\n    // \u200b\u4f7f\u7528\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u8d44\u6e90\u200b\u7684\u200b\u5bb9\u5668\u200b\n    std::pmr::vector&lt;int&gt; vec{&amp;pool};\n    for (int i = 0; i &lt; 100; ++i) {\n        vec.push_back(i);  // \u200b\u4ece\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u6c60\u200b\u5206\u914d\u200b\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#c20","title":"C++20\u200b\u65b0\u200b\u7279\u6027\u200b\uff1a\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7684\u200b\u9769\u65b0","text":"<p>\u200b\u5982\u679c\u200b\u60f3\u8981\u200b\u6d4b\u8bd5\u200b\u4e0b\u9762\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u73b0\u4ee3\u5316\u200b\u7684\u200bc++\u200b\u7f16\u8bd1\u5668\u200b\uff0cdev-cpp\u200b\u627f\u62c5\u200b\u4e0d\u4e86\u200b\u91cd\u4efb\u200b</p>"},{"location":"programming/cpp/noob/new/#constexpr-new","title":"constexpr new\uff1a\u200b\u7f16\u8bd1\u200b\u671f\u200b\u52a8\u6001\u5185\u5b58","text":"<p>C++20\u200b\u5e26\u6765\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u91cd\u5927\u7a81\u7834\u200b\uff1anew\u200b\u548c\u200bdelete\u200b\u64cd\u4f5c\u7b26\u200b\u53ef\u4ee5\u200b\u5728\u200bconstexpr\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u3002\u200b\u8fd9\u200b\u610f\u5473\u7740\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u8fdb\u884c\u200b\u52a8\u6001\u5185\u5b58\u200b\u5206\u914d\u200b\u548c\u200b\u91ca\u653e\u200b\uff01</p> <pre><code>#include &lt;iostream&gt;\n\nconstexpr int getValue() {\n    int* p = new int(42);  // \u200b\u7f16\u8bd1\u200b\u671f\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\uff01\n    int value = *p;\n    delete p;  // \u200b\u7f16\u8bd1\u200b\u671f\u200b\u5185\u5b58\u200b\u91ca\u653e\u200b\n    return value;\n}\n\nint main() {\n    constexpr int result = getValue();  // \u200b\u7f16\u8bd1\u200b\u671f\u200b\u8ba1\u7b97\u200b\n    static_assert(result == 42);\n\n    std::cout &lt;&lt; \"\u200b\u7f16\u8bd1\u200b\u671f\u200b\u8ba1\u7b97\u7ed3\u679c\u200b: \" &lt;&lt; result &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u200b\u8fd9\u4e2a\u200b\u7279\u6027\u200b\u6709\u200b\u4e00\u4e9b\u200b\u9650\u5236\u200b\uff1a</p> <ul> <li>\u200b\u6240\u6709\u200b\u52a8\u6001\u5206\u914d\u200b\u7684\u200b\u5185\u5b58\u200b\u5fc5\u987b\u200b\u5728\u200b\u540c\u4e00\u4e2a\u200bconstexpr\u200b\u8bc4\u4f30\u200b\u4e2d\u200b\u91ca\u653e\u200b</li> <li>\u200b\u4e0d\u80fd\u200b\u6709\u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b</li> <li>\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b\u76f4\u63a5\u200b\u521d\u59cb\u5316\u200b\u7684\u200b\u5b57\u9762\u200b\u91cf\u200b\u7c7b\u578b\u200b</li> </ul>"},{"location":"programming/cpp/noob/new/#pmr_1","title":"PMR\u200b\u5e93\u200b\u7684\u200b\u589e\u5f3a","text":"<p>C++20\u200b\u8fdb\u4e00\u6b65\u200b\u5b8c\u5584\u200b\u4e86\u200b\u591a\u6001\u200b\u5185\u5b58\u200b\u8d44\u6e90\u200b(PMR)\u200b\u5e93\u200b\uff1a</p> <pre><code>#include &lt;memory_resource&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // \u200b\u4f7f\u7528\u200b\u540c\u6b65\u200b\u6c60\u200b\u5185\u5b58\u200b\u8d44\u6e90\u200b\n    std::pmr::synchronized_pool_resource pool;\n\n    // \u200b\u4f7f\u7528\u200bpmr\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u5bb9\u5668\u200b\n    std::pmr::string str{\"Hello PMR\", &amp;pool};\n\n    std::pmr::vector&lt;std::pmr::string&gt; vec{&amp;pool};\n    vec.push_back(std::pmr::string{\"C++20\", &amp;pool});\n    vec.push_back(std::move(str));\n\n    // \u200b\u6240\u6709\u200b\u5185\u5b58\u200b\u6765\u81ea\u200b\u540c\u4e00\u4e2a\u200b\u6c60\u200b\n\n    for (const auto&amp; s : vec) {\n        std::cout &lt;&lt; s &lt;&lt; \" \";\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#_10","title":"\u534f\u7a0b\u200b\u4e0e\u200b\u5185\u5b58\u200b\u7ba1\u7406","text":"<p>C++20\u200b\u5f15\u5165\u200b\u7684\u200b\u534f\u7a0b\u200b\u4e5f\u200b\u4e0e\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u5bc6\u5207\u76f8\u5173\u200b\uff1a</p> <pre><code>#include &lt;coroutine&gt;\n#include &lt;iostream&gt;\n\nstruct task {\n    struct promise_type {\n        task get_return_object() { return {}; }\n        std::suspend_never initial_suspend() { return {}; }\n        std::suspend_never final_suspend() noexcept { return {}; }\n        void return_void() {}\n        void unhandled_exception() {}\n    };\n};\n\ntask example() {\n    // \u200b\u534f\u7a0b\u200b\u5185\u90e8\u200b\u7684\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7531\u200b\u7f16\u8bd1\u5668\u200b\u7ba1\u7406\u200b\n    int* data = new int[1000];\n\n    for (int i = 0; i &lt; 1000; i++) {\n        data[i] = i;\n    }\n\n    std::cout &lt;&lt; \"Data: \";\n    for (int i = 0; i &lt; 10; i++) {\n        std::cout &lt;&lt; data[i] &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    delete[] data;\n    co_return;\n}\n\nint main() {\n    example();\n    return 0;\n}\n</code></pre> <p>\u200b\u534f\u7a0b\u200b\u6846\u67b6\u200b\u5185\u90e8\u200b\u9700\u8981\u200b\u9ad8\u6548\u200b\u7684\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u6765\u200b\u5b58\u50a8\u200b\u534f\u7a0b\u200b\u72b6\u6001\u200b\uff0c\u200b\u8fd9\u200b\u7ed9\u200bC++\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u5e26\u6765\u200b\u4e86\u200b\u65b0\u200b\u7684\u200b\u6311\u6218\u200b\u548c\u200b\u673a\u9047\u200b\u3002</p>"},{"location":"programming/cpp/noob/new/#_11","title":"\u5185\u5b58\u200b\u7ba1\u7406\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"programming/cpp/noob/new/#_12","title":"\u4f7f\u7528\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\uff0c\u200b\u544a\u522b\u200b\u624b\u52a8\u200b\u7ba1\u7406","text":"<p>\u200b\u603b\u662f\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u800c\u200b\u975e\u200b\u88f8\u200b\u6307\u9488\u200b\uff1a</p> <pre><code>// \u200b\u4e0d\u597d\u200b\u7684\u200b\u505a\u6cd5\u200b\nvoid badFunction() {\n    MyClass* obj = new MyClass();\n    // \u200b\u5982\u679c\u200b\u8fd9\u91cc\u200b\u53d1\u751f\u200b\u5f02\u5e38\u200b\uff0c\u200b\u5185\u5b58\u200b\u5c06\u200b\u6cc4\u6f0f\u200b\n    delete obj;  // \u200b\u53ef\u80fd\u200b\u5fd8\u8bb0\u200b\u6267\u884c\u200b\n}\n\n// \u200b\u597d\u200b\u7684\u200b\u505a\u6cd5\u200b\nvoid goodFunction() {\n    auto obj = std::make_unique&lt;MyClass&gt;();\n    // \u200b\u4e0d\u200b\u9700\u8981\u200b\u624b\u52a8\u200bdelete\uff0c\u200b\u79bb\u5f00\u200b\u4f5c\u7528\u57df\u200b\u65f6\u200b\u81ea\u52a8\u200b\u91ca\u653e\u200b\n}\n\n// shared_ptr\u200b\u7528\u4e8e\u200b\u5171\u4eab\u200b\u6240\u6709\u6743\u200b\nstd::shared_ptr&lt;MyClass&gt; sharedObj = std::make_shared&lt;MyClass&gt;();\n</code></pre>"},{"location":"programming/cpp/noob/new/#_13","title":"\u9632\u6b62\u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b\u7684\u200b\u5e38\u89c1\u200b\u9677\u9631","text":"<pre><code>// \u200b\u5371\u9669\u200b\u6a21\u5f0f\u200b\uff1a\u200b\u5fd8\u8bb0\u200bdelete\nvoid leakyFunction() {\n    int* array = new int[1000];\n    // \u200b\u5fd8\u8bb0\u200b delete[] array;\n} // \u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b!\n\n// \u200b\u5fd8\u8bb0\u200b\u4f7f\u7528\u200bdelete[]\u200b\u91ca\u653e\u200b\u6570\u7ec4\u200b\nvoid wrongDeleteFunction() {\n    int* array = new int[1000];\n    delete array;  // \u200b\u9519\u8bef\u200b!\u200b\u5e94\u8be5\u200b\u4f7f\u7528\u200bdelete[]\n}\n\n// \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\nvoid correctFunction() {\n    auto array = std::make_unique&lt;int[]&gt;(1000);\n    // \u200b\u81ea\u52a8\u200b\u6b63\u786e\u200b\u91ca\u653e\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#raii","title":"\u5f02\u5e38\u200b\u5b89\u5168\u200b\uff1a\u200b\u8d44\u6e90\u200b\u83b7\u53d6\u200b\u5373\u200b\u521d\u59cb\u5316\u200b(RAII)","text":"<pre><code>class Resource {\npublic:\n    Resource() { std::cout &lt;&lt; \"\u200b\u8d44\u6e90\u200b\u83b7\u53d6\u200b\" &lt;&lt; std::endl; }\n    ~Resource() { std::cout &lt;&lt; \"\u200b\u8d44\u6e90\u200b\u91ca\u653e\u200b\" &lt;&lt; std::endl; }\n};\n\n// \u200b\u4e0d\u200b\u5b89\u5168\u200b\u7684\u200b\u65b9\u5f0f\u200b\nvoid unsafeFunction() {\n    Resource* r1 = new Resource();\n    Resource* r2 = new Resource();  // \u200b\u5982\u679c\u200b\u8fd9\u91cc\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\n\n    // \u200b\u5904\u7406\u200br1\u200b\u548c\u200br2\n\n    delete r2;\n    delete r1;  // \u200b\u5982\u679c\u200b\u524d\u9762\u200b\u6709\u200b\u5f02\u5e38\u200b\uff0c\u200b\u8fd9\u91cc\u200b\u4e0d\u4f1a\u200b\u6267\u884c\u200b\n}\n\n// \u200b\u5b89\u5168\u200b\u7684\u200b\u65b9\u5f0f\u200b\nvoid safeFunction() {\n    auto r1 = std::make_unique&lt;Resource&gt;();\n    auto r2 = std::make_unique&lt;Resource&gt;();\n\n    // \u200b\u5373\u4f7f\u200b\u6709\u200b\u5f02\u5e38\u200b\uff0cr1\u200b\u548c\u200br2\u200b\u4e5f\u200b\u4f1a\u200b\u88ab\u200b\u6b63\u786e\u200b\u91ca\u653e\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#_14","title":"\u5927\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u7684\u200b\u6280\u5de7","text":"<p>\u200b\u5f53\u200b\u9700\u8981\u200b\u5206\u914d\u200b\u5927\u5757\u200b\u5185\u5b58\u200b\u65f6\u200b\uff1a</p> <pre><code>// \u200b\u5c1d\u8bd5\u200b\u5206\u914d\u200b\u5927\u200b\u5185\u5b58\u200b\u65f6\u200b\uff0c\u200b\u8003\u8651\u200b\u4f7f\u7528\u200bnothrow new\nvoid allocateLargeMemory() {\n    const size_t largeSize = 1024 * 1024 * 1024;  // 1GB\n\n    // nothrow new\n    int* largeArray = new(std::nothrow) int[largeSize];\n    if (largeArray == nullptr) {\n        std::cout &lt;&lt; \"\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u5931\u8d25\u200b\uff0c\u200b\u4f18\u96c5\u200b\u5904\u7406\u200b\" &lt;&lt; std::endl;\n        return;\n    }\n\n    // \u200b\u4f7f\u7528\u200b\u5185\u5b58\u200b\n\n    delete[] largeArray;\n}\n</code></pre>"},{"location":"programming/cpp/noob/new/#_15","title":"\u5b9e\u6218\u200b\u6848\u4f8b\u200b\uff1a\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u5728\u200b\u5b9e\u9645\u200b\u9879\u76ee\u200b\u4e2d\u200b\u7684\u200b\u5e94\u7528","text":""},{"location":"programming/cpp/noob/new/#_16","title":"\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u6c60\u200b\uff1a\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\u7684\u200b\u79d8\u5bc6\u6b66\u5668","text":"<p>\u200b\u5f53\u200b\u7a0b\u5e8f\u200b\u9700\u8981\u200b\u9891\u7e41\u200b\u521b\u5efa\u200b\u548c\u200b\u9500\u6bc1\u200b\u5c0f\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u81ea\u5b9a\u4e49\u200b\u5185\u5b58\u200b\u6c60\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n\nclass MemoryPool {\nprivate:\n    struct Block {\n        void* data;\n        bool used;\n    };\n\n    std::vector&lt;Block&gt; blocks;\n    size_t blockSize;\n\npublic:\n    MemoryPool(size_t size, size_t count) : blockSize(size) {\n        for (size_t i = 0; i &lt; count; ++i) {\n            void* data = std::malloc(blockSize);\n            blocks.push_back({data, false});\n        }\n    }\n\n    ~MemoryPool() {\n        for (auto&amp; block : blocks) {\n            std::free(block.data);\n        }\n    }\n\n    void* allocate() {\n        for (auto&amp; block : blocks) {\n            if (!block.used) {\n                block.used = true;\n                return block.data;\n            }\n        }\n        return nullptr;  // \u200b\u5185\u5b58\u200b\u6c60\u5df2\u200b\u6ee1\u200b\n    }\n\n    void deallocate(void* ptr) {\n        for (auto&amp; block : blocks) {\n            if (block.data == ptr) {\n                block.used = false;\n                return;\n            }\n        }\n    }\n};\n\n// \u200b\u4f7f\u7528\u200b\u5185\u5b58\u200b\u6c60\u200b\u7684\u200b\u7c7b\u200b\nclass PooledObject {\nprivate:\n    int data;\n    static MemoryPool pool;\n\npublic:\n    PooledObject(int val) : data(val) {\n        std::cout &lt;&lt; \"\u200b\u6784\u9020\u200b: \" &lt;&lt; data &lt;&lt; std::endl;\n    }\n\n    ~PooledObject() {\n        std::cout &lt;&lt; \"\u200b\u6790\u6784\u200b: \" &lt;&lt; data &lt;&lt; std::endl;\n    }\n\n    // \u200b\u91cd\u8f7d\u200boperator new\u200b\u548c\u200bdelete\u200b\u4f7f\u7528\u200b\u6211\u4eec\u200b\u7684\u200b\u5185\u5b58\u200b\u6c60\u200b\n    static void* operator new(size_t size) {\n        return pool.allocate();\n    }\n\n    static void operator delete(void* ptr) {\n        pool.deallocate(ptr);\n    }\n};\n\n// \u200b\u521d\u59cb\u5316\u200b\u9759\u6001\u200b\u5185\u5b58\u200b\u6c60\u200b\nMemoryPool PooledObject::pool(sizeof(PooledObject), 100);\n</code></pre>"},{"location":"programming/cpp/noob/new/#placement-new_2","title":"\u5e8f\u5217\u5316\u200b\u4e0e\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\uff1aplacement new\u200b\u7684\u200b\u7edd\u4f73\u200b\u7528\u4f8b","text":"<p>placement new\u200b\u5728\u200b\u5e8f\u5217\u5316\u200b\u9886\u57df\u200b\u6709\u7740\u200b\u5e7f\u6cdb\u5e94\u7528\u200b\uff1a</p> <pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\n#include &lt;new&gt;\n\nclass Serializable {\npublic:\n    int x;\n    double y;\n    char data[16];\n\n    Serializable(int _x = 0, double _y = 0.0) : x(_x), y(_y) {\n        std::fill(data, data + 16, 'A');\n    }\n\n    void serialize(std::ostream&amp; os) const {\n        os.write(reinterpret_cast&lt;const char*&gt;(this), sizeof(*this));\n    }\n\n    static Serializable* deserialize(std::istream&amp; is) {\n        char* buffer = new char[sizeof(Serializable)];\n        is.read(buffer, sizeof(Serializable));\n\n        if (!is) {\n            delete[] buffer;\n            return nullptr;\n        }\n\n        return reinterpret_cast&lt;Serializable*&gt;(buffer);\n    }\n\n    void operator delete(void* ptr) {\n        char* charPtr = reinterpret_cast&lt;char*&gt;(ptr);\n        delete[] charPtr;\n    }\n};\n\nint main() {\n    Serializable obj(42, 3.14);\n\n    std::ofstream ofs(\"data.bin\", std::ios::binary);\n    if (!ofs) {\n        std::cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u5199\u5165\u200b\" &lt;&lt; std::endl;\n        return 1;\n    }\n    obj.serialize(ofs);\n    ofs.close();\n\n    std::ifstream ifs(\"data.bin\", std::ios::binary);\n    if (!ifs) {\n        std::cerr &lt;&lt; \"\u200b\u65e0\u6cd5\u200b\u6253\u5f00\u200b\u6587\u4ef6\u200b\u8fdb\u884c\u200b\u8bfb\u53d6\u200b\" &lt;&lt; std::endl;\n        return 1;\n    }\n\n    Serializable* newObj = Serializable::deserialize(ifs);\n    if (newObj) {\n        std::cout &lt;&lt; \"\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u6210\u529f\u200b: x = \" &lt;&lt; newObj-&gt;x &lt;&lt; \", y = \" &lt;&lt; newObj-&gt;y\n                  &lt;&lt; std::endl;\n        delete newObj;\n    } else {\n        std::cerr &lt;&lt; \"\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u5931\u8d25\u200b\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u672c\u6587\u200b\uff0c\u200b\u4f60\u200b\u5e94\u8be5\u200b\u5df2\u7ecf\u200b\u5bf9\u200bC++\u200b\u4e2d\u200b\u7684\u200bnew\u200b\u64cd\u4f5c\u7b26\u200b\u6709\u200b\u4e86\u200b\u5168\u9762\u200b\u7684\u200b\u4e86\u89e3\u200b\u3002\u200b\u4ece\u200b\u57fa\u7840\u200b\u7528\u6cd5\u200b\u5230\u200bC++20\u200b\u7684\u200b\u6700\u65b0\u200b\u7279\u6027\u200b\uff0c\u200b\u4ece\u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b\u7684\u200b\u9632\u8303\u200b\u5230\u200b\u9ad8\u6027\u80fd\u200b\u5185\u5b58\u200b\u6c60\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8fd9\u4e9b\u200b\u77e5\u8bc6\u200b\u5c06\u200b\u5e2e\u52a9\u200b\u4f60\u200b\u5199\u51fa\u200b\u66f4\u200b\u5065\u58ee\u200b\u3001\u200b\u66f4\u200b\u9ad8\u6548\u200b\u7684\u200bC++\u200b\u4ee3\u7801\u200b\u3002</p> <p>\u200b\u8bb0\u4f4f\u200b\uff1a\u200b\u5728\u200b\u73b0\u4ee3\u200bC++\u200b\u4e2d\u200b\uff0c\u200b\u76f4\u63a5\u200b\u4f7f\u7528\u200bnew\u200b\u548c\u200bdelete\u200b\u7684\u200b\u573a\u666f\u200b\u6b63\u5728\u200b\u51cf\u5c11\u200b\uff0c\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u548c\u200bRAII\u200b\u6280\u672f\u200b\u662f\u200b\u66f4\u200b\u5b89\u5168\u200b\u7684\u200b\u9009\u62e9\u200b\u3002\u200b\u4f46\u200b\u7406\u89e3\u200b\u5e95\u5c42\u200b\u5185\u5b58\u200b\u5206\u914d\u673a\u5236\u200b\u4f9d\u7136\u200b\u662f\u200bC++\u200b\u7a0b\u5e8f\u5458\u200b\u7684\u200b\u5fc5\u5907\u200b\u6280\u80fd\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u9700\u8981\u200b\u4f18\u5316\u200b\u6027\u80fd\u200b\u6216\u200b\u5904\u7406\u200b\u7279\u6b8a\u200b\u573a\u666f\u200b\u65f6\u200b\u3002</p> <p>\u200b\u4f60\u200b\u6709\u200b\u4ec0\u4e48\u200b\u5173\u4e8e\u200bC++\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u7684\u200b\u95ee\u9898\u200b\u6216\u200b\u7ecf\u9a8c\u200b\uff1f\u200b\u6b22\u8fce\u200b\u5728\u200b\u8bc4\u8bba\u200b\u533a\u200b\u5206\u4eab\u200b\uff01</p>"},{"location":"programming/cpp/noob/ref/","title":"C++ \u200b\u5f15\u7528\u200b\u4e0e\u200b\u6307\u9488\u200b\u5b8c\u5168\u200b\u6559\u7a0b","text":""},{"location":"programming/cpp/noob/ref/#_1","title":"\u5f15\u8a00","text":"<p>C++\u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u5f15\u7528\u200b\u548c\u200b\u6307\u9488\u200b\u662f\u200b\u4e24\u4e2a\u200b\u5f3a\u5927\u200b\u800c\u200b\u91cd\u8981\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u5b83\u4eec\u200b\u8ba9\u200b\u6211\u4eec\u200b\u80fd\u591f\u200b\u95f4\u63a5\u200b\u8bbf\u95ee\u200b\u548c\u200b\u64cd\u4f5c\u200b\u6570\u636e\u200b\u3002\u200b\u867d\u7136\u200b\u529f\u80fd\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u91cd\u53e0\u200b\uff0c\u200b\u4f46\u200b\u4e24\u8005\u200b\u5728\u200b\u8bbe\u8ba1\u200b\u7406\u5ff5\u200b\u548c\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u4e0a\u200b\u6709\u7740\u200b\u672c\u8d28\u200b\u7684\u200b\u533a\u522b\u200b\u3002\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u5e2e\u52a9\u200b\u4f60\u200b\u6df1\u5165\u200b\u7406\u89e3\u200b\u8fd9\u200b\u4e24\u4e2a\u200b\u6982\u5ff5\u200b\uff0c\u200b\u638c\u63e1\u200b\u5b83\u4eec\u200b\u7684\u200b\u7528\u6cd5\u200b\uff0c\u200b\u5e76\u200b\u5b66\u4f1a\u200b\u5728\u200b\u4e0d\u540c\u200b\u573a\u666f\u200b\u4e2d\u200b\u505a\u51fa\u200b\u6b63\u786e\u200b\u7684\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"programming/cpp/noob/ref/#_2","title":"\u5f15\u7528\u200b\u8be6\u89e3","text":""},{"location":"programming/cpp/noob/ref/#_3","title":"\u4ec0\u4e48\u200b\u662f\u200b\u5f15\u7528\u200b\uff1f","text":"<p>\u200b\u5f15\u7528\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u522b\u540d\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u4f7f\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u540d\u79f0\u200b\u8bbf\u95ee\u200b\u540c\u200b\u4e00\u5757\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u3002</p> <p>\u200b\u60f3\u8c61\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u5982\u679c\u200b\u5c0f\u660e\u200b\u6709\u4e2a\u200b\u7ef0\u53f7\u200b\"\u200b\u5c0f\u767d\u200b\"\uff0c\u200b\u65e0\u8bba\u200b\u4f60\u200b\u53eb\u200b\u4ed6\u200b\"\u200b\u5c0f\u660e\u200b\"\u200b\u8fd8\u662f\u200b\"\u200b\u5c0f\u767d\u200b\"\uff0c\u200b\u6307\u200b\u7684\u200b\u90fd\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u4eba\u200b\u3002C++\u200b\u4e2d\u200b\u7684\u200b\u5f15\u7528\u200b\u5c31\u662f\u200b\u8fd9\u6837\u200b\u5de5\u4f5c\u200b\u7684\u200b\uff1a</p> <pre><code>int smallMing = 15;    // \u200b\u5c0f\u660e\u200b\u4eca\u5e74\u200b15\u200b\u5c81\u200b\nint&amp; smallWhite = smallMing;  // \u200b\u5c0f\u767d\u200b\u662f\u200b\u5c0f\u660e\u200b\u7684\u200b\u7ef0\u53f7\u200b(\u200b\u5f15\u7528\u200b)\n\nsmallWhite = 16;  // \u200b\u5c0f\u767d\u200b\u957f\u5927\u200b\u4e86\u200b\u4e00\u5c81\u200b\nstd::cout &lt;&lt; \"\u200b\u5c0f\u660e\u200b\u4eca\u5e74\u200b\" &lt;&lt; smallMing &lt;&lt; \"\u200b\u5c81\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5c0f\u660e\u200b\u4eca\u5e74\u200b16\u200b\u5c81\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_4","title":"\u5f15\u7528\u200b\u7684\u200b\u57fa\u672c\u200b\u8bed\u6cd5","text":"<pre><code>\u200b\u7c7b\u578b\u200b&amp; \u200b\u5f15\u7528\u200b\u540d\u200b = \u200b\u539f\u200b\u53d8\u91cf\u540d\u200b;\n</code></pre> <p>\u200b\u5b9e\u9645\u200b\u4f8b\u5b50\u200b\uff1a</p> <pre><code>int original = 10;   // \u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\nint&amp; ref = original; // ref\u200b\u662f\u200boriginal\u200b\u7684\u200b\u5f15\u7528\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_5","title":"\u5f15\u7528\u200b\u7684\u200b\u5173\u952e\u200b\u7279\u6027","text":""},{"location":"programming/cpp/noob/ref/#_6","title":"\u5fc5\u987b\u200b\u521d\u59cb\u5316","text":"<p>\u200b\u5f15\u7528\u200b\u5fc5\u987b\u200b\u5728\u200b\u58f0\u660e\u200b\u65f6\u200b\u7acb\u5373\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u6bcf\u4e2a\u200b\u7ef0\u53f7\u200b\u5fc5\u987b\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u771f\u5b9e\u200b\u7684\u200b\u4eba\u200b\u4e00\u6837\u200b\uff0c\u200b\u6ca1\u6709\u200b\"\u200b\u65e0\u200b\u4e3b\u200b\"\u200b\u7684\u200b\u7ef0\u53f7\u200b\u3002</p> <pre><code>int&amp; badRef;      // \u200b\u9519\u8bef\u200b: \u200b\u5f15\u7528\u200b\u5fc5\u987b\u200b\u521d\u59cb\u5316\u200b\nint value = 10;\nint&amp; goodRef = value;  // \u200b\u6b63\u786e\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_7","title":"\u4e0d\u53ef\u200b\u91cd\u200b\u7ed1\u5b9a","text":"<p>\u200b\u4e00\u65e6\u200b\u5f15\u7528\u200b\u88ab\u200b\u521d\u59cb\u5316\u200b\uff0c\u200b\u5b83\u200b\u5c31\u200b\u6c38\u8fdc\u200b\u7ed1\u5b9a\u200b\u5230\u200b\u90a3\u4e2a\u200b\u521d\u59cb\u200b\u53d8\u91cf\u200b\u4e0a\u200b\u3002\u200b\u8fd9\u200b\u5c31\u200b\u50cf\u200b\u4f60\u200b\u7684\u200b\u7ef0\u53f7\u200b\u4e00\u65e6\u200b\u786e\u5b9a\u200b\u5c31\u200b\u53ea\u200b\u5c5e\u4e8e\u200b\u4f60\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u968f\u610f\u200b\u8f6c\u7ed9\u200b\u522b\u4eba\u200b\u3002</p> <pre><code>int alice = 25;    // \u200b\u7231\u4e3d\u4e1d\u200b25\u200b\u5c81\u200b\nint bob = 30;      // \u200b\u9c8d\u52c3\u200b30\u200b\u5c81\u200b\nint&amp; person = alice;  // person\u200b\u5f15\u7528\u200b\u7231\u4e3d\u4e1d\u200b\n\nperson = bob;  // \u200b\u8fd9\u200b\u4e0d\u662f\u200b\u8ba9\u200bperson\u200b\u53d8\u6210\u200bbob\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u800c\u662f\u200b\u5c06\u200bbob\u200b\u7684\u200b\u503c\u200b\u8d4b\u200b\u7ed9\u200balice\nstd::cout &lt;&lt; \"\u200b\u7231\u4e3d\u4e1d\u200b\u73b0\u5728\u200b\" &lt;&lt; alice &lt;&lt; \"\u200b\u5c81\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u7231\u4e3d\u4e1d\u200b\u73b0\u5728\u200b30\u200b\u5c81\u200b\nstd::cout &lt;&lt; \"\u200b\u9c8d\u52c3\u200b\u73b0\u5728\u200b\" &lt;&lt; bob &lt;&lt; \"\u200b\u5c81\u200b\" &lt;&lt; std::endl;      // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u9c8d\u52c3\u200b\u73b0\u5728\u200b30\u200b\u5c81\u200b\n</code></pre> <p>\u200b\u770b\u8d77\u6765\u200b\u50cf\u662f\u200bperson\u200b\u5f15\u7528\u200b\u53d8\u200b\u4e86\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u9645\u4e0a\u200b\u662f\u200balice\u200b\u7684\u200b\u503c\u200b\u53d8\u6210\u200b\u4e86\u200b30\u3002</p>"},{"location":"programming/cpp/noob/ref/#_8","title":"\u6ca1\u6709\u200b\u7a7a\u200b\u5f15\u7528","text":"<p>\u200b\u5f15\u7528\u200b\u5fc5\u987b\u200b\u5f15\u7528\u200b\u67d0\u4e2a\u200b\u5b9e\u9645\u200b\u5b58\u5728\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e0d\u200b\u5b58\u5728\u200b\"\u200b\u7a7a\u200b\u5f15\u7528\u200b\"\u200b\u7684\u200b\u6982\u5ff5\u200b\u3002</p> <p>\u200b\u751f\u6d3b\u200b\u4e2d\u200b\u7684\u200b\u4f8b\u5b50\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u5f71\u5b50\u200b\u90fd\u200b\u5fc5\u987b\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u7269\u4f53\u200b\uff0c\u200b\u4e0d\u200b\u53ef\u80fd\u200b\u6709\u200b\u72ec\u7acb\u200b\u5b58\u5728\u200b\u7684\u200b\"\u200b\u5f71\u5b50\u200b\"\u3002</p> <pre><code>int apple = 5;\nint&amp; fruit = apple;  // \u200b\u6b63\u786e\u200b\uff1afruit\u200b\u5f15\u7528\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b58\u5728\u200b\u7684\u200b\u53d8\u91cf\u200b\n\n// \u200b\u6ca1\u6709\u200b\u529e\u6cd5\u200b\u8ba9\u200bfruit\u200b\u4e0d\u200b\u5f15\u7528\u200b\u4efb\u4f55\u200b\u4e1c\u897f\u200b\u6216\u200b\u5f15\u7528\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u4e1c\u897f\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_9","title":"\u64cd\u4f5c\u200b\u5f15\u7528\u200b\u5373\u200b\u64cd\u4f5c\u200b\u539f\u200b\u53d8\u91cf","text":"<p>\u200b\u5bf9\u200b\u5f15\u7528\u200b\u7684\u200b\u4efb\u4f55\u200b\u64cd\u4f5c\u200b\u90fd\u200b\u76f4\u63a5\u200b\u4f5c\u7528\u200b\u4e8e\u200b\u88ab\u200b\u5f15\u7528\u200b\u7684\u200b\u539f\u200b\u53d8\u91cf\u200b\u3002</p> <pre><code>int temperature = 25;              // \u200b\u4eca\u5929\u200b\u6e29\u5ea6\u200b25\u200b\u5ea6\u200b\nint&amp; todayTemp = temperature;      // todayTemp\u200b\u662f\u200btemperature\u200b\u7684\u200b\u5f15\u7528\u200b\ntodayTemp++;                       // \u200b\u6e29\u5ea6\u200b\u4e0a\u5347\u200b1\u200b\u5ea6\u200b\nstd::cout &lt;&lt; \"\u200b\u73b0\u5728\u200b\u6e29\u5ea6\u200b\u662f\u200b\" &lt;&lt; temperature &lt;&lt; \"\u200b\u5ea6\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u73b0\u5728\u200b\u6e29\u5ea6\u200b\u662f\u200b26\u200b\u5ea6\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_10","title":"\u5f15\u7528\u200b\u7684\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/ref/#_11","title":"\u7b80\u5316\u200b\u590d\u6742\u200b\u6570\u636e\u200b\u8bbf\u95ee","text":"<p>\u200b\u5047\u8bbe\u200b\u6211\u4eec\u200b\u6709\u200b\u4e00\u4e2a\u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\uff1a</p> <pre><code>struct Address {\n    std::string street;\n    std::string city;\n};\n\nstruct Person {\n    std::string name;\n    Address address;\n};\n\nPerson manager;\nmanager.name = \"\u200b\u5f20\u4e09\u200b\";\nmanager.address.city = \"\u200b\u5317\u4eac\u200b\";\n\n// \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u7b80\u5316\u200b\u8bbf\u95ee\u200b\nAddress&amp; managerAddr = manager.address;\nmanagerAddr.street = \"\u200b\u671d\u9633\u8def\u200b\";  // \u200b\u6bd4\u200bmanager.address.street = \"\u200b\u671d\u9633\u8def\u200b\"\u200b\u66f4\u200b\u7b80\u6d01\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_12","title":"\u51fd\u6570\u200b\u53c2\u6570\u4f20\u9012\u200b\u4f18\u5316","text":"<pre><code>// \u200b\u4f4e\u6548\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u6574\u4e2a\u200b\u6570\u7ec4\u200b\u88ab\u200b\u590d\u5236\u200b\nvoid doubleValues(std::vector&lt;int&gt; numbers) {\n    for(int i = 0; i &lt; numbers.size(); i++) {\n        numbers[i] *= 2;\n    }\n    // \u200b\u539f\u200b\u6570\u7ec4\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u91cc\u200b\u64cd\u4f5c\u200b\u7684\u200b\u662f\u200b\u526f\u672c\u200b\n}\n\n// \u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u907f\u514d\u200b\u590d\u5236\u200b\nvoid doubleValues(std::vector&lt;int&gt;&amp; numbers) {\n    for(int i = 0; i &lt; numbers.size(); i++) {\n        numbers[i] *= 2;\n    }\n    // \u200b\u539f\u200b\u6570\u7ec4\u200b\u4f1a\u200b\u88ab\u200b\u4fee\u6539\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u8fd9\u91cc\u200b\u76f4\u63a5\u200b\u64cd\u4f5c\u200b\u539f\u200b\u6570\u7ec4\u200b\n}\n\n// \u200b\u4f7f\u7528\u200b\nstd::vector&lt;int&gt; scores = {60, 70, 80, 90};\ndoubleValues(scores);  // \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u7248\u672c\u200b\uff0cscores\u200b\u53d8\u6210\u200b{120, 140, 160, 180}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_13","title":"\u5e38\u91cf\u200b\u5f15\u7528","text":"<p>\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\u662f\u200b\u5bf9\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5141\u8bb8\u200b\u901a\u8fc7\u200b\u8be5\u200b\u5f15\u7528\u200b\u4fee\u6539\u200b\u53d8\u91cf\u503c\u200b\u3002</p> <p>\u200b\u8fd9\u200b\u5c31\u200b\u50cf\u662f\u200b\u535a\u7269\u9986\u200b\u91cc\u200b\u7684\u200b\u5c55\u54c1\u200b\uff1a\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u770b\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u89e6\u78b0\u200b\u6216\u200b\u4fee\u6539\u200b\u3002</p> <pre><code>int treasure = 1000;  // \u200b\u535a\u7269\u9986\u200b\u91cc\u200b\u4ef7\u503c\u200b1000\u200b\u4e07\u200b\u7684\u200b\u5c55\u54c1\u200b\nconst int&amp; exhibit = treasure;  // \u200b\u6e38\u5ba2\u200b\u53ef\u4ee5\u200b\u89c2\u8d4f\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\n\n// exhibit = 500;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u6e38\u5ba2\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u5c55\u54c1\u200b\ntreasure = 1200;   // \u200b\u6b63\u786e\u200b\uff1a\u200b\u535a\u7269\u9986\u200b\u5de5\u4f5c\u4eba\u5458\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u66f4\u6362\u200b\u5c55\u54c1\u200b\n</code></pre> <p>\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\u7684\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\uff1a</p> <pre><code>// \u200b\u4f7f\u7528\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\u8bfb\u53d6\u200b\u5927\u578b\u200b\u5bf9\u8c61\u200b\nvoid printBookDetails(const std::string&amp; title) {  // \u200b\u4e0d\u4f1a\u200b\u590d\u5236\u200b\u6574\u672c\u4e66\u200b\n    std::cout &lt;&lt; \"\u200b\u4e66\u540d\u200b: \" &lt;&lt; title &lt;&lt; \"\uff0c\u200b\u957f\u5ea6\u200b: \" &lt;&lt; title.length() &lt;&lt; std::endl;\n    // title = \"\u200b\u65b0\u200b\u6807\u9898\u200b\";  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\n}\n\nstd::string warAndPeace = \"\u200b\u6218\u4e89\u200b\u4e0e\u200b\u548c\u5e73\u200b...\"; // \u200b\u5f88\u957f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\nprintBookDetails(warAndPeace);  // \u200b\u9ad8\u6548\u200b\u4f20\u9012\u200b\uff0c\u200b\u65e0\u9700\u200b\u590d\u5236\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_14","title":"\u6307\u9488\u200b\u8be6\u89e3","text":""},{"location":"programming/cpp/noob/ref/#_15","title":"\u4ec0\u4e48\u200b\u662f\u200b\u6307\u9488\u200b\uff1f","text":"<p>\u200b\u6307\u9488\u200b\u662f\u200b\u4e00\u79cd\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5176\u503c\u200b\u4e3a\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u7684\u200b\u5185\u5b58\u5730\u5740\u200b\u3002\u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u95f4\u63a5\u200b\u8bbf\u95ee\u200b\u548c\u200b\u4fee\u6539\u200b\u5b58\u50a8\u200b\u5728\u200b\u8be5\u200b\u5730\u5740\u200b\u7684\u200b\u503c\u200b\u3002</p> <p>\u200b\u60f3\u8c61\u200b\u4e00\u4e0b\u200b\uff0c\u200b\u5982\u679c\u200b\u5f15\u7528\u200b\u50cf\u662f\u200b\u4eba\u200b\u7684\u200b\u7ef0\u53f7\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6307\u9488\u200b\u5c31\u200b\u50cf\u662f\u200b\u5bb6\u5ead\u200b\u4f4f\u5740\u200b\u3002\u200b\u77e5\u9053\u200b\u4f4f\u5740\u200b\u540e\u200b\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u53bb\u200b\u90a3\u91cc\u200b\u770b\u671b\u200b\u8fd9\u4e2a\u200b\u4eba\u200b(\u200b\u8bfb\u200b\u53d6\u503c\u200b)\u200b\u6216\u8005\u200b\u7ed9\u200b\u4ed6\u200b\u9001\u200b\u4e1c\u897f\u200b(\u200b\u4fee\u6539\u200b\u503c\u200b)\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u51b3\u5b9a\u200b\u53bb\u200b\u62dc\u8bbf\u200b\u522b\u4eba\u200b(\u200b\u6539\u53d8\u200b\u6307\u9488\u200b\u6307\u5411\u200b)\u3002</p> <pre><code>int house = 42;      // \u200b\u623f\u5b50\u200b\u53f7\u7801\u200b\u662f\u200b42\nint* address = &amp;house;  // address\u200b\u8bb0\u5f55\u200b\u4e86\u200bhouse\u200b\u7684\u200b\u5730\u5740\u200b\n\nstd::cout &lt;&lt; \"\u200b\u623f\u5b50\u200b\u53f7\u7801\u200b\u662f\u200b: \" &lt;&lt; *address &lt;&lt; std::endl;  // \u200b\u4f7f\u7528\u200b\u5730\u5740\u200b\u627e\u5230\u200b\u623f\u5b50\u200b\uff0c\u200b\u8f93\u51fa\u200b42\n*address = 50;  // \u200b\u901a\u8fc7\u200b\u5730\u5740\u200b\u4fee\u6539\u200b\u623f\u5b50\u200b\u53f7\u7801\u200b\nstd::cout &lt;&lt; \"\u200b\u4fee\u6539\u200b\u540e\u200b\uff0c\u200b\u623f\u5b50\u200b\u53f7\u7801\u200b\u662f\u200b: \" &lt;&lt; house &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b50\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_16","title":"\u6307\u9488\u200b\u7684\u200b\u57fa\u672c\u200b\u8bed\u6cd5","text":"<pre><code>\u200b\u7c7b\u578b\u200b* \u200b\u6307\u9488\u200b\u540d\u200b;            // \u200b\u58f0\u660e\u200b\u6307\u9488\u200b\n\u200b\u6307\u9488\u200b\u540d\u200b = &amp;\u200b\u53d8\u91cf\u540d\u200b;        // \u200b\u5c06\u200b\u53d8\u91cf\u200b\u7684\u200b\u5730\u5740\u200b\u8d4b\u7ed9\u200b\u6307\u9488\u200b\n</code></pre> <p>\u200b\u751f\u6d3b\u200b\u5b9e\u4f8b\u200b\uff1a</p> <pre><code>int cat = 3;      // \u200b\u4e00\u53ea\u200b3\u200b\u5c81\u200b\u7684\u200b\u732b\u200b\nint* petPtr;      // \u200b\u58f0\u660e\u200b\u4e00\u4e2a\u200b\u6307\u5411\u200b\u5ba0\u7269\u200b\u7684\u200b\u6307\u9488\u200b\npetPtr = &amp;cat;    // \u200b\u6307\u9488\u200b\u73b0\u5728\u200b\u6307\u5411\u200b\u732b\u200b\n\nstd::cout &lt;&lt; \"\u200b\u5ba0\u7269\u200b\u5e74\u9f84\u200b: \" &lt;&lt; *petPtr &lt;&lt; \"\u200b\u5c81\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5ba0\u7269\u200b\u5e74\u9f84\u200b: 3\u200b\u5c81\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_17","title":"\u6307\u9488\u200b\u7684\u200b\u5173\u952e\u200b\u64cd\u4f5c","text":""},{"location":"programming/cpp/noob/ref/#_18","title":"\u53d6\u200b\u5730\u5740\u200b\u64cd\u4f5c\u7b26\u200b &amp;","text":"<p>\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u53d8\u91cf\u200b\u7684\u200b\u5185\u5b58\u5730\u5740\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u83b7\u53d6\u200b\u67d0\u4eba\u200b\u7684\u200b\u5bb6\u5ead\u200b\u4f4f\u5740\u200b\uff1a</p> <pre><code>int cookie = 10;   // \u200b\u6709\u200b10\u200b\u4e2a\u200b\u997c\u5e72\u200b\nint* cookieJar = &amp;cookie;  // cookieJar\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u997c\u5e72\u200b\u7684\u200b\u4f4d\u7f6e\u200b\n\nstd::cout &lt;&lt; \"\u200b\u997c\u5e72\u200b\u5730\u5740\u200b: \" &lt;&lt; cookieJar &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\u5185\u5b58\u5730\u5740\u200b\uff0c\u200b\u5982\u200b0x7fff5fbff83c\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_19","title":"\u89e3\u200b\u5f15\u7528\u200b\u64cd\u4f5c\u7b26\u200b *","text":"<p>\u200b\u7528\u4e8e\u200b\u8bbf\u95ee\u200b\u6307\u9488\u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u901a\u8fc7\u200b\u5730\u5740\u200b\u627e\u5230\u200b\u5b9e\u9645\u200b\u7684\u200b\u623f\u5b50\u200b\uff1a</p> <pre><code>int book = 300;     // \u200b\u4e00\u672c\u200b300\u200b\u9875\u200b\u7684\u200b\u4e66\u200b\nint* bookshelf = &amp;book;  // \u200b\u4e66\u67b6\u4e0a\u200b\u653e\u200b\u4e86\u200b\u8fd9\u200b\u672c\u4e66\u200b\u7684\u200b\u4f4d\u7f6e\u200b\u4fe1\u606f\u200b\n*bookshelf = 320;        // \u200b\u901a\u8fc7\u200b\u4e66\u67b6\u200b\u4f4d\u7f6e\u200b\u627e\u5230\u200b\u4e66\u200b\u5e76\u200b\u4fee\u6539\u200b\u9875\u6570\u200b\nstd::cout &lt;&lt; \"\u200b\u8fd9\u200b\u672c\u4e66\u200b\u6709\u200b\" &lt;&lt; book &lt;&lt; \"\u200b\u9875\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u8fd9\u200b\u672c\u4e66\u200b\u6709\u200b320\u200b\u9875\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_20","title":"\u6307\u9488\u200b\u7684\u200b\u5173\u952e\u200b\u7279\u6027","text":""},{"location":"programming/cpp/noob/ref/#nullptr","title":"\u53ef\u4ee5\u200b\u4e3a\u7a7a\u200b(nullptr)","text":"<p>\u200b\u6307\u9488\u200b\u53ef\u4ee5\u200b\u4e0d\u200b\u6307\u5411\u200b\u4efb\u4f55\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6709\u200b\u4e00\u4e2a\u200b\u7a7a\u200b\u7684\u200b\u8d2d\u7269\u200b\u6e05\u5355\u200b\uff0c\u200b\u8fd8\u200b\u6ca1\u200b\u51b3\u5b9a\u200b\u4e70\u200b\u4ec0\u4e48\u200b\uff1a</p> <pre><code>int* shoppingList = nullptr;  // \u200b\u7a7a\u200b\u7684\u200b\u8d2d\u7269\u200b\u6e05\u5355\u200b\n\n// \u200b\u4f7f\u7528\u200b\u524d\u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\nif(shoppingList) {\n    std::cout &lt;&lt; \"\u200b\u8981\u200b\u4e70\u200b\u7684\u200b\u7b2c\u4e00\u4ef6\u200b\u7269\u54c1\u200b: \" &lt;&lt; *shoppingList &lt;&lt; std::endl;\n} else {\n    std::cout &lt;&lt; \"\u200b\u8d2d\u7269\u200b\u6e05\u5355\u200b\u662f\u200b\u7a7a\u200b\u7684\u200b\uff01\" &lt;&lt; std::endl;  // \u200b\u4f1a\u200b\u6267\u884c\u200b\u8fd9\u200b\u884c\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_21","title":"\u53ef\u4ee5\u200b\u6539\u53d8\u200b\u6307\u5411","text":"<p>\u200b\u6307\u9488\u200b\u53ef\u4ee5\u200b\u968f\u65f6\u200b\u66f4\u200b\u6539\u4e3a\u200b\u6307\u5411\u200b\u4e0d\u540c\u200b\u7684\u200b\u53d8\u91cf\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u6539\u53d8\u200b\u8bbf\u95ee\u200b\u4e0d\u540c\u200b\u670b\u53cb\u200b\u7684\u200b\u8ba1\u5212\u200b\uff1a</p> <pre><code>int friend1 = 25;    // \u200b\u670b\u53cb\u200b1\uff0c25\u200b\u5c81\u200b\nint friend2 = 30;    // \u200b\u670b\u53cb\u200b2\uff0c30\u200b\u5c81\u200b\n\nint* visitPlan = &amp;friend1;  // \u200b\u4eca\u5929\u200b\u8ba1\u5212\u200b\u62dc\u8bbf\u200b\u670b\u53cb\u200b1\nstd::cout &lt;&lt; \"\u200b\u4eca\u5929\u200b\u62dc\u8bbf\u200b\u7684\u200b\u670b\u53cb\u200b\u5e74\u9f84\u200b: \" &lt;&lt; *visitPlan &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b25\n\nvisitPlan = &amp;friend2;  // \u200b\u6539\u53d8\u200b\u8ba1\u5212\u200b\uff0c\u200b\u62dc\u8bbf\u200b\u670b\u53cb\u200b2\nstd::cout &lt;&lt; \"\u200b\u6539\u53d8\u200b\u8ba1\u5212\u200b\u540e\u200b\u62dc\u8bbf\u200b\u7684\u200b\u670b\u53cb\u200b\u5e74\u9f84\u200b: \" &lt;&lt; *visitPlan &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b30\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_22","title":"\u6307\u9488\u200b\u7b97\u672f","text":"<p>\u200b\u6307\u9488\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u7b97\u672f\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u79fb\u52a8\u200b\uff1a</p> <pre><code>// \u200b\u60f3\u8c61\u200b\u8fd9\u200b\u662f\u200b\u4e00\u200b\u6392\u5ea7\u4f4d\u200b\nint seats[5] = {101, 102, 103, 104, 105};  // \u200b\u5ea7\u4f4d\u53f7\u200b\nint* currentSeat = seats;  // \u200b\u6307\u5411\u200b\u7b2c\u4e00\u4e2a\u200b\u5ea7\u4f4d\u200b\n\nstd::cout &lt;&lt; \"\u200b\u5f53\u524d\u200b\u5ea7\u4f4d\u200b: \" &lt;&lt; *currentSeat &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b101\ncurrentSeat++;  // \u200b\u79fb\u5230\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5ea7\u4f4d\u200b\nstd::cout &lt;&lt; \"\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u5ea7\u4f4d\u200b: \" &lt;&lt; *currentSeat &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b102\ncurrentSeat += 2;  // \u200b\u518d\u200b\u5f80\u524d\u200b\u8df3\u200b\u4e24\u4e2a\u200b\u5ea7\u4f4d\u200b\nstd::cout &lt;&lt; \"\u200b\u518d\u200b\u5f80\u524d\u200b\u4e24\u4e2a\u200b\u5ea7\u4f4d\u200b: \" &lt;&lt; *currentSeat &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b104\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_23","title":"\u6307\u9488\u200b\u7684\u200b\u5b9e\u9645\u200b\u5e94\u7528\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/ref/#_24","title":"\u52a8\u6001\u5185\u5b58\u200b\u5206\u914d","text":"<p>\u200b\u60f3\u8c61\u200b\u4f60\u200b\u5f00\u200b\u6d3e\u5bf9\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u786e\u5b9a\u200b\u6765\u200b\u591a\u5c11\u200b\u4eba\u200b\uff0c\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u5b9e\u9645\u200b\u60c5\u51b5\u200b\u51c6\u5907\u200b\u5ea7\u4f4d\u200b\uff1a</p> <pre><code>// \u200b\u6700\u521d\u200b\u4e0d\u200b\u77e5\u9053\u200b\u591a\u5c11\u200b\u4eba\u6765\u200b\nint guestCount;\nstd::cout &lt;&lt; \"\u200b\u6709\u200b\u591a\u5c11\u200b\u5ba2\u4eba\u200b\u8981\u200b\u6765\u200b\uff1f\";\nstd::cin &gt;&gt; guestCount;\n\n// \u200b\u6839\u636e\u200b\u4eba\u6570\u200b\u52a8\u6001\u5206\u914d\u200b\u5ea7\u4f4d\u200b\nint* seats = new int[guestCount];  // \u200b\u5206\u914d\u200b\u8db3\u591f\u200b\u7684\u200b\u5ea7\u4f4d\u200b\n\n// \u200b\u7ed9\u200b\u6bcf\u4e2a\u200b\u5ea7\u4f4d\u200b\u5206\u914d\u200b\u7f16\u53f7\u200b\nfor(int i = 0; i &lt; guestCount; i++) {\n    seats[i] = 100 + i;  // \u200b\u5ea7\u4f4d\u53f7\u200b\u4ece\u200b100\u200b\u5f00\u59cb\u200b\n}\n\n// \u200b\u6d3e\u5bf9\u200b\u7ed3\u675f\u200b\u540e\u200b\u91ca\u653e\u200b\u5ea7\u4f4d\u200b\ndelete[] seats;\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_25","title":"\u5b9e\u73b0\u200b\u7b80\u5355\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8fde\u63a5","text":"<pre><code>void connectNames(const char* firstName, const char* lastName, char* fullName) {\n    // \u200b\u590d\u5236\u200b\u7b2c\u4e00\u4e2a\u200b\u540d\u5b57\u200b\n    while(*firstName != '\\0') {\n        *fullName = *firstName;\n        firstName++;\n        fullName++;\n    }\n\n    // \u200b\u6dfb\u52a0\u200b\u7a7a\u683c\u200b\n    *fullName = ' ';\n    fullName++;\n\n    // \u200b\u590d\u5236\u200b\u7b2c\u4e8c\u4e2a\u200b\u540d\u5b57\u200b\n    while(*lastName != '\\0') {\n        *fullName = *lastName;\n        lastName++;\n        fullName++;\n    }\n\n    // \u200b\u6dfb\u52a0\u200b\u7ed3\u675f\u7b26\u200b\n    *fullName = '\\0';\n}\n\n// \u200b\u4f7f\u7528\u200b\nchar result[50];\nconnectNames(\"\u200b\u5f20\u200b\", \"\u200b\u4e09\u200b\", result);\nstd::cout &lt;&lt; \"\u200b\u5b8c\u6574\u200b\u59d3\u540d\u200b: \" &lt;&lt; result &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5b8c\u6574\u200b\u59d3\u540d\u200b: \u200b\u5f20\u200b \u200b\u4e09\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_26","title":"\u6307\u9488\u200b\u7c7b\u578b\u200b\u8be6\u89e3","text":""},{"location":"programming/cpp/noob/ref/#_27","title":"\u666e\u901a\u200b\u6307\u9488","text":"<p>\u200b\u5c31\u200b\u50cf\u200b\u666e\u901a\u200b\u7684\u200b\u5730\u5740\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4fee\u6539\u200b\u90a3\u91cc\u200b\u7684\u200b\u4e1c\u897f\u200b\uff1a</p> <pre><code>int garden = 5;     // \u200b\u82b1\u56ed\u91cc\u200b\u6709\u200b5\u200b\u6735\u82b1\u200b\nint* gardener = &amp;garden;  // \u200b\u56ed\u4e01\u200b\u77e5\u9053\u200b\u82b1\u56ed\u200b\u4f4d\u7f6e\u200b\n*gardener = 10;     // \u200b\u56ed\u4e01\u200b\u79cd\u200b\u4e86\u200b\u66f4\u200b\u591a\u200b\u7684\u200b\u82b1\u200b\nstd::cout &lt;&lt; \"\u200b\u82b1\u56ed\u200b\u73b0\u5728\u200b\u6709\u200b\" &lt;&lt; garden &lt;&lt; \"\u200b\u6735\u82b1\u200b\" &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b10\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_28","title":"\u5e38\u91cf\u200b\u6307\u9488","text":"<p>\u200b\u6307\u5411\u200b\u5e38\u91cf\u200b\u7684\u200b\u6307\u9488\u200b\uff1a\u200b\u6307\u9488\u200b\u6240\u200b\u6307\u5411\u200b\u7684\u200b\u503c\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u8be5\u200b\u6307\u9488\u200b\u4fee\u6539\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u535a\u7269\u9986\u200b\u7684\u200b\u53c2\u89c2\u8005\u200b\u53ea\u80fd\u200b\u770b\u200b\u4e0d\u80fd\u200b\u78b0\u200b\u5c55\u54c1\u200b\uff1a</p> <pre><code>int artifact = 2000;          // 2000\u200b\u5e74\u200b\u5386\u53f2\u200b\u7684\u200b\u6587\u7269\u200b\nconst int* visitor = &amp;artifact;  // \u200b\u53c2\u89c2\u8005\u200b\u53ef\u4ee5\u200b\u770b\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u80fd\u200b\u78b0\u200b\n\n// *visitor = 1000;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u53c2\u89c2\u8005\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u6587\u7269\u200b\nartifact = 2100;     // \u200b\u6b63\u786e\u200b\uff1a\u200b\u535a\u7269\u9986\u200b\u7ba1\u7406\u5458\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_29","title":"\u6307\u9488\u200b\u5e38\u91cf","text":"<p>\u200b\u6307\u9488\u200b\u672c\u8eab\u200b\u662f\u200b\u5e38\u91cf\u200b\uff1a\u200b\u6307\u9488\u200b\u4e0d\u80fd\u200b\u6307\u5411\u200b\u5176\u4ed6\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4f46\u200b\u6240\u6307\u200b\u5bf9\u8c61\u200b\u7684\u200b\u503c\u200b\u53ef\u4ee5\u200b\u6539\u53d8\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u56fa\u5b9a\u200b\u5728\u200b\u5899\u4e0a\u200b\u7684\u200b\u76d1\u63a7\u200b\u6444\u50cf\u5934\u200b\uff0c\u200b\u6444\u50cf\u5934\u200b\u4f4d\u7f6e\u200b\u4e0d\u53d8\u200b\u4f46\u200b\u62cd\u200b\u5230\u200b\u7684\u200b\u5185\u5bb9\u200b\u53ef\u4ee5\u200b\u53d8\u200b\uff1a</p> <pre><code>int room = 25;            // \u200b\u623f\u95f4\u200b\u6e29\u5ea6\u200b25\u200b\u5ea6\u200b\nint* const thermostat = &amp;room;  // \u200b\u6e29\u63a7\u5668\u200b\u56fa\u5b9a\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u623f\u95f4\u200b\u91cc\u200b\n*thermostat = 22;        // \u200b\u53ef\u4ee5\u200b\u8c03\u8282\u200b\u6e29\u5ea6\u200b\n// thermostat = &amp;anotherRoom;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u6e29\u63a7\u5668\u200b\u4e0d\u80fd\u200b\u632a\u5230\u200b\u522b\u7684\u200b\u623f\u95f4\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_30","title":"\u5e38\u91cf\u200b\u6307\u9488\u200b\u5e38\u91cf","text":"<p>\u200b\u6307\u5411\u200b\u5e38\u91cf\u200b\u7684\u200b\u5e38\u91cf\u200b\u6307\u9488\u200b\uff1a\u200b\u65e2\u200b\u4e0d\u80fd\u200b\u6539\u53d8\u200b\u6307\u9488\u200b\u6307\u5411\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\u4fee\u6539\u200b\u503c\u200b\uff0c\u200b\u5c31\u200b\u50cf\u200b\u5899\u4e0a\u200b\u8d34\u200b\u7684\u200b\u5386\u53f2\u200b\u7167\u7247\u200b\uff0c\u200b\u65e2\u200b\u4e0d\u80fd\u200b\u632a\u200b\u4f4d\u7f6e\u200b\u4e5f\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u5185\u5bb9\u200b\uff1a</p> <pre><code>int historicalDate = 1949;\nconst int* const monument = &amp;historicalDate;  // \u200b\u7eaa\u5ff5\u7891\u200b\u56fa\u5b9a\u200b\u8bb0\u5f55\u200b\u8fd9\u4e2a\u200b\u65e5\u671f\u200b\n\n// *monument = 2000;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u7eaa\u5ff5\u200b\u7684\u200b\u65e5\u671f\u200b\n// monument = &amp;anotherDate;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u8ba9\u200b\u7eaa\u5ff5\u7891\u200b\u7eaa\u5ff5\u200b\u522b\u7684\u200b\u4e8b\u4ef6\u200b\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_31","title":"\u6307\u9488\u200b\u7684\u200b\u5e38\u89c1\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u793a\u4f8b","text":""},{"location":"programming/cpp/noob/ref/#_32","title":"\u52a8\u6001\u200b\u521b\u5efa\u5bf9\u8c61","text":"<p>\u200b\u60f3\u8c61\u200b\u5f00\u8bbe\u200b\u4e00\u5bb6\u200b\u65b0\u200b\u9910\u5385\u200b\uff0c\u200b\u6839\u636e\u200b\u9700\u6c42\u200b\u52a8\u6001\u200b\u51b3\u5b9a\u200b\u89c4\u6a21\u200b\u548c\u200b\u83dc\u5355\u200b\uff1a</p> <pre><code>class Restaurant {\npublic:\n    Restaurant(int tables, const std::string&amp; name) {\n        std::cout &lt;&lt; \"\u200b\u5f00\u8bbe\u200b\u4e86\u200b\u4e00\u5bb6\u200b\u53eb\u200b\" &lt;&lt; name &lt;&lt; \"\u200b\u7684\u200b\u9910\u5385\u200b\uff0c\u200b\u6709\u200b\" &lt;&lt; tables &lt;&lt; \"\u200b\u5f20\u200b\u684c\u5b50\u200b\" &lt;&lt; std::endl;\n    }\n    ~Restaurant() {\n        std::cout &lt;&lt; \"\u200b\u9910\u5385\u200b\u5173\u95e8\u200b\u4e86\u200b\" &lt;&lt; std::endl;\n    }\n};\n\n// \u200b\u52a8\u6001\u200b\u5f00\u8bbe\u200b\u9910\u5385\u200b\nvoid openBusiness() {\n    int tableCount;\n    std::string name;\n\n    std::cout &lt;&lt; \"\u200b\u9910\u5385\u200b\u53eb\u200b\u4ec0\u4e48\u200b\u540d\u5b57\u200b\uff1f\";\n    std::cin &gt;&gt; name;\n    std::cout &lt;&lt; \"\u200b\u9700\u8981\u200b\u591a\u5c11\u200b\u5f20\u200b\u684c\u5b50\u200b\uff1f\";\n    std::cin &gt;&gt; tableCount;\n\n    Restaurant* myRestaurant = new Restaurant(tableCount, name);\n\n    // \u200b\u9910\u5385\u200b\u8425\u4e1a\u200b...\n\n    // \u200b\u5173\u95e8\u200b\n    delete myRestaurant;\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_33","title":"\u5b9e\u73b0\u200b\u7b80\u5355\u200b\u7684\u200b\u94fe\u8868","text":"<p>\u200b\u60f3\u8c61\u200b\u4e00\u4e2a\u200b\u706b\u8f66\u200b\uff0c\u200b\u6bcf\u200b\u8282\u8f66\u53a2\u200b\u90fd\u200b\u8fde\u63a5\u200b\u7740\u200b\u4e0b\u200b\u4e00\u8282\u200b\uff1a</p> <pre><code>struct TrainCar {\n    int passengers;\n    TrainCar* nextCar;\n\n    TrainCar(int p) : passengers(p), nextCar(nullptr) {}\n};\n\n// \u200b\u521b\u5efa\u200b\u4e00\u5217\u200b\u706b\u8f66\u200b\nvoid createTrain() {\n    TrainCar* firstCar = new TrainCar(20);  // \u200b\u7b2c\u4e00\u8282\u200b\u8f66\u53a2\u200b\uff0c20\u200b\u540d\u200b\u4e58\u5ba2\u200b\n    TrainCar* secondCar = new TrainCar(15); // \u200b\u7b2c\u4e8c\u8282\u200b\u8f66\u53a2\u200b\uff0c15\u200b\u540d\u200b\u4e58\u5ba2\u200b\n    TrainCar* thirdCar = new TrainCar(30);  // \u200b\u7b2c\u4e09\u200b\u8282\u8f66\u53a2\u200b\uff0c30\u200b\u540d\u200b\u4e58\u5ba2\u200b\n\n    // \u200b\u5c06\u200b\u8f66\u53a2\u200b\u8fde\u63a5\u8d77\u6765\u200b\n    firstCar-&gt;nextCar = secondCar;\n    secondCar-&gt;nextCar = thirdCar;\n\n    // \u200b\u8ba1\u7b97\u200b\u603b\u200b\u4e58\u5ba2\u200b\u6570\u200b\n    int totalPassengers = 0;\n    TrainCar* current = firstCar;\n\n    while(current != nullptr) {\n        totalPassengers += current-&gt;passengers;\n        current = current-&gt;nextCar;\n    }\n\n    std::cout &lt;&lt; \"\u200b\u706b\u8f66\u200b\u603b\u5171\u200b\u8f7d\u6709\u200b\" &lt;&lt; totalPassengers &lt;&lt; \"\u200b\u540d\u200b\u4e58\u5ba2\u200b\" &lt;&lt; std::endl;\n\n    // \u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\uff08\u200b\u6309\u200b\u987a\u5e8f\u200b\u62c6\u89e3\u200b\u706b\u8f66\u200b\uff09\n    current = firstCar;\n    while(current != nullptr) {\n        TrainCar* temp = current;\n        current = current-&gt;nextCar;\n        delete temp;\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#vs","title":"\u5f15\u7528\u200bvs\u200b\u6307\u9488\u200b\uff1a\u200b\u5168\u65b9\u4f4d\u200b\u5bf9\u6bd4","text":""},{"location":"programming/cpp/noob/ref/#_34","title":"\u751f\u6d3b\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u6bd4","text":"<p>\u200b\u5f15\u7528\u200b\u5c31\u200b\u50cf\u200b\u4eba\u200b\u7684\u200b\u7ef0\u53f7\u200b\uff1a</p> <ul> <li>\u200b\u4e00\u65e6\u200b\u786e\u5b9a\u200b\u5c31\u200b\u4e0d\u80fd\u200b\u6539\u53d8\u200b\uff08\u200b\u5f20\u4e09\u200b\u7684\u200b\u7ef0\u53f7\u200b\"\u200b\u5c0f\u200b\u4e09\u200b\"\u200b\u4e0d\u4f1a\u200b\u7a81\u7136\u200b\u53d8\u6210\u200b\u674e\u56db\u200b\u7684\u200b\u7ef0\u53f7\u200b\uff09</li> <li>\u200b\u4f7f\u7528\u200b\u65f6\u200b\u5c31\u200b\u50cf\u200b\u4f7f\u7528\u200b\u672c\u540d\u200b\u4e00\u6837\u200b\u81ea\u7136\u200b\uff08\u200b\u53eb\u200b\"\u200b\u5c0f\u200b\u4e09\u200b\"\u200b\u548c\u200b\u53eb\u200b\"\u200b\u5f20\u4e09\u200b\"\u200b\u662f\u200b\u540c\u4e00\u4e2a\u200b\u4eba\u200b\u56de\u5e94\u200b\uff09</li> <li>\u200b\u5fc5\u987b\u200b\u5bf9\u5e94\u200b\u4e00\u4e2a\u200b\u771f\u5b9e\u200b\u5b58\u5728\u200b\u7684\u200b\u4eba\u200b\uff08\u200b\u6ca1\u6709\u200b\u4eba\u200b\uff0c\u200b\u5c31\u200b\u6ca1\u6709\u200b\u7ef0\u53f7\u200b\uff09</li> </ul> <p>\u200b\u6307\u9488\u200b\u5c31\u200b\u50cf\u200b\u5730\u5740\u200b\u6216\u200bGPS\u200b\u5750\u6807\u200b\uff1a</p> <ul> <li>\u200b\u53ef\u4ee5\u200b\u968f\u65f6\u200b\u5bfc\u822a\u200b\u5230\u200b\u4e0d\u540c\u200b\u5730\u70b9\u200b\uff08\u200b\u4eca\u5929\u200b\u53bb\u200b\u8fd9\u4e2a\u200b\u5730\u5740\u200b\uff0c\u200b\u660e\u5929\u200b\u53bb\u200b\u90a3\u4e2a\u200b\u5730\u5740\u200b\uff09</li> <li>\u200b\u9700\u8981\u200b\"\u200b\u5bfc\u822a\u200b\"\u200b\u624d\u80fd\u200b\u5230\u8fbe\u200b\u76ee\u7684\u5730\u200b\uff08\u200b\u6709\u200b\u5730\u5740\u200b\u8fd8\u200b\u9700\u8981\u200b\u53bb\u200b\u90a3\u91cc\u200b\u624d\u80fd\u200b\u89c1\u5230\u200b\u4eba\u200b\uff09</li> <li>\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e0d\u200b\u5b58\u5728\u200b\u6216\u200b\u5c1a\u672a\u200b\u786e\u5b9a\u200b\u7684\u200b\u4f4d\u7f6e\u200b\uff08\u200b\u7a7a\u200b\u5730\u5740\u200b\uff09</li> </ul>"},{"location":"programming/cpp/noob/ref/#_35","title":"\u4ee3\u7801\u200b\u5b9e\u4f8b\u200b\u5bf9\u6bd4","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n// \u200b\u6f14\u793a\u200b\u5f15\u7528\u200b\u548c\u200b\u6307\u9488\u200b\u7684\u200b\u4e0d\u540c\u70b9\u200b\nvoid compareRefAndPtr() {\n    // \u200b\u5b9a\u4e49\u200b\u539f\u59cb\u200b\u53d8\u91cf\u200b\n    std::string breakfast = \"\u200b\u8c46\u6d46\u200b\";\n    std::string lunch = \"\u200b\u9762\u6761\u200b\";\n\n    // \u200b\u5f15\u7528\u200b\u793a\u4f8b\u200b\n    std::string&amp; meal1 = breakfast;   // meal1\u200b\u5f15\u7528\u200bbreakfast\n    meal1 = \"\u200b\u8c46\u6d46\u200b\u548c\u200b\u6cb9\u6761\u200b\";             // \u200b\u4fee\u6539\u200b\u4e86\u200bbreakfast\n\n    // \u200b\u6307\u9488\u200b\u793a\u4f8b\u200b\n    std::string* meal2 = &amp;breakfast;  // meal2\u200b\u6307\u5411\u200bbreakfast\n    *meal2 = \"\u200b\u8c46\u6d46\u200b\u548c\u200b\u5305\u5b50\u200b\";            // \u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\u4fee\u6539\u200bbreakfast\n    meal2 = &amp;lunch;                  // \u200b\u6539\u53d8\u200b\u6307\u5411\u200b\uff0c\u200b\u73b0\u5728\u200b\u6307\u5411\u200blunch\n    *meal2 = \"\u200b\u7092\u9762\u200b\";                  // \u200b\u4fee\u6539\u200blunch\n\n    // \u200b\u67e5\u770b\u200b\u7ed3\u679c\u200b\n    std::cout &lt;&lt; \"\u200b\u65e9\u9910\u200b: \" &lt;&lt; breakfast &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u65e9\u9910\u200b: \u200b\u8c46\u6d46\u200b\u548c\u200b\u5305\u5b50\u200b\n    std::cout &lt;&lt; \"\u200b\u5348\u9910\u200b: \" &lt;&lt; lunch &lt;&lt; std::endl;      // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5348\u9910\u200b: \u200b\u7092\u9762\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_36","title":"\u51fd\u6570\u53c2\u6570\u200b\u5bf9\u6bd4","text":"<pre><code>#include &lt;iostream&gt;\n\n// \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u4f20\u9012\u200b\nvoid increaseByReference(int&amp; num) {\n    num++;  // \u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u503c\u200b\n}\n\n// \u200b\u4f7f\u7528\u200b\u6307\u9488\u200b\u4f20\u9012\u200b\nvoid increaseByPointer(int* num) {\n    if(num)  // \u200b\u9700\u8981\u200b\u68c0\u67e5\u200b\u6307\u9488\u200b\u975e\u7a7a\u200b\n        (*num)++;  // \u200b\u89e3\u200b\u5f15\u7528\u200b\u540e\u200b\u4fee\u6539\u200b\n}\n\n// \u200b\u4f7f\u7528\u200b\u503c\u200b\u4f20\u9012\u200b\nvoid increaseByValue(int num) {\n    num++;  // \u200b\u53ea\u200b\u4fee\u6539\u200b\u526f\u672c\u200b\n}\n\nint main() {\n    int test = 10;\n\n    increaseByValue(test);\n    std::cout &lt;&lt; \"\u200b\u503c\u200b\u4f20\u9012\u200b\u540e\u200b: \" &lt;&lt; test &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b10\uff0c\u200b\u672a\u200b\u6539\u53d8\u200b\n\n    increaseByReference(test);\n    std::cout &lt;&lt; \"\u200b\u5f15\u7528\u200b\u4f20\u9012\u200b\u540e\u200b: \" &lt;&lt; test &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b11\uff0c\u200b\u6539\u53d8\u200b\u4e86\u200b\n\n    increaseByPointer(&amp;test);\n    std::cout &lt;&lt; \"\u200b\u6307\u9488\u200b\u4f20\u9012\u200b\u540e\u200b: \" &lt;&lt; test &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b12\uff0c\u200b\u6539\u53d8\u200b\u4e86\u200b\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_37","title":"\u53ef\u89c6\u5316\u200b\u5bf9\u6bd4\u200b\uff1a\u200b\u62ab\u8428\u200b\u5e97\u70b9\u9910","text":"<p>\u200b\u60f3\u8c61\u200b\u4e00\u5bb6\u200b\u62ab\u8428\u200b\u5e97\u200b\u7684\u200b\u70b9\u9910\u200b\u7cfb\u7edf\u200b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nstruct Pizza {\n    std::string topping;\n    int size;\n};\n\n// \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u4fee\u6539\u200b\u62ab\u8428\u200b\nvoid customizePizzaByRef(Pizza&amp; pizza) {\n    std::cout &lt;&lt; \"\u200b\u60a8\u200b\u70b9\u200b\u7684\u200b\u662f\u200b\" &lt;&lt; pizza.size &lt;&lt; \"\u200b\u5bf8\u200b\" &lt;&lt; pizza.topping &lt;&lt; \"\u200b\u62ab\u8428\u200b\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u53a8\u5e08\u200b\u52a0\u6599\u200b\u4e2d\u200b...\" &lt;&lt; std::endl;\n    pizza.topping += \"\uff0c\u200b\u989d\u5916\u200b\u52a0\u200b\u829d\u58eb\u200b\";\n}\n\n// \u200b\u4f7f\u7528\u200b\u6307\u9488\u200b\u4fee\u6539\u200b\u62ab\u8428\u200b\nvoid customizePizzaByPtr(Pizza* pizza) {\n    if(!pizza) {  // \u200b\u68c0\u67e5\u200b\u7a7a\u200b\u6307\u9488\u200b\n        std::cout &lt;&lt; \"\u200b\u6ca1\u6709\u200b\u62ab\u8428\u200b\u53ef\u4ee5\u200b\u5236\u4f5c\u200b\uff01\" &lt;&lt; std::endl;\n        return;\n    }\n\n    std::cout &lt;&lt; \"\u200b\u60a8\u200b\u70b9\u200b\u7684\u200b\u662f\u200b\" &lt;&lt; pizza-&gt;size &lt;&lt; \"\u200b\u5bf8\u200b\" &lt;&lt; pizza-&gt;topping &lt;&lt; \"\u200b\u62ab\u8428\u200b\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u53a8\u5e08\u200b\u52a0\u6599\u200b\u4e2d\u200b...\" &lt;&lt; std::endl;\n    pizza-&gt;topping += \"\uff0c\u200b\u989d\u5916\u200b\u52a0\u200b\u6a44\u6984\u200b\";\n}\n\nint main() {\n    Pizza margherita = {\"\u200b\u756a\u8304\u200b\", 12};\n\n    // \u200b\u901a\u8fc7\u200b\u5f15\u7528\u200b\u5b9a\u5236\u200b\n    customizePizzaByRef(margherita);\n    std::cout &lt;&lt; \"\u200b\u5f15\u7528\u200b\u540e\u200b\u7684\u200b\u62ab\u8428\u200b: \" &lt;&lt; margherita.topping &lt;&lt; std::endl;\n    // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u5f15\u7528\u200b\u540e\u200b\u7684\u200b\u62ab\u8428\u200b: \u200b\u756a\u8304\u200b\uff0c\u200b\u989d\u5916\u200b\u52a0\u200b\u829d\u58eb\u200b\n\n    // \u200b\u901a\u8fc7\u200b\u6307\u9488\u200b\u5b9a\u5236\u200b\n    customizePizzaByPtr(&amp;margherita);\n    std::cout &lt;&lt; \"\u200b\u6307\u9488\u200b\u540e\u200b\u7684\u200b\u62ab\u8428\u200b: \" &lt;&lt; margherita.topping &lt;&lt; std::endl;\n    // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u6307\u9488\u200b\u540e\u200b\u7684\u200b\u62ab\u8428\u200b: \u200b\u756a\u8304\u200b\uff0c\u200b\u989d\u5916\u200b\u52a0\u200b\u829d\u58eb\u200b\uff0c\u200b\u989d\u5916\u200b\u52a0\u200b\u6a44\u6984\u200b\n\n    // \u200b\u7a7a\u200b\u6307\u9488\u200b\u793a\u4f8b\u200b\n    Pizza* noPizza = nullptr;\n    customizePizzaByPtr(noPizza);  // \u200b\u5b89\u5168\u200b\u5904\u7406\u200b\u7a7a\u200b\u6307\u9488\u200b\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_38","title":"\u5e38\u89c1\u200b\u9519\u8bef\u200b\u4e0e\u200b\u9677\u9631","text":""},{"location":"programming/cpp/noob/ref/#_39","title":"\u6307\u9488\u200b\u5e38\u89c1\u200b\u9519\u8bef\u200b\u5b9e\u4f8b","text":""},{"location":"programming/cpp/noob/ref/#-","title":"\u7a7a\u200b\u6307\u9488\u200b\u8bbf\u95ee\u200b - \u200b\u5496\u5561\u5e97\u200b\u6848\u4f8b","text":"<pre><code>struct CoffeeMachine {\n    void brewCoffee() {\n        std::cout &lt;&lt; \"\u200b\u5496\u5561\u200b\u6b63\u5728\u200b\u51b2\u200b\u716e\u200b...\" &lt;&lt; std::endl;\n    }\n};\n\nvoid morningRoutine() {\n    CoffeeMachine* machine = nullptr;  // \u200b\u5496\u5561\u673a\u200b\u574f\u200b\u4e86\u200b\n\n    // \u200b\u5fd8\u8bb0\u200b\u68c0\u67e5\u200b\u673a\u5668\u200b\u662f\u5426\u200b\u53ef\u7528\u200b\n    // machine-&gt;brewCoffee();  // \u200b\u7a0b\u5e8f\u200b\u5d29\u6e83\u200b!\n\n    // \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\n    if(machine) {\n        machine-&gt;brewCoffee();\n    } else {\n        std::cout &lt;&lt; \"\u200b\u5496\u5561\u673a\u200b\u574f\u200b\u4e86\u200b\uff0c\u200b\u4eca\u5929\u200b\u5f97\u200b\u53bb\u200b\u661f\u5df4\u514b\u200b\u4e86\u200b\" &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#-_1","title":"\u60ac\u7a7a\u200b\u6307\u9488\u200b - \u200b\u56fe\u4e66\u9986\u200b\u501f\u4e66\u200b\u6848\u4f8b","text":"<pre><code>void dangerousBookAccess() {\n    // \u200b\u5728\u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\u521b\u5efa\u200b\u4e00\u200b\u672c\u4e66\u200b\n    std::string* localBook = new std::string(\"C++\u200b\u7f16\u7a0b\u200b\u601d\u60f3\u200b\");\n\n    std::string* returnedBookPtr = localBook;  // \u200b\u83b7\u53d6\u200b\u6307\u5411\u200b\u8fd9\u200b\u672c\u4e66\u200b\u7684\u200b\u6307\u9488\u200b\n\n    delete localBook;  // \u200b\u56fe\u4e66\u9986\u200b\u9500\u6bc1\u200b\u4e86\u200b\u8fd9\u200b\u672c\u4e66\u200b\n\n    // \u200b\u4f46\u200breturnedBookPtr\u200b\u8fd8\u200b\u8ba4\u4e3a\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b\n    // std::cout &lt;&lt; \"\u200b\u6211\u8981\u200b\u8bfb\u200b\uff1a\" &lt;&lt; *returnedBookPtr &lt;&lt; std::endl;  // \u200b\u5371\u9669\u200b\u7684\u200b\u8bbf\u95ee\u200b!\n\n    // \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\n    returnedBookPtr = nullptr;  // \u200b\u786e\u8ba4\u4e66\u200b\u5df2\u200b\u4e0d\u200b\u5b58\u5728\u200b\n    if(returnedBookPtr) {\n        std::cout &lt;&lt; \"\u200b\u6211\u8981\u200b\u8bfb\u200b\uff1a\" &lt;&lt; *returnedBookPtr &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u200b\u4e66\u200b\u4e0d\u89c1\u200b\u4e86\u200b\uff0c\u200b\u9700\u8981\u200b\u91cd\u65b0\u200b\u501f\u200b\" &lt;&lt; std::endl;\n    }\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_40","title":"\u5f15\u7528\u200b\u5e38\u89c1\u200b\u9519\u8bef\u200b\u5b9e\u4f8b","text":""},{"location":"programming/cpp/noob/ref/#-_2","title":"\u8fd4\u56de\u200b\u5c40\u90e8\u53d8\u91cf\u200b\u5f15\u7528\u200b - \u200b\u65c5\u9986\u200b\u623f\u95f4\u200b\u6848\u4f8b","text":"<pre><code>std::string&amp; getTemporaryRoom() {\n    std::string room = \"\u200b\u8c6a\u534e\u200b\u5957\u623f\u200b\";  // \u200b\u521b\u5efa\u200b\u4e34\u65f6\u200b\u623f\u95f4\u200b\n    return room;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u8fd4\u56de\u200b\u4e34\u65f6\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5f15\u7528\u200b\n} // \u200b\u51fd\u6570\u200b\u7ed3\u675f\u200b\uff0croom\u200b\u88ab\u200b\u9500\u6bc1\u200b\n\nvoid checkIn() {\n    // std::string&amp; myRoom = getTemporaryRoom();  // myRoom\u200b\u5f15\u7528\u200b\u4e86\u200b\u4e0d\u200b\u5b58\u5728\u200b\u7684\u200b\u623f\u95f4\u200b\n    // std::cout &lt;&lt; \"\u200b\u5165\u4f4f\u200b\uff1a\" &lt;&lt; myRoom &lt;&lt; std::endl;  // \u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5d29\u6e83\u200b\n\n    // \u200b\u6b63\u786e\u200b\u505a\u6cd5\u200b\n    std::string myRoom = getTemporaryRoom();  // \u200b\u521b\u5efa\u200b\u526f\u672c\u200b\n    std::cout &lt;&lt; \"\u200b\u5165\u4f4f\u200b\uff1a\" &lt;&lt; myRoom &lt;&lt; std::endl;  // \u200b\u5b89\u5168\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#-_3","title":"\u521d\u59cb\u5316\u200b\u5f15\u7528\u200b\u540e\u200b\u4fee\u6539\u200b\u5176\u200b\u6307\u5411\u200b - \u200b\u5a5a\u59fb\u200b\u6848\u4f8b","text":"<pre><code>void relationshipMistake() {\n    std::string person1 = \"\u200b\u5f20\u4e09\u200b\";\n    std::string person2 = \"\u200b\u674e\u56db\u200b\";\n\n    // \u200b\u521b\u5efa\u200b\u5173\u7cfb\u200b\n    std::string&amp; spouse = person1;  // spouse\u200b\u5f15\u7528\u200bperson1\n\n    // \u200b\u5c1d\u8bd5\u200b\u6539\u53d8\u200b\u5f15\u7528\u200b\u5173\u7cfb\u200b\uff08\u200b\u4e0d\u200b\u53ef\u80fd\u200b\uff09\n    spouse = person2;  // \u200b\u8fd9\u200b\u4e0d\u662f\u200b\u8ba9\u200bspouse\u200b\u5f15\u7528\u200bperson2\uff0c\u200b\u800c\u662f\u200b\u590d\u5236\u200bperson2\u200b\u7684\u200b\u503c\u200b\u7ed9\u200bperson1\n\n    std::cout &lt;&lt; \"person1: \" &lt;&lt; person1 &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1aperson1: \u200b\u674e\u56db\u200b\n    std::cout &lt;&lt; \"person2: \" &lt;&lt; person2 &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1aperson2: \u200b\u674e\u56db\u200b\n    std::cout &lt;&lt; \"spouse: \" &lt;&lt; spouse &lt;&lt; std::endl;    // \u200b\u8f93\u51fa\u200b\uff1aspouse: \u200b\u674e\u56db\u200b\n\n    // spouse\u200b\u4ecd\u7136\u200b\u5f15\u7528\u200bperson1\n    person1 = \"\u200b\u5f20\u4e09\u200b\u6539\u540d\u200b\";\n    std::cout &lt;&lt; \"\u200b\u6539\u540d\u200b\u540e\u200bspouse: \" &lt;&lt; spouse &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a\u200b\u6539\u540d\u200b\u540e\u200bspouse: \u200b\u5f20\u4e09\u200b\u6539\u540d\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_41","title":"\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u6307\u5357","text":""},{"location":"programming/cpp/noob/ref/#_42","title":"\u9009\u62e9\u200b\u5f15\u7528\u200b\u7684\u200b\u573a\u666f","text":"<p>\u200b\u5229\u7528\u200b\u8d85\u5e02\u200b\u8d2d\u7269\u200b\u6765\u200b\u7406\u89e3\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\uff1a</p> <pre><code>// 1. \u200b\u5f53\u200b\u4f60\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u4f20\u5165\u200b\u7684\u200b\u53c2\u6570\u200b\u65f6\u200b\nvoid fillShoppingBag(std::vector&lt;std::string&gt;&amp; bag) {\n    bag.push_back(\"\u200b\u9762\u5305\u200b\");\n    bag.push_back(\"\u200b\u725b\u5976\u200b\");\n}\n\n// 2. \u200b\u5f53\u200b\u9700\u8981\u200b\u907f\u514d\u200b\u590d\u5236\u200b\u5927\u578b\u200b\u5bf9\u8c61\u200b\u65f6\u200b\nvoid checkoutLargeOrder(const std::vector&lt;std::string&gt;&amp; items) {  // \u200b\u4f7f\u7528\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\u907f\u514d\u200b\u590d\u5236\u200b\n    std::cout &lt;&lt; \"\u200b\u7ed3\u7b97\u200b\u4e86\u200b\" &lt;&lt; items.size() &lt;&lt; \"\u200b\u4ef6\u200b\u5546\u54c1\u200b\" &lt;&lt; std::endl;\n    // \u200b\u4e0d\u200b\u9700\u8981\u200b\u4fee\u6539\u200bitems\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u6309\u503c\u200b\u4f20\u9012\u200b\u4f1a\u200b\u590d\u5236\u200b\u6574\u4e2a\u200b\u8d2d\u7269\u8f66\u200b\n}\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nvoid shoppingExample() {\n    std::vector&lt;std::string&gt; myBag;\n    fillShoppingBag(myBag);  // \u200b\u4f20\u200b\u5f15\u7528\u200b\uff0c\u200b\u4fee\u6539\u200bmyBag\n    checkoutLargeOrder(myBag);  // \u200b\u4f20\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\uff0c\u200b\u4e0d\u200b\u590d\u5236\u200bmyBag\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_43","title":"\u9009\u62e9\u200b\u6307\u9488\u200b\u7684\u200b\u573a\u666f","text":"<p>\u200b\u4f7f\u7528\u200b\u533b\u9662\u200b\u75c5\u623f\u200b\u7ba1\u7406\u200b\u7406\u89e3\u200b\u4f55\u65f6\u200b\u4f7f\u7528\u200b\u6307\u9488\u200b\uff1a</p> <pre><code>struct Patient {\n    std::string name;\n    int roomNumber;\n\n    Patient(const std::string&amp; n) : name(n), roomNumber(0) {}\n};\n\n// 1. \u200b\u5f53\u200b\u5bf9\u8c61\u200b\u53ef\u80fd\u200b\u4e0d\u200b\u5b58\u5728\u200b\u65f6\u200b\nvoid checkPatientStatus(Patient* patient) {\n    if(!patient) {\n        std::cout &lt;&lt; \"\u200b\u6ca1\u6709\u200b\u6b64\u200b\u75c5\u4eba\u200b\u8bb0\u5f55\u200b\" &lt;&lt; std::endl;\n        return;\n    }\n    std::cout &lt;&lt; \"\u200b\u75c5\u4eba\u200b\" &lt;&lt; patient-&gt;name &lt;&lt; \"\u200b\u5728\u200b\" &lt;&lt; patient-&gt;roomNumber &lt;&lt; \"\u200b\u53f7\u200b\u623f\u95f4\u200b\" &lt;&lt; std::endl;\n}\n\n// 2. \u200b\u5f53\u200b\u9700\u8981\u200b\u6539\u53d8\u200b\u6307\u5411\u200b\u7684\u200b\u5bf9\u8c61\u200b\u65f6\u200b\nvoid transferPatient(Patient currentPatientPtr, Patient* newPatient) {\n    // \u200b\u8bb0\u5f55\u200b\u5f53\u524d\u200b\u75c5\u4eba\u200b\u51fa\u9662\u200b\n    if(*currentPatientPtr) {\n        std::cout &lt;&lt; (*currentPatientPtr)-&gt;name &lt;&lt; \"\u200b\u5df2\u200b\u51fa\u9662\u200b\" &lt;&lt; std::endl;\n    }\n\n    // \u200b\u6362\u6210\u200b\u65b0\u200b\u75c5\u4eba\u200b\n    *currentPatientPtr = newPatient;\n\n    if(newPatient) {\n        std::cout &lt;&lt; newPatient-&gt;name &lt;&lt; \"\u200b\u5df2\u200b\u5165\u9662\u200b\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u200b\u623f\u95f4\u200b\u73b0\u5728\u200b\u7a7a\u7740\u200b\" &lt;&lt; std::endl;\n    }\n}\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nvoid hospitalExample() {\n    Patient* roomOccupant = new Patient(\"\u200b\u5f20\u200b\u75c5\u4eba\u200b\");\n    roomOccupant-&gt;roomNumber = 101;\n\n    checkPatientStatus(roomOccupant);  // \u200b\u6709\u200b\u75c5\u4eba\u200b\n\n    Patient* newPatient = new Patient(\"\u200b\u674e\u200b\u75c5\u4eba\u200b\");\n    newPatient-&gt;roomNumber = 101;\n\n    transferPatient(&amp;roomOccupant, newPatient);  // \u200b\u8f6c\u6362\u200b\u75c5\u4eba\u200b\n\n    // \u200b\u6700\u540e\u200b\u522b\u5fd8\u4e86\u200b\u91ca\u653e\u200b\u5185\u5b58\u200b\n    delete newPatient;\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_44","title":"\u5b9e\u7528\u200b\u63d0\u793a\u200b\u4e0e\u200b\u6280\u5de7","text":""},{"location":"programming/cpp/noob/ref/#_45","title":"\u8d2d\u7269\u8f66\u200b\u66f4\u65b0\u200b\u6848\u4f8b","text":"<pre><code>class ShoppingCart {\nprivate:\n    std::vector&lt;std::string&gt; items;\n    double totalPrice;\n\npublic:\n    ShoppingCart() : totalPrice(0.0) {}\n\n    // \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u8fd4\u56de\u200b\u8d2d\u7269\u8f66\u200b\u5185\u90e8\u7ed3\u6784\u200b\u4ee5\u200b\u5141\u8bb8\u200b\u5916\u90e8\u200b\u4fee\u6539\u200b\n    std::vector&lt;std::string&gt;&amp; getItems() {\n        return items;\n    }\n\n    // \u200b\u4f7f\u7528\u200b\u5e38\u91cf\u200b\u5f15\u7528\u200b\u9632\u6b62\u200b\u4fee\u6539\u200b\n    const std::vector&lt;std::string&gt;&amp; viewItems() const {\n        return items;\n    }\n\n    // \u200b\u4f7f\u7528\u200b\u6307\u9488\u200b\u5b9e\u73b0\u200b\u53ef\u200b\u9009\u200b\u53c2\u6570\u200b\n    void addItem(const std::string&amp; item, double price, double* discount = nullptr) {\n        items.push_back(item);\n\n        if(discount &amp;&amp; *discount &gt; 0.0) {\n            totalPrice += price * (1.0 - *discount);\n            std::cout &lt;&lt; \"\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u6253\u6298\u200b\u5546\u54c1\u200b\uff1a\" &lt;&lt; item &lt;&lt; std::endl;\n        } else {\n            totalPrice += price;\n            std::cout &lt;&lt; \"\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u5546\u54c1\u200b\uff1a\" &lt;&lt; item &lt;&lt; std::endl;\n        }\n    }\n};\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nvoid shoppingCartExample() {\n    ShoppingCart cart;\n\n    // \u200b\u6dfb\u52a0\u200b\u4e00\u4e9b\u200b\u5546\u54c1\u200b\n    cart.addItem(\"\u200b\u82f9\u679c\u200b\", 5.0);\n\n    // \u200b\u6dfb\u52a0\u200b\u6253\u6298\u200b\u5546\u54c1\u200b\n    double discount = 0.2;  // 20%\u200b\u6298\u6263\u200b\n    cart.addItem(\"\u200b\u9999\u8549\u200b\", 4.0, &amp;discount);\n\n    // \u200b\u4f7f\u7528\u200b\u5f15\u7528\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u8d2d\u7269\u8f66\u200b\u5185\u5bb9\u200b\n    std::vector&lt;std::string&gt;&amp; items = cart.getItems();\n    items.push_back(\"\u200b\u6a59\u5b50\u200b\");\n\n    // \u200b\u67e5\u770b\u200b\u8d2d\u7269\u8f66\u200b\u4f46\u200b\u4e0d\u200b\u4fee\u6539\u200b\n    const std::vector&lt;std::string&gt;&amp; viewOnly = cart.viewItems();\n    std::cout &lt;&lt; \"\u200b\u8d2d\u7269\u8f66\u200b\u5546\u54c1\u200b\u6570\u91cf\u200b: \" &lt;&lt; viewOnly.size() &lt;&lt; std::endl;\n\n    // \u200b\u4e0d\u80fd\u200b\u901a\u8fc7\u200bviewOnly\u200b\u4fee\u6539\u200b\u8d2d\u7269\u8f66\u200b\n    // viewOnly.push_back(\"\u200b\u8461\u8404\u200b\");  // \u200b\u9519\u8bef\u200b: viewOnly\u200b\u662f\u200bconst\u200b\u5f15\u7528\u200b\n}\n</code></pre>"},{"location":"programming/cpp/noob/ref/#_46","title":"\u603b\u7ed3","text":"<p>\u200b\u5f15\u7528\u200b\u548c\u200b\u6307\u9488\u200b\u90fd\u200b\u662f\u200bC++\u200b\u4e2d\u200b\u95f4\u63a5\u200b\u8bbf\u95ee\u200b\u6570\u636e\u200b\u7684\u200b\u91cd\u8981\u200b\u673a\u5236\u200b\uff0c\u200b\u4f46\u200b\u5b83\u4eec\u200b\u7684\u200b\u8bbe\u8ba1\u200b\u76ee\u7684\u200b\u548c\u200b\u9002\u7528\u200b\u573a\u666f\u200b\u6709\u6240\u4e0d\u540c\u200b\uff1a</p> <ul> <li>\u200b\u5f15\u7528\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u7b80\u5355\u200b\u3001\u200b\u66f4\u200b\u5b89\u5168\u200b\u7684\u200b\u522b\u540d\u200b\u673a\u5236\u200b\uff0c\u200b\u9002\u5408\u200b\u5927\u591a\u6570\u200b\u53c2\u6570\u4f20\u9012\u200b\u548c\u200b\u8bbf\u95ee\u200b\u5df2\u200b\u5b58\u5728\u200b\u5bf9\u8c61\u200b\u7684\u200b\u573a\u666f\u200b</li> <li>\u200b\u6307\u9488\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u7075\u6d3b\u200b\u7684\u200b\u5185\u5b58\u200b\u8bbf\u95ee\u200b\u548c\u200b\u64cd\u4f5c\u200b\u673a\u5236\u200b\uff0c\u200b\u9002\u5408\u200b\u52a8\u6001\u5185\u5b58\u200b\u7ba1\u7406\u200b\u548c\u200b\u590d\u6742\u200b\u6570\u636e\u7ed3\u6784\u200b\u5b9e\u73b0\u200b</li> </ul> <p>\u200b\u751f\u6d3b\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u6bd4\u200b\uff1a</p> <ul> <li>\u200b\u5f15\u7528\u200b\u5c31\u200b\u50cf\u200b\u7ef0\u53f7\u200b\uff1a\u200b\u7b80\u5355\u200b\u6613\u7528\u200b\uff0c\u200b\u4f46\u200b\u4e00\u65e6\u200b\u786e\u5b9a\u200b\u4e0d\u80fd\u200b\u6539\u53d8\u200b</li> <li>\u200b\u6307\u9488\u200b\u5c31\u200b\u50cf\u200b\u5730\u5740\u200b\uff1a\u200b\u7075\u6d3b\u200b\u591a\u53d8\u200b\uff0c\u200b\u4f46\u200b\u9700\u8981\u200b\u5c0f\u5fc3\u200b\u4f7f\u7528\u200b</li> </ul> <p>\u200b\u4f5c\u4e3a\u200b\u521d\u5b66\u8005\u200b\uff0c\u200b\u5efa\u8bae\u200b:</p> <ol> <li>\u200b\u5148\u200b\u5145\u5206\u200b\u638c\u63e1\u200b\u5f15\u7528\u200b\u7684\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5b83\u4eec\u200b\u66f4\u200b\u5b89\u5168\u200b\u3001\u200b\u66f4\u200b\u7b80\u5355\u200b</li> <li>\u200b\u5728\u200b\u9700\u8981\u200b\u52a8\u6001\u5185\u5b58\u200b\u7ba1\u7406\u200b\u6216\u200b\u590d\u6742\u200b\u6570\u636e\u7ed3\u6784\u200b\u65f6\u200b\u5b66\u4e60\u200b\u4f7f\u7528\u200b\u6307\u9488\u200b</li> <li>\u200b\u8fdb\u9636\u200b\u540e\u200b\u5b66\u4e60\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\uff0c\u200b\u51cf\u8f7b\u200b\u624b\u52a8\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u7684\u200b\u8d1f\u62c5\u200b</li> <li>\u200b\u7f16\u5199\u200b\u4ee3\u7801\u200b\u65f6\u200b\u4f18\u5148\u200b\u8003\u8651\u200b\u5f15\u7528\u200b\uff0c\u200b\u4ec5\u200b\u5728\u200b\u786e\u5b9e\u200b\u9700\u8981\u200b\u6307\u9488\u200b\u7279\u6027\u200b\u65f6\u624d\u200b\u4f7f\u7528\u200b\u6307\u9488\u200b</li> </ol> <p>\u200b\u8bb0\u4f4f\u200b\uff1a\"\u200b\u7b80\u5355\u200b\u6027\u200b\u5bfc\u81f4\u200b\u53ef\u9760\u6027\u200b\"\u3002\u200b\u5728\u200b\u4e0d\u200b\u9700\u8981\u200b\u6307\u9488\u200b\u7075\u6d3b\u6027\u200b\u7684\u200b\u573a\u5408\u200b\uff0c\u200b\u5f15\u7528\u200b\u5f80\u5f80\u200b\u662f\u200b\u66f4\u597d\u200b\u7684\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"programming/cpp/noob/string/","title":"C++\u200b\u5b57\u7b26\u4e32\u200b\u64cd\u4f5c\u200b\u6559\u7a0b","text":""},{"location":"programming/cpp/noob/string/#_1","title":"\u524d\u8a00","text":"<p>\u200b\u6b22\u8fce\u200b\u6765\u5230\u200bC++\u200b\u5b57\u7b26\u4e32\u200b\u64cd\u4f5c\u200b\u6559\u7a0b\u200b\uff01\u200b\u672c\u200b\u6559\u7a0b\u200b\u5c06\u200b\u5e26\u200b\u60a8\u200b\u4ece\u200b\u57fa\u7840\u200b\u5230\u200b\u9ad8\u7ea7\u200b\uff0c\u200b\u7cfb\u7edf\u5730\u200b\u5b66\u4e60\u200bC++\u200b\u4e2d\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u6280\u672f\u200b\u3002\u200b\u6211\u4eec\u200b\u5c06\u200b\u6309\u7167\u200b\u5386\u53f2\u200b\u53d1\u5c55\u200b\u987a\u5e8f\u200b\uff0c\u200b\u4ece\u200bC\u200b\u8bed\u8a00\u200b\u7ee7\u627f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u64cd\u4f5c\u200b\u8bb2\u200b\u8d77\u200b\uff0c\u200b\u76f4\u5230\u200bC++20/23\u200b\u4e2d\u200b\u7684\u200b\u6700\u65b0\u200b\u7279\u6027\u200b\uff0c\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u4e30\u5bcc\u200b\u7684\u200b\u793a\u4f8b\u200b\u5e2e\u52a9\u200b\u60a8\u200b\u5feb\u901f\u200b\u638c\u63e1\u200b\u8fd9\u4e9b\u200b\u6280\u80fd\u200b\u3002</p>"},{"location":"programming/cpp/noob/string/#c_1","title":"C\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32","text":""},{"location":"programming/cpp/noob/string/#c_2","title":"\u4ec0\u4e48\u200b\u662f\u200bC\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32","text":"<p>\u200b\u5728\u200bC++\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u7ee7\u627f\u200b\u4e86\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u8868\u793a\u6cd5\u200b\uff1a\u200b\u4ee5\u200b\u7a7a\u5b57\u7b26\u200b('\\0')\u200b\u7ed3\u5c3e\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b\u3002</p> <pre><code>// \u200b\u521b\u5efa\u200bC\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u51e0\u79cd\u200b\u65b9\u5f0f\u200b\nchar str1[] = \"Hello\";         // \u200b\u7f16\u8bd1\u5668\u200b\u81ea\u52a8\u200b\u6dfb\u52a0\u200b'\\0'\nchar str2[6] = {'H', 'e', 'l', 'l', 'o', '\\0'};\nchar* str3 = \"World\";          // \u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\uff08C++11\u200b\u540e\u200b\u4e0d\u200b\u63a8\u8350\u200b\uff09\n</code></pre>"},{"location":"programming/cpp/noob/string/#_2","title":"\u57fa\u672c\u64cd\u4f5c\u200b\u51fd\u6570","text":"<p>C\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u64cd\u4f5c\u200b\u51fd\u6570\u200b\u90fd\u200b\u5728\u200b<code>&lt;cstring&gt;</code>\uff08\u200b\u6216\u200b\u4f20\u7edf\u200bC\u200b\u7684\u200b<code>&lt;string.h&gt;</code>\uff09\u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\uff1a</p>"},{"location":"programming/cpp/noob/string/#_3","title":"\u5b57\u7b26\u4e32\u200b\u957f\u5ea6","text":"<pre><code>#include &lt;cstring&gt;\n\nchar greeting[] = \"Hello\";\nsize_t length = strlen(greeting);  // \u200b\u8fd4\u56de\u200b5\uff08\u200b\u4e0d\u200b\u8ba1\u7b97\u200b\u7ed3\u675f\u7b26\u200b'\\0'\uff09\n</code></pre>"},{"location":"programming/cpp/noob/string/#_4","title":"\u5b57\u7b26\u4e32\u200b\u590d\u5236","text":"<pre><code>char source[] = \"Hello\";\nchar destination[10];\nstrcpy(destination, source);    // \u200b\u4e0d\u200b\u5b89\u5168\u200b\uff0c\u200b\u65e0\u200b\u8fb9\u754c\u200b\u68c0\u67e5\u200b\nstrncpy(destination, source, 9); // \u200b\u8f83\u200b\u5b89\u5168\u200b\uff0c\u200b\u590d\u5236\u200b\u6700\u200b\u591a\u200b9\u200b\u4e2a\u5b57\u7b26\u200b\ndestination[9] = '\\0';          // \u200b\u786e\u4fdd\u200b\u7ed3\u5c3e\u200b\u6709\u200b\u7a7a\u5b57\u7b26\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#_5","title":"\u5b57\u7b26\u4e32\u200b\u8fde\u63a5","text":"<pre><code>char str1[20] = \"Hello\";\nchar str2[] = \" World\";\nstrcat(str1, str2);      // str1\u200b\u53d8\u6210\u200b\"Hello World\"\nstrncat(str1, \"!\", 1);   // \u200b\u8f83\u200b\u5b89\u5168\u200b\uff0c\u200b\u8fde\u63a5\u200b\u6700\u200b\u591a\u200b1\u200b\u4e2a\u5b57\u7b26\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#_6","title":"\u5b57\u7b26\u4e32\u200b\u6bd4\u8f83","text":"<pre><code>char str1[] = \"apple\";\nchar str2[] = \"banana\";\nint result = strcmp(str1, str2);  // \u200b\u8fd4\u56de\u200b\u8d1f\u503c\u200b\uff0c\u200b\u56e0\u4e3a\u200bstr1\u200b\u5b57\u5178\u200b\u5e8f\u200b\u5c0f\u4e8e\u200bstr2\n</code></pre>"},{"location":"programming/cpp/noob/string/#_7","title":"\u5b57\u7b26\u4e32\u200b\u67e5\u627e","text":"<pre><code>char text[] = \"Hello World\";\nchar* ptr = strchr(text, 'o');    // \u200b\u67e5\u627e\u200b\u5b57\u7b26\u200b'o'\uff0c\u200b\u8fd4\u56de\u200b\u6307\u5411\u200b\u9996\u6b21\u200b\u51fa\u73b0\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6307\u9488\u200b\nchar* subPtr = strstr(text, \"lo\"); // \u200b\u67e5\u627e\u200b\u5b50\u4e32\u200b\"lo\"\uff0c\u200b\u8fd4\u56de\u200b\u6307\u5411\u200b\u5b50\u4e32\u200b\u4f4d\u7f6e\u200b\u7684\u200b\u6307\u9488\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#c_3","title":"C\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5c40\u9650\u6027","text":"<p>\u200b\u5b58\u5728\u200b\u7684\u200b\u95ee\u9898\u200b\uff1a</p> <ul> <li>\u200b\u7f13\u51b2\u533a\u200b\u6ea2\u51fa\u200b\u98ce\u9669\u200b\uff1a\u200b\u6ca1\u6709\u200b\u81ea\u52a8\u200b\u8fb9\u754c\u200b\u68c0\u67e5\u200b</li> <li>\u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b\u590d\u6742\u200b\uff1a\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5206\u914d\u200b\u548c\u200b\u91ca\u653e\u200b\u5185\u5b58\u200b</li> <li>\u200b\u64cd\u4f5c\u200b\u4e0d\u200b\u76f4\u89c2\u200b\uff1a\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u51fd\u6570\u200b\u800c\u200b\u975e\u200b\u8fd0\u7b97\u7b26\u200b</li> <li>\u200b\u6ca1\u6709\u200b\u5c01\u88c5\u200b\uff1a\u200b\u6570\u636e\u200b\u548c\u200b\u64cd\u4f5c\u200b\u5206\u79bb\u200b</li> </ul> <p>\u200b\u793a\u4f8b\u200b\uff1a\u200b\u7f13\u51b2\u533a\u200b\u6ea2\u51fa\u200b\u95ee\u9898\u200b</p> <pre><code>char smallBuffer[5];\nstrcpy(smallBuffer, \"This is too long\");  // \u200b\u5371\u9669\u200b\uff01\u200b\u4f1a\u200b\u6ea2\u51fa\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#stdstring","title":"std::string \u200b\u57fa\u7840","text":""},{"location":"programming/cpp/noob/string/#stdstring_1","title":"std::string \u200b\u4ecb\u7ecd","text":"<p>C++\u200b\u6807\u51c6\u200b\u5e93\u200b\u63d0\u4f9b\u200b\u7684\u200b<code>std::string</code>\u200b\u7c7b\u200b\uff08\u200b\u5728\u200b<code>&lt;string&gt;</code>\u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\uff09\u200b\u89e3\u51b3\u200b\u4e86\u200bC\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u8bb8\u591a\u200b\u95ee\u9898\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // \u200b\u521b\u5efa\u200bstring\u200b\u5bf9\u8c61\u200b\n    std::string greeting = \"Hello\";  // \u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u521b\u5efa\u200b\n    std::string empty;               // \u200b\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\n    std::string repeated(5, 'a');    // \u200b\u521b\u5efa\u200b\"aaaaa\"\n\n    std::cout &lt;&lt; greeting &lt;&lt; std::endl;      // Hello\n    std::cout &lt;&lt; repeated &lt;&lt; std::endl;      // aaaaa\n    std::cout &lt;&lt; empty.empty() &lt;&lt; std::endl; // 1 (true)\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_8","title":"\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"programming/cpp/noob/string/#_9","title":"\u5b57\u7b26\u4e32\u200b\u957f\u5ea6\u200b\u548c\u200b\u5bb9\u91cf","text":"<pre><code>std::string str = \"Hello World\";\nsize_t length = str.length();  // \u200b\u6216\u200bstr.size() - \u200b\u8fd4\u56de\u200b11\nbool isEmpty = str.empty();    // \u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u4e3a\u7a7a\u200b - false\nsize_t capacity = str.capacity(); // \u200b\u8fd4\u56de\u200b\u5f53\u524d\u200b\u5206\u914d\u200b\u7684\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u5927\u5c0f\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#_10","title":"\u8bbf\u95ee\u200b\u5b57\u7b26","text":"<pre><code>std::string str = \"Hello\";\nchar first = str[0];         // 'H' - \u200b\u4e0d\u200b\u68c0\u67e5\u200b\u8fb9\u754c\u200b\nchar last = str.at(4);       // 'o' - \u200b\u6709\u200b\u8fb9\u754c\u200b\u68c0\u67e5\u200b\uff0c\u200b\u8d8a\u754c\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\nchar front = str.front();    // 'H' - C++11\nchar back = str.back();      // 'o' - C++11\n</code></pre>"},{"location":"programming/cpp/noob/string/#_11","title":"\u4fee\u6539\u200b\u5b57\u7b26\u4e32","text":"<pre><code>std::string str = \"Hello\";\nstr += \" World\";           // \u200b\u8ffd\u52a0\u200b\uff0c\u200b\u73b0\u5728\u200bstr\u200b\u4e3a\u200b\"Hello World\"\nstr.append(\"!\");           // \u200b\u8ffd\u52a0\u200b\uff0c\u200b\u73b0\u5728\u200bstr\u200b\u4e3a\u200b\"Hello World!\"\nstr.push_back('!');        // \u200b\u6dfb\u52a0\u200b\u5355\u4e2a\u200b\u5b57\u7b26\u200b\uff0c\u200b\u73b0\u5728\u200bstr\u200b\u4e3a\u200b\"Hello World!!\"\n\nstr = \"Hello\";             // \u200b\u91cd\u65b0\u200b\u8d4b\u503c\u200b\nstr.insert(5, \" beautiful\"); // \u200b\u5728\u200b\u4f4d\u7f6e\u200b5\u200b\u63d2\u5165\u200b\uff0c\u200b\u73b0\u5728\u200bstr\u200b\u4e3a\u200b\"Hello beautiful\"\nstr.erase(5, 10);          // \u200b\u4ece\u200b\u4f4d\u7f6e\u200b5\u200b\u5f00\u59cb\u200b\u5220\u9664\u200b10\u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u6062\u590d\u200b\u5230\u200b\"Hello\"\nstr.replace(1, 2, \"i\");    // \u200b\u66ff\u6362\u200b\u4f4d\u7f6e\u200b1\u200b\u5f00\u59cb\u200b\u7684\u200b2\u200b\u4e2a\u5b57\u7b26\u200b\uff0c\u200b\u53d8\u4e3a\u200b\"Hillo\"\nstr.clear();               // \u200b\u6e05\u7a7a\u200b\u5b57\u7b26\u4e32\u200b\n</code></pre>"},{"location":"programming/cpp/noob/string/#_12","title":"\u5b57\u7b26\u4e32\u200b\u6bd4\u8f83","text":"<pre><code>std::string s1 = \"apple\";\nstd::string s2 = \"banana\";\n\nbool equal = (s1 == s2);             // false\nbool less = (s1 &lt; s2);               // true\uff0c\u200b\u5b57\u5178\u200b\u5e8f\u200b\u6bd4\u8f83\u200b\nint comparison = s1.compare(s2);     // \u200b\u8d1f\u503c\u200b\uff0cs1\u200b\u5c0f\u4e8e\u200bs2\n</code></pre>"},{"location":"programming/cpp/noob/string/#_13","title":"\u5b50\u4e32\u200b\u64cd\u4f5c","text":"<pre><code>std::string str = \"Hello World\";\n\n// \u200b\u63d0\u53d6\u200b\u5b50\u4e32\u200b\nstd::string sub = str.substr(6, 5);  // \u200b\u4ece\u200b\u4f4d\u7f6e\u200b6\u200b\u5f00\u59cb\u200b\uff0c\u200b\u957f\u5ea6\u200b5\uff1a\"World\"\nstd::string tail = str.substr(6);    // \u200b\u4ece\u200b\u4f4d\u7f6e\u200b6\u200b\u5230\u200b\u7ed3\u5c3e\u200b\uff1a\"World\"\n\n// \u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\nsize_t pos = str.find(\"World\");      // \u200b\u8fd4\u56de\u200b6\nsize_t notFound = str.find(\"C++\");   // \u200b\u8fd4\u56de\u200bstring::npos\n\n// \u200b\u67e5\u627e\u200b\u5b57\u7b26\u200b\npos = str.find_first_of(\"aeiou\");    // \u200b\u8fd4\u56de\u200b1 (e\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u97f3\u200b)\npos = str.find_last_of(\"aeiou\");     // \u200b\u8fd4\u56de\u200b7 (o\u200b\u662f\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u5143\u97f3\u200b)\n</code></pre>"},{"location":"programming/cpp/noob/string/#stdstring_2","title":"std::string \u200b\u8fdb\u9636\u200b\u64cd\u4f5c","text":""},{"location":"programming/cpp/noob/string/#_14","title":"\u5b57\u7b26\u4e32\u200b\u8f93\u5165\u8f93\u51fa","text":"<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::string name;\n\n    std::cout &lt;&lt; \"\u200b\u8bf7\u200b\u8f93\u5165\u60a8\u200b\u7684\u200b\u540d\u5b57\u200b: \";\n    std::cin &gt;&gt; name;  // \u200b\u8bfb\u53d6\u200b\u5230\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u4e3a\u6b62\u200b\n    std::cout &lt;&lt; \"\u200b\u60a8\u597d\u200b, \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; std::endl;\n\n    std::cin.ignore();  // \u200b\u5ffd\u7565\u200b\u4e4b\u524d\u200b\u8f93\u5165\u200b\u7f13\u51b2\u533a\u200b\u4e2d\u200b\u7684\u200b\u6362\u884c\u7b26\u200b\n\n    std::cout &lt;&lt; \"\u200b\u8bf7\u200b\u8f93\u5165\u60a8\u200b\u7684\u200b\u5168\u540d\u200b: \";\n    std::getline(std::cin, name);  // \u200b\u8bfb\u53d6\u200b\u6574\u884c\u200b\n    std::cout &lt;&lt; \"\u200b\u60a8\u597d\u200b, \" &lt;&lt; name &lt;&lt; \"!\" &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_15","title":"\u5b57\u7b26\u4e32\u200b\u6d41","text":"<pre><code>#include &lt;string&gt;\n#include &lt;sstream&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // \u200b\u5b57\u7b26\u4e32\u200b\u8f93\u51fa\u200b\u6d41\u200b\n    std::ostringstream oss;\n    oss &lt;&lt; \"\u200b\u5e74\u9f84\u200b: \" &lt;&lt; 25 &lt;&lt; \", \u200b\u8eab\u9ad8\u200b: \" &lt;&lt; 175.5;\n    std::string info = oss.str();\n    std::cout &lt;&lt; info &lt;&lt; std::endl;  // \u200b\u5e74\u9f84\u200b: 25, \u200b\u8eab\u9ad8\u200b: 175.5\n\n    // \u200b\u5b57\u7b26\u4e32\u200b\u8f93\u5165\u200b\u6d41\u200b\n    std::string data = \"123 456.7 \u200b\u6587\u672c\u200b\";\n    std::istringstream iss(data);\n    int a;\n    double b;\n    std::string c;\n    iss &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n    std::cout &lt;&lt; \"a=\" &lt;&lt; a &lt;&lt; \", b=\" &lt;&lt; b &lt;&lt; \", c=\" &lt;&lt; c &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_16","title":"\u5b57\u7b26\u4e32\u200b\u5206\u5272","text":"<p>C++\u200b\u6807\u51c6\u200b\u5e93\u200b\u6ca1\u6709\u200b\u76f4\u63a5\u200b\u63d0\u4f9b\u200b\u5b57\u7b26\u4e32\u200b\u5206\u5272\u200b\u51fd\u6570\u200b\uff0c\u200b\u4f46\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nstd::vector&lt;std::string&gt; split(const std::string&amp; s, char delimiter) {\n    std::vector&lt;std::string&gt; tokens;\n    std::string token;\n    std::istringstream tokenStream(s);\n\n    while (std::getline(tokenStream, token, delimiter)) {\n        if (!token.empty()) {\n            tokens.push_back(token);\n        }\n    }\n\n    return tokens;\n}\n\nint main() {\n    std::string text = \"apple,banana,orange,grape\";\n    std::vector&lt;std::string&gt; fruits = split(text, ',');\n\n    for (const auto&amp; fruit : fruits) {\n        std::cout &lt;&lt; fruit &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#c11","title":"C++11\u200b\u5b57\u7b26\u4e32\u200b\u65b0\u200b\u7279\u6027","text":"<p>C++11\u200b\u4e3a\u200b\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u5e26\u6765\u200b\u4e86\u200b\u8bb8\u591a\u200b\u5b9e\u7528\u200b\u7684\u200b\u589e\u5f3a\u200b\u529f\u80fd\u200b\u3002</p>"},{"location":"programming/cpp/noob/string/#_17","title":"\u79fb\u52a8\u200b\u8bed\u4e49","text":"<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;utility&gt;  // \u200b\u4e3a\u200bstd::move\n\nstd::string createLongString() {\n    std::string result(10000, 'X');  // \u200b\u521b\u5efa\u200b\u5927\u200b\u5b57\u7b26\u4e32\u200b\n    return result;  // \u200b\u8fd4\u56de\u503c\u200b\u4f18\u5316\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b\n}\n\nint main() {\n    // \u200b\u79fb\u52a8\u200b\u8d4b\u503c\u200b\n    std::string source = \"\u200b\u8fd9\u662f\u200b\u4e00\u4e2a\u200b\u5f88\u957f\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b...\";\n    std::string dest;\n    dest = std::move(source);  // \u200b\u79fb\u52a8\u200b\u800c\u200b\u975e\u200b\u590d\u5236\u200b\uff0csource\u200b\u73b0\u5728\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\n\n    std::cout &lt;&lt; \"dest: \" &lt;&lt; dest &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"source: \" &lt;&lt; source &lt;&lt; std::endl;  // source\u200b\u53ef\u80fd\u200b\u4e3a\u7a7a\u200b\n\n    // \u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u5927\u200b\u5b57\u7b26\u4e32\u200b\n    std::string large = createLongString();  // \u200b\u4f7f\u7528\u200b\u79fb\u52a8\u200b\u8bed\u4e49\u200b\u907f\u514d\u200b\u590d\u5236\u200b\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_18","title":"\u539f\u59cb\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf","text":"<p>\u200b\u4f7f\u7528\u200b<code>R\"()\"</code>\u200b\u8bed\u6cd5\u200b\u521b\u5efa\u200b\u539f\u59cb\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u907f\u514d\u200b\u5927\u91cf\u200b\u8f6c\u4e49\u5b57\u7b26\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;regex&gt;\n\nint main() {\n    // \u200b\u4f20\u7edf\u200b\u5b57\u7b26\u4e32\u200b\u4e2d\u200b\u7684\u200b\u8f6c\u4e49\u5e8f\u5217\u200b\n    std::string path1 = \"C:\\\\Program Files\\\\Some App\\\\file.txt\";\n\n    // \u200b\u539f\u59cb\u200b\u5b57\u7b26\u4e32\u200b - \u200b\u4e0d\u200b\u9700\u8981\u200b\u8f6c\u4e49\u200b\n    std::string path2 = R\"(C:\\Program Files\\Some App\\file.txt)\";\n\n    std::cout &lt;&lt; path1 &lt;&lt; std::endl;\n    std::cout &lt;&lt; path2 &lt;&lt; std::endl;\n\n    // \u200b\u5bf9\u200b\u6b63\u5219\u8868\u8fbe\u5f0f\u200b\u7279\u522b\u200b\u6709\u7528\u200b\n    std::string regexPattern = R\"(\\d{3}-\\d{2}-\\d{4})\";  // \u200b\u5339\u914d\u200bSSN\u200b\u683c\u5f0f\u200b\n    std::regex regexObj(regexPattern);\n\n    // \u200b\u4f7f\u7528\u200b\u5b9a\u754c\u7b26\u200b\u5904\u7406\u200b\u5305\u542b\u200b\u53f3\u200b\u62ec\u53f7\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\n    std::string code = R\"code(\n    if (x &gt; 0) {\n        std::cout &lt;&lt; \"x is positive\" &lt;&lt; std::endl;\n    }\n    )code\";\n\n    std::cout &lt;&lt; code &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_19","title":"\u6570\u503c\u200b\u8f6c\u6362\u200b\u51fd\u6570","text":"<p>C++11\u200b\u5f15\u5165\u200b\u4e86\u200b\u65b9\u4fbf\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u548c\u200b\u6570\u503c\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b\u51fd\u6570\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u200b\u6570\u503c\u200b\n    std::string numStr = \"42\";\n    int num = std::stoi(numStr);             // \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u200b\u6574\u6570\u200b\n\n    std::string floatStr = \"3.14159\";\n    double pi = std::stod(floatStr);         // \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u53cc\u200b\u7cbe\u5ea6\u200b\u6d6e\u70b9\u200b\n    float piFloat = std::stof(floatStr);     // \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u200b\u5355\u7cbe\u5ea6\u200b\u6d6e\u70b9\u200b\n\n    std::string bigNumStr = \"123456789012345\";\n    long long bigNum = std::stoll(bigNumStr); // \u200b\u5b57\u7b26\u4e32\u200b\u8f6c\u957f\u200b\u6574\u578b\u200b\n\n    // \u200b\u6570\u503c\u200b\u8f6c\u200b\u5b57\u7b26\u4e32\u200b\n    int age = 25;\n    std::string ageStr = std::to_string(age);\n\n    double value = 3.14159;\n    std::string valueStr = std::to_string(value);\n\n    std::cout &lt;&lt; \"\u200b\u6574\u6570\u200b: \" &lt;&lt; num &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u53cc\u200b\u7cbe\u5ea6\u200b: \" &lt;&lt; pi &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u5e74\u9f84\u200b\u5b57\u7b26\u4e32\u200b: \" &lt;&lt; ageStr &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u503c\u200b\u5b57\u7b26\u4e32\u200b: \" &lt;&lt; valueStr &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#c17","title":"C++17\u200b\u5b57\u7b26\u4e32\u200b\u89c6\u56fe","text":""},{"location":"programming/cpp/noob/string/#stdstring_view","title":"std::string_view \u200b\u4ecb\u7ecd","text":"<p>C++17\u200b\u5f15\u5165\u200b\u4e86\u200b<code>std::string_view</code>\uff08\u200b\u5728\u200b<code>&lt;string_view&gt;</code>\u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\uff09\uff1a\u200b\u4e00\u4e2a\u200b\u8f7b\u91cf\u7ea7\u200b\u7684\u200b\u3001\u200b\u975e\u200b\u62e5\u6709\u200b\u578b\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u5f15\u7528\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002</p> <pre><code>#include &lt;string&gt;\n#include &lt;string_view&gt;\n#include &lt;iostream&gt;\n\n// \u200b\u63a5\u53d7\u200bstring_view\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u907f\u514d\u200b\u5b57\u7b26\u4e32\u200b\u590d\u5236\u200b\nvoid printSubstring(std::string_view sv, size_t pos, size_t len) {\n    std::cout &lt;&lt; sv.substr(pos, len) &lt;&lt; std::endl;\n}\n\nint main() {\n    // \u200b\u4ece\u200b\u4e0d\u540c\u200b\u6765\u6e90\u200b\u521b\u5efa\u200bstring_view\n    std::string str = \"Hello World\";\n    std::string_view sv1 = str;              // \u200b\u4ece\u200bstd::string\u200b\u521b\u5efa\u200b\n    std::string_view sv2 = \"\u200b\u76f4\u63a5\u200b\u5b57\u9762\u200b\u91cf\u200b\";      // \u200b\u4ece\u200b\u5b57\u7b26\u4e32\u200b\u5b57\u9762\u200b\u91cf\u200b\u521b\u5efa\u200b\n    const char* cstr = \"C\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\";\n    std::string_view sv3 = cstr;             // \u200b\u4ece\u200bC\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u521b\u5efa\u200b\n\n    std::cout &lt;&lt; \"sv1: \" &lt;&lt; sv1 &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"sv2: \" &lt;&lt; sv2 &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"sv3: \" &lt;&lt; sv3 &lt;&lt; std::endl;\n\n    // \u200b\u57fa\u672c\u64cd\u4f5c\u200b\n    std::cout &lt;&lt; \"\u200b\u957f\u5ea6\u200b: \" &lt;&lt; sv1.length() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u7b2c\u4e00\u4e2a\u200b\u5b57\u7b26\u200b: \" &lt;&lt; sv1[0] &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"\u200b\u5b50\u200b\u5b57\u7b26\u4e32\u200b: \" &lt;&lt; sv1.substr(0, 5) &lt;&lt; std::endl;\n\n    // \u200b\u4f5c\u4e3a\u200b\u51fd\u6570\u53c2\u6570\u200b\n    printSubstring(str, 6, 5);        // \u200b\u4ece\u200bstring\n    printSubstring(\"Hello C++17\", 6, 6); // \u200b\u4ece\u200b\u5b57\u9762\u200b\u91cf\u200b\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#string_view-vs-string","title":"string_view vs string","text":"<p>\u200b\u4f18\u70b9\u200b\uff1a</p> <ul> <li>\u200b\u51cf\u5c11\u200b\u590d\u5236\u200b\uff1a\u200b\u4e0d\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u526f\u672c\u200b</li> <li>\u200b\u6027\u80fd\u200b\u66f4\u597d\u200b\uff1a\u200b\u5904\u7406\u200b\u53ea\u8bfb\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\u6548\u7387\u9ad8\u200b</li> <li>\u200b\u63a5\u53e3\u200b\u4e00\u81f4\u200b\uff1a\u200b\u8bb8\u591a\u200b\u64cd\u4f5c\u200b\u4e0e\u200b<code>std::string</code>\u200b\u76f8\u540c\u200b</li> </ul> <p>\u200b\u5c40\u9650\u6027\u200b\uff1a</p> <ul> <li>\u200b\u53ea\u8bfb\u200b\uff1a\u200b\u4e0d\u80fd\u200b\u4fee\u6539\u200b\u5b57\u7b26\u4e32\u200b\u5185\u5bb9\u200b</li> <li>\u200b\u751f\u547d\u5468\u671f\u200b\uff1a\u200b\u5fc5\u987b\u200b\u786e\u4fdd\u200b\u5f15\u7528\u200b\u7684\u200b\u6570\u636e\u200b\u5728\u200b<code>string_view</code>\u200b\u4f7f\u7528\u200b\u671f\u95f4\u200b\u6709\u6548\u200b</li> <li>\u200b\u65e0\u200b\u7ec8\u6b62\u7b26\u200b\uff1a\u200b\u4e0d\u200b\u4fdd\u8bc1\u200b\u6709\u7a7a\u200b\u7ec8\u6b62\u7b26\u200b'\\0'</li> </ul> <pre><code>#include &lt;string&gt;\n#include &lt;string_view&gt;\n#include &lt;iostream&gt;\n#include &lt;chrono&gt;\n\n// \u200b\u6d4b\u91cf\u200b\u6027\u80fd\u200b\u5dee\u5f02\u200b\nvoid performanceTest() {\n    const size_t iterations = 10000000;\n    std::string longStr(1000, 'x');\n\n    auto start = std::chrono::high_resolution_clock::now();\n\n    // \u200b\u4f7f\u7528\u200bstd::string\n    size_t count1 = 0;\n    for (size_t i = 0; i &lt; iterations; ++i) {\n        std::string s = longStr;\n        count1 += s.length();\n    }\n\n    auto mid = std::chrono::high_resolution_clock::now();\n\n    // \u200b\u4f7f\u7528\u200bstd::string_view\n    size_t count2 = 0;\n    for (size_t i = 0; i &lt; iterations; ++i) {\n        std::string_view sv = longStr;\n        count2 += sv.length();\n    }\n\n    auto end = std::chrono::high_resolution_clock::now();\n\n    auto string_time = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(mid - start).count();\n    auto view_time = std::chrono::duration_cast&lt;std::chrono::milliseconds&gt;(end - mid).count();\n\n    std::cout &lt;&lt; \"std::string \u200b\u8017\u65f6\u200b: \" &lt;&lt; string_time &lt;&lt; \" ms\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"std::string_view \u200b\u8017\u65f6\u200b: \" &lt;&lt; view_time &lt;&lt; \" ms\" &lt;&lt; std::endl;\n}\n\nint main() {\n    performanceTest();\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#string_view","title":"string_view \u200b\u6ce8\u610f\u4e8b\u9879","text":"<p>\u200b\u5c0f\u5fc3\u200b\u4f7f\u7528\u200b\u4ee5\u200b\u907f\u514d\u200b\u60ac\u5782\u200b\u5f15\u7528\u200b\uff1a</p> <pre><code>std::string_view dangerous() {\n    std::string local = \"\u200b\u4e34\u65f6\u200b\u5b57\u7b26\u4e32\u200b\";\n    return local;  // \u200b\u5371\u9669\u200b! local\u200b\u5728\u200b\u51fd\u6570\u200b\u7ed3\u675f\u200b\u65f6\u200b\u9500\u6bc1\u200b\n}\n\nvoid safe() {\n    std::string persistent = \"\u200b\u6301\u4e45\u200b\u5b57\u7b26\u4e32\u200b\";\n    std::string_view sv = persistent;  // \u200b\u5b89\u5168\u200b\uff0c\u200b\u53ea\u8981\u200bpersistent\u200b\u5b58\u6d3b\u200b\n\n    // \u200b\u5904\u7406\u200bsv...\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#c2023","title":"C++20/23\u200b\u6700\u65b0\u200b\u7279\u6027","text":""},{"location":"programming/cpp/noob/string/#stdformat-c20","title":"std::format (C++20)","text":"<p>C++20\u200b\u5f15\u5165\u200b\u4e86\u200b<code>std::format</code>\uff0c\u200b\u63d0\u4f9b\u200b\u7c7b\u4f3c\u200bPython\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u683c\u5f0f\u5316\u200b\u529f\u80fd\u200b\uff1a</p> <pre><code>#include &lt;format&gt;\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::string name = \"\u200b\u5f20\u4e09\u200b\";\n    int age = 30;\n    double height = 175.5;\n\n    // \u200b\u57fa\u672c\u200b\u683c\u5f0f\u5316\u200b\n    std::string result = std::format(\"\u200b\u59d3\u540d\u200b: {}, \u200b\u5e74\u9f84\u200b: {}, \u200b\u8eab\u9ad8\u200b: {}\", name, age, height);\n    std::cout &lt;&lt; result &lt;&lt; std::endl;\n\n    // \u200b\u6307\u5b9a\u200b\u53c2\u6570\u200b\u987a\u5e8f\u200b\n    std::string result2 = std::format(\"\u200b\u8eab\u9ad8\u200b: {2}, \u200b\u59d3\u540d\u200b: {0}, \u200b\u5e74\u9f84\u200b: {1}\", name, age, height);\n    std::cout &lt;&lt; result2 &lt;&lt; std::endl;\n\n    // \u200b\u683c\u5f0f\u200b\u8bf4\u660e\u7b26\u200b\n    std::string result3 = std::format(\"\u200b\u59d3\u540d\u200b: {:10}|\u200b\u4ef7\u683c\u200b: {:8.2f}|\u200b\u6570\u91cf\u200b: {:04d}\", \"\u200b\u82f9\u679c\u200b\", 5.2, 12);\n    std::cout &lt;&lt; result3 &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#c23","title":"C++23\u200b\u5b57\u7b26\u4e32\u200b\u65b0\u200b\u65b9\u6cd5","text":"<p>C++23\u200b\u4e3a\u200b<code>std::string</code>\u200b\u548c\u200b<code>std::string_view</code>\u200b\u6dfb\u52a0\u200b\u4e86\u200b\u51e0\u4e2a\u200b\u5b9e\u7528\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    std::string str = \"Hello World\";\n\n    // contains\u200b\u65b9\u6cd5\u200b\u68c0\u67e5\u200b\u662f\u5426\u200b\u5305\u542b\u200b\u5b50\u4e32\u200b\n    bool has_hello = str.contains(\"Hello\");  // true\n    std::cout &lt;&lt; \"Contains 'Hello': \" &lt;&lt; std::boolalpha &lt;&lt; has_hello &lt;&lt; std::endl;\n\n    // starts_with\u200b\u68c0\u67e5\u200b\u524d\u7f00\u200b\n    bool starts = str.starts_with(\"Hello\");  // true\n    std::cout &lt;&lt; \"Starts with 'Hello': \" &lt;&lt; starts &lt;&lt; std::endl;\n\n    // ends_with\u200b\u68c0\u67e5\u200b\u540e\u7f00\u200b\n    bool ends = str.ends_with(\"World\");  // true\n    std::cout &lt;&lt; \"Ends with 'World': \" &lt;&lt; ends &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#cc","title":"C\u200b\u4e0e\u200bC++\u200b\u5b57\u7b26\u4e32\u200b\u5bf9\u6bd4","text":""},{"location":"programming/cpp/noob/string/#cc_1","title":"C\u200b\u98ce\u683c\u200b\u4e0e\u200bC++\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u533a\u522b","text":"\u7279\u6027\u200b C\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b (char[]) C++ std::string C++ std::string_view \u200b\u5b9a\u4e49\u200b <code>char str[20] = \"Hello\";</code> <code>std::string str = \"Hello\";</code> <code>std::string_view sv = \"Hello\";</code> \u200b\u5185\u5b58\u200b\u7ba1\u7406\u200b \u200b\u624b\u52a8\u200b\uff08\u200b\u56fa\u5b9a\u200b\u5927\u5c0f\u200b\uff09 \u200b\u81ea\u52a8\u200b\uff08\u200b\u52a8\u6001\u200b\u5927\u5c0f\u200b\uff09 \u200b\u65e0\u200b\u6240\u6709\u6743\u200b\uff08\u200b\u5f15\u7528\u200b\u73b0\u6709\u200b\u5185\u5b58\u200b\uff09 \u200b\u5927\u5c0f\u200b\u8c03\u6574\u200b \u200b\u4e0d\u53ef\u200b\u8c03\u6574\u200b\uff08\u200b\u9700\u8981\u200b\u65b0\u200b\u6570\u7ec4\u200b\uff09 \u200b\u81ea\u52a8\u200b\u8c03\u6574\u200b \u200b\u4e0d\u53ef\u200b\u8c03\u6574\u200b\uff08\u200b\u53ea\u8bfb\u200b\u89c6\u56fe\u200b\uff09 \u200b\u957f\u5ea6\u200b\u83b7\u53d6\u200b <code>strlen(str)</code> <code>str.length()</code> \u200b\u6216\u200b <code>str.size()</code> <code>sv.length()</code> \u200b\u6216\u200b <code>sv.size()</code> \u200b\u8fde\u63a5\u200b <code>strcat(dest, src)</code> <code>str1 + str2</code> \u200b\u6216\u200b <code>str1.append(str2)</code> \u200b\u4e0d\u200b\u652f\u6301\u200b\uff08\u200b\u53ea\u8bfb\u200b\uff09 \u200b\u590d\u5236\u200b <code>strcpy(dest, src)</code> <code>str1 = str2</code> <code>sv = str</code> \u200b\u6bd4\u8f83\u200b <code>strcmp(s1, s2)</code> <code>s1 == s2</code>, <code>s1 &lt; s2</code> \u200b\u7b49\u200b <code>sv1 == sv2</code>, <code>sv1 &lt; sv2</code> \u200b\u7b49\u200b \u200b\u5b50\u4e32\u200b\u63d0\u53d6\u200b \u200b\u624b\u52a8\u200b\u590d\u5236\u200b\u5b57\u7b26\u200b <code>str.substr(pos, len)</code> <code>sv.substr(pos, len)</code> \u200b\u4fee\u6539\u200b \u200b\u76f4\u63a5\u200b\u901a\u8fc7\u200b\u7d22\u5f15\u200b \u200b\u591a\u79cd\u200b\u65b9\u6cd5\u200b\uff08insert, replace\u200b\u7b49\u200b\uff09 \u200b\u4e0d\u200b\u652f\u6301\u200b\uff08\u200b\u53ea\u8bfb\u200b\uff09 \u200b\u67e5\u627e\u200b <code>strchr</code>, <code>strstr</code> <code>find</code>, <code>find_first_of</code> \u200b\u7b49\u200b \u200b\u540c\u200bstd::string \u200b\u5b89\u5168\u6027\u200b \u200b\u4f4e\u200b\uff08\u200b\u5bb9\u6613\u200b\u6ea2\u51fa\u200b\uff09 \u200b\u9ad8\u200b\uff08\u200b\u81ea\u52a8\u200b\u8fb9\u754c\u200b\u68c0\u67e5\u200b\uff09 \u200b\u4e2d\u200b\uff08\u200b\u53ea\u8bfb\u200b\u4f46\u200b\u6ce8\u610f\u200b\u751f\u547d\u5468\u671f\u200b\uff09 \u200b\u6027\u80fd\u200b \u200b\u9ad8\u200b\uff08\u200b\u76f4\u63a5\u200b\u5185\u5b58\u200b\u64cd\u4f5c\u200b\uff09 \u200b\u4e2d\u200b\uff08\u200b\u989d\u5916\u200b\u5f00\u9500\u200b\uff09 \u200b\u9ad8\u200b\uff08\u200b\u65e0\u200b\u590d\u5236\u200b\u5f00\u9500\u200b\uff09 C++11\u200b\u6570\u503c\u200b\u8f6c\u6362\u200b \u200b\u9700\u8981\u200b<code>atoi</code>, <code>strtol</code>\u200b\u7b49\u200b <code>stoi</code>, <code>stod</code>, <code>to_string</code>\u200b\u7b49\u200b \u200b\u9700\u5148\u200b\u8f6c\u4e3a\u200bstring C++20\u200b\u683c\u5f0f\u5316\u200b \u200b\u9700\u8981\u200b<code>sprintf</code> \u200b\u4f7f\u7528\u200b<code>std::format</code> \u200b\u4f7f\u7528\u200b<code>std::format</code>"},{"location":"programming/cpp/noob/string/#_20","title":"\u5b9e\u6218\u200b\u6280\u5de7\u200b\u4e0e\u200b\u6700\u4f73\u200b\u5b9e\u8df5","text":""},{"location":"programming/cpp/noob/string/#_21","title":"\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u6280\u5de7","text":"<p>\u200b\u5b57\u7b26\u4e32\u200b\u62fc\u63a5\u200b\u7684\u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b</p> <pre><code>// \u200b\u4f4e\u6548\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u91cd\u590d\u200b\u7684\u200b+\u200b\u64cd\u4f5c\u200b\u5bfc\u81f4\u200b\u591a\u6b21\u200b\u5206\u914d\u5185\u5b58\u200b\nstd::string buildMessage(const std::vector&lt;std::string&gt;&amp; words) {\n    std::string result;\n    for (const auto&amp; word : words) {\n        result = result + word + \" \";  // \u200b\u6bcf\u6b21\u200b\u5faa\u73af\u200b\u90fd\u200b\u521b\u5efa\u200b\u65b0\u200b\u5b57\u7b26\u4e32\u200b\n    }\n    return result;\n}\n\n// \u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b1\uff1a\u200b\u4f7f\u7528\u200b+=\u200b\u64cd\u4f5c\u7b26\u200b\nstd::string buildMessageBetter(const std::vector&lt;std::string&gt;&amp; words) {\n    std::string result;\n    for (const auto&amp; word : words) {\n        result += word;\n        result += \" \";  // \u200b\u51cf\u5c11\u200b\u5185\u5b58\u200b\u5206\u914d\u200b\u6b21\u6570\u200b\n    }\n    return result;\n}\n\n// \u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b2\uff1a\u200b\u4f7f\u7528\u200bstd::ostringstream\nstd::string buildMessageStream(const std::vector&lt;std::string&gt;&amp; words) {\n    std::ostringstream oss;\n    for (const auto&amp; word : words) {\n        oss &lt;&lt; word &lt;&lt; \" \";\n    }\n    return oss.str();\n}\n\n// \u200b\u9ad8\u6548\u200b\u65b9\u5f0f\u200b3\uff1a\u200b\u9884\u200b\u5206\u914d\u5185\u5b58\u200b\nstd::string buildMessageReserve(const std::vector&lt;std::string&gt;&amp; words) {\n    // \u200b\u8ba1\u7b97\u200b\u9700\u8981\u200b\u7684\u200b\u603b\u957f\u5ea6\u200b\n    size_t totalLength = 0;\n    for (const auto&amp; word : words) {\n        totalLength += word.length() + 1;  // +1\u200b\u4e3a\u200b\u7a7a\u683c\u200b\n    }\n\n    std::string result;\n    result.reserve(totalLength);  // \u200b\u9884\u200b\u5206\u914d\u5185\u5b58\u200b\n\n    for (const auto&amp; word : words) {\n        result += word + \" \";\n    }\n\n    return result;\n}\n</code></pre> <p>\u200b\u5927\u5c0f\u5199\u200b\u8f6c\u6362\u200b</p> <pre><code>#include &lt;string&gt;\n#include &lt;algorithm&gt;\n#include &lt;cctype&gt;\n#include &lt;iostream&gt;\n\n// \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5927\u5199\u200b\nstd::string toUpper(std::string s) {\n    std::transform(s.begin(), s.end(), s.begin(),\n                   [](unsigned char c) { return std::toupper(c); });\n    return s;\n}\n\n// \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u5c0f\u5199\u200b\nstd::string toLower(std::string s) {\n    std::transform(s.begin(), s.end(), s.begin(),\n                   [](unsigned char c) { return std::tolower(c); });\n    return s;\n}\n\nint main() {\n    std::string text = \"Hello World\";\n    std::cout &lt;&lt; toUpper(text) &lt;&lt; std::endl;  // HELLO WORLD\n    std::cout &lt;&lt; toLower(text) &lt;&lt; std::endl;  // hello world\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#unicode","title":"\u4e2d\u6587\u200b\u548c\u200bUnicode\u200b\u5904\u7406","text":"<p>\u200b\u5904\u7406\u200b\u4e2d\u6587\u200b\u548c\u200bUnicode\u200b\u5b57\u7b26\u4e32\u200b\u9700\u8981\u200b\u7279\u522b\u200b\u6ce8\u610f\u200b\u7f16\u7801\u200b\u95ee\u9898\u200b\uff1a</p> <pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main() {\n    // UTF-8\u200b\u7f16\u7801\u200b\u7684\u200b\u4e2d\u6587\u200b\u5b57\u7b26\u4e32\u200b\n    std::string chinese = \"\u200b\u4f60\u597d\u200b\uff0c\u200b\u4e16\u754c\u200b\uff01\";\n\n    // \u200b\u6ce8\u610f\u200b\uff1asize()\u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b\u5b57\u8282\u6570\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5b57\u7b26\u200b\u6570\u200b\n    std::cout &lt;&lt; \"\u200b\u5b57\u8282\u6570\u200b: \" &lt;&lt; chinese.size() &lt;&lt; std::endl;\n\n    // \u200b\u4f7f\u7528\u200bC++11\u200b\u7684\u200bu8\u3001u\u3001U\u200b\u524d\u7f00\u200b\n    const char* u8str = u8\"UTF-8\u200b\u5b57\u7b26\u4e32\u200b\";        // UTF-8\u200b\u7f16\u7801\u200b\n    const char16_t* u16str = u\"UTF-16\u200b\u5b57\u7b26\u4e32\u200b\";   // UTF-16\u200b\u7f16\u7801\u200b\n    const char32_t* u32str = U\"UTF-32\u200b\u5b57\u7b26\u4e32\u200b\";   // UTF-32\u200b\u7f16\u7801\u200b\n\n    // C++20\u200b\u5f15\u5165\u200b\u4e86\u200bchar8_t\u200b\u7c7b\u578b\u200b\n#if __cplusplus &gt; 201703L\n    const char8_t* cpp20_u8str = u8\"C++20\u200b\u7684\u200bUTF-8\u200b\u5b57\u7b26\u4e32\u200b\";\n#endif\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/noob/string/#_22","title":"\u4f7f\u7528\u200b\u5efa\u8bae","text":"<ol> <li>\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u7c7b\u578b\u200b</li> <li>\u200b\u5bf9\u4e8e\u200b\u53ea\u8bfb\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b<code>std::string_view</code></li> <li>\u200b\u9700\u8981\u200b\u4fee\u6539\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\uff0c\u200b\u4f7f\u7528\u200b<code>std::string</code></li> <li> <p>\u200b\u63a5\u53e3\u200b\u8bbe\u8ba1\u200b\u65f6\u200b\uff0c\u200b\u8003\u8651\u200b\u540c\u65f6\u200b\u652f\u6301\u200b<code>std::string</code>\u200b\u548c\u200b<code>std::string_view</code></p> </li> <li> <p>\u200b\u907f\u514d\u200bC\u200b\u98ce\u683c\u200b\u5b57\u7b26\u4e32\u200b\u7684\u200b\u5e38\u89c1\u200b\u9519\u8bef\u200b</p> </li> <li>\u200b\u603b\u662f\u200b\u68c0\u67e5\u200b\u7f13\u51b2\u533a\u200b\u5927\u5c0f\u200b</li> <li>\u200b\u4f7f\u7528\u200b<code>strncpy</code>\u200b\u800c\u200b\u975e\u200b<code>strcpy</code>\uff0c\u200b\u4f7f\u7528\u200b<code>strncat</code>\u200b\u800c\u200b\u975e\u200b<code>strcat</code></li> <li> <p>\u200b\u786e\u4fdd\u200b\u5b57\u7b26\u4e32\u200b\u6b63\u786e\u200b\u7ec8\u6b62\u200b</p> </li> <li> <p>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\u6280\u5de7\u200b</p> </li> <li>\u200b\u4f7f\u7528\u200b<code>reserve()</code>\u200b\u9884\u200b\u5206\u914d\u5185\u5b58\u200b</li> <li>\u200b\u5bf9\u200b\u9891\u7e41\u200b\u4fee\u6539\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u8003\u8651\u200b\u4f7f\u7528\u200b<code>std::stringstream</code></li> <li>\u200b\u4f20\u9012\u200b\u5927\u200b\u5b57\u7b26\u4e32\u200b\u65f6\u200b\u4f7f\u7528\u200bconst\u200b\u5f15\u7528\u200b\u6216\u200bstring_view</li> </ol>"},{"location":"programming/cpp/noob/string/#_23","title":"\u603b\u7ed3","text":"<p>C++\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u529f\u80fd\u200b\u968f\u7740\u200b\u8bed\u8a00\u200b\u6807\u51c6\u200b\u7684\u200b\u53d1\u5c55\u200b\u4e0d\u65ad\u200b\u589e\u5f3a\u200b\uff0c\u200b\u4ece\u200b\u6700\u521d\u200b\u7ee7\u627f\u200b\u81ea\u200bC\u200b\u8bed\u8a00\u200b\u7684\u200b\u5b57\u7b26\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5230\u200b\u73b0\u4ee3\u200b\u7684\u200b<code>std::string</code>\u3001<code>std::string_view</code>\u200b\u548c\u200b<code>std::format</code>\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u5b89\u5168\u200b\u3001\u200b\u66f4\u200b\u9ad8\u6548\u200b\u3001\u200b\u66f4\u200b\u7075\u6d3b\u200b\u7684\u200b\u5b57\u7b26\u4e32\u200b\u5904\u7406\u200b\u65b9\u6848\u200b\u3002</p>"},{"location":"programming/cpp/number/bit_fields/","title":"\u4f4d\u57df\u200b\uff08Bit Fields\uff09","text":"<p>\u200b\u4f4d\u57df\u200b\uff08Bit Fields\uff09\u200b\u662f\u200b C \u200b\u548c\u200b C++\u200b\u4e2d\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ed3\u6784\u200b\u4f53\u4e2d\u200b\u5b9a\u4e49\u200b\u5177\u6709\u200b\u7279\u5b9a\u200b\u4f4d\u6570\u200b\u7684\u200b\u53d8\u91cf\u200b\u3002\u200b\u4f4d\u57df\u200b\u5141\u8bb8\u200b\u5f00\u53d1\u8005\u200b\u7cbe\u786e\u200b\u63a7\u5236\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u7684\u200b\u4f7f\u7528\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b\u5185\u5b58\u200b\u53d7\u9650\u200b\u7684\u200b\u5d4c\u5165\u5f0f\u200b\u7cfb\u7edf\u200b\u4e2d\u200b\u3002</p>"},{"location":"programming/cpp/number/bit_fields/#_1","title":"\u4f4d\u57df\u200b\u8bed\u6cd5","text":"<p>\u200b\u5728\u200b C \u200b\u548c\u200b C++\u200b\u4e2d\u200b\uff0c\u200b\u4f4d\u57df\u200b\u901a\u5e38\u200b\u5b9a\u4e49\u200b\u5728\u200b\u7ed3\u6784\u200b\u4f53\u5185\u200b\uff0c\u200b\u57fa\u672c\u200b\u8bed\u6cd5\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>struct BitField {\n    unsigned int field1 : n;  // n\u200b\u662f\u200b\u4f4d\u6570\u200b\uff0c\u200b\u901a\u5e38\u200b\u7528\u200bunsigned\u200b\u7c7b\u578b\u200b\n    unsigned int field2 : m;  // \u200b\u5176\u4ed6\u200b\u5b57\u200b\u6bb5\u200b\n    // ...\n};\n</code></pre>"},{"location":"programming/cpp/number/bit_fields/#_2","title":"\u4f4d\u57df\u200b\u7684\u200b\u57fa\u672c\u200b\u7279\u6027","text":"<ul> <li>\u200b\u4f4d\u6570\u200b\u5b9a\u4e49\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u7528\u200b\u5192\u53f7\u200b\u540e\u200b\u8ddf\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\u6765\u200b\u6307\u5b9a\u200b\u5b57\u200b\u6bb5\u200b\u5360\u7528\u200b\u7684\u200b\u4f4d\u6570\u200b\u3002</li> <li>\u200b\u6570\u636e\u7c7b\u578b\u200b\uff1a\u200b\u901a\u5e38\u200b\u4f7f\u7528\u200b<code>unsigned int</code>\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>signed int</code>\u200b\u548c\u200b\u5176\u4ed6\u200b\u6574\u578b\u200b\u3002</li> <li>\u200b\u5bf9\u9f50\u200b\u95ee\u9898\u200b\uff1a\u200b\u4f4d\u57df\u200b\u7684\u200b\u5e03\u5c40\u200b\u4f9d\u8d56\u4e8e\u200b\u7f16\u8bd1\u5668\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d7\u5230\u200b\u5bf9\u9f50\u200b\u548c\u200b\u586b\u5145\u200b\u7684\u200b\u5f71\u54cd\u200b\u3002</li> <li>\u200b\u8de8\u5e73\u53f0\u200b\u95ee\u9898\u200b\uff1a\u200b\u4e0d\u540c\u200b\u7f16\u8bd1\u5668\u200b\u5bf9\u4f4d\u200b\u57df\u200b\u7684\u200b\u5e03\u5c40\u200b\u53ef\u80fd\u200b\u4e0d\u540c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u79fb\u690d\u200b\u65f6\u200b\u9700\u8c28\u614e\u200b\u3002</li> </ul>"},{"location":"programming/cpp/number/bit_fields/#_3","title":"\u793a\u4f8b","text":""},{"location":"programming/cpp/number/bit_fields/#1","title":"\u793a\u4f8b\u200b 1\uff1a\u200b\u57fa\u672c\u200b\u4f4d\u57df","text":"<pre><code>#include &lt;stdio.h&gt;\n\nstruct Example {\n    unsigned int a : 3;  // 3\u200b\u4f4d\u200b\uff0c\u200b\u503c\u200b\u8303\u56f4\u200b\uff1a0-7\n    unsigned int b : 5;  // 5\u200b\u4f4d\u200b\uff0c\u200b\u503c\u200b\u8303\u56f4\u200b\uff1a0-31\n    unsigned int c : 10; // 10\u200b\u4f4d\u200b\uff0c\u200b\u503c\u200b\u8303\u56f4\u200b\uff1a0-1023\n};\n\nint main() {\n    struct Example ex;\n    ex.a = 5;  // \u200b\u5408\u6cd5\u200b\n    ex.b = 15; // \u200b\u5408\u6cd5\u200b\n    ex.c = 500; // \u200b\u5408\u6cd5\u200b\n\n    printf(\"a: %u, b: %u, c: %u\\n\", ex.a, ex.b, ex.c);\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/bit_fields/#2","title":"\u793a\u4f8b\u200b 2\uff1a\u200b\u4f4d\u57df\u200b\u4e2d\u200b\u7684\u200b\u4f4d\u5b57\u6bb5\u200b\u5bf9\u9f50","text":"<pre><code>#include &lt;stdio.h&gt;\n\nstruct Aligned {\n    unsigned int a : 4;   // 4\u200b\u4f4d\u200b\n    unsigned int b : 4;   // 4\u200b\u4f4d\u200b\n    unsigned int c : 8;   // 8\u200b\u4f4d\u200b\n};\n\nstruct Misaligned {\n    unsigned int a : 8;   // 8\u200b\u4f4d\u200b\n    unsigned int : 0;      // \u200b\u5f3a\u5236\u200b\u6362\u884c\u200b\uff0c\u200b\u5f00\u59cb\u200b\u65b0\u200b\u7684\u200b\u5b57\u200b\n    unsigned int b : 8;    // 8\u200b\u4f4d\u200b\n};\n\nint main() {\n    printf(\"Size of Aligned struct: %zu bytes\\n\", sizeof(struct Aligned));\n    printf(\"Size of Misaligned struct: %zu bytes\\n\", sizeof(struct Misaligned));\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/bit_fields/#3","title":"\u793a\u4f8b\u200b 3\uff1a\u200b\u8de8\u5e73\u53f0\u200b\u7684\u200b\u6ce8\u610f\u4e8b\u9879","text":"<p>\u200b\u5728\u200b\u4e0d\u540c\u200b\u7684\u200b\u7f16\u8bd1\u5668\u200b\u4e2d\u200b\uff0c\u200b\u4f4d\u57df\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6709\u200b\u4e0d\u540c\u200b\u7684\u200b\u5e03\u5c40\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u4e3a\u4e86\u200b\u4fdd\u8bc1\u200b\u4ee3\u7801\u200b\u7684\u200b\u53ef\u79fb\u690d\u6027\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5982\u4e0b\u200b\u65b9\u5f0f\u200b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nstruct PortableBitField {\n    unsigned int a : 1;  // 1\u200b\u4f4d\u200b\n    unsigned int b : 1;  // 1\u200b\u4f4d\u200b\n    unsigned int c : 1;  // 1\u200b\u4f4d\u200b\n    unsigned int d : 5;  // 5\u200b\u4f4d\u200b\n    unsigned int e : 4;  // 4\u200b\u4f4d\u200b\n    unsigned int f : 3;  // 3\u200b\u4f4d\u200b\n};\n\nint main() {\n    struct PortableBitField pbf = {0, 1, 0, 15, 3, 7};\n    printf(\"a: %u, b: %u, c: %u, d: %u, e: %u, f: %u\\n\", pbf.a, pbf.b, pbf.c, pbf.d, pbf.e, pbf.f);\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/bit_fields/#4","title":"\u793a\u4f8b\u200b 4\uff1a\u200b\u679a\u4e3e\u200b\u4e0e\u200b\u4f4d\u57df\u200b\u7ed3\u5408","text":"<p>\u200b\u6709\u65f6\u200b\u4f4d\u57df\u200b\u4f1a\u200b\u4e0e\u200b\u679a\u4e3e\u200b\u7c7b\u578b\u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4fbf\u4e8e\u200b\u8868\u793a\u200b\u7279\u5b9a\u200b\u7684\u200b\u72b6\u6001\u200b\u6216\u200b\u9009\u9879\u200b\u3002\u200b\u4f8b\u5982\u200b\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nenum Status { OFF, ON, ERROR };\n\nstruct Device {\n    enum Status status : 2;  // 2\u200b\u4f4d\u200b\u72b6\u6001\u200b\n    unsigned int errorCode : 6;  // 6\u200b\u4f4d\u200b\u9519\u8bef\u4ee3\u7801\u200b\n};\n\nint main() {\n    struct Device dev;\n    dev.status = ON; // \u200b\u8d4b\u503c\u200b\u4e3a\u200b1\n    dev.errorCode = 5; // \u200b\u8d4b\u503c\u200b\u4e3a\u200b5\n\n    printf(\"Status: %u, Error Code: %u\\n\", dev.status, dev.errorCode);\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/bit_fields/#_4","title":"\u603b\u7ed3","text":"<p>\u200b\u4f4d\u57df\u200b\u5728\u200b C \u200b\u548c\u200b C++\u200b\u4e2d\u662f\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u7cbe\u786e\u200b\u63a7\u5236\u200b\u5185\u5b58\u200b\u7684\u200b\u4f7f\u7528\u200b\u3002\u200b\u901a\u8fc7\u200b\u5408\u7406\u200b\u7684\u200b\u4f7f\u7528\u200b\u4f4d\u57df\u200b\uff0c\u200b\u80fd\u591f\u200b\u6709\u6548\u200b\u5730\u200b\u51cf\u5c11\u200b\u5185\u5b58\u200b\u5360\u7528\u200b\uff0c\u200b\u540c\u65f6\u200b\u63d0\u9ad8\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u6548\u7387\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u7531\u4e8e\u200b\u4e0d\u540c\u200b\u5e73\u53f0\u200b\u548c\u200b\u7f16\u8bd1\u5668\u200b\u7684\u200b\u5b9e\u73b0\u200b\u5dee\u5f02\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u5728\u200b\u4f7f\u7528\u200b\u4f4d\u57df\u200b\u65f6\u5e94\u200b\u4fdd\u6301\u200b\u8c28\u614e\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u4e0d\u540c\u200b\u73af\u5883\u200b\u4e2d\u200b\u5177\u5907\u200b\u826f\u597d\u200b\u7684\u200b\u53ef\u79fb\u690d\u6027\u200b\u3002</p>"},{"location":"programming/cpp/number/compress/","title":"\u6570\u5b57\u200b\u538b\u7f29\u200b\u6280\u672f\u200b\u5728\u200b C++\u200b\u4e2d\u200b\u7684\u200b\u5e94\u7528","text":"<p>\u200b\u5728\u200b C++\u200b\u4e2d\u200b\uff0c\u200b\u6570\u5b57\u200b\u538b\u7f29\u200b\u6280\u672f\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u7528\u6765\u200b\u51cf\u5c11\u200b\u5b58\u50a8\u200b\u6d6e\u70b9\u6570\u200b\uff08\u200b\u5982\u200b<code>float</code>\u200b\u6216\u200b<code>double</code>\uff09\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u5185\u5b58\u7a7a\u95f4\u200b\u3002\u200b\u8fd9\u79cd\u200b\u538b\u7f29\u200b\u6280\u672f\u200b\u7279\u522b\u200b\u9002\u7528\u200b\u4e8e\u200b\u6570\u636e\u91cf\u200b\u5e9e\u5927\u200b\u7684\u200b\u5e94\u7528\u200b\uff0c\u200b\u5982\u200b\u56fe\u50cf\u5904\u7406\u200b\u3001\u200b\u79d1\u5b66\u8ba1\u7b97\u200b\u3001\u200b\u673a\u5668\u200b\u5b66\u4e60\u200b\u7b49\u200b\u3002\u200b\u5728\u200b\u8fd9\u4e9b\u200b\u573a\u5408\u200b\uff0c\u200b\u538b\u7f29\u200b\u53ef\u4ee5\u200b\u5e2e\u52a9\u200b\u8282\u7701\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u5e76\u200b\u52a0\u5feb\u200b\u6570\u636e\u200b\u4f20\u8f93\u901f\u5ea6\u200b\u3002</p>"},{"location":"programming/cpp/number/compress/#_1","title":"\u5e38\u89c1\u200b\u7684\u200b\u538b\u7f29\u200b\u6d6e\u70b9\u200b\u6570\u5b57\u200b\u7c7b\u578b\u200b\u7684\u200b\u65b9\u6cd5","text":"<ol> <li>\u200b\u91cf\u5316\u200b\uff08Quantization\uff09</li> <li>\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u4f4d\u57df\u200b\u8868\u793a\u200b\uff08Bit-Packing\uff09</li> <li>\u200b\u71b5\u200b\u7f16\u7801\u200b\uff08Entropy Coding\uff09</li> <li>\u200b\u5dee\u5206\u200b\u7f16\u7801\u200b\uff08Differential Encoding\uff09</li> <li>\u200b\u4f7f\u7528\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6570\u503c\u200b\u7c7b\u578b\u200b\uff08Reduced Precision\uff09</li> </ol>"},{"location":"programming/cpp/number/compress/#1-quantization","title":"1. \u200b\u91cf\u5316\u200b\uff08Quantization\uff09","text":"<p>\u200b\u91cf\u5316\u200b\u662f\u200b\u5c06\u200b\u8fde\u7eed\u200b\u503c\u200b\u6620\u5c04\u200b\u5230\u200b\u6709\u9650\u200b\u7684\u200b\u79bb\u6563\u200b\u503c\u200b\u96c6\u5408\u200b\uff0c\u200b\u4f8b\u5982\u200b\u5c06\u200b<code>float</code>\u200b\u6216\u200b<code>double</code>\u200b\u503c\u200b\u7f29\u51cf\u5230\u200b<code>int</code>\u200b\u6216\u200b<code>short</code>\u3002\u200b\u91cf\u5316\u200b\u53ef\u200b\u51cf\u5c11\u200b\u6570\u636e\u200b\u7684\u200b\u5b58\u50a8\u200b\u7cbe\u5ea6\u200b\uff0c\u200b\u4f46\u200b\u4fdd\u7559\u200b\u53ef\u200b\u63a5\u53d7\u200b\u7684\u200b\u6570\u636e\u200b\u8303\u56f4\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cmath&gt;\n\nstd::vector&lt;int&gt; quantize(const std::vector&lt;float&gt;&amp; floats, float scaleFactor) {\n    std::vector&lt;int&gt; quantized;\n    for (float number : floats) {\n        quantized.push_back(static_cast&lt;int&gt;(std::round(number * scaleFactor)));\n    }\n    return quantized;\n}\n\nint main() {\n    std::vector&lt;float&gt; numbers = {0.1f, 0.5f, 0.9f};\n    float scaleFactor = 100.0f; // \u200b\u5c06\u200b\u6d6e\u70b9\u6570\u200b\u653e\u5927\u200b100\u200b\u500d\u200b\n\n    auto quantized = quantize(numbers, scaleFactor);\n\n    for (int q : quantized) {\n        std::cout &lt;&lt; q &lt;&lt; \" \"; // \u200b\u8f93\u51fa\u200b\u91cf\u5316\u200b\u540e\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5982\u200b 10, 50, 90\n    }\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/compress/#2-bit-packing","title":"2. \u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u4f4d\u57df\u200b\u8868\u793a\u200b\uff08Bit-Packing\uff09","text":"<p>\u200b\u901a\u8fc7\u200b\u4f4d\u57df\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u624b\u52a8\u200b\u538b\u7f29\u200b\u6d6e\u70b9\u6570\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u4f7f\u7528\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u7cbe\u5ea6\u200b\u6216\u200b\u81ea\u5b9a\u4e49\u200b\u683c\u5f0f\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u4f7f\u7528\u200b 16 \u200b\u4f4d\u200b\u6d6e\u70b9\u6570\u200b\uff08half-precision\uff09\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdint&gt;\n\nstruct HalfFloat {\n    uint16_t value; // 16\u200b\u4f4d\u200b\u8868\u793a\u200b\n};\n\n// \u200b\u5c06\u200b32\u200b\u4f4d\u200b\u6d6e\u70b9\u6570\u200b\u8f6c\u4e3a\u200b16\u200b\u4f4d\u534a\u200b\u6d6e\u70b9\u200b\nHalfFloat floatToHalf(float f) {\n    HalfFloat h;\n    uint32_t floatBits = *reinterpret_cast&lt;uint32_t*&gt;(&amp;f);\n    uint32_t sign = (floatBits &gt;&gt; 16) &amp; 0x8000; // \u200b\u63d0\u53d6\u200b\u7b26\u53f7\u200b\u4f4d\u200b\n    uint32_t exponent = ((floatBits &gt;&gt; 23) &amp; 0xFF) - 112; // \u200b\u8f6c\u4e3a\u200b\u504f\u79fb\u91cf\u200b\u4e3a\u200b15\u200b\u7684\u200b\u6307\u6570\u200b\n    uint32_t mantissa = floatBits &amp; 0x7FFFFF; // \u200b\u63d0\u53d6\u200b\u5c3e\u6570\u200b\n\n    if (exponent &lt;= 0) {\n        h.value = sign; // 0 \u200b\u6216\u200b \u200b\u6e10\u8fd1\u200b\u4e8e\u200b0\n    } else if (exponent &gt;= 31) {\n        h.value = sign | 0x7FFF; // +inf \u200b\u6216\u200b -inf\n    } else {\n        h.value = sign | (exponent &lt;&lt; 10) | (mantissa &gt;&gt; 13);\n    }\n\n    return h;\n}\n\nint main() {\n    float num = 3.14f;\n    HalfFloat half = floatToHalf(num);\n    std::cout &lt;&lt; std::hex &lt;&lt; half.value &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b16\u200b\u4f4d\u534a\u200b\u6d6e\u70b9\u200b\u7684\u200b\u5341\u516d\u8fdb\u5236\u200b\u8868\u793a\u200b\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/compress/#3-entropy-coding","title":"3. \u200b\u71b5\u200b\u7f16\u7801\u200b\uff08Entropy Coding\uff09","text":"<p>\u200b\u5728\u200b\u6b64\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5bf9\u200b\u6d6e\u70b9\u6570\u200b\u5e8f\u5217\u200b\u8fdb\u884c\u200b\u7edf\u8ba1\u5206\u6790\u200b\uff0c\u200b\u7136\u540e\u200b\u4f7f\u7528\u200b\u66f4\u200b\u77ed\u200b\u7684\u200b\u7f16\u7801\u8868\u793a\u200b\u9891\u7e41\u200b\u51fa\u73b0\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u5e38\u7528\u200b\u7684\u200b\u71b5\u200b\u7f16\u7801\u65b9\u6cd5\u200b\u6709\u200b Huffman \u200b\u7f16\u7801\u200b\u548c\u200b\u7b97\u672f\u200b\u7f16\u7801\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;unordered_map&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\n// \u200b\u5047\u8bbe\u200b\u7f16\u7801\u200b\u8868\u4e3a\u200b\u7b80\u5355\u200b\u56fa\u5b9a\u200b\u957f\u5ea6\u200b\u7684\u200b\u54c8\u592b\u66fc\u200b\u7f16\u7801\u200b\nstd::unordered_map&lt;float, std::string&gt; buildHuffmanTable(const std::vector&lt;float&gt;&amp; data) {\n    std::unordered_map&lt;float, int&gt; frequency;\n    for (float f : data) {\n        frequency[f]++;\n    }\n\n    // \u200b\u6b64\u5904\u200b\u7701\u7565\u200b\u5b9e\u9645\u200b\u54c8\u592b\u66fc\u200b\u6811\u200b\u6784\u5efa\u200b\u548c\u200b\u7f16\u7801\u200b\u751f\u6210\u200b\uff0c\u200b\u53ea\u7528\u200b\u6570\u91cf\u200b\u66ff\u4ee3\u200b\n    std::unordered_map&lt;float, std::string&gt; huffmanTable;\n    for (const auto&amp; pair : frequency) {\n        huffmanTable[pair.first] = std::to_string(pair.first); // Dummy encoding\n    }\n\n    return huffmanTable;\n}\n\nint main() {\n    std::vector&lt;float&gt; numbers = {1.0f, 2.0f, 1.0f, 3.5f, 2.0f};\n    auto huffmanTable = buildHuffmanTable(numbers);\n\n    for (const auto&amp; pair : huffmanTable) {\n        std::cout &lt;&lt; pair.first &lt;&lt; \": \" &lt;&lt; pair.second &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\u4f2a\u200b\u7f16\u7801\u200b\n    }\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/compress/#4-differential-encoding","title":"4. \u200b\u5dee\u5206\u200b\u7f16\u7801\u200b\uff08Differential Encoding\uff09","text":"<p>\u200b\u5728\u200b\u5dee\u5206\u200b\u7f16\u7801\u200b\u4e2d\u200b\uff0c\u200b\u5b58\u50a8\u200b\u76f8\u90bb\u200b\u6d6e\u70b9\u6570\u200b\u4e4b\u95f4\u200b\u7684\u200b\u5dee\u503c\u200b\uff0c\u200b\u800c\u200b\u975e\u200b\u5b9e\u9645\u200b\u503c\u200b\uff0c\u200b\u8fd9\u200b\u5728\u200b\u6570\u636e\u200b\u53d8\u5316\u200b\u5f88\u5c0f\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u5c24\u5176\u200b\u9ad8\u6548\u200b\u3002\u200b\u7531\u4e8e\u200b\u76f8\u90bb\u200b\u7684\u200b\u6570\u636e\u200b\u901a\u5e38\u200b\u5f88\u200b\u76f8\u4f3c\u200b\uff0c\u200b\u5b58\u50a8\u200b\u8f83\u200b\u5c0f\u200b\u7684\u200b\u5dee\u503c\u200b\u53ef\u4ee5\u200b\u663e\u8457\u200b\u51cf\u5c11\u200b\u6570\u636e\u91cf\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nstd::vector&lt;float&gt; deltaEncode(const std::vector&lt;float&gt;&amp; data) {\n    std::vector&lt;float&gt; encoded;\n    if (data.empty()) return encoded;\n\n    encoded.push_back(data[0]); // \u200b\u5b58\u50a8\u200b\u7b2c\u4e00\u4e2a\u200b\u503c\u200b\n    for (size_t i = 1; i &lt; data.size(); ++i) {\n        encoded.push_back(data[i] - data[i - 1]); // \u200b\u5b58\u50a8\u200b\u5dee\u503c\u200b\n    }\n    return encoded;\n}\n\nint main() {\n    std::vector&lt;float&gt; numbers = {1.0f, 1.1f, 1.2f, 1.1f, 1.0f};\n    auto encoded = deltaEncode(numbers);\n\n    for (float val : encoded) {\n        std::cout &lt;&lt; val &lt;&lt; \" \"; // \u200b\u8f93\u51fa\u200b\u7f16\u7801\u200b\u7ed3\u679c\u200b\n    }\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/compress/#5-reduced-precision","title":"5. \u200b\u4f7f\u7528\u200b\u66f4\u200b\u5c0f\u200b\u7684\u200b\u6570\u503c\u200b\u7c7b\u578b\u200b\uff08Reduced Precision\uff09","text":"<p>\u200b\u5982\u679c\u200b\u5bf9\u200b\u7cbe\u5ea6\u200b\u8981\u6c42\u200b\u4e0d\u9ad8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b<code>float</code>\u200b\u66ff\u4ee3\u200b<code>double</code>\u3002\u200b\u540c\u6837\u200b\uff0c\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u81ea\u5b9a\u4e49\u200b\u5c0f\u6570\u70b9\u200b\u4f4d\u7f6e\u200b\uff0c\u200b\u7b80\u5316\u200b\u5b58\u50a8\u200b\u683c\u5f0f\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nstd::vector&lt;uint16_t&gt; compressFloatToHalf(const std::vector&lt;float&gt;&amp; data) {\n    std::vector&lt;uint16_t&gt; compressed;\n    for (float num : data) {\n        uint16_t half = static_cast&lt;uint16_t&gt;(num * 100); // \u200b\u5047\u8bbe\u200b\u653e\u7f29\u200b\u4ee5\u200b\u63d0\u9ad8\u200b\u7cbe\u5ea6\u200b\n        compressed.push_back(half);\n    }\n    return compressed;\n}\n\nint main() {\n    std::vector&lt;float&gt; numbers = {1.23f, 4.56f, 7.89f};\n    auto compressed = compressFloatToHalf(numbers);\n\n    for (uint16_t val : compressed) {\n        std::cout &lt;&lt; val &lt;&lt; \" \"; // \u200b\u8f93\u51fa\u200b\u538b\u7f29\u200b\u7ed3\u679c\u200b\n    }\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/compress/#_2","title":"\u603b\u7ed3","text":"<p>\u200b\u4ee5\u4e0a\u200b\u65b9\u6cd5\u200b\u5c55\u793a\u200b\u4e86\u200b\u5728\u200b C++\u200b\u4e2d\u200b\u5bf9\u200b\u6d6e\u70b9\u6570\u200b\uff08<code>float</code>\u200b\u548c\u200b<code>double</code>\uff09\u200b\u8fdb\u884c\u200b\u538b\u7f29\u200b\u7684\u200b\u51e0\u79cd\u200b\u6280\u672f\u200b\u3002\u200b\u4e0d\u540c\u200b\u7684\u200b\u573a\u666f\u200b\u9700\u8981\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u786e\u4fdd\u200b\u5c3d\u91cf\u51cf\u5c11\u200b\u8bef\u5dee\u200b\u7684\u200b\u65b9\u6cd5\u200b\u5305\u62ec\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u3001\u200b\u4f7f\u7528\u200b\u91cf\u5316\u200b\u53ca\u200b\u5dee\u5206\u200b\u7f16\u7801\u200b\u3001\u200b\u6267\u884c\u200b\u71b5\u200b\u7f16\u7801\u200b\u7b49\u200b\u3002\u200b\u8fd9\u200b\u5c06\u200b\u6709\u52a9\u4e8e\u200b\u5728\u200b\u5c3d\u91cf\u51cf\u5c11\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u7684\u200b\u540c\u65f6\u200b\u4fdd\u6301\u6570\u636e\u200b\u7684\u200b\u6709\u6548\u6027\u200b\u548c\u200b\u51c6\u786e\u6027\u200b\u3002</p>"},{"location":"programming/cpp/number/ratio/","title":"std::ratio","text":"<p><code>std::ratio</code> \u200b\u662f\u200b C++11 \u200b\u4e2d\u200b\u5f15\u5165\u200b\u7684\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u7c7b\u200b\uff0c\u200b\u4f4d\u4e8e\u200b <code>&lt;ratio&gt;</code> \u200b\u5934\u6587\u4ef6\u200b\u4e2d\u200b\u3002\u200b\u5b83\u200b\u7528\u4e8e\u200b\u8868\u793a\u200b\u6709\u7406\u6570\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u7528\u4e8e\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u7684\u200b\u5206\u200b\u6570\u503c\u200b\uff08\u200b\u5373\u200b\u6574\u6570\u200b\u6bd4\u200b\uff09\uff0c\u200b\u4e3b\u8981\u200b\u5e94\u7528\u200b\u4e8e\u200b\u5b9a\u65f6\u200b\u3001\u200b\u5355\u4f4d\u200b\u8f6c\u6362\u200b\u548c\u200b\u9759\u6001\u200b\u8ba1\u7b97\u200b\u7b49\u200b\u573a\u666f\u200b\u3002<code>std::ratio</code> \u200b\u5229\u7528\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u6765\u200b\u5b9a\u4e49\u200b\u5206\u6570\u200b\u7684\u200b\u5206\u5b50\u200b\u548c\u200b\u5206\u6bcd\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u64cd\u4f5c\u200b\u548c\u200b\u7279\u6027\u200b\uff0c\u200b\u6781\u5927\u200b\u5730\u65b9\u200b\u4fbf\u200b\u4e86\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8ba1\u7b97\u200b\u3002</p>"},{"location":"programming/cpp/number/ratio/#_1","title":"\u57fa\u672c\u200b\u7528\u6cd5","text":"<p><code>std::ratio</code> \u200b\u901a\u8fc7\u200b\u5206\u5b50\u200b\u548c\u200b\u5206\u6bcd\u200b\u7684\u200b\u6574\u6570\u200b\u503c\u200b\uff08\u200b\u901a\u5e38\u200b\u4e3a\u200b\u8d1f\u6570\u200b\u548c\u200b\u6b63\u6570\u200b\uff09\u200b\u8fdb\u884c\u200b\u5b9a\u4e49\u200b\u3002\u200b\u57fa\u672c\u200b\u7684\u200b\u5b9a\u4e49\u200b\u5982\u4e0b\u200b\uff1a</p> <pre><code>#include &lt;ratio&gt;\n\nstd::ratio&lt;numerator, denominator&gt;\n</code></pre> <p>\u200b\u5176\u4e2d\u200b <code>numerator</code> \u200b\u548c\u200b <code>denominator</code> \u200b\u662f\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c<code>std::ratio&lt;1, 2&gt;</code> \u200b\u8868\u793a\u200b 1/2\u3002</p>"},{"location":"programming/cpp/number/ratio/#_2","title":"\u4e3b\u8981\u200b\u7279\u6027","text":"<ul> <li>\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u5e38\u91cf\u200b\uff1a<code>std::ratio</code> \u200b\u7684\u200b\u503c\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u5c31\u200b\u5df2\u200b\u786e\u5b9a\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u4e8e\u200b\u6027\u80fd\u200b\u6781\u4e3a\u200b\u53cb\u597d\u200b\u3002</li> <li>\u200b\u52a0\u6cd5\u200b\u4e0e\u200b\u51cf\u6cd5\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5bf9\u200b <code>std::ratio</code> \u200b\u8fdb\u884c\u200b\u52a0\u6cd5\u200b\u548c\u200b\u51cf\u6cd5\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u4e58\u6cd5\u200b\u4e0e\u200b\u9664\u6cd5\u200b\uff1a\u200b\u540c\u6837\u200b\u652f\u6301\u200b\u4e58\u6cd5\u200b\u548c\u200b\u9664\u6cd5\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u7edd\u5bf9\u503c\u200b\uff1a\u200b\u652f\u6301\u200b\u83b7\u53d6\u200b\u5206\u6570\u200b\u7684\u200b\u7edd\u5bf9\u503c\u200b\u3002</li> <li>\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b\uff1a\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u4e2a\u200b\u522b\u540d\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</li> <li><code>std::ratio_add</code>\uff1a\u200b\u7528\u4e8e\u200b\u76f8\u52a0\u200b\u3002</li> <li><code>std::ratio_subtract</code>\uff1a\u200b\u7528\u4e8e\u200b\u76f8\u51cf\u200b\u3002</li> <li><code>std::ratio_multiply</code>\uff1a\u200b\u7528\u4e8e\u200b\u76f8\u4e58\u200b\u3002</li> <li><code>std::ratio_divide</code>\uff1a\u200b\u7528\u4e8e\u200b\u76f8\u9664\u200b\u3002</li> </ul>"},{"location":"programming/cpp/number/ratio/#_3","title":"\u793a\u4f8b\u200b\u4ee3\u7801","text":""},{"location":"programming/cpp/number/ratio/#1","title":"\u793a\u4f8b\u200b 1\uff1a\u200b\u57fa\u672c\u200b\u7528\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;ratio&gt;\n\nint main() {\n    using Rat1 = std::ratio&lt;1, 2&gt;;\n    using Rat2 = std::ratio&lt;3, 4&gt;;\n\n    std::cout &lt;&lt; \"Rat1: \" &lt;&lt; Rat1::num &lt;&lt; \"/\" &lt;&lt; Rat1::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a1/2\n    std::cout &lt;&lt; \"Rat2: \" &lt;&lt; Rat2::num &lt;&lt; \"/\" &lt;&lt; Rat2::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a3/4\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/ratio/#2","title":"\u793a\u4f8b\u200b 2\uff1a\u200b\u52a0\u6cd5\u200b\u4e0e\u200b\u51cf\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;ratio&gt;\n\nint main() {\n    using Rat1 = std::ratio&lt;1, 2&gt;;\n    using Rat2 = std::ratio&lt;3, 4&gt;;\n\n    using Sum = std::ratio_add&lt;Rat1, Rat2&gt;; // 1/2 + 3/4\n\n    std::cout &lt;&lt; \"Sum: \" &lt;&lt; Sum::num &lt;&lt; \"/\" &lt;&lt; Sum::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a5/4\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/ratio/#3","title":"\u793a\u4f8b\u200b 3\uff1a\u200b\u4e58\u6cd5\u200b\u4e0e\u200b\u9664\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;ratio&gt;\n\nint main() {\n    using Rat1 = std::ratio&lt;2, 3&gt;;\n    using Rat2 = std::ratio&lt;4, 5&gt;;\n\n    using Product = std::ratio_multiply&lt;Rat1, Rat2&gt;; // (2/3) * (4/5)\n    using Quotient = std::ratio_divide&lt;Rat1, Rat2&gt;; // (2/3) / (4/5)\n\n    std::cout &lt;&lt; \"Product: \" &lt;&lt; Product::num &lt;&lt; \"/\" &lt;&lt; Product::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a8/15\n    std::cout &lt;&lt; \"Quotient: \" &lt;&lt; Quotient::num &lt;&lt; \"/\" &lt;&lt; Quotient::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a10/12\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/ratio/#4","title":"\u793a\u4f8b\u200b 4\uff1a\u200b\u7edd\u5bf9\u503c\u200b\u548c\u200b\u8f6c\u6362","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;ratio&gt;\n\nint main() {\n    using Rat = std::ratio&lt;-3, 4&gt;; // -3/4\n\n    using AbsRat = std::ratio_abs&lt;Rat&gt;; // 3/4\n\n    std::cout &lt;&lt; \"Absolute Ratio: \" &lt;&lt; AbsRat::num &lt;&lt; \"/\" &lt;&lt; AbsRat::den &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a3/4\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/number/ratio/#_4","title":"\u5e94\u7528\u200b\u573a\u666f","text":"<ul> <li>\u200b\u5355\u4f4d\u200b\u8f6c\u6362\u200b\uff1a\u200b\u5728\u200b\u6d89\u53ca\u200b\u5230\u200b\u7269\u7406\u91cf\u200b\u7684\u200b\u8ba1\u7b97\u200b\u65f6\u200b\uff0c\u200b\u4f8b\u5982\u200b\u65f6\u95f4\u200b\u3001\u200b\u901f\u5ea6\u200b\u7b49\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>std::ratio</code> \u200b\u6765\u200b\u8868\u793a\u200b\u5355\u4f4d\u200b\uff0c\u200b\u6bd4\u5982\u200b\u79d2\u200b\u3001\u200b\u6beb\u79d2\u200b\u3001\u200b\u5fae\u79d2\u200b\u4e4b\u95f4\u200b\u7684\u200b\u8f6c\u6362\u200b\u3002</li> <li>\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8ba1\u7b97\u200b\uff1a\u200b\u7531\u4e8e\u200b <code>std::ratio</code> \u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u786e\u5b9a\u200b\u503c\u200b\uff0c\u200b\u6240\u4ee5\u200b\u9002\u5408\u200b\u7528\u4e8e\u200b\u9700\u8981\u200b\u9ad8\u6027\u80fd\u200b\u7684\u200b\u573a\u5408\u200b\u3002</li> <li>\u200b\u53c2\u6570\u200b\u5316\u200b\u8bbe\u8ba1\u200b\uff1a\u200b\u53ef\u200b\u7528\u4e8e\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u901a\u7528\u200b\u7684\u200b\u6570\u503c\u200b\u5904\u7406\u200b\u80fd\u529b\u200b\u3002</li> </ul>"},{"location":"programming/cpp/number/ratio/#_5","title":"\u603b\u7ed3","text":"<p><code>std::ratio</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5f3a\u5927\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u4f7f\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u8fdb\u884c\u200b\u6709\u7406\u6570\u200b\u8ba1\u7b97\u200b\u53d8\u5f97\u200b\u7b80\u5355\u200b\u800c\u200b\u9ad8\u6548\u200b\u3002\u200b\u5b83\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7075\u6d3b\u200b\u7684\u200b\u65b9\u5f0f\u200b\u6765\u200b\u5904\u7406\u200b\u5206\u6570\u200b\uff0c\u200b\u5728\u200b\u5355\u4f4d\u200b\u8f6c\u6362\u200b\u3001\u200b\u7b97\u6cd5\u200b\u8bbe\u8ba1\u200b\u7b49\u200b\u9886\u57df\u200b\u90fd\u200b\u6709\u200b\u5e7f\u6cdb\u200b\u7684\u200b\u5e94\u7528\u200b\u3002\u200b\u901a\u8fc7\u200b\u8fd0\u7528\u200b <code>std::ratio</code> \u200b\u548c\u200b\u76f8\u5173\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u80fd\u591f\u200b\u63d0\u5347\u200b\u7a0b\u5e8f\u200b\u7684\u200b\u6027\u80fd\u200b\u548c\u200b\u53ef\u7ef4\u62a4\u6027\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/","title":"C++ Type Erasure","text":"<p>Type erasure is a powerful design pattern in C++ that allows you to create uniform interfaces for different types while hiding their specific implementation details. This section provides comprehensive coverage of various type erasure techniques and their applications.</p>"},{"location":"programming/cpp/type-erasure/#overview","title":"Overview","text":"<p>Type erasure enables you to: - Create generic interfaces that work with multiple types - Hide implementation details from client code - Achieve runtime polymorphism without inheritance - Build flexible and extensible APIs</p>"},{"location":"programming/cpp/type-erasure/#type-erasure-techniques","title":"Type Erasure Techniques","text":""},{"location":"programming/cpp/type-erasure/#basic-type-erasure-concepts","title":"Basic Type Erasure Concepts","text":"<p>Introduction to type erasure fundamentals: - What is type erasure and why use it - Basic implementation patterns - Advantages and trade-offs - When to choose type erasure over other approaches</p>"},{"location":"programming/cpp/type-erasure/#virtual-function-approach","title":"Virtual Function Approach","text":"<p>Traditional polymorphism-based type erasure: - Using base classes and virtual functions - Virtual table implementation details - Performance characteristics - Best practices and limitations</p>"},{"location":"programming/cpp/type-erasure/#stdvariant-approach","title":"std::variant Approach","text":"<p>Modern C++17 type-safe union approach: - Using std::variant for type erasure - Visitor pattern implementation - Compile-time type safety - Performance benefits and limitations</p>"},{"location":"programming/cpp/type-erasure/#crtp-curiously-recurring-template-pattern","title":"CRTP (Curiously Recurring Template Pattern)","text":"<p>Template-based static polymorphism: - CRTP implementation techniques - Compile-time polymorphism - Performance advantages - Use cases and examples</p>"},{"location":"programming/cpp/type-erasure/#c-language-techniques","title":"C Language Techniques","text":""},{"location":"programming/cpp/type-erasure/#c-style-type-erasure","title":"C-Style Type Erasure","text":"<p>Type erasure techniques in C: - Function pointers and void* approach - Manual vtable implementation - Memory management considerations - Interfacing with C++ code</p>"},{"location":"programming/cpp/type-erasure/#c11-generic-programming","title":"C11 Generic Programming","text":"<p>Modern C generic programming: - _Generic keyword usage - Type-generic macros - Compile-time type selection - Integration with C++ projects</p>"},{"location":"programming/cpp/type-erasure/#c-virtual-table-implementation","title":"C Virtual Table Implementation","text":"<p>Manual virtual table implementation in C: - Creating vtable structures - Function pointer management - Object-oriented patterns in C - Performance considerations</p>"},{"location":"programming/cpp/type-erasure/#implementation-patterns","title":"Implementation Patterns","text":""},{"location":"programming/cpp/type-erasure/#basic-pattern-structure","title":"Basic Pattern Structure","text":"<pre><code>class TypeErasedInterface {\npublic:\n    template&lt;typename T&gt;\n    TypeErasedInterface(T&amp;&amp; obj);\n\n    void operation();\n\nprivate:\n    struct Concept {\n        virtual ~Concept() = default;\n        virtual void operation() = 0;\n    };\n\n    template&lt;typename T&gt;\n    struct Model : Concept {\n        Model(T obj) : object(std::move(obj)) {}\n        void operation() override { object.operation(); }\n        T object;\n    };\n\n    std::unique_ptr&lt;Concept&gt; pimpl;\n};\n</code></pre>"},{"location":"programming/cpp/type-erasure/#performance-considerations","title":"Performance Considerations","text":"<ul> <li>Virtual dispatch overhead - Runtime function call costs</li> <li>Memory allocation - Heap allocation for type-erased objects</li> <li>Cache locality - Impact on CPU cache performance</li> <li>Compile-time optimization - Template instantiation costs</li> </ul>"},{"location":"programming/cpp/type-erasure/#design-trade-offs","title":"Design Trade-offs","text":"<ul> <li>Flexibility vs Performance - Runtime flexibility vs compile-time optimization</li> <li>Type Safety vs Genericity - Compile-time checks vs runtime adaptability</li> <li>Memory Usage vs Speed - Memory overhead vs execution speed</li> <li>Complexity vs Maintainability - Implementation complexity vs code clarity</li> </ul>"},{"location":"programming/cpp/type-erasure/#use-cases","title":"Use Cases","text":""},{"location":"programming/cpp/type-erasure/#library-design","title":"Library Design","text":"<ul> <li>Creating generic container interfaces</li> <li>Plugin architectures</li> <li>Callback systems</li> <li>Event handling frameworks</li> </ul>"},{"location":"programming/cpp/type-erasure/#api-design","title":"API Design","text":"<ul> <li>Hiding implementation details</li> <li>Providing stable interfaces</li> <li>Supporting multiple backends</li> <li>Enabling runtime configuration</li> </ul>"},{"location":"programming/cpp/type-erasure/#performance-critical-code","title":"Performance-Critical Code","text":"<ul> <li>Avoiding virtual function overhead</li> <li>Compile-time polymorphism</li> <li>Template-based solutions</li> <li>Zero-cost abstractions</li> </ul>"},{"location":"programming/cpp/type-erasure/#best-practices","title":"Best Practices","text":""},{"location":"programming/cpp/type-erasure/#when-to-use-type-erasure","title":"When to Use Type Erasure","text":"<ul> <li>\u2705 Need runtime polymorphism without inheritance</li> <li>\u2705 Want to hide template complexity from users</li> <li>\u2705 Building plugin or callback systems</li> <li>\u2705 Creating stable ABI boundaries</li> </ul>"},{"location":"programming/cpp/type-erasure/#when-to-avoid-type-erasure","title":"When to Avoid Type Erasure","text":"<ul> <li>\u274c Performance is absolutely critical</li> <li>\u274c Types are known at compile time</li> <li>\u274c Simple inheritance hierarchy suffices</li> <li>\u274c Memory usage is severely constrained</li> </ul>"},{"location":"programming/cpp/type-erasure/#implementation-guidelines","title":"Implementation Guidelines","text":"<ul> <li>Prefer stack allocation when possible</li> <li>Use small buffer optimization for common cases</li> <li>Consider move semantics for efficiency</li> <li>Provide clear error handling</li> <li>Document performance characteristics</li> </ul> <p>Each technique includes detailed examples, performance analysis, and practical applications to help you choose the right approach for your specific use case.</p>"},{"location":"programming/cpp/type-erasure/c/","title":"C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u64e6\u9664","text":"<p>\u200b\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u5c3d\u7ba1\u200b\u6ca1\u6709\u200b C++ \u200b\u4e2d\u200b\u7684\u200b\u6cdb\u578b\u200b\u548c\u200b\u591a\u6001\u200b\u673a\u5236\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u4f9d\u7136\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e00\u4e9b\u200b\u7f16\u7a0b\u200b\u6280\u5de7\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u7684\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u529f\u80fd\u200b\u3002\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u76ee\u6807\u200b\u662f\u200b\u9690\u85cf\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\u7684\u200b\u7ec6\u8282\u200b\uff0c\u200b\u4f7f\u200b\u4ee3\u7801\u200b\u80fd\u591f\u200b\u4ee5\u200b\u901a\u7528\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\u3002C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u4e3b\u8981\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u51e0\u79cd\u200b\u65b9\u5f0f\u200b\u5b9e\u73b0\u200b\uff1a</p> <ul> <li><code>void*</code> \u200b\u6307\u9488\u200b</li> <li>\u200b\u51fd\u6570\u6307\u9488\u200b</li> <li>\u200b\u8054\u5408\u4f53\u200b\uff08<code>union</code>\uff09</li> <li>\u200b\u7ed3\u6784\u200b\u4f53\u200b\u548c\u200b\u865a\u8868\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c/#void","title":"\u4f7f\u7528\u200b <code>void*</code>","text":"<p><code>void*</code> \u200b\u662f\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u4e00\u79cd\u200b\u901a\u7528\u200b\u6307\u9488\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u6307\u5411\u200b\u4efb\u610f\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002<code>void*</code> \u200b\u7684\u200b\u7279\u6027\u200b\u4f7f\u5f97\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u5728\u200b\u4e0d\u200b\u77e5\u9053\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u4f20\u9012\u200b\u548c\u200b\u5b58\u50a8\u200b\u6570\u636e\u200b\uff0c\u200b\u8fbe\u5230\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u6548\u679c\u200b\u3002\u200b\u4f7f\u7528\u200b <code>void*</code> \u200b\u65f6\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5728\u200b\u4f7f\u7528\u200b\u65f6\u200b\u624b\u52a8\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u8f6c\u6362\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid print_int(void* data) {\n    printf(\"%d\\n\", *(int*)data);  // \u200b\u5c06\u200b void* \u200b\u8f6c\u6362\u200b\u4e3a\u200b int*\n}\n\nvoid print_double(void* data) {\n    printf(\"%f\\n\", *(double*)data);  // \u200b\u5c06\u200b void* \u200b\u8f6c\u6362\u200b\u4e3a\u200b double*\n}\n\nint main() {\n    int a = 10;\n    double b = 3.14;\n\n    print_int(&amp;a);    // \u200b\u6253\u5370\u200b int \u200b\u7c7b\u578b\u200b\n    print_double(&amp;b); // \u200b\u6253\u5370\u200b double \u200b\u7c7b\u578b\u200b\n\n    return 0;\n}\n</code></pre> <ul> <li>\u200b\u4f18\u70b9\u200b\uff1a<code>void*</code> \u200b\u5141\u8bb8\u200b\u51fd\u6570\u200b\u63a5\u53d7\u200b\u548c\u200b\u5904\u7406\u200b\u4efb\u610f\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u4ee3\u7801\u200b\u590d\u7528\u200b\u6027\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u4f7f\u7528\u200b <code>void*</code> \u200b\u4f1a\u200b\u4e27\u5931\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u9700\u8981\u200b\u5c0f\u5fc3\u200b\u5904\u7406\u200b\u7c7b\u578b\u8f6c\u6362\u200b\uff0c\u200b\u907f\u514d\u51fa\u73b0\u200b\u8fd0\u884c\u200b\u65f6\u200b\u9519\u8bef\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c/#_1","title":"\u51fd\u6570\u6307\u9488\u200b\u4e0e\u200b\u56de\u8c03\u200b\u673a\u5236","text":"<p>C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u7684\u200b\u51fd\u6570\u6307\u9488\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u591a\u6001\u200b\u3002\u200b\u7ed3\u5408\u200b <code>void*</code> \u200b\u548c\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u8c03\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\ntypedef void (*print_func)(void*);\n\nvoid print_int(void* data) {\n    printf(\"%d\\n\", *(int*)data);\n}\n\nvoid print_double(void* data) {\n    printf(\"%f\\n\", *(double*)data);\n}\n\nvoid print_data(void* data, print_func print) {\n    print(data);\n}\n\nint main() {\n    int a = 42;\n    double b = 5.67;\n\n    // \u200b\u4f7f\u7528\u200b print_data \u200b\u5b9e\u73b0\u200b\u591a\u6001\u200b\u8c03\u7528\u200b\n    print_data(&amp;a, print_int);    // \u200b\u6253\u5370\u200b int \u200b\u7c7b\u578b\u200b\n    print_data(&amp;b, print_double); // \u200b\u6253\u5370\u200b double \u200b\u7c7b\u578b\u200b\n\n    return 0;\n}\n</code></pre> <ul> <li>\u200b\u4f18\u70b9\u200b\uff1a\u200b\u901a\u8fc7\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u4ee3\u7801\u200b\u53ef\u4ee5\u200b\u7075\u6d3b\u200b\u5730\u200b\u8c03\u7528\u200b\u4e0d\u540c\u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u591a\u6001\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u51fd\u6570\u6307\u9488\u200b\u7684\u200b\u4f7f\u7528\u200b\u4f1a\u200b\u4f7f\u200b\u4ee3\u7801\u200b\u53d8\u5f97\u590d\u6742\u200b\uff0c\u200b\u4e14\u200b\u4e0d\u5229\u4e8e\u200b\u8c03\u8bd5\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c/#union","title":"<code>union</code>","text":"<p><code>union</code>\u200b\u5141\u8bb8\u200b\u591a\u4e2a\u200b\u6570\u636e\u200b\u6210\u5458\u200b\u5171\u4eab\u200b\u540c\u4e00\u200b\u5757\u5185\u5b58\u200b\uff0c\u200b\u90a3\u4e48\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u52a8\u6001\u200b\u89e3\u91ca\u200b\u8fd9\u5757\u200b\u5185\u5b58\u200b\u7684\u200b\u5185\u5bb9\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\ntypedef union {\n    int i;\n    double d;\n} Value;\n\nvoid print_value(int type, Value val) {\n    if (type == 0) {\n        printf(\"int: %d\\n\", val.i);\n    } else if (type == 1) {\n        printf(\"double: %f\\n\", val.d);\n    }\n}\n\nint main() {\n    Value v1;\n    v1.i = 42;\n\n    Value v2;\n    v2.d = 3.1415;\n\n    print_value(0, v1); // \u200b\u6253\u5370\u200b int \u200b\u7c7b\u578b\u200b\n    print_value(1, v2); // \u200b\u6253\u5370\u200b double \u200b\u7c7b\u578b\u200b\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/c/#_2","title":"\u4f18\u7f3a\u70b9","text":"<ul> <li>\u200b\u4f18\u70b9\u200b\uff1a<code>union</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u9ad8\u6548\u200b\u7684\u200b\u65b9\u5f0f\u200b\u5b58\u50a8\u200b\u591a\u79cd\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\u3002</li> <li>\u200b\u7f3a\u70b9\u200b\uff1a\u200b\u5f00\u53d1\u8005\u200b\u5fc5\u987b\u200b\u624b\u52a8\u200b\u7ba1\u7406\u200b\u7c7b\u578b\u200b\u6807\u8bc6\u7b26\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u7c7b\u578b\u200b\u89e3\u91ca\u200b\u9519\u8bef\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c/#4","title":"4. \u200b\u7ed3\u6784\u200b\u4f53\u200b\u548c\u200b\u865a\u8868","text":"<pre><code>goto c_virtual_table.md\n</code></pre>"},{"location":"programming/cpp/type-erasure/c11_generic/","title":"C11\u201c\u200b\u65b0\u200b\u7279\u6027\u200b\u201d\uff1a <code>_Generic</code>","text":"<p>C11 \u200b\u6807\u51c6\u200b\u5f15\u5165\u200b\u4e86\u200b <code>_Generic</code> \u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u6cdb\u578b\u200b\u9009\u62e9\u200b\u673a\u5236\u200b\uff0c\u200b\u5141\u8bb8\u200b\u6839\u636e\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u7c7b\u578b\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u9009\u62e9\u200b\u7279\u5b9a\u200b\u7684\u200b\u4ee3\u7801\u200b\u8def\u5f84\u200b\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b C \u200b\u8bed\u8a00\u200b\u80fd\u591f\u200b\u5728\u200b\u67d0\u79cd\u7a0b\u5ea6\u200b\u4e0a\u200b\u5b9e\u73b0\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b C++ \u200b\u4e2d\u200b\u51fd\u6570\u200b\u91cd\u8f7d\u200b\u7684\u200b\u6548\u679c\u200b\uff0c\u200b\u4ece\u800c\u200b\u589e\u5f3a\u200b\u4e86\u200b\u4ee3\u7801\u200b\u7684\u200b\u901a\u7528\u6027\u200b\u548c\u200b\u7c7b\u578b\u200b\u5b89\u5168\u6027\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/c11_generic/#_generic","title":"<code>_Generic</code> \u200b\u7684\u200b\u8bed\u6cd5","text":"<pre><code>_Generic(expression, type1: result1, type2: result2, ...)\n</code></pre> <ul> <li>expression\uff1a\u200b\u8981\u200b\u5339\u914d\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\uff0c\u200b\u5b83\u200b\u7684\u200b\u7c7b\u578b\u200b\u51b3\u5b9a\u200b\u4e86\u200b\u9009\u4e2d\u200b\u7684\u200b\u8def\u5f84\u200b\u3002</li> <li>type1, type2\uff1a\u200b\u8868\u793a\u200b\u8981\u200b\u5339\u914d\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</li> <li>result1, result2\uff1a\u200b\u5f53\u200b <code>expression</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u5339\u914d\u200b <code>type1</code> \u200b\u6216\u200b <code>type2</code> \u200b\u65f6\u200b\uff0c\u200b\u9009\u62e9\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u5339\u914d\u200b\u5230\u200b\u7684\u200b\u7c7b\u578b\u200b\u4e14\u200b\u5b9a\u4e49\u200b\u4e86\u200b <code>default</code> \u200b\u5206\u652f\u200b\uff0c\u200b\u5219\u200b\u9009\u62e9\u200b <code>default</code> \u200b\u5206\u652f\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c11_generic/#_1","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid print_int(int value) {\n    printf(\"int: %d\\n\", value);\n}\n\nvoid print_double(double value) {\n    printf(\"double: %f\\n\", value);\n}\n\n#define print(x) _Generic((x),                \\\n                          int: print_int,     \\\n                          double: print_double)(x)\n\nint main() {\n    print(42);      // \u200b\u8f93\u51fa\u200b\uff1aint: 42\n    print(3.14);    // \u200b\u8f93\u51fa\u200b\uff1adouble: 3.140000\n\n    return 0;\n}\n</code></pre> <p><code>_Generic</code> \u200b\u9009\u62e9\u200b <code>print_int</code> \u200b\u6216\u200b <code>print_double</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u5177\u4f53\u200b\u9009\u62e9\u200b\u53d6\u51b3\u4e8e\u200b\u4f20\u5165\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p> <ul> <li>\u200b\u5982\u679c\u200b\u4f20\u5165\u200b <code>42</code>\uff0c\u200b\u5339\u914d\u200b <code>int</code>\uff0c\u200b\u8c03\u7528\u200b <code>print_int</code>\u3002</li> <li>\u200b\u5982\u679c\u200b\u4f20\u5165\u200b <code>3.14</code>\uff0c\u200b\u5339\u914d\u200b <code>double</code>\uff0c\u200b\u8c03\u7528\u200b <code>print_double</code>\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c11_generic/#_2","title":"\u5e94\u7528\u200b\u573a\u666f","text":""},{"location":"programming/cpp/type-erasure/c11_generic/#21","title":"2.1. \u200b\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u6cdb\u578b\u200b\u63a5\u53e3","text":"<p><code>_Generic</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u5141\u8bb8\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\u4f7f\u7528\u200b\u76f8\u540c\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4f1a\u200b\u4e22\u5931\u200b\u7c7b\u578b\u4fe1\u606f\u200b\u3002\u200b\u8fd9\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b C++ \u200b\u7684\u200b\u51fd\u6570\u200b\u91cd\u8f7d\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;math.h&gt;\n\n#define abs_generic(x) _Generic((x),      \\\n                                int: abs, \\\n                                double: fabs)(x)\n\nint main() {\n    printf(\"%d\\n\", abs_generic(-10));    // \u200b\u8f93\u51fa\u200b\uff1a10\n    printf(\"%f\\n\", abs_generic(-3.14));  // \u200b\u8f93\u51fa\u200b\uff1a3.140000\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/c11_generic/#_3","title":"\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u6253\u5370\u51fd\u6570","text":"<p>C \u200b\u8bed\u8a00\u200b\u6ca1\u6709\u200b\u539f\u751f\u200b\u7684\u200b\u7c7b\u578b\u200b\u91cd\u8f7d\u200b\u3002\u200b\u4f7f\u7528\u200b <code>_Generic</code>\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u4e3a\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6570\u636e\u200b\u5b9a\u4e49\u200b\u901a\u7528\u200b\u7684\u200b\u6253\u5370\u200b\u63a5\u53e3\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define print_value(x) _Generic((x),              \\\n                                int: print_int,   \\\n                                double: print_double, \\\n                                char*: print_string)(x)\n\nvoid print_int(int value) {\n    printf(\"int: %d\\n\", value);\n}\n\nvoid print_double(double value) {\n    printf(\"double: %f\\n\", value);\n}\n\nvoid print_string(char* value) {\n    printf(\"string: %s\\n\", value);\n}\n\nint main() {\n    print_value(42);           // \u200b\u8f93\u51fa\u200b\uff1aint: 42\n    print_value(3.14159);     // \u200b\u8f93\u51fa\u200b\uff1adouble: 3.141590\n    print_value(\"Hello C\");    // \u200b\u8f93\u51fa\u200b\uff1astring: Hello C\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/c11_generic/#default","title":"<code>default</code> \u200b\u5206\u652f\u200b\u5904\u7406\u200b\u672a\u200b\u5339\u914d\u200b\u7c7b\u578b","text":"<p>\u200b\u5982\u679c\u200b\u4f20\u5165\u200b\u7684\u200b\u7c7b\u578b\u200b\u6ca1\u6709\u200b\u663e\u5f0f\u200b\u5339\u914d\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>default</code> \u200b\u5206\u652f\u200b\u6765\u200b\u5904\u7406\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n#define print_value(x) _Generic((x),             \\\n                                int: print_int,  \\\n                                double: print_double, \\\n                                default: print_unknown)(x)\n\nvoid print_int(int value) {\n    printf(\"int: %d\\n\", value);\n}\n\nvoid print_double(double value) {\n    printf(\"double: %f\\n\", value);\n}\n\nvoid print_unknown(void* value) {\n    printf(\"Unknown type\\n\");\n}\n\nint main() {\n    print_value(42);         // \u200b\u8f93\u51fa\u200b\uff1aint: 42\n    print_value(3.14);      // \u200b\u8f93\u51fa\u200b\uff1adouble: 3.140000\n    print_value('c');       // \u200b\u8f93\u51fa\u200b\uff1aUnknown type\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/c11_generic/#3-_generic","title":"3. <code>_Generic</code> \u200b\u7684\u200b\u5c40\u9650\u6027","text":"<ul> <li>\u200b\u4ec5\u200b\u652f\u6301\u200b\u9759\u6001\u200b\u7c7b\u578b\u200b\u5339\u914d\u200b\uff1a<code>_Generic</code> \u200b\u7684\u200b\u5339\u914d\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u5b8c\u6210\u200b\uff0c\u200b\u56e0\u6b64\u200b\u65e0\u6cd5\u200b\u5904\u7406\u200b\u52a8\u6001\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u4e0d\u200b\u652f\u6301\u200b\u590d\u6742\u200b\u7c7b\u578b\u200b\uff1a<code>_Generic</code> \u200b\u53ea\u80fd\u200b\u5339\u914d\u200b\u57fa\u7840\u200b\u7c7b\u578b\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u76f4\u63a5\u200b\u5339\u914d\u200b\u6570\u7ec4\u200b\u3001\u200b\u7ed3\u6784\u200b\u4f53\u200b\u6216\u200b\u8054\u5408\u4f53\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u4ee3\u7801\u200b\u53ef\u8bfb\u6027\u200b\u964d\u4f4e\u200b\uff1a\u200b\u4f7f\u7528\u200b <code>_Generic</code> \u200b\u7684\u200b\u4ee3\u7801\u200b\u5728\u200b\u903b\u8f91\u200b\u4e0a\u200b\u4f1a\u200b\u53d8\u5f97\u590d\u6742\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5f71\u54cd\u200b\u53ef\u7ef4\u62a4\u6027\u200b\u3002</li> <li>\u200b\u7f3a\u4e4f\u200b\u6269\u5c55\u6027\u200b\uff1a\u200b\u4e0e\u200b C++ \u200b\u7684\u200b\u6a21\u677f\u200b\u76f8\u6bd4\u200b\uff0c<code>_Generic</code> \u200b\u7684\u200b\u6269\u5c55\u200b\u80fd\u529b\u200b\u6709\u9650\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c_virtual_table/","title":"\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u865a\u8868\u200b\uff08VTable\uff09","text":"<p>\u200b\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\uff0c\u200b\u7531\u4e8e\u200b\u7f3a\u4e4f\u200b\u539f\u751f\u200b\u7684\u200b\u9762\u5411\u5bf9\u8c61\u200b\u652f\u6301\u200b\u548c\u200b\u865a\u200b\u51fd\u6570\u200b\u673a\u5236\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4e00\u4e9b\u200b\u7f16\u7a0b\u200b\u6280\u5de7\u200b\u624b\u52a8\u200b\u6a21\u62df\u200b\u865a\u8868\u200b\uff08VTable\uff09\u3002\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b\u7ed3\u6784\u200b\u4f53\u200b\u3001\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u4e00\u4e9b\u200b\u8bbe\u8ba1\u6a21\u5f0f\u200b\uff08\u200b\u5982\u200b\u7ec4\u5408\u200b\u548c\u200b\u7ee7\u627f\u200b\uff09\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u6a21\u62df\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b C++ \u200b\u7684\u200b\u591a\u6001\u200b\u884c\u4e3a\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5982\u4f55\u200b\u5728\u200b C \u200b\u8bed\u8a00\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u865a\u8868\u200b\u7684\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/c_virtual_table/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u200b\u5b9a\u4e49\u200b\u57fa\u7c7b\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff1a\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6307\u5411\u200b\u5b9e\u73b0\u200b\u7c7b\u200b\u7684\u200b\u7279\u5b9a\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u521b\u5efa\u200b\u6d3e\u751f\u7c7b\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff1a\u200b\u5c06\u200b\u5176\u200b\u4f5c\u4e3a\u200b\u57fa\u7c7b\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u5229\u7528\u200b\u57fa\u7c7b\u200b\u7684\u200b\u51fd\u6570\u6307\u9488\u200b\u8bbf\u95ee\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</li> <li>\u200b\u901a\u8fc7\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u8bbf\u95ee\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u65b9\u5f0f\u200b\uff1a\u200b\u5b9e\u73b0\u200b\u591a\u6001\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/c_virtual_table/#_2","title":"\u5b9e\u73b0","text":""},{"location":"programming/cpp/type-erasure/c_virtual_table/#_3","title":"\u5b9a\u4e49\u200b\u57fa\u7c7b","text":"<p>\u200b\u9996\u5148\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u7528\u6765\u200b\u6307\u5411\u200b\u865a\u200b\u51fd\u6570\u200b\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u7ed3\u6784\u200b\u4f53\u200b\ntypedef struct {\n    void (*print)(void*);  // \u200b\u51fd\u6570\u6307\u9488\u200b\uff0c\u200b\u6a21\u62df\u200b\u865a\u200b\u51fd\u6570\u200b\n} Base;\n</code></pre>"},{"location":"programming/cpp/type-erasure/c_virtual_table/#_4","title":"\u5b9a\u4e49\u200b\u6d3e\u751f\u7c7b","text":"<p>\u200b\u63a5\u7740\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u51e0\u4e2a\u200b\u6d3e\u751f\u7c7b\u200b\u7ed3\u6784\u200b\u4f53\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7ed3\u6784\u200b\u4f53\u90fd\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u57fa\u7c7b\u200b\u7684\u200b\u7ed3\u6784\u200b\u4f53\u200b\u4f5c\u4e3a\u200b\u5176\u200b\u7b2c\u4e00\u4e2a\u200b\u6210\u5458\u200b\u3002</p> <pre><code>// \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6d3e\u751f\u7c7b\u200b\uff1a\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\ntypedef struct {\n    Base base;    // \u200b\u7ee7\u627f\u200b\u81ea\u200b Base\n    int value;    // \u200b\u5177\u4f53\u200b\u6570\u636e\u200b\n} IntDerived;\n\n// \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u6d3e\u751f\u7c7b\u200b\uff1a\u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b\ntypedef struct {\n    Base base;    // \u200b\u7ee7\u627f\u200b\u81ea\u200b Base\n    double value; // \u200b\u5177\u4f53\u200b\u6570\u636e\u200b\n} DoubleDerived;\n</code></pre>"},{"location":"programming/cpp/type-erasure/c_virtual_table/#_5","title":"\u5b9e\u73b0\u200b\u6253\u5370\u51fd\u6570","text":"<p>\u200b\u73b0\u5728\u200b\u5b9e\u73b0\u200b\u6253\u5370\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6bcf\u4e2a\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u5177\u4f53\u200b\u5b9e\u73b0\u200b\u3002\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u9700\u8981\u200b\u8c03\u7528\u200b\u57fa\u7c7b\u200b\u7684\u200b\u51fd\u6570\u6307\u9488\u200b\u3002</p> <pre><code>// \u200b\u6253\u5370\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b9e\u73b0\u200b\nvoid print_int(void* data) {\n    IntDerived* obj = (IntDerived*)data;\n    printf(\"Int: %d\\n\", obj-&gt;value);\n}\n\n// \u200b\u6253\u5370\u200b\u6d6e\u70b9\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u5b9e\u73b0\u200b\nvoid print_double(void* data) {\n    DoubleDerived* obj = (DoubleDerived*)data;\n    printf(\"Double: %f\\n\", obj-&gt;value);\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/c_virtual_table/#_6","title":"\u521b\u5efa\u200b\u548c\u200b\u521d\u59cb\u5316\u200b\u5bf9\u8c61","text":"<p>\u200b\u5728\u200b <code>main</code> \u200b\u51fd\u6570\u200b\u4e2d\u200b\u521b\u5efa\u200b\u8fd9\u4e9b\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u76f8\u5e94\u200b\u7684\u200b\u5b9e\u73b0\u200b\u51fd\u6570\u200b\u8d4b\u503c\u200b\u7ed9\u200b\u57fa\u7c7b\u200b\u7684\u200b\u51fd\u6570\u6307\u9488\u200b\u3002</p> <pre><code>int main() {\n    // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u6574\u6570\u200b\u5bf9\u8c61\u200b\n    IntDerived int_obj;\n    int_obj.base.print = print_int; // \u200b\u6307\u5411\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\n    int_obj.value = 42;               // \u200b\u8bbe\u7f6e\u200b\u6574\u6570\u200b\u503c\u200b\n\n    // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u6d6e\u70b9\u6570\u200b\u5bf9\u8c61\u200b\n    DoubleDerived double_obj;\n    double_obj.base.print = print_double; // \u200b\u6307\u5411\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\n    double_obj.value = 3.14;                // \u200b\u8bbe\u7f6e\u200b\u6d6e\u70b9\u200b\u503c\u200b\n\n    // \u200b\u4f7f\u7528\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u8bbf\u95ee\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u529f\u80fd\u200b\n    Base* b1 = (Base*)&amp;int_obj;       // \u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u6574\u6570\u200b\u5bf9\u8c61\u200b\n    Base* b2 = (Base*)&amp;double_obj;    // \u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u6d6e\u70b9\u200b\u5bf9\u8c61\u200b\n\n    b1-&gt;print(b1); // \u200b\u8c03\u7528\u200b\u6574\u6570\u200b\u6253\u5370\u51fd\u6570\u200b\n    b2-&gt;print(b2); // \u200b\u8c03\u7528\u200b\u6d6e\u70b9\u6570\u200b\u6253\u5370\u51fd\u6570\u200b\n\n    return 0;\n}\n</code></pre> <ul> <li>\u200b\u591a\u6001\u200b\u5b9e\u73b0\u200b\uff1a\u200b\u901a\u8fc7\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b <code>b1</code> \u200b\u548c\u200b <code>b2</code>\uff0c\u200b\u6211\u4eec\u200b\u8bbf\u95ee\u200b\u4e86\u200b\u5b9e\u9645\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b <code>print</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u8868\u73b0\u200b\u51fa\u200b\u591a\u6001\u200b\u7684\u200b\u7279\u6027\u200b\u3002</li> <li>\u200b\u51fd\u6570\u6307\u9488\u200b\uff1a\u200b\u4f7f\u7528\u200b\u51fd\u6570\u6307\u9488\u200b\u6a21\u62df\u200b\u4e86\u200b\u865a\u8868\u200b\u7684\u200b\u6982\u5ff5\u200b\uff0c\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7684\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6253\u5370\u200b\u529f\u80fd\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/cpp/","title":"C++ \u200b\u7c7b\u578b\u200b\u64e6\u9664","text":""},{"location":"programming/cpp/type-erasure/cpp/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"programming/cpp/type-erasure/cpp/#_2","title":"\u4ec0\u4e48\u200b\u662f\u200b\u7c7b\u578b\u200b\u64e6\u9664","text":"<p>\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u662f\u200b\u4e00\u79cd\u200b\u8bbe\u8ba1\u6a21\u5f0f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9e\u73b0\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b\u63a5\u53e3\u200b\u800c\u200b\u9690\u85cf\u200b\u5177\u4f53\u200b\u6570\u636e\u7c7b\u578b\u200b\u7684\u200b\u4fe1\u606f\u200b\u3002\u200b\u5728\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u673a\u5236\u200b\u4e0b\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u4ee3\u7801\u200b\u4e0d\u200b\u9700\u8981\u200b\u5173\u5fc3\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\uff0c\u200b\u53ea\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u62bd\u8c61\u200b\u63a5\u53e3\u200b\u5373\u53ef\u200b\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u4ee3\u7801\u200b\u63d0\u9ad8\u200b\u4e86\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u53ef\u200b\u590d\u7528\u200b\u6027\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp/#_3","title":"\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u4f18\u52bf","text":"<ul> <li>\u200b\u589e\u5f3a\u200b\u7075\u6d3b\u6027\u200b\uff1a\u200b\u540c\u200b\u4e00\u6bb5\u200b\u4ee3\u7801\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u7b80\u5316\u200b API \u200b\u8bbe\u8ba1\u200b\uff1a\u200b\u4e3a\u200b\u7528\u6237\u200b\u63d0\u4f9b\u200b\u4e00\u81f4\u200b\u7684\u200b\u63a5\u53e3\u200b\uff0c\u200b\u9690\u85cf\u200b\u590d\u6742\u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u3002</li> <li>\u200b\u907f\u514d\u200b\u4ee3\u7801\u200b\u91cd\u590d\u200b\uff1a\u200b\u51cf\u5c11\u200b\u7531\u4e8e\u200b\u591a\u4e2a\u200b\u76f8\u4f3c\u200b\u7c7b\u578b\u200b\u5b9e\u73b0\u200b\u540c\u6837\u200b\u63a5\u53e3\u200b\u800c\u200b\u5bfc\u81f4\u200b\u7684\u200b\u4ee3\u7801\u200b\u5197\u4f59\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/cpp/#_4","title":"\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u5b9e\u73b0","text":""},{"location":"programming/cpp/type-erasure/cpp/#_5","title":"\u4f7f\u7528\u200b\u57fa\u7c7b\u200b\u548c\u200b\u865a\u200b\u51fd\u6570","text":"<pre><code>goto cpp_virtual_table.md\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp/#stdvariant","title":"<code>std::variant</code>","text":"<pre><code>goto variant.md\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp/#stdany","title":"<code>std::any</code>","text":"<p>C++17 \u200b\u5f15\u5165\u200b\u4e86\u200b <code>std::any</code> \u200b\u7c7b\u200b\uff0c\u200b\u5141\u8bb8\u200b\u5b58\u50a8\u200b\u4efb\u610f\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u200b\u63d0\u4f9b\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u673a\u5236\u200b\u3002<code>std::any</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u5bb9\u5668\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u52a8\u6001\u200b\u5b58\u50a8\u200b\u548c\u200b\u8bbf\u95ee\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;any&gt;\n#include &lt;vector&gt;\n\nvoid processAny(const std::any&amp; value) {\n    if (value.type() == typeid(int)) {\n        std::cout &lt;&lt; \"Processing int: \" &lt;&lt; std::any_cast&lt;int&gt;(value) &lt;&lt; std::endl;\n    } else if (value.type() == typeid(double)) {\n        std::cout &lt;&lt; \"Processing double: \" &lt;&lt; std::any_cast&lt;double&gt;(value) &lt;&lt; std::endl;\n    } else if (value.type() == typeid(std::string)) {\n        std::cout &lt;&lt; \"Processing string: \" &lt;&lt; std::any_cast&lt;std::string&gt;(value) &lt;&lt; std::endl;\n    }\n}\n\nint main() {\n    std::vector&lt;std::any&gt; values;\n    values.push_back(10);\n    values.push_back(3.14);\n    values.push_back(std::string(\"Hello\"));\n\n    for (const auto&amp; value : values) {\n        processAny(value); \n    }\n\n    return 0;\n}\n</code></pre> <p>\u200b\u4f7f\u7528\u200b <code>std::any</code> \u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u4efb\u610f\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u52a8\u6001\u200b\u7c7b\u578b\u200b\u5b58\u50a8\u200b\u7684\u200b\u80fd\u529b\u200b\u3002\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>std::any_cast</code> \u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u88c5\u7bb1\u200b\u4e0e\u200b\u53d6\u51fa\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp/#stdfunction","title":"<code>std::function</code>","text":"<p><code>std::function</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b\u7684\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u673a\u5236\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff08\u200b\u5982\u200b\u51fd\u6570\u6307\u9488\u200b\u3001lambda \u200b\u8868\u8fbe\u5f0f\u200b\u3001\u200b\u7ed1\u5b9a\u200b\u8868\u8fbe\u5f0f\u200b\u7b49\u200b\uff09\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f7f\u7528\u200b\u4e00\u79cd\u200b\u7edf\u4e00\u200b\u7684\u200b\u63a5\u53e3\u200b\u6765\u200b\u8c03\u7528\u200b\u4e0d\u540c\u200b\u7b7e\u540d\u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u200b\u53ef\u200b\u8c03\u7528\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\n#include &lt;vector&gt;\n\nvoid printInt(int value) {\n    std::cout &lt;&lt; \"Integer: \" &lt;&lt; value &lt;&lt; std::endl;\n}\n\nvoid printDouble(double value) {\n    std::cout &lt;&lt; \"Double: \" &lt;&lt; value &lt;&lt; std::endl;\n}\n\nint main() {\n    std::vector&lt;std::function&lt;void()&gt;&gt; functions;\n\n    // \u200b\u4f7f\u7528\u200b std::function \u200b\u5c06\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u51fd\u6570\u200b\u5b58\u50a8\u200b\u5728\u200b\u540c\u4e00\u200b\u5bb9\u5668\u200b\u4e2d\u200b\n    functions.push_back([] { printInt(10); });  // Lambda capturing int\n    functions.push_back([] { printDouble(2.5); }); // Lambda capturing double\n\n    // \u200b\u8c03\u7528\u200b\u6240\u6709\u200b\u7684\u200b\u51fd\u6570\u200b\n    for (const auto&amp; func : functions) {\n        func(); // \u200b\u8f93\u51fa\u200b Integer: 10\\n Double: 2.5\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp/#crtp","title":"\u6a21\u677f\u200b\u4e0e\u200b CRTP","text":"<pre><code>goto crtp.md\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/","title":"\u865a\u8868\u200b\uff08VTable\uff09\u200b\u8be6\u89e3","text":"<p>\u200b\u865a\u8868\u200b\uff08VTable\uff09\u200b\u662f\u200b C++ \u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u8fd0\u884c\u200b\u65f6\u200b\u591a\u6001\u200b\u7684\u200b\u6838\u5fc3\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e4b\u4e00\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u6267\u884c\u200b\u6d3e\u751f\u7c7b\u200b\u4e2d\u200b\u7684\u200b\u6b63\u786e\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u6765\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ece\u800c\u200b\u5b9e\u73b0\u200b\u591a\u6001\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_1","title":"\u539f\u7406","text":""},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_2","title":"\u865a\u200b\u51fd\u6570","text":"<p>\u200b\u865a\u200b\u51fd\u6570\u200b\u662f\u200b\u5728\u200b\u57fa\u7c7b\u200b\u4e2d\u200b\u58f0\u660e\u200b\u4e3a\u200b <code>virtual</code> \u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u3002\u200b\u5f53\u200b\u6d3e\u751f\u7c7b\u200b\u91cd\u5199\u200b\u6b64\u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u8c03\u7528\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528\u200b\u65f6\u200b\uff0c\u200b\u5c06\u200b\u6839\u636e\u200b\u6307\u5411\u200b\u7684\u200b\u771f\u5b9e\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_3","title":"\u865a\u8868\u200b\u7684\u200b\u6784\u5efa","text":""},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_4","title":"\u865a\u8868\u200b\u7684\u200b\u5b9a\u4e49","text":"<p>\u200b\u6bcf\u4e2a\u200b\u7c7b\u200b\uff08\u200b\u542b\u6709\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b\uff09\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u865a\u8868\u200b\uff0c\u200b\u8be5\u200b\u865a\u8868\u200b\u5305\u542b\u200b\u6307\u5411\u200b\u7c7b\u4e2d\u200b\u865a\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u7684\u200b\u6307\u9488\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\uff0c\u200b\u79f0\u4e3a\u200b\u865a\u200b\u6307\u9488\u200b\uff08VPtr\uff09\uff0c\u200b\u6307\u5411\u200b\u5b83\u200b\u6240\u5c5e\u200b\u7c7b\u200b\u7684\u200b\u865a\u8868\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_5","title":"\u7ed3\u6784","text":"<ul> <li>\u200b\u865a\u8868\u200b\uff1a\u200b\u4e00\u4e2a\u200b\u7c7b\u200b\u7684\u200b\u865a\u8868\u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u4fdd\u5b58\u200b\u4e86\u200b\u6307\u5411\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u5730\u5740\u200b\u3002</li> <li>\u200b\u865a\u200b\u6307\u9488\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u6709\u200b\u4e00\u4e2a\u200b\u6307\u9488\u200b\uff0c\u200b\u6307\u5411\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u6240\u5c5e\u200b\u7c7b\u200b\u7684\u200b\u865a\u8868\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_6","title":"\u7f16\u8bd1\u5668\u200b\u5de5\u4f5c","text":"<ul> <li>\u200b\u521b\u5efa\u200b\u865a\u8868\u200b\uff1a\u200b\u7f16\u8bd1\u5668\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u7c7b\u200b\u751f\u6210\u200b\u865a\u8868\u200b\u3002</li> <li>\u200b\u6dfb\u52a0\u200b\u865a\u200b\u6307\u9488\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u5e26\u6709\u200b\u865a\u200b\u51fd\u6570\u200b\u6210\u5458\u200b\u7684\u200b\u7c7b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u90fd\u200b\u4f1a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u865a\u200b\u6307\u9488\u200b\u3002</li> <li>\u200b\u52a8\u6001\u200b\u7ed1\u5b9a\u200b\uff1a\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\uff0c\u200b\u901a\u8fc7\u200b\u865a\u200b\u6307\u9488\u200b\u8bbf\u95ee\u200b\u865a\u8868\u200b\uff0c\u200b\u6839\u636e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u6307\u9488\u200b\u6765\u200b\u52a8\u6001\u200b\u51b3\u5b9a\u200b\u8c03\u7528\u200b\u54ea\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_7","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n\nclass Base {\npublic:\n    virtual void show() {   // \u200b\u865a\u200b\u51fd\u6570\u200b\n        std::cout &lt;&lt; \"Base show\" &lt;&lt; std::endl;\n    }\n    virtual ~Base() = default; // \u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b\n};\n\nclass Derived : public Base {\npublic:\n    void show() override {  // \u200b\u91cd\u5199\u200b\u865a\u200b\u51fd\u6570\u200b\n        std::cout &lt;&lt; \"Derived show\" &lt;&lt; std::endl;\n    }\n};\n\nvoid func(Base* b) {\n    b-&gt;show();  // \u200b\u8fd0\u884c\u200b\u65f6\u200b\u52a8\u6001\u200b\u7ed1\u5b9a\u200b\n}\n\nint main() {\n    Base b;\n    Derived d;\n\n    func(&amp;b);  // \u200b\u8c03\u7528\u200b Base::show\n    func(&amp;d);  // \u200b\u8c03\u7528\u200b Derived::show\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_8","title":"\u7ec6\u8282","text":""},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_9","title":"\u5185\u5b58\u200b\u5e03\u5c40","text":"<p>\u200b\u865a\u8868\u200b\u901a\u5e38\u200b\u4f4d\u4e8e\u200b\u5168\u5c40\u200b\u9759\u6001\u200b\u533a\u57df\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7c7b\u200b\u53ea\u4f1a\u200b\u6709\u200b\u4e00\u4efd\u200b\u3002\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u865a\u200b\u6307\u9488\u200b\u5219\u200b\u5b58\u50a8\u200b\u5728\u200b\u5176\u200b\u5185\u5b58\u200b\u5e03\u5c40\u200b\u4e2d\u200b\uff0c\u200b\u76f4\u6307\u200b\u5411\u200b\u4e0e\u5176\u200b\u5bf9\u5e94\u200b\u7684\u200b\u865a\u8868\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_10","title":"\u5b58\u50a8","text":"<p>\u200b\u865a\u200b\u6307\u9488\u200b\u662f\u200b\u9690\u542b\u200b\u7684\u200b\uff0c\u200b\u7a0b\u5e8f\u5458\u200b\u65e0\u200b\u9700\u8981\u200b\u81ea\u5df1\u200b\u58f0\u660e\u200b\u6216\u200b\u4f7f\u7528\u200b\u3002\u200b\u7f16\u8bd1\u5668\u200b\u5728\u200b\u521b\u5efa\u5bf9\u8c61\u200b\u65f6\u4f1a\u200b\u81ea\u52a8\u200b\u7ba1\u7406\u200b\u865a\u200b\u6307\u9488\u200b\u7684\u200b\u521d\u59cb\u200b\u8bbe\u7f6e\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_11","title":"\u591a\u91cd\u200b\u7ee7\u627f","text":"<p>\u200b\u5728\u200b\u591a\u91cd\u200b\u7ee7\u627f\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u57fa\u7c7b\u200b\u90fd\u200b\u4f1a\u200b\u6709\u200b\u81ea\u5df1\u200b\u7684\u200b\u865a\u8868\u200b\u3002\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u6709\u200b\u591a\u4e2a\u200b\u865a\u200b\u6307\u9488\u200b\u6307\u5411\u200b\u4e0d\u540c\u200b\u7684\u200b\u865a\u8868\u200b\u3002</p> <pre><code>class A {\npublic:\n    virtual void func() {}\n};\n\nclass B {\npublic:\n    virtual void func() {}\n};\n\nclass C : public A, public B {\npublic:\n    void func() override { }\n};\n</code></pre> <p>\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u7c7b\u200b <code>C</code> \u200b\u4f1a\u200b\u62e5\u6709\u200b\u6307\u5411\u200b <code>A</code> \u200b\u548c\u200b <code>B</code> \u200b\u865a\u8868\u200b\u7684\u200b\u4e24\u4e2a\u200b\u865a\u200b\u6307\u9488\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_12","title":"\u865a\u6790\u6784\u200b\u51fd\u6570","text":"<p>\u200b\u5728\u200b\u6709\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u7c7b\u200b\u4e2d\u200b\uff0c\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u5b9a\u4e49\u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u6b63\u786e\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\u3002\u200b\u5f53\u200b\u901a\u8fc7\u200b\u57fa\u7c7b\u200b\u6307\u9488\u200b\u5220\u9664\u200b\u6d3e\u751f\u7c7b\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u865a\u6790\u6784\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u6cc4\u6f0f\u200b\u6216\u200b\u672a\u5b9a\u4e49\u200b\u884c\u4e3a\u200b\u3002</p> <pre><code>class Base {\npublic:\n    virtual ~Base() { std::cout &lt;&lt; \"Base destructor\" &lt;&lt; std::endl; }\n};\n\nclass Derived : public Base {\npublic:\n    ~Derived() { std::cout &lt;&lt; \"Derived destructor\" &lt;&lt; std::endl; }\n};\n\n// \u200b\u5220\u9664\u200b Base \u200b\u6307\u9488\u200b\u6307\u5411\u200b\u7684\u200b Derived \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u6b63\u786e\u200b\u8c03\u7528\u200b\u865a\u6790\u6784\u200b\nBase* b = new Derived();\ndelete b; // \u200b\u8f93\u51fa\u200b\uff1aDerived destructor\\nBase destructor\n</code></pre>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_13","title":"\u6027\u80fd\u200b\u95ee\u9898","text":""},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_14","title":"\u5f00\u9500\u200b\u95ee\u9898","text":"<p>\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u8c03\u7528\u200b\u4f1a\u200b\u4f7f\u7528\u200b\u989d\u5916\u200b\u7684\u200b\u95f4\u63a5\u200b\u5bfb\u5740\u200b\uff0c\u200b\u56e0\u6b64\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u6027\u80fd\u200b\u5f00\u9500\u200b\u4f1a\u200b\u6bd4\u200b\u666e\u901a\u200b\u51fd\u6570\u200b\u9ad8\u200b\u3002\u200b\u5728\u200b\u6027\u80fd\u200b\u654f\u611f\u200b\u7684\u200b\u5e94\u7528\u200b\u4e2d\u200b\uff0c\u200b\u8fc7\u5ea6\u200b\u4f7f\u7528\u200b\u865a\u200b\u51fd\u6570\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6027\u80fd\u200b\u74f6\u9888\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/cpp_virtual_table/#_15","title":"\u5185\u5b58\u200b\u5f00\u9500","text":"<p>\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u4f1a\u200b\u6709\u200b\u4e00\u4e2a\u200b\u865a\u200b\u6307\u9488\u200b\uff0c\u200b\u8fd9\u4f1a\u200b\u589e\u52a0\u200b\u6bcf\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5185\u5b58\u200b\u5f00\u9500\u200b\uff0c\u200b\u5c24\u5176\u200b\u5728\u200b\u5b58\u50a8\u200b\u5927\u91cf\u200b\u5c0f\u89c4\u6a21\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c\u200b\u6548\u679c\u200b\u5c24\u4e3a\u200b\u660e\u663e\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/crtp/","title":"CRTP\uff08Curiously Recurring Template Pattern\uff09","text":"<p>CRTP\uff08Curiously Recurring Template Pattern\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b C++ \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7684\u200b\u7f16\u7a0b\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5c06\u200b\u6d3e\u751f\u7c7b\u200b\u4f5c\u4e3a\u200b\u6a21\u677f\u200b\u53c2\u6570\u4f20\u9012\u200b\u7ed9\u200b\u57fa\u7c7b\u200b\u6765\u200b\u8fbe\u5230\u200b\u9759\u6001\u200b\u591a\u6001\u200b\u7684\u200b\u76ee\u7684\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u6a21\u5f0f\u200b\u7684\u200b\u4e3b\u8981\u200b\u7279\u70b9\u200b\u662f\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u8fdb\u884c\u200b\u7c7b\u578b\u200b\u786e\u5b9a\u200b\uff0c\u200b\u5e76\u200b\u501f\u52a9\u200b C++ \u200b\u7684\u200b\u6a21\u677f\u200b\u673a\u5236\u200b\u6765\u200b\u5b9e\u73b0\u200b\u76f4\u63a5\u200b\u7684\u200b\u51fd\u6570\u8c03\u7528\u200b\u800c\u200b\u65e0\u9700\u200b\u865a\u200b\u51fd\u6570\u200b\u8868\u200b\uff0c\u200b\u4ece\u800c\u200b\u63d0\u4f9b\u200b\u9ad8\u6548\u200b\u7684\u200b\u591a\u6001\u200b\u5b9e\u73b0\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/crtp/#crtp","title":"CRTP","text":"<p>CRTP \u200b\u7684\u200b\u57fa\u672c\u200b\u601d\u60f3\u200b\u662f\u200b\u5c06\u200b\u6d3e\u751f\u7c7b\u200b\u7c7b\u578b\u200b\u4f5c\u4e3a\u200b\u57fa\u7c7b\u200b\u7684\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u3002\u200b\u8fd9\u6837\u200b\uff0c\u200b\u57fa\u7c7b\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u77e5\u9053\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b\u8fd9\u4e2a\u200b\u4fe1\u606f\u200b\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u7279\u5b9a\u200b\u7684\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/crtp/#_1","title":"\u5b9e\u73b0\u200b\u6a21\u677f","text":"<pre><code>template &lt;typename Derived&gt;\nclass Base {\npublic:\n    void interface() {\n        // \u200b\u5728\u200b\u57fa\u7c7b\u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u51fd\u6570\u200b\n        static_cast&lt;Derived*&gt;(this)-&gt;implementation();\n    }\n};\n\nclass Derived : public Base&lt;Derived&gt; {\npublic:\n    void implementation() {\n        // \u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\n    }\n};\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c<code>Base</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u7c7b\u200b\uff0c\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b <code>Derived</code>\u3002\u200b\u5f53\u200b\u6211\u4eec\u200b\u5b9e\u73b0\u200b <code>interface()</code> \u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b89\u5168\u200b\u5730\u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b <code>implementation()</code> \u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/crtp/#_2","title":"\u5178\u578b\u200b\u7528\u6cd5","text":""},{"location":"programming/cpp/type-erasure/crtp/#_3","title":"\u9759\u6001\u200b\u591a\u6001","text":"<p>CRTP \u200b\u5141\u8bb8\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u95f4\u200b\u4ee3\u66ff\u200b\u8fd0\u884c\u200b\u65f6\u200b\u591a\u6001\u200b\uff0c\u200b\u6d88\u9664\u200b\u4e86\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u8c03\u7528\u200b\u5f00\u9500\u200b\u3002\u200b\u5f53\u200b\u6d3e\u751f\u7c7b\u200b\u901a\u8fc7\u200b CRTP \u200b\u7ee7\u627f\u200b\u57fa\u7c7b\u200b\u65f6\u200b\uff0c\u200b\u6240\u6709\u200b\u51fd\u6570\u200b\u90fd\u200b\u662f\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u89e3\u6790\u200b\u7684\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/crtp/#_4","title":"\u793a\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n\n// \u200b\u5b9a\u4e49\u200b CRTP \u200b\u57fa\u7c7b\u200b\ntemplate &lt;typename Derived&gt;\nclass Base {\npublic:\n    void interface() {\n        static_cast&lt;Derived*&gt;(this)-&gt;implementation(); // \u200b\u8c03\u7528\u200b\u6d3e\u751f\u7c7b\u200b\u7684\u200b\u5b9e\u73b0\u200b\n    }\n};\n\n// \u200b\u6d3e\u751f\u7c7b\u200b A\nclass DerivedA : public Base&lt;DerivedA&gt; {\npublic:\n    void implementation() {\n        std::cout &lt;&lt; \"DerivedA implementation\" &lt;&lt; std::endl;\n    }\n};\n\n// \u200b\u6d3e\u751f\u7c7b\u200b B\nclass DerivedB : public Base&lt;DerivedB&gt; {\npublic:\n    void implementation() {\n        std::cout &lt;&lt; \"DerivedB implementation\" &lt;&lt; std::endl;\n    }\n};\n\nint main() {\n    DerivedA a;\n    DerivedB b;\n\n    a.interface(); // \u200b\u8f93\u51fa\u200b\uff1aDerivedA implementation\n    b.interface(); // \u200b\u8f93\u51fa\u200b\uff1aDerivedB implementation\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/crtp/#_5","title":"\u9759\u6001\u200b\u7b56\u7565\u200b\u6a21\u5f0f","text":"<p>CRTP \u200b\u53ef\u4ee5\u200b\u7ed3\u5408\u200b\u7b56\u7565\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u4ee5\u200b\u5b9e\u73b0\u200b\u4e0d\u540c\u200b\u7684\u200b\u884c\u4e3a\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u5f15\u5165\u200b\u865a\u200b\u51fd\u6570\u200b\u5f00\u9500\u200b\u3002\u200b\u53ef\u4ee5\u200b\u5728\u200b\u57fa\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u901a\u7528\u200b\u63a5\u53e3\u200b\uff0c\u200b\u800c\u200b\u5728\u200b\u6d3e\u751f\u7c7b\u200b\u4e2d\u200b\u5b9e\u73b0\u200b\u4e0d\u540c\u200b\u7684\u200b\u7b56\u7565\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\ntemplate &lt;typename SortAlgorithm&gt;\nclass Sorter {\npublic:\n    void sort(std::vector&lt;int&gt;&amp; data) {\n        static_cast&lt;SortAlgorithm*&gt;(this)-&gt;sort(data);\n    }\n};\n\nclass BubbleSort : public Sorter&lt;BubbleSort&gt; {\npublic:\n    void sort(std::vector&lt;int&gt;&amp; data) {\n        std::cout &lt;&lt; \"BubbleSort\" &lt;&lt; std::endl;\n        for (size_t i = 0; i &lt; data.size() - 1; i++) {\n            for (size_t j = 0; j &lt; data.size() - i - 1; j++) {\n                if (data[j] &gt; data[j + 1]) {\n                    std::swap(data[j], data[j + 1]);\n                }\n            }\n        }\n    }\n};\n\nclass SelectionSort : public Sorter&lt;SelectionSort&gt; {\npublic:\n    void sort(std::vector&lt;int&gt;&amp; data) {\n        std::cout &lt;&lt; \"SelectionSort\" &lt;&lt; std::endl;\n        for (size_t i = 0; i &lt; data.size() - 1; i++) {\n            size_t minIndex = i;\n            for (size_t j = i + 1; j &lt; data.size(); j++) {\n                if (data[j] &lt; data[minIndex]) {\n                    minIndex = j;\n                }\n            }\n            std::swap(data[i], data[minIndex]);\n        }\n    }\n};\n\nint main() {\n    std::vector&lt;int&gt; data = {5, 3, 2, 4, 1};\n\n    BubbleSort bubble_sort;\n    bubble_sort.sort(data); // \u200b\u8f93\u51fa\u200b\u300cBubbleSort\u300d\n\n    SelectionSort selection_sort;\n    selection_sort.sort(data); // \u200b\u8f93\u51fa\u200b\u300cSelectionSort\u300d\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-erasure/crtp/#_6","title":"\u4f18\u7f3a\u70b9","text":""},{"location":"programming/cpp/type-erasure/crtp/#_7","title":"\u4f18\u70b9","text":"<ol> <li>\u200b\u6027\u80fd\u200b\uff1a\u200b\u7531\u4e8e\u200b CRTP \u200b\u662f\u200b\u4e00\u79cd\u200b\u7f16\u8bd1\u200b\u671f\u200b\u673a\u5236\u200b\uff0c\u200b\u5b83\u200b\u6d88\u9664\u200b\u4e86\u200b\u865a\u200b\u51fd\u6570\u200b\u7684\u200b\u8c03\u7528\u200b\u5f00\u9500\u200b\uff0c\u200b\u56e0\u6b64\u200b\u901a\u5e38\u200b\u4f1a\u200b\u6bd4\u200b\u4f20\u7edf\u200b\u7684\u200b\u865a\u200b\u51fd\u6570\u200b\u5b9e\u73b0\u200b\u591a\u6001\u200b\u66f4\u200b\u5feb\u200b\u3002</li> <li>\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff1aCRTP \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\uff0c\u200b\u907f\u514d\u200b\u4e86\u200b\u4e0e\u200b <code>void*</code> \u200b\u6216\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u65b9\u6cd5\u200b\u76f8\u5173\u200b\u7684\u200b\u8fd0\u884c\u200b\u65f6\u200b\u9519\u8bef\u200b\u3002</li> <li>\u200b\u7075\u6d3b\u6027\u200b\uff1a\u200b\u5141\u8bb8\u200b\u5728\u200b\u57fa\u7c7b\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u200b\u53ef\u200b\u4f7f\u7528\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5305\u542b\u200b\u6d3e\u751f\u7c7b\u200b\u672c\u8eab\u200b\u3002</li> </ol>"},{"location":"programming/cpp/type-erasure/crtp/#_8","title":"\u7f3a\u70b9","text":"<ol> <li>\u200b\u590d\u6742\u6027\u200b\uff1aCRTP \u200b\u53ef\u80fd\u200b\u4f7f\u5f97\u200b\u4ee3\u7801\u200b\u66f4\u52a0\u200b\u590d\u6742\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5bf9\u4e8e\u200b\u4e0d\u200b\u719f\u6089\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u5f00\u53d1\u8005\u200b\u800c\u8a00\u200b\uff0c\u200b\u7406\u89e3\u200b CRTP \u200b\u7684\u200b\u5b9e\u73b0\u200b\u7ec6\u8282\u200b\u53ef\u80fd\u200b\u8f83\u4e3a\u200b\u56f0\u96be\u200b\u3002</li> <li>\u200b\u53ef\u8bfb\u6027\u200b\uff1a\u200b\u4f7f\u7528\u200b CRTP \u200b\u7684\u200b\u4ee3\u7801\u200b\u5728\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u548c\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u65b9\u9762\u200b\u53ef\u80fd\u200b\u4f7f\u5f97\u200b\u4ee3\u7801\u200b\u7684\u200b\u53ef\u8bfb\u6027\u200b\u964d\u4f4e\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u7c7b\u578b\u200b\u7684\u200b\u6df7\u5408\u200b\u4f7f\u7528\u200b\u65f6\u200b\u3002</li> <li>\u200b\u4e0d\u80fd\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u591a\u6001\u200b\uff1aCRTP \u200b\u53ea\u80fd\u200b\u63d0\u4f9b\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u591a\u6001\u200b\uff0c\u200b\u65e0\u6cd5\u200b\u52a8\u6001\u200b\u51b3\u5b9a\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9650\u5236\u200b\u4e86\u200b\u5176\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\u3002</li> </ol>"},{"location":"programming/cpp/type-erasure/variant/","title":"<code>std::variant</code>","text":"<p><code>std::variant</code> \u200b\u662f\u200b C++17 \u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u5f15\u5165\u200b\u7684\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u8054\u5408\u4f53\u200b\uff08union\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u4fdd\u5b58\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u4efb\u4f55\u200b\u65f6\u5019\u200b\u53ea\u80fd\u200b\u6301\u6709\u200b\u5176\u4e2d\u200b\u4e00\u79cd\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\u7c7b\u578b\u200b\u64e6\u9664\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u5e76\u200b\u80fd\u591f\u200b\u66f4\u200b\u5b89\u5168\u200b\u5730\u200b\u5904\u7406\u200b\u591a\u6001\u200b\u548c\u200b\u53d8\u4f53\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/variant/#_1","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"programming/cpp/type-erasure/variant/#_2","title":"\u5b9a\u4e49","text":"<p><code>std::variant</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u6a21\u677f\u200b\u7c7b\u200b\uff0c\u200b\u5141\u8bb8\u200b\u7a0b\u5e8f\u5458\u200b\u5728\u200b\u5b9a\u4e49\u200b\u65f6\u200b\u6307\u5b9a\u200b\u591a\u4e2a\u200b\u7c7b\u578b\u200b\u3002\u200b\u5728\u200b\u5b9e\u4f8b\u200b\u5316\u540e\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u4f7f\u7528\u200b\u666e\u901a\u200b\u5bf9\u8c61\u200b\u4e00\u6837\u200b\u4f7f\u7528\u200b <code>std::variant</code>\uff0c\u200b\u5e76\u200b\u5728\u200b\u8fd0\u884c\u200b\u65f6\u200b\u5b58\u50a8\u200b\u8fd9\u4e9b\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u4e4b\u4e00\u200b\u7684\u200b\u503c\u200b\u3002</p>"},{"location":"programming/cpp/type-erasure/variant/#_3","title":"\u4f7f\u7528\u200b\u573a\u666f","text":"<ul> <li>\u200b\u5f53\u200b\u51fd\u6570\u200b\u53ef\u80fd\u200b\u8fd4\u56de\u200b\u591a\u79cd\u7c7b\u578b\u200b\u7684\u200b\u7ed3\u679c\u200b\u65f6\u200b\u3002</li> <li>\u200b\u5728\u200b\u9700\u8981\u200b\u5b58\u50a8\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u800c\u200b\u4e0d\u200b\u4f7f\u7528\u200b\u865a\u200b\u7ee7\u627f\u200b\u6216\u200b <code>void*</code> \u200b\u6307\u9488\u200b\u7684\u200b\u573a\u5408\u200b\u3002</li> <li>\u200b\u5904\u7406\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u8f93\u5165\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u5b89\u5168\u6027\u200b\u548c\u200b\u53ef\u7ef4\u62a4\u6027\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-erasure/variant/#_4","title":"\u57fa\u672c\u200b\u7528\u6cd5","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;variant&gt;\n#include &lt;string&gt;\n\nint main() {\n    std::variant&lt;int, double, std::string&gt; v; // v \u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b int\u3001double \u200b\u6216\u200b std::string\n\n    v = 42; // \u200b\u5b58\u50a8\u200b int\n    std::cout &lt;&lt; std::get&lt;int&gt;(v) &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a42\n\n    v = 3.14; // \u200b\u5b58\u50a8\u200b double\n    std::cout &lt;&lt; std::get&lt;double&gt;(v) &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1a3.14\n\n    v = \"Hello Variant\"; // \u200b\u5b58\u50a8\u200b string\n    std::cout &lt;&lt; std::get&lt;std::string&gt;(v) &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b\uff1aHello Variant\n\n    return 0;\n}\n</code></pre> <p>\u200b\u5f53\u200b\u8bbf\u95ee\u200b <code>std::variant</code> \u200b\u4e2d\u200b\u7684\u200b\u503c\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>std::get</code> \u200b\u51fd\u6570\u200b\u3001<code>std::get_if</code> \u200b\u6216\u8005\u200b\u8bbf\u95ee\u200b\u8bbf\u5f0f\u200b\u6765\u200b\u63d0\u53d6\u200b\u5b58\u50a8\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;variant&gt;\n\nstd::variant&lt;int, double, std::string&gt; v;\n\n// \u200b\u5b58\u50a8\u200b\u4e00\u4e2a\u200b int\nv = 10;\n\n// \u200b\u4f7f\u7528\u200b std::get \u200b\u6765\u200b\u8bbf\u95ee\u200b\ntry {\n    int value = std::get&lt;int&gt;(v); // \u200b\u6210\u529f\u200b\n    std::cout &lt;&lt; \"Integer value: \" &lt;&lt; value &lt;&lt; std::endl;\n\n    // \u200b\u8bd5\u56fe\u200b\u8bbf\u95ee\u200b\u4e0d\u200b\u76f8\u5173\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5c06\u200b\u629b\u51fa\u200b\u5f02\u5e38\u200b\n    double d = std::get&lt;double&gt;(v); // \u200b\u8fd9\u4e2a\u200b\u4f1a\u200b\u629b\u51fa\u200b std::bad_variant_access \u200b\u5f02\u5e38\u200b\n} catch (const std::bad_variant_access&amp; e) {\n    std::cout &lt;&lt; \"Caught exception: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n\n// \u200b\u4f7f\u7528\u200b std::get_if\nif (auto str_ptr = std::get_if&lt;std::string&gt;(&amp;v)) {\n    std::cout &lt;&lt; \"String value: \" &lt;&lt; *str_ptr &lt;&lt; std::endl;\n} else {\n    std::cout &lt;&lt; \"Variant does not hold a string.\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u200b\u5f53\u200b\u5c1d\u8bd5\u200b\u4ee5\u200b\u4e0d\u200b\u5339\u914d\u200b\u7684\u200b\u7c7b\u578b\u200b\u8bbf\u95ee\u200b\u503c\u65f6\u200b\uff0c\u200b\u629b\u51fa\u200b <code>std::bad_variant_access</code> \u200b\u5f02\u5e38\u200b\uff0c\u200b\u56e0\u6b64\u200b\u80fd\u591f\u200b\u786e\u4fdd\u200b\u5b89\u5168\u6027\u200b\u3002<code>std::get_if</code> \u200b\u53ef\u4ee5\u200b\u8fd4\u56de\u200b\u6307\u5411\u200b\u5b58\u50a8\u200b\u5728\u200b <code>std::variant</code> \u200b\u4e2d\u200b\u7c7b\u578b\u200b\u7684\u200b\u6307\u9488\u200b\uff0c\u200b\u5982\u679c\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b\uff0c\u200b\u5219\u200b\u8fd4\u56de\u200b <code>nullptr</code>\u3002</p>"},{"location":"programming/cpp/type-erasure/variant/#23","title":"2.3. \u200b\u8bbf\u95ee\u200b\u6301\u6709\u200b\u7684\u200b\u7c7b\u578b","text":"<p>\u200b\u5f53\u200b\u6211\u4eec\u200b\u9700\u8981\u200b\u6839\u636e\u200b\u6301\u6709\u200b\u7684\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u4e0d\u540c\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>std::visit</code>\uff0c\u200b\u8fd9\u662f\u200b\u65b9\u5f0f\u200b\u4e4b\u4e00\u200b\u6765\u200b\u5b89\u5168\u200b\u5730\u200b\u8bbf\u95ee\u200b <code>std::variant</code> \u200b\u4e2d\u200b\u7684\u200b\u503c\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;variant&gt;\n\nvoid visitor_function(const std::variant&lt;int, double, std::string&gt;&amp; v) {\n    std::visit([](auto&amp;&amp; arg) {\n        std::cout &lt;&lt; \"The value is: \" &lt;&lt; arg &lt;&lt; std::endl;\n    }, v);\n}\n\nint main() {\n    std::variant&lt;int, double, std::string&gt; v = \"Hello, Visitor!\";\n    visitor_function(v); // \u200b\u8f93\u51fa\u200b\uff1aThe value is: Hello, Visitor!\n\n    return 0;\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/","title":"<code>decltype</code> \u200b\u8be6\u89e3","text":"<p><code>decltype</code> \u200b\u662f\u200b C++11 \u200b\u5f15\u5165\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u63a8\u5bfc\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b83\u200b\u662f\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u7684\u200b\u91cd\u8981\u200b\u5de5\u5177\u200b\uff0c\u200b\u4e0e\u200b <code>auto</code> \u200b\u76f8\u6bd4\u200b\uff0c<code>decltype</code> \u200b\u53ef\u4ee5\u200b\u66f4\u200b\u7cbe\u786e\u200b\u5730\u200b\u83b7\u53d6\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u5177\u4f53\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4e0d\u200b\u5f3a\u5236\u200b\u5bf9\u200b\u8868\u8fbe\u5f0f\u200b\u8fdb\u884c\u200b\u6c42\u503c\u200b\u3002\u200b\u5b83\u200b\u5728\u200b\u6cdb\u578b\u200b\u7f16\u7a0b\u200b\u3001\u200b\u6a21\u677f\u200b\u5143\u200b\u7f16\u7a0b\u200b\u548c\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u4e2d\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/decltype/#_1","title":"\u57fa\u672c\u200b\u7528\u6cd5","text":"<pre><code>int x = 10;\ndecltype(x) y = 20;  // y \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c<code>decltype(x)</code> \u200b\u63a8\u5bfc\u200b\u51fa\u200b <code>x</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u4e3a\u200b <code>int</code>\uff0c\u200b\u56e0\u6b64\u200b <code>y</code> \u200b\u4e5f\u200b\u662f\u200b <code>int</code> \u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/decltype/#_2","title":"\u89c4\u5219\u200b\u548c\u200b\u884c\u4e3a","text":""},{"location":"programming/cpp/type-traits/decltype/#1","title":"1. \u200b\u975e\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5982\u679c\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u4e00\u4e2a\u200b\u53d8\u91cf\u200b\u6216\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\uff0c<code>decltype</code> \u200b\u4f1a\u200b\u8fd4\u56de\u200b\u5b83\u200b\u7684\u200b\u57fa\u7840\u200b\u7c7b\u578b\u200b\uff08\u200b\u5305\u62ec\u200b <code>const</code> \u200b\u4fee\u9970\u200b\uff09\u3002</p> <pre><code>const int a = 5;\ndecltype(a) b = 10;  // b \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b const int\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/#_3","title":"\u5f15\u7528\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5982\u679c\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u5de6\u503c\u200b\uff0c<code>decltype</code> \u200b\u4f1a\u200b\u63a8\u5bfc\u200b\u4e3a\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>int x = 5;\ndecltype((x)) y = x;  // y \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int&amp;\uff08\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\uff09\ny = 10;\nstd::cout &lt;&lt; x;  // \u200b\u8f93\u51fa\u200b\uff1a10\n</code></pre> <p>\u200b\u6ce8\u610f\u200b\uff1a<code>decltype((x))</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b <code>int&amp;</code>\uff0c\u200b\u56e0\u4e3a\u200b <code>(x)</code> \u200b\u662f\u200b\u5de6\u503c\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/decltype/#_4","title":"\u53f3\u503c\u200b\u63a8\u5bfc","text":"<p>\u200b\u5982\u679c\u200b\u8868\u8fbe\u5f0f\u200b\u662f\u200b\u53f3\u503c\u200b\uff0c<code>decltype</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b\u8be5\u200b\u7c7b\u578b\u200b\u672c\u8eab\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>int x = 5;\ndecltype(x + 1) y = 6;  // y \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/#decltype-auto","title":"<code>decltype</code> \u200b\u4e0e\u200b <code>auto</code> \u200b\u7684\u200b\u533a\u522b","text":""},{"location":"programming/cpp/type-traits/decltype/#1-auto","title":"1. <code>auto</code>","text":"<p><code>auto</code> \u200b\u5173\u952e\u5b57\u200b\u7528\u4e8e\u200b\u6839\u636e\u200b\u521d\u59cb\u5316\u200b\u8868\u8fbe\u5f0f\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u53d8\u91cf\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5ffd\u7565\u200b <code>const</code> \u200b\u548c\u200b\u5f15\u7528\u200b\u3002</p> <pre><code>int x = 5;\nauto y = x;  // y \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int\nx = 10;\ny = 15;\nstd::cout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y;  // \u200b\u8f93\u51fa\u200b\uff1a10 15\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/#decltype_1","title":"<code>decltype</code>","text":"<p><code>decltype</code> \u200b\u4e0d\u4f1a\u200b\u5ffd\u7565\u200b\u8868\u8fbe\u5f0f\u200b\u4e2d\u200b\u7684\u200b <code>const</code> \u200b\u548c\u200b\u5f15\u7528\u200b\uff0c\u200b\u56e0\u6b64\u200b\u66f4\u200b\u7cbe\u786e\u200b\u3002</p> <pre><code>int x = 5;\ndecltype(x) y = x;  // y \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int\ndecltype((x)) z = x;  // z \u200b\u7684\u200b\u7c7b\u578b\u200b\u662f\u200b int&amp;\uff08\u200b\u5de6\u503c\u200b\u5f15\u7528\u200b\uff09\n\ny = 15;\nz = 20;\nstd::cout &lt;&lt; x &lt;&lt; \" \" &lt;&lt; y;  // \u200b\u8f93\u51fa\u200b\uff1a20 15\n</code></pre> <p>\u200b\u56e0\u6b64\u200b\uff0c<code>auto</code> \u200b\u504f\u5411\u200b\u4e8e\u200b\u63a8\u5bfc\u200b\u51fa\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff0c\u200b\u800c\u200b <code>decltype</code> \u200b\u4f1a\u200b\u4fdd\u7559\u200b\u5f15\u7528\u200b\u548c\u200b <code>const</code> \u200b\u4fee\u9970\u7b26\u200b\uff0c\u200b\u56e0\u6b64\u200b\u66f4\u52a0\u200b\u7cbe\u786e\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/decltype/#_5","title":"\u6a21\u677f\u200b\u7f16\u7a0b","text":"<pre><code>#include &lt;utility&gt;  // std::declval\n\ntemplate &lt;typename T&gt;\nauto get_member_type() -&gt; decltype(std::declval&lt;T&gt;().member) {\n    // \u200b\u8fd4\u56de\u200b\u67d0\u4e2a\u200b\u7c7b\u200b\u7684\u200b\u6210\u5458\u200b\u7c7b\u578b\u200b\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u91cc\u200b\uff0c\u200b\u5373\u4f7f\u200b\u6ca1\u6709\u200b\u5bf9\u8c61\u200b\u5b9e\u4f8b\u200b\uff0c<code>std::declval</code> \u200b\u4e5f\u200b\u80fd\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\uff0c\u200b\u8ba9\u200b <code>decltype</code> \u200b\u80fd\u200b\u63a8\u5bfc\u200b\u6210\u5458\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/decltype/#_6","title":"\u793a\u4f8b","text":""},{"location":"programming/cpp/type-traits/decltype/#_7","title":"\u6a21\u677f\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5728\u200b\u6a21\u677f\u200b\u51fd\u6570\u200b\u4e2d\u200b\uff0c<code>decltype</code> \u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u51fd\u6570\u200b\u4f53\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u63a8\u5bfc\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>template &lt;typename T1, typename T2&gt;\nauto multiply(T1 a, T2 b) -&gt; decltype(a * b) {\n    return a * b;\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/#lambda","title":"\u6cdb\u578b\u200b Lambda \u200b\u8868\u8fbe\u5f0f","text":"<p>\u200b\u5728\u200b C++14 \u200b\u53ca\u200b\u4ee5\u4e0a\u200b\uff0c\u200b\u7ed3\u5408\u200b\u6cdb\u578b\u200b Lambda \u200b\u548c\u200b <code>decltype</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002</p> <pre><code>auto lambda = [](auto a, auto b) -&gt; decltype(a + b) {\n    return a + b;\n};\n\nstd::cout &lt;&lt; lambda(1, 2.5) &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a3.5\n</code></pre>"},{"location":"programming/cpp/type-traits/decltype/#sfinae","title":"\u7c7b\u578b\u200b\u8403\u53d6\u200b\u4e0e\u200b SFINAE","text":"<p><code>decltype</code> \u200b\u4e0e\u200b <code>std::enable_if</code> \u200b\u7ed3\u5408\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u6a21\u677f\u200b\u7684\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u3002</p> <pre><code>#include &lt;type_traits&gt;\n\ntemplate &lt;typename T&gt;\nauto print_if_integer(T value) -&gt; typename std::enable_if_v&lt;std::is_integral&lt;T&gt;::value, void&gt; {\n    std::cout &lt;&lt; \"Integer: \" &lt;&lt; value &lt;&lt; std::endl;\n}\n\nint main() {\n    print_if_integer(42);  // \u200b\u8f93\u51fa\u200b\uff1aInteger: 42\n    // print_if_integer(3.14);  // \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff1adouble \u200b\u4e0d\u662f\u200b\u6574\u6570\u200b\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/declval/","title":"<code>std::declval</code> \u200b\u5728\u200b C++ \u200b\u4e2d\u200b\u7684\u200b\u5e94\u7528","text":"<p><code>std::declval</code> \u200b\u662f\u200b C++ \u200b\u6807\u51c6\u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\u6a21\u677f\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u5728\u200b\u5934\u6587\u4ef6\u200b <code>&lt;utility&gt;</code> \u200b\u4e2d\u200b\u3002\u200b\u5b83\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7f16\u8bd1\u200b\u671f\u200b\u5de5\u5177\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u4e0d\u200b\u5b9e\u9645\u200b\u6784\u9020\u200b\u5bf9\u8c61\u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u83b7\u53d6\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\u3002\u200b\u5176\u200b\u4e3b\u8981\u7528\u9014\u200b\u662f\u200b\u5728\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u63a8\u65ad\u51fa\u200b\u7279\u5b9a\u200b\u7c7b\u578b\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\uff0c\u200b\u800c\u200b\u65e0\u9700\u200b\u5173\u5fc3\u200b\u8be5\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u6709\u200b\u6784\u9020\u51fd\u6570\u200b\uff0c\u200b\u6216\u8005\u200b\u8be5\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u53ef\u4ee5\u200b\u88ab\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_1","title":"\u4f5c\u7528","text":"<p><code>std::declval</code> \u200b\u5141\u8bb8\u200b\u4f60\u200b\u201c\u200b\u4f2a\u9020\u200b\u201d\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\uff0c\u200b\u5373\u4f7f\u200b\u4f60\u200b\u6ca1\u6709\u200b\u529e\u6cd5\u200b\u5b9e\u9645\u200b\u521b\u5efa\u200b\u8be5\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002\u200b\u8fd9\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u63a8\u65ad\u200b\u7c7b\u578b\u200b\u3001\u200b\u68c0\u67e5\u200b\u7c7b\u578b\u200b\u7279\u6027\u200b\u6216\u8005\u200b\u51fd\u6570\u200b\u91cd\u8f7d\u200b\u89e3\u6790\u200b\u65f6\u200b\u7279\u522b\u200b\u6709\u7528\u200b\u3002</p> <ul> <li>\u200b\u7f16\u8bd1\u200b\u671f\u200b\u63a8\u65ad\u200b\uff1a\u200b\u5229\u7528\u200b <code>std::declval</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u65f6\u200b\u786e\u5b9a\u200b\u7c7b\u578b\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u5bf9\u8c61\u200b\u3002</li> <li>SFINAE\uff1a<code>std::declval</code> \u200b\u5e38\u7528\u200b\u4e8e\u200b SFINAE\uff08Substitution Failure Is Not An Error\uff09\u200b\u6280\u5de7\u200b\u4e2d\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5c1d\u8bd5\u200b\u63a8\u65ad\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u8c03\u7528\u200b\u662f\u5426\u200b\u6709\u6548\u200b\uff0c\u200b\u6765\u200b\u51b3\u5b9a\u200b\u6a21\u677f\u200b\u7684\u200b\u7279\u5316\u200b\u6216\u200b\u91cd\u8f7d\u200b\u3002</li> </ul> <p>\u200b\u56e0\u4e3a\u200b <code>std::declval</code> \u200b\u672c\u8eab\u200b\u4e0d\u4f1a\u200b\u4ea7\u751f\u200b\u5b9e\u9645\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4ec5\u4ec5\u200b\u662f\u200b\u63d0\u4f9b\u200b\u7c7b\u578b\u4fe1\u606f\u200b\uff0c\u200b\u6240\u4ee5\u200b\u5b83\u200b\u53ea\u80fd\u200b\u7528\u4e8e\u200b <code>decltype</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\uff0c\u200b\u800c\u200b\u4e0d\u80fd\u200b\u88ab\u200b\u7528\u4e8e\u200b\u8fd0\u884c\u200b\u65f6\u200b\u7684\u200b\u5b9e\u9645\u200b\u4ee3\u7801\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_2","title":"\u8bed\u6cd5","text":"<pre><code>template&lt;class T&gt;\ntypename std::add_rvalue_reference&lt;T&gt;::type declval() noexcept;\n</code></pre> <p><code>std::declval&lt;T&gt;()</code> \u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b <code>T&amp;&amp;</code>\uff0c\u200b\u5373\u200b\u7c7b\u578b\u200b <code>T</code> \u200b\u7684\u200b\u53f3\u503c\u200b\u5f15\u7528\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_3","title":"\u5178\u578b\u200b\u7528\u6cd5","text":""},{"location":"programming/cpp/type-traits/declval/#_4","title":"\u63a8\u65ad\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b","text":"<p>\u200b\u5982\u679c\u200b\u4f60\u200b\u6709\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b <code>f()</code>\uff0c\u200b\u4f60\u200b\u4e0d\u200b\u77e5\u9053\u200b\u5b83\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u60f3\u8981\u200b\u63a8\u65ad\u200b\u5b83\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u800c\u200b\u4e0d\u200b\u5b9e\u9645\u200b\u8c03\u7528\u200b\u5b83\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>decltype(std::declval&lt;Foo&gt;().f())</code> \u200b\u8fd9\u6837\u200b\u7684\u200b\u8868\u8fbe\u5f0f\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_5","title":"\u793a\u4f8b","text":""},{"location":"programming/cpp/type-traits/declval/#_6","title":"\u63a8\u65ad\u200b\u51fd\u6570\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;utility&gt;\n\nstruct Foo {\n    int getValue() { return 42; }\n};\n\ntemplate&lt;typename T&gt;\nauto getReturnType() -&gt; decltype(std::declval&lt;T&gt;().getValue()) {\n    // \u200b\u8fd9\u4e2a\u200b\u51fd\u6570\u200b\u4e0d\u4f1a\u200b\u88ab\u200b\u5b9e\u9645\u200b\u8c03\u7528\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u63a8\u65ad\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\n}\n\nint main() {\n    // \u200b\u901a\u8fc7\u200b decltype \u200b\u63a8\u65ad\u200b Foo::getValue \u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\n    decltype(getReturnType&lt;Foo&gt;()) result = 42;\n    std::cout &lt;&lt; result &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b 42\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c<code>std::declval&lt;T&gt;().getValue()</code> \u200b\u88ab\u200b\u7528\u6765\u200b\u63a8\u65ad\u200b <code>T</code> \u200b\u7c7b\u578b\u200b\u4e2d\u200b <code>getValue()</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_7","title":"\u65e0\u6cd5\u200b\u5b9e\u4f8b\u200b\u5316\u200b\u7c7b\u578b\u200b\u65f6\u200b\u7684\u200b\u4f7f\u7528","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;utility&gt;\n\nstruct NoDefaultConstructor {\n    NoDefaultConstructor(int) {}\n    int getValue() const { return 100; }\n};\n\ntemplate&lt;typename T&gt;\nauto test() -&gt; decltype(std::declval&lt;T&gt;().getValue()) {\n    // \u200b\u8fd9\u91cc\u200b\u6211\u4eec\u200b\u4e0d\u80fd\u200b\u5b9e\u4f8b\u200b\u5316\u200b NoDefaultConstructor\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u63a8\u65ad\u200b\u5b83\u200b\u7684\u200b\u6210\u5458\u200b\u51fd\u6570\u200b getValue \u200b\u7684\u200b\u7c7b\u578b\u200b\n}\n\nint main() {\n    // \u200b\u63a8\u65ad\u51fa\u200b NoDefaultConstructor::getValue \u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u4e3a\u200b int\n    decltype(test&lt;NoDefaultConstructor&gt;()) value = 100;\n    std::cout &lt;&lt; value &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b 100\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/declval/#sfinae","title":"SFINAE","text":"<p><code>std::declval</code> \u200b\u4e5f\u200b\u7ecf\u5e38\u200b\u7528\u4e8e\u200b SFINAE \u200b\u6280\u672f\u200b\u4e2d\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u7f16\u8bd1\u5668\u200b\u5728\u200b\u67d0\u4e9b\u200b\u7c7b\u578b\u200b\u548c\u200b\u8868\u8fbe\u5f0f\u200b\u5408\u6cd5\u200b\u65f6\u200b\u9009\u62e9\u200b\u7279\u5b9a\u200b\u7684\u200b\u6a21\u677f\u200b\u7248\u672c\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/declval/#_8","title":"\u7c7b\u578b\u200b\u7279\u5f81\u200b\u68c0\u67e5","text":"<pre><code>#include &lt;type_traits&gt;\n#include &lt;iostream&gt;\n#include &lt;utility&gt;\n\ntemplate&lt;typename T&gt;\nauto has_toString(int) -&gt; decltype(std::declval&lt;T&gt;().toString(), std::true_type());\n\ntemplate&lt;typename&gt;\nstd::false_type has_toString(...);\n\nstruct A {\n    void toString() const { }\n};\n\nstruct B { };\n\nint main() {\n    std::cout &lt;&lt; std::boolalpha;\n    std::cout &lt;&lt; \"A has toString: \" &lt;&lt; decltype(has_toString&lt;A&gt;(0))::value &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b true\n    std::cout &lt;&lt; \"B has toString: \" &lt;&lt; decltype(has_toString&lt;B&gt;(0))::value &lt;&lt; std::endl; // \u200b\u8f93\u51fa\u200b false\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/","title":"\u51fd\u6570\u200b\u8403\u53d6","text":"<p>\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\u662f\u200b C++ \u200b\u5143\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u4e00\u9879\u200b\u6280\u672f\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u5206\u6790\u200b\u548c\u200b\u83b7\u53d6\u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u3001\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u3001\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u7b49\u200b\u7279\u6027\u200b\u3002\u200b\u901a\u8fc7\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u66f4\u52a0\u200b\u7075\u6d3b\u200b\u7684\u200b\u6cdb\u578b\u200b\u7f16\u7a0b\u200b\uff0c\u200b\u4f8b\u5982\u200b\u901a\u8fc7\u200b\u6a21\u677f\u200b\u6839\u636e\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\u81ea\u52a8\u200b\u63a8\u5bfc\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6216\u8005\u200b\u5224\u65ad\u200b\u5bf9\u8c61\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002C++ \u200b\u6807\u51c6\u200b\u5e93\u200b\u4e5f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u5de5\u5177\u200b\u6765\u200b\u652f\u6301\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b <code>&lt;functional&gt;</code> \u200b\u548c\u200b <code>&lt;type_traits&gt;</code> \u200b\u4e2d\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/function_traits/#_2","title":"\u51fd\u6570\u200b\u8403\u53d6\u200b\u7684\u200b\u6838\u5fc3","text":"<ol> <li> <p>\u200b\u51fd\u6570\u200b\u7b7e\u540d\u200b\uff1a\u200b\u51fd\u6570\u200b\u7684\u200b\u5b8c\u6574\u200b\u7c7b\u578b\u200b\u63cf\u8ff0\u200b\uff0c\u200b\u5305\u62ec\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u3001\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u53ca\u5176\u200b\u987a\u5e8f\u200b\u3002</p> </li> <li> <p>\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff08Callable Object\uff09\uff1a\u200b\u5728\u200b C++ \u200b\u4e2d\u200b\uff0c\u200b\u51fd\u6570\u200b\u3001\u200b\u51fd\u6570\u6307\u9488\u200b\u3001lambda \u200b\u8868\u8fbe\u5f0f\u200b\u3001\u200b\u4eff\u200b\u51fd\u6570\u200b\uff08functor\uff09\u200b\u7b49\u200b\u90fd\u200b\u5c5e\u4e8e\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002</p> </li> <li> <p>\u200b\u51fd\u6570\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\uff1aC++ \u200b\u7684\u200b\u6a21\u677f\u200b\u5143\u200b\u7f16\u7a0b\u200b\u548c\u200b <code>decltype</code> \u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u63a8\u5bfc\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\u6216\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ece\u800c\u200b\u51cf\u5c11\u200b\u4ee3\u7801\u200b\u5197\u4f59\u200b\u3002</p> </li> </ol> <p>\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\u4e3b\u8981\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>\u200b\u83b7\u53d6\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\uff1a\u200b\u63a8\u5bfc\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6216\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u5206\u6790\u200b\uff1a\u200b\u68c0\u67e5\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u7b26\u5408\u200b\u7279\u5b9a\u200b\u8981\u6c42\u200b\u3002</li> <li>\u200b\u5224\u65ad\u200b\u5bf9\u8c61\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-traits/function_traits/#_3","title":"\u51fd\u6570\u200b\u8403\u53d6\u200b\u4f7f\u7528","text":""},{"location":"programming/cpp/type-traits/function_traits/#_4","title":"\u63a8\u5bfc\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b","text":""},{"location":"programming/cpp/type-traits/function_traits/#decltype","title":"\u4f7f\u7528\u200b <code>decltype</code>","text":"<p><code>decltype</code> \u200b\u662f\u200b C++11 \u200b\u5f15\u5165\u200b\u7684\u200b\u5173\u952e\u5b57\u200b\uff0c\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u8868\u8fbe\u5f0f\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e38\u7528\u200b\u4e8e\u200b\u63a8\u5bfc\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n\ntemplate &lt;typename Func, typename... Args&gt;\nauto invoke(Func&amp;&amp; f, Args&amp;&amp;... args) -&gt; decltype(f(std::forward&lt;Args&gt;(args)...)) {\n    return f(std::forward&lt;Args&gt;(args)...);\n}\n\nint add(int a, int b) { return a + b; }\n\nint main() {\n    std::cout &lt;&lt; invoke(add, 1, 2) &lt;&lt; std::endl;  // \u200b\u8f93\u51fa\u200b\uff1a3\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/#stdinvoke_resultc17","title":"\u4f7f\u7528\u200b <code>std::invoke_result</code>\uff08C++17\uff09","text":"<p><code>std::invoke_result</code> \u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u8c03\u7528\u200b\u540e\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;type_traits&gt;\n\nint add(int a, int b) { return a + b; }\n\nint main() {\n    using result_type = std::invoke_result_t&lt;decltype(add), int, int&gt;;\n    static_assert(std::is_same_v&lt;result_type, int&gt;, \"Result type should be int\");\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/#_5","title":"\u5224\u65ad\u200b\u5bf9\u8c61\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61","text":""},{"location":"programming/cpp/type-traits/function_traits/#stdis_invocable","title":"\u4f7f\u7528\u200b <code>std::is_invocable</code>","text":"<p>C++17 \u200b\u5f15\u5165\u200b\u4e86\u200b <code>std::is_invocable</code>\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u5224\u65ad\u200b\u67d0\u200b\u5bf9\u8c61\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4e14\u200b\u5176\u200b\u53c2\u6570\u200b\u662f\u5426\u200b\u6b63\u786e\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;type_traits&gt;\n\nvoid func(int) {}\n\nint main() {\n    static_assert(std::is_invocable_v&lt;decltype(func), int&gt;, \"Function is callable with int\");\n    static_assert(!std::is_invocable_v&lt;decltype(func), double&gt;, \"Cannot call with double\");\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/#stdis_invocable_r","title":"\u4f7f\u7528\u200b <code>std::is_invocable_r</code>","text":"<p><code>std::is_invocable_r</code> \u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5224\u65ad\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u7b26\u5408\u200b\u9884\u671f\u200b\u3002</p> <pre><code>#include &lt;type_traits&gt;\n\nint add(int a, int b) { return a + b; }\n\nint main() {\n    static_assert(std::is_invocable_r_v&lt;int, decltype(add), int, int&gt;,\n                  \"The function should return an int\");\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/#_6","title":"\u63a8\u5bfc\u200b\u51fd\u6570\u53c2\u6570\u200b\u7c7b\u578b","text":"<p>\u200b\u4f7f\u7528\u200b <code>std::tuple_element</code> \u200b\u548c\u200b <code>std::tuple_size</code> \u200b\u5c06\u200b\u51fd\u6570\u200b\u7684\u200b\u53c2\u6570\u200b\u5217\u8868\u200b\u5305\u88c5\u200b\u6210\u200b <code>std::tuple</code>\uff0c\u200b\u5e76\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u5de5\u5177\u200b\u5206\u6790\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u3002</p> <pre><code>#include &lt;tuple&gt;\n#include &lt;type_traits&gt;\n#include &lt;iostream&gt;\n\ntemplate &lt;typename T&gt;\nstruct function_traits;\n\n// \u200b\u504f\u200b\u7279\u5316\u200b\uff1a\u200b\u63d0\u53d6\u200b\u51fd\u6570\u53c2\u6570\u200b\u7c7b\u578b\u200b\u548c\u200b\u8fd4\u56de\u503c\u200b\u7c7b\u578b\u200b\ntemplate &lt;typename Ret, typename... Args&gt;\nstruct function_traits&lt;Ret(Args...)&gt; {\n    using return_type = Ret;\n    using argument_tuple = std::tuple&lt;Args...&gt;;\n};\n\nint func(int, double) { return 42; }\n\nint main() {\n    using traits = function_traits&lt;decltype(func)&gt;;\n    using first_arg_type = std::tuple_element_t&lt;0, traits::argument_tuple&gt;;\n\n    static_assert(std::is_same_v&lt;first_arg_type, int&gt;, \"First argument should be int\");\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/function_traits/#_7","title":"\u6210\u5458\u200b\u51fd\u6570\u6307\u9488\u200b\u7684\u200b\u8403\u53d6","text":"<p>C++ \u200b\u4e2d\u200b\uff0c\u200b\u6210\u5458\u200b\u51fd\u6570\u6307\u9488\u200b\u4e5f\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u6a21\u677f\u200b\u8fdb\u884c\u200b\u63a8\u5bfc\u200b\u548c\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;type_traits&gt;\n\nstruct MyClass {\n    void member_func(int) {}\n};\n\ntemplate &lt;typename T&gt;\nstruct member_function_traits;\n\ntemplate &lt;typename ClassType, typename Ret, typename... Args&gt;\nstruct member_function_traits&lt;Ret (ClassType::*)(Args...)&gt; {\n    using return_type = Ret;\n    using class_type = ClassType;\n    using argument_tuple = std::tuple&lt;Args...&gt;;\n};\n\nint main() {\n    using traits = member_function_traits&lt;decltype(&amp;MyClass::member_func)&gt;;\n    static_assert(std::is_same_v&lt;traits::return_type, void&gt;, \"Return type should be void\");\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/intro/","title":"\u5f15\u8a00","text":""},{"location":"programming/cpp/type-traits/intro/#traits","title":"\u4ec0\u4e48\u200b\u662f\u200b\u8403\u53d6\u200b\uff08Traits\uff09","text":"<p>\u200b\u5728\u200b C++\u200b\u4e2d\u200b\uff0c\u200b\u8403\u53d6\u200b\uff08Traits\uff09\u200b\u662f\u200b\u4e00\u79cd\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u83b7\u53d6\u200b\u7c7b\u578b\u200b\u3001\u200b\u51fd\u6570\u200b\u6216\u200b\u6a21\u677f\u200b\u7684\u200b\u6027\u8d28\u200b\u548c\u200b\u7279\u5f81\u200b\u7684\u200b\u6280\u672f\u200b\u3002\u200b\u8403\u53d6\u200b\u80fd\u591f\u200b\u5e2e\u52a9\u200b\u7a0b\u5e8f\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u8bc6\u522b\u200b\u67d0\u4e9b\u200b\u7279\u6027\u200b\uff0c\u200b\u4ece\u800c\u200b\u751f\u6210\u200b\u66f4\u200b\u9ad8\u6548\u200b\u3001\u200b\u667a\u80fd\u200b\u7684\u200b\u4ee3\u7801\u200b\u3002\u200b\u8fd9\u79cd\u200b\u6280\u672f\u200b\u5728\u200b\u6cdb\u578b\u200b\u7f16\u7a0b\u200b\u3001\u200b\u5143\u200b\u7f16\u7a0b\u200b\u4ee5\u53ca\u200b\u9ad8\u6027\u80fd\u200b\u8ba1\u7b97\u200b\u4e2d\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\u3002</p> <p>\u200b\u8403\u53d6\u200b\u7684\u200b\u6838\u5fc3\u601d\u60f3\u200b\u662f\u200b\u901a\u8fc7\u200b\u5206\u6790\u200b\u548c\u200b\u64cd\u4f5c\u200b\u7c7b\u578b\u200b\u3001\u200b\u51fd\u6570\u200b\u3001\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u7f16\u8bd1\u200b\u671f\u200b\u7684\u200b\u51b3\u7b56\u200b\u548c\u200b\u4ee3\u7801\u751f\u6210\u200b\u3002\u200b\u4e0e\u200b\u8fd0\u884c\u200b\u671f\u200b\u591a\u6001\u200b\u4e0d\u540c\u200b\uff0c\u200b\u7f16\u8bd1\u200b\u671f\u200b\u8403\u53d6\u200b\u901a\u8fc7\u200b\u6a21\u677f\u200b\u4e0e\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u7a0b\u5e8f\u200b\u80fd\u591f\u200b\u5728\u200b\u4e0d\u200b\u589e\u52a0\u200b\u8fd0\u884c\u200b\u671f\u200b\u5f00\u9500\u200b\u7684\u200b\u524d\u63d0\u200b\u4e0b\u200b\u63d0\u5347\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u5b89\u5168\u6027\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/intro/#_2","title":"\u8403\u53d6\u200b\u7684\u200b\u610f\u4e49","text":"<ol> <li> <p>\u200b\u63d0\u9ad8\u200b\u4ee3\u7801\u200b\u901a\u7528\u6027\u200b\u548c\u200b\u53ef\u200b\u91cd\u7528\u200b\u6027\u200b\uff1a\u200b\u8403\u53d6\u200b\u652f\u6301\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u4e0e\u200b\u9009\u62e9\u200b\uff0c\u200b\u4f7f\u200b\u4ee3\u7801\u200b\u80fd\u591f\u200b\u5904\u7406\u200b\u66f4\u200b\u591a\u6837\u200b\u7684\u200b\u7c7b\u578b\u200b\u548c\u200b\u573a\u666f\u200b\u3002</p> </li> <li> <p>\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\uff1a\u200b\u901a\u8fc7\u200b\u7f16\u8bd1\u200b\u671f\u200b\u51b3\u7b56\u200b\u907f\u514d\u200b\u8fd0\u884c\u200b\u671f\u200b\u5f00\u9500\u200b\uff0c\u200b\u5982\u200b\u6761\u4ef6\u200b\u5224\u65ad\u200b\u6216\u200b\u7c7b\u578b\u200b\u68c0\u67e5\u200b\u3002</p> </li> <li> <p>\u200b\u4fdd\u8bc1\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\uff1a\u200b\u8403\u53d6\u200b\u6280\u672f\u200b\u80fd\u200b\u786e\u4fdd\u200b\u5728\u200b\u7f16\u8bd1\u200b\u9636\u6bb5\u200b\u6355\u6349\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5339\u914d\u200b\u6216\u200b\u4e0d\u200b\u7b26\u5408\u6761\u4ef6\u200b\u7684\u200b\u9519\u8bef\u200b\u3002</p> </li> <li> <p>\u200b\u5b9e\u73b0\u200b SFINAE \u200b\u4e0e\u200b Concepts\uff1a\u200b\u8fd9\u4e9b\u200b\u7279\u6027\u200b\u4f9d\u8d56\u4e8e\u200b\u7c7b\u578b\u200b\u6216\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\uff0c\u200b\u80fd\u591f\u200b\u5b9e\u73b0\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u548c\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7ea6\u675f\u200b\u3002</p> </li> </ol>"},{"location":"programming/cpp/type-traits/intro/#_3","title":"\u5e38\u89c1\u200b\u7684\u200b\u8403\u53d6\u200b\u7c7b\u522b","text":"<ol> <li> <p>\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\uff08Type Traits\uff09\uff1a</p> </li> <li> <p>\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u83b7\u53d6\u200b\u7c7b\u578b\u200b\u7684\u200b\u7279\u6027\u200b\u3001\u200b\u5224\u65ad\u200b\u7c7b\u578b\u200b\u5173\u7cfb\u200b\u6216\u200b\u8f6c\u6362\u200b\u7c7b\u578b\u200b\u3002</p> </li> <li> <p>\u200b\u4f8b\u5982\u200b\uff0c<code>std::is_integral</code>\u200b\u7528\u4e8e\u200b\u5224\u65ad\u200b\u67d0\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\uff0c<code>std::remove_reference</code>\u200b\u7528\u4e8e\u200b\u53bb\u9664\u200b\u5f15\u7528\u200b\u4fee\u9970\u7b26\u200b\u3002</p> </li> <li> <p>\u200b\u51fd\u6570\u200b\u8403\u53d6\u200b\uff08Function Traits\uff09\uff1a</p> </li> <li> <p>\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u5206\u6790\u200b\u51fd\u6570\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3001\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\uff0c\u200b\u6216\u200b\u5224\u65ad\u200b\u5bf9\u8c61\u200b\u662f\u5426\u200b\u4e3a\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u3002</p> </li> <li> <p>\u200b\u4f8b\u5982\u200b\uff0c<code>std::invoke_result</code>\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u53ef\u200b\u8c03\u7528\u200b\u5bf9\u8c61\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u3002</p> </li> <li> <p>\u200b\u6a21\u677f\u200b\u8403\u53d6\u200b\uff08Template Traits\uff09\uff1a</p> </li> <li>\u200b\u901a\u8fc7\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u63a8\u5bfc\u200b\u4e0e\u200b\u7279\u5316\u200b\uff0c\u200b\u5206\u6790\u200b\u6a21\u677f\u200b\u7c7b\u200b\u6216\u200b\u51fd\u6570\u200b\u7684\u200b\u7279\u6027\u200b\u3002</li> <li>\u200b\u4f8b\u5982\u200b\uff0c\u200b\u63d0\u53d6\u200b\u6a21\u677f\u200b\u5bb9\u5668\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\u6216\u200b\u5224\u65ad\u200b\u6a21\u677f\u200b\u5b9e\u4f8b\u200b\u662f\u5426\u200b\u7b26\u5408\u200b\u7279\u5b9a\u200b\u7ea6\u675f\u200b\u3002</li> </ol>"},{"location":"programming/cpp/type-traits/intro/#_4","title":"\u5e94\u7528\u200b\u573a\u666f","text":"<ol> <li> <p>\u200b\u6cdb\u578b\u200b\u5e93\u200b\u8bbe\u8ba1\u200b\uff1a</p> </li> <li> <p>\u200b\u6807\u51c6\u200b\u5e93\u5982\u200b<code>std::type_traits</code>\u200b\u548c\u200b<code>std::invoke</code>\u200b\u4f7f\u7528\u200b\u8403\u53d6\u200b\u6280\u672f\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u7f16\u8bd1\u200b\u671f\u200b\u7c7b\u578b\u200b\u5224\u65ad\u200b\u548c\u200b\u6761\u4ef6\u200b\u9009\u62e9\u200b\u3002</p> </li> <li> <p>\u200b\u667a\u80fd\u200b\u5bb9\u5668\u200b\u4e0e\u200b\u7b97\u6cd5\u200b\u4f18\u5316\u200b\uff1a</p> </li> <li> <p>\u200b\u6839\u636e\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u51b3\u5b9a\u200b\u6700\u4f18\u200b\u6570\u636e\u7ed3\u6784\u200b\u6216\u200b\u7b97\u6cd5\u200b\u7b56\u7565\u200b\u3002</p> </li> <li> <p>\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u4e0e\u200b\u4ee3\u7801\u200b\u7ea6\u675f\u200b\uff1a</p> </li> <li>\u200b\u4f7f\u7528\u200b\u8403\u53d6\u200b\u6280\u672f\u200b\u9632\u6b62\u200b\u8bef\u7528\u200b\u7c7b\u578b\u200b\uff0c\u200b\u5e76\u200b\u751f\u6210\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u63a5\u53e3\u200b\u3002</li> </ol>"},{"location":"programming/cpp/type-traits/template_traits/","title":"\u6a21\u677f\u200b\u8403\u53d6","text":""},{"location":"programming/cpp/type-traits/template_traits/#_2","title":"\u6a21\u677f\u200b\u8403\u53d6\u200b\u7684\u200b\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ol> <li> <p>\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\uff1a\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u662f\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\uff08\u200b\u5982\u200b <code>T</code>\uff09\u3001\u200b\u975e\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\uff08\u200b\u5982\u200b <code>int</code>\uff09\uff0c\u200b\u751a\u81f3\u200b\u662f\u200b\u6a21\u677f\u200b\u672c\u8eab\u200b\u3002</p> </li> <li> <p>\u200b\u6a21\u677f\u200b\u7279\u5316\u200b\u4e0e\u200b\u504f\u200b\u7279\u5316\u200b\uff1a\u200b\u901a\u8fc7\u200b\u6a21\u677f\u200b\u7684\u200b\u504f\u200b\u7279\u5316\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u5bf9\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u7cbe\u7ec6\u200b\u5339\u914d\u200b\u548c\u200b\u63d0\u53d6\u200b\u3002</p> </li> <li> <p>SFINAE \u200b\u4e0e\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\uff1a\u200b\u7ed3\u5408\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u548c\u200b\u6a21\u677f\u200b\u5143\u200b\u7f16\u7a0b\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6a21\u677f\u200b\u5b9e\u4f8b\u200b\u3002</p> </li> <li> <p>Concepts\uff1aC++20 \u200b\u4e2d\u200b\u7684\u200b Concepts \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u7b80\u6d01\u200b\u7684\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7ea6\u675f\u200b\u548c\u200b\u5339\u914d\u200b\u3002</p> </li> </ol>"},{"location":"programming/cpp/type-traits/template_traits/#_3","title":"\u7c7b\u200b\u6a21\u677f\u200b\u8403\u53d6","text":""},{"location":"programming/cpp/type-traits/template_traits/#_4","title":"\u7c7b\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u8403\u53d6","text":"<p>\u200b\u7c7b\u200b\u6a21\u677f\u200b\u7684\u200b\u8403\u53d6\u200b\u5e38\u7528\u200b\u6a21\u677f\u200b\u504f\u200b\u7279\u5316\u200b\u6765\u200b\u63d0\u53d6\u200b\u6a21\u677f\u200b\u7684\u200b\u53c2\u6570\u200b\u7c7b\u578b\u200b\u3002\u200b\u8fd9\u79cd\u200b\u6280\u672f\u200b\u9002\u7528\u200b\u4e8e\u200b\u5bb9\u5668\u200b\u7c7b\u200b\u3001\u200b\u667a\u80fd\u200b\u6307\u9488\u200b\u7b49\u200b\u6a21\u677f\u200b\u7c7b\u200b\u7684\u200b\u7c7b\u578b\u200b\u5206\u6790\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/template_traits/#stdvector","title":"\u63d0\u53d6\u200b <code>std::vector</code> \u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;type_traits&gt;\n\n// \u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u901a\u7528\u200b\u7684\u200b\u6a21\u677f\u200b\u7c7b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63d0\u53d6\u200b\u5bb9\u5668\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\ntemplate &lt;typename T&gt;\nstruct extract_element_type;\n\n// \u200b\u504f\u200b\u7279\u5316\u200b\uff1a\u200b\u5339\u914d\u200b std::vector\uff0c\u200b\u5e76\u200b\u63d0\u53d6\u200b\u5176\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\ntemplate &lt;typename T&gt;\nstruct extract_element_type&lt;std::vector&lt;T&gt;&gt; {\n    using type = T;\n};\n\nint main() {\n    using vec_type = std::vector&lt;int&gt;;\n    using element_type = extract_element_type&lt;vec_type&gt;::type;\n\n    static_assert(std::is_same_v&lt;element_type, int&gt;, \"Element type is int\");\n    std::cout &lt;&lt; \"Element type extracted successfully!\" &lt;&lt; std::endl;\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/template_traits/#_5","title":"\u68c0\u6d4b\u200b\u6a21\u677f\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u7b26\u5408\u200b\u67d0\u200b\u6761\u4ef6","text":"<p>\u200b\u7ed3\u5408\u200b <code>std::enable_if</code> \u200b\u548c\u200b\u6a21\u677f\u200b\u8403\u53d6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u6211\u4eec\u200b\u5e0c\u671b\u200b\u67d0\u4e2a\u200b\u51fd\u6570\u200b\u53ea\u200b\u63a5\u53d7\u200b\u5bb9\u5668\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/template_traits/#_6","title":"\u68c0\u6d4b\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b\u5bb9\u5668\u200b\u7c7b\u578b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;type_traits&gt;\n\n// \u200b\u901a\u7528\u200b\u6a21\u677f\u200b\uff1a\u200b\u5047\u8bbe\u200b\u7c7b\u578b\u200b\u4e0d\u662f\u200b\u5bb9\u5668\u200b\ntemplate &lt;typename T, typename = void&gt;\nstruct is_container : std::false_type {};\n\n// \u200b\u504f\u200b\u7279\u5316\u200b\uff1a\u200b\u5982\u679c\u200b\u7c7b\u578b\u200b\u6709\u200b `value_type` \u200b\u6210\u5458\u200b\uff0c\u200b\u5219\u200b\u5224\u65ad\u200b\u4e3a\u200b\u5bb9\u5668\u200b\u7c7b\u578b\u200b\ntemplate &lt;typename T&gt;\nstruct is_container&lt;T, std::void_t&lt;typename T::value_type&gt;&gt; : std::true_type {};\n\n// \u200b\u4f7f\u7528\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u786e\u4fdd\u200b\u51fd\u6570\u200b\u53ea\u200b\u63a5\u53d7\u200b\u5bb9\u5668\u200b\u7c7b\u578b\u200b\ntemplate &lt;typename T&gt;\ntypename std::enable_if&lt;is_container&lt;T&gt;::value&gt;::type\nprint_size(const T&amp; container) {\n    std::cout &lt;&lt; \"Container size: \" &lt;&lt; container.size() &lt;&lt; std::endl;\n}\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3};\n    print_size(vec);  // \u200b\u8f93\u51fa\u200b\uff1aContainer size: 3\n\n    // int x = 42;\n    // print_size(x);  // \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff1aint \u200b\u4e0d\u662f\u200b\u5bb9\u5668\u200b\u7c7b\u578b\u200b\n}\n</code></pre> <p>\u200b\u8bf4\u660e\u200b\uff1a\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u5229\u7528\u200b\u6a21\u677f\u200b\u504f\u200b\u7279\u5316\u200b\u548c\u200b <code>std::void_t</code> \u200b\u68c0\u6d4b\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b\u5bb9\u5668\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b <code>std::enable_if</code> \u200b\u5b9e\u73b0\u200b SFINAE\u3002</p>"},{"location":"programming/cpp/type-traits/template_traits/#concepts","title":"\u6a21\u677f\u200b\u8403\u53d6\u200b\u4e0e\u200b Concepts","text":"<p>C++20 \u200b\u5f15\u5165\u200b\u4e86\u200b Concepts\uff0c\u200b\u4f7f\u5f97\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u7ea6\u675f\u200b\u66f4\u52a0\u200b\u7b80\u6d01\u200b\u76f4\u89c2\u200b\u3002Concepts \u200b\u662f\u200b\u5bf9\u200b\u6a21\u677f\u200b\u8403\u53d6\u200b\u548c\u200b\u7c7b\u578b\u200b\u5339\u914d\u200b\u7684\u200b\u8fdb\u4e00\u6b65\u200b\u5c01\u88c5\u200b\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;concepts&gt;\n\ntemplate &lt;typename T&gt;\nconcept Integral = std::is_integral_v&lt;T&gt;;\n\n// \u200b\u53ea\u200b\u63a5\u53d7\u200b\u6574\u6570\u200b\nvoid print(Integral auto value) {\n    std::cout &lt;&lt; \"Integer: \" &lt;&lt; value &lt;&lt; std::endl;\n}\n\nint main() {\n    print(42);      // \u200b\u8f93\u51fa\u200b\uff1aInteger: 42\n    // print(3.14);  // \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff1a3.14 \u200b\u4e0d\u662f\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;concepts&gt;\n\ntemplate &lt;typename T&gt;\nconcept Container = requires(T t) {\n    typename T::value_type;\n    { t.size() } -&gt; std::convertible_to&lt;std::size_t&gt;;\n};\n\nvoid print_size(const Container auto&amp; container) {\n    std::cout &lt;&lt; \"Container size: \" &lt;&lt; container.size() &lt;&lt; std::endl;\n}\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3};\n    print_size(vec);\n\n    // int x = 42;\n    // print_size(x);\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/","title":"\u7c7b\u578b\u200b\u8403\u53d6\u200b\uff08Type Extraction\uff09","text":"<p>\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\uff08Type Traits / Type Extraction\uff09\u200b\u662f\u200b C++\u200b\u7f16\u8bd1\u200b\u671f\u5143\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u91cd\u8981\u200b\u5de5\u5177\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u64cd\u4f5c\u200b\u7c7b\u578b\u4fe1\u606f\u200b\uff0c\u200b\u5728\u200b\u7f16\u8bd1\u200b\u9636\u6bb5\u200b\u83b7\u53d6\u200b\u548c\u200b\u5224\u65ad\u200b\u7c7b\u578b\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u3001\u200b\u8f6c\u6362\u200b\u3001\u200b\u6761\u4ef6\u200b\u7f16\u8bd1\u200b\u7b49\u200b\u529f\u80fd\u200b\u3002\u200b\u8fd9\u200b\u7c7b\u200b\u6280\u672f\u200b\u7684\u200b\u4e3b\u8981\u200b\u76ee\u7684\u200b\u662f\u200b\u5728\u200b\u6cdb\u578b\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u6839\u636e\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\u505a\u51fa\u200b\u7f16\u8bd1\u200b\u671f\u200b\u51b3\u7b56\u200b\uff0c\u200b\u4f7f\u200b\u4ee3\u7801\u200b\u66f4\u200b\u901a\u7528\u200b\u3001\u200b\u66f4\u200b\u9ad8\u6548\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/type_traits/#_1","title":"\u6838\u5fc3\u200b\u6982\u5ff5","text":"<ul> <li>\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\uff08Type Extraction\uff09\uff1a\u200b\u6307\u5728\u200b\u7f16\u8bd1\u200b\u671f\u5bf9\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u68c0\u67e5\u200b\u3001\u200b\u64cd\u4f5c\u200b\u548c\u200b\u53d8\u6362\u200b\uff0c\u200b\u751f\u6210\u200b\u4e0e\u200b\u7c7b\u578b\u200b\u76f8\u5173\u200b\u7684\u200b\u5143\u200b\u4fe1\u606f\u200b\u3002C++\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u6807\u51c6\u200b\u5e93\u200b<code>&lt;type_traits&gt;</code>\u200b\u652f\u6301\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u3002</li> <li>\u200b\u7f16\u8bd1\u200b\u671f\u200b\u51b3\u7b56\u200b\uff1a\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u6280\u672f\u200b\u80fd\u591f\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u5728\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6839\u636e\u200b\u7c7b\u578b\u200b\u7279\u5f81\u200b\u5728\u200b\u7f16\u8bd1\u200b\u9636\u6bb5\u200b\u51b3\u5b9a\u200b\u4ee3\u7801\u200b\u7684\u200b\u751f\u6210\u200b\u8def\u5f84\u200b\uff0c\u200b\u907f\u514d\u200b\u8fd0\u884c\u200b\u671f\u200b\u68c0\u67e5\u200b\u3002</li> </ul>"},{"location":"programming/cpp/type-traits/type_traits/#_2","title":"\u5e38\u89c1\u200b\u8403\u53d6\u200b\u7528\u6cd5","text":""},{"location":"programming/cpp/type-traits/type_traits/#_3","title":"\u5224\u65ad\u200b\u7c7b\u578b\u200b\u7279\u6027","text":"<p>\u200b\u6807\u51c6\u200b\u5e93\u200b<code>&lt;type_traits&gt;</code>\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u5de5\u5177\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u7c7b\u578b\u200b\u7684\u200b\u7279\u6027\u200b\uff0c\u200b\u6bd4\u5982\u200b\u5224\u65ad\u200b\u67d0\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u4e3a\u200b\u6574\u6570\u200b\u3001\u200b\u6d6e\u70b9\u6570\u200b\u3001\u200b\u7c7b\u200b\u7c7b\u578b\u200b\u7b49\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u5de5\u5177\u200b\u591a\u4ee5\u200b<code>std::is_xxx</code>\u200b\u7684\u200b\u5f62\u5f0f\u200b\u63d0\u4f9b\u200b\uff0c\u200b\u8fd4\u56de\u200b\u7ed3\u679c\u200b\u4e3a\u200b<code>std::true_type</code>\u200b\u6216\u200b<code>std::false_type</code>\uff0c\u200b\u5206\u522b\u200b\u8868\u793a\u200b\u771f\u548c\u5047\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/type_traits/#_4","title":"\u6574\u6570\u200b\u548c\u200b\u6d6e\u70b9\u6570\u200b\u68c0\u67e5","text":"<pre><code>static_assert(std::is_integral_v&lt;int&gt;, \"int is an integral type\");\nstatic_assert(!std::is_floating_point_v&lt;int&gt;, \"int is not a floating-point type\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_5","title":"\u5224\u65ad\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u76f8\u540c","text":"<pre><code>static_assert(std::is_same_v&lt;int, int&gt;, \"Types are the same\");\nstatic_assert(!std::is_same_v&lt;int, float&gt;, \"Types are different\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_6","title":"\u5224\u65ad\u200b\u662f\u5426\u200b\u4e3a\u7c7b\u200b\u7c7b\u578b","text":"<pre><code>struct MyClass {};\nstatic_assert(std::is_class_v&lt;MyClass&gt;, \"MyClass is a class type\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_7","title":"\u7c7b\u578b\u8f6c\u6362\u200b\u4e0e\u200b\u4fee\u9970\u7b26\u200b\u64cd\u4f5c","text":"<p>\u200b\u5728\u200b\u6a21\u677f\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u7ecf\u5e38\u200b\u9700\u8981\u200b\u5bf9\u200b\u7c7b\u578b\u200b\u8fdb\u884c\u200b\u53d8\u6362\u200b\uff0c\u200b\u6bd4\u5982\u200b\u53bb\u9664\u200b<code>const</code>\u3001<code>volatile</code>\u200b\u4fee\u9970\u7b26\u200b\uff0c\u200b\u6216\u8005\u200b\u83b7\u53d6\u200b\u67d0\u200b\u7c7b\u578b\u200b\u7684\u200b\u57fa\u7840\u200b\u7c7b\u578b\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/type_traits/#_8","title":"\u53bb\u9664\u200b\u4fee\u9970\u7b26","text":"<pre><code>using Type = const int&amp;;\nusing CleanType = std::remove_const_t&lt;std::remove_reference_t&lt;Type&gt;&gt;;\nstatic_assert(std::is_same_v&lt;CleanType, int&gt;, \"Type is cleaned to int\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_9","title":"\u53bb\u9664\u200b\u6307\u9488\u200b\u6216\u200b\u5f15\u7528","text":"<pre><code>using PtrType = int*;\nusing BaseType = std::remove_pointer_t&lt;PtrType&gt;;\nstatic_assert(std::is_same_v&lt;BaseType, int&gt;, \"Base type is int\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_10","title":"\u8f6c\u6362\u200b\u679a\u4e3e\u200b\u7c7b\u578b","text":"<pre><code>enum class Color : int { Red, Green, Blue };\nusing UnderlyingType = std::underlying_type_t&lt;Color&gt;;\nstatic_assert(std::is_same_v&lt;UnderlyingType, int&gt;, \"Underlying type is int\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_11","title":"\u7c7b\u578b\u200b\u9009\u62e9\u200b\u4e0e\u200b\u6761\u4ef6\u200b\u5904\u7406","text":"<p>\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u6280\u672f\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u6a21\u677f\u200b\u4e2d\u200b\u7684\u200b\u6761\u4ef6\u200b\u9009\u62e9\u200b\u548c\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff0c\u200b\u8ba9\u200b\u6a21\u677f\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u6839\u636e\u200b\u7c7b\u578b\u200b\u7279\u6027\u200b\u505a\u51fa\u200b\u4e0d\u540c\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/type_traits/#stdconditional","title":"<code>std::conditional</code>\uff1a\u200b\u6761\u4ef6\u200b\u9009\u62e9\u200b\u7c7b\u578b","text":"<p>\u200b\u6839\u636e\u200b\u6761\u4ef6\u200b\u5728\u200b\u7f16\u8bd1\u200b\u671f\u200b\u9009\u62e9\u200b\u4e0d\u540c\u200b\u7c7b\u578b\u200b\uff1a</p> <pre><code>using Type = std::conditional_t&lt;true, int, double&gt;;\nstatic_assert(std::is_same_v&lt;Type, int&gt;, \"Selected type is int\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#stdenable_if-sfinae","title":"<code>std::enable_if</code>\uff1a\u200b\u5b9e\u73b0\u200b SFINAE","text":"<p>\u200b\u4f7f\u7528\u200b<code>std::enable_if</code>\u200b\u8fdb\u884c\u200b\u6a21\u677f\u200b\u9009\u62e9\u200b\uff0c\u200b\u53ea\u200b\u5141\u8bb8\u200b\u67d0\u4e9b\u200b\u7279\u5b9a\u200b\u7c7b\u578b\u200b\u901a\u8fc7\u200b\u7f16\u8bd1\u200b\uff1a</p> <pre><code>template &lt;typename T&gt;\ntypename std::enable_if&lt;std::is_integral_v&lt;T&gt;, T&gt;::type\nadd(T a, T b) {\n    return a + b;\n}\n\nint result = add(1, 2);  // \u200b\u6b63\u5e38\u200b\u7f16\u8bd1\u200b\n// double result = add(1.0, 2.0);  // \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_12","title":"\u5224\u65ad\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u53ef\u7528","text":"<p>\u200b\u5728\u200b\u5143\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u6709\u65f6\u200b\u9700\u8981\u200b\u5224\u65ad\u200b\u67d0\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u67d0\u4e2a\u200b\u6210\u5458\u200b\u51fd\u6570\u200b\u6216\u200b\u64cd\u4f5c\u7b26\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u505a\u6cd5\u200b\u662f\u200b\u5229\u7528\u200bSFINAE\uff08Substitution Failure Is Not An Error\uff09\u200b\u548c\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u7ed3\u5408\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u7f16\u8bd1\u200b\u671f\u200b\u68c0\u6d4b\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/type_traits/#_13","title":"\u5224\u65ad\u200b\u67d0\u200b\u7c7b\u578b\u200b\u662f\u5426\u200b\u652f\u6301\u200b\u67d0\u79cd\u200b\u64cd\u4f5c","text":"<pre><code>template &lt;typename T&gt;\nusing has_plus_operator = decltype(std::declval&lt;T&gt;() + std::declval&lt;T&gt;());\n\ntemplate &lt;typename T, typename = void&gt;\nstruct has_addition : std::false_type {};\n\ntemplate &lt;typename T&gt;\nstruct has_addition&lt;T, std::void_t&lt;has_plus_operator&lt;T&gt;&gt;&gt; : std::true_type {};\n\nstatic_assert(has_addition&lt;int&gt;, \"int supports + operator\");\nstatic_assert(!has_addition&lt;std::string&gt;, \"std::string does not support + operator\");\n</code></pre>"},{"location":"programming/cpp/type-traits/type_traits/#_14","title":"\u6848\u4f8b","text":""},{"location":"programming/cpp/type-traits/type_traits/#_15","title":"\u5b9e\u73b0\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u5bb9\u5668","text":"<p>\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u5229\u7528\u200b\u7c7b\u578b\u200b\u8403\u53d6\u200b\u5224\u65ad\u200b\u5bb9\u5668\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\uff0c\u200b\u786e\u4fdd\u200b\u53ea\u6709\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bb9\u5668\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u67d0\u4e9b\u200b\u64cd\u4f5c\u200b\u3002</p> <pre><code>#include &lt;vector&gt;\n#include &lt;type_traits&gt;\n\ntemplate &lt;typename Container&gt;\ntypename std::enable_if&lt;std::is_integral&lt;typename Container_type&gt;&gt;::type\nprocess(Container&amp; c) {\n    // \u200b\u53ea\u200b\u5141\u8bb8\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bb9\u5668\u200b\u8fdb\u884c\u200b\u5904\u7406\u200b\n    for (auto&amp; elem : c) {\n        elem += 1;\n    }\n}\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3};\n    process(vec);  // \u200b\u6b63\u5e38\u200b\u7f16\u8bd1\u200b\n\n    // std::vector&lt;double&gt; vec2 = {1.1, 2.2};\n    // process(vec2);  // \u200b\u7f16\u8bd1\u200b\u9519\u8bef\u200b\uff1adouble\u200b\u4e0d\u662f\u200b\u6574\u6570\u200b\u7c7b\u578b\u200b\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/when_typename/","title":"\u4ec0\u4e48\u200b\u65f6\u5019\u200b\u6a21\u677f\u200b\u524d\u200b\u5fc5\u987b\u200b\u52a0\u200b <code>typename</code>","text":"<p>\u200b\u5728\u200b C++ \u200b\u4e2d\u200b\uff0c<code>typename</code> \u200b\u548c\u200b <code>class</code> \u200b\u5173\u952e\u5b57\u200b\u7528\u4e8e\u200b\u58f0\u660e\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u3002\u200b\u7136\u800c\u200b\uff0c\u200b\u67d0\u4e9b\u200b\u7279\u5b9a\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u5fc5\u987b\u200b\u5728\u200b\u6a21\u677f\u200b\u8868\u8fbe\u5f0f\u200b\u524d\u200b\u52a0\u4e0a\u200b <code>typename</code>\uff0c\u200b\u4ee5\u200b\u544a\u77e5\u200b\u7f16\u8bd1\u5668\u200b\u67d0\u4e2a\u200b\u7b26\u53f7\u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\u800c\u200b\u975e\u200b\u6210\u5458\u200b\u6216\u200b\u53d8\u91cf\u200b\u3002\u200b\u8fd9\u200b\u662f\u56e0\u4e3a\u200b C++ \u200b\u7f16\u8bd1\u5668\u200b\u6709\u65f6\u200b\u65e0\u6cd5\u200b\u786e\u5b9a\u200b\u6a21\u677f\u200b\u4e2d\u200b\u5d4c\u5957\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\uff0c\u200b\u53ef\u80fd\u200b\u5c06\u200b\u5176\u200b\u8bef\u5224\u200b\u4e3a\u200b\u975e\u200b\u7c7b\u578b\u200b\u6210\u5458\u200b\u3002\u200b\u672c\u6587\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b <code>typename</code> \u200b\u5173\u952e\u5b57\u200b\u7684\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u6a21\u677f\u200b\u524d\u52a0\u200b <code>typename</code> \u200b\u7684\u200b\u5fc5\u8981\u6027\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/when_typename/#typename_1","title":"\u5fc5\u987b\u200b\u4f7f\u7528\u200b <code>typename</code> \u200b\u7684\u200b\u573a\u666f","text":""},{"location":"programming/cpp/type-traits/when_typename/#_1","title":"\u5d4c\u5957\u200b\u4f9d\u8d56\u200b\u7c7b\u578b\u200b\u7684\u200b\u58f0\u660e","text":"<p>\u200b\u5f53\u200b\u5d4c\u5957\u200b\u7c7b\u578b\u200b\u4f9d\u8d56\u4e8e\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u65f6\u200b\uff08\u200b\u5373\u200b\u7c7b\u578b\u200b\u540d\u200b\u4f9d\u8d56\u4e8e\u200b\u53e6\u200b\u4e00\u4e2a\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\uff09\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u4f7f\u7528\u200b\u65f6\u200b\u52a0\u4e0a\u200b <code>typename</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nvoid foo() {\n    typename T::type value;  // \u200b\u544a\u8bc9\u200b\u7f16\u8bd1\u5668\u200b T::type \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7c7b\u578b\u200b\n}\n</code></pre> <pre><code>template &lt;typename T&gt;\nvoid foo() {\n    T::type value;  // \u200b\u9519\u8bef\u200b\uff1a\u200b\u7f16\u8bd1\u5668\u200b\u65e0\u6cd5\u200b\u786e\u5b9a\u200b T::type \u200b\u662f\u200b\u7c7b\u578b\u200b\u8fd8\u662f\u200b\u53d8\u91cf\u200b\n}\n</code></pre> <p>\u200b\u7f16\u8bd1\u5668\u200b\u4f1a\u200b\u62a5\u9519\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u5b83\u200b\u65e0\u6cd5\u200b\u786e\u5b9a\u200b <code>T::type</code> \u200b\u662f\u200b\u7c7b\u578b\u200b\u8fd8\u662f\u200b\u6210\u5458\u200b\u53d8\u91cf\u200b\u3002</p>"},{"location":"programming/cpp/type-traits/when_typename/#_2","title":"\u5d4c\u5957\u200b\u6a21\u677f\u200b\u7684\u200b\u7c7b\u578b\u200b\u6210\u5458","text":"<p>\u200b\u5f53\u200b\u6a21\u677f\u200b\u7c7b\u200b\u7684\u200b\u5d4c\u5957\u200b\u7c7b\u578b\u200b\u6210\u5458\u200b\u672c\u8eab\u200b\u4e5f\u200b\u4f9d\u8d56\u4e8e\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u65f6\u200b\uff0c\u200b\u4e5f\u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b <code>typename</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Outer {\n    using Inner = typename T::type;  // \u200b\u5fc5\u987b\u200b\u4f7f\u7528\u200b typename\n};\n</code></pre>"},{"location":"programming/cpp/type-traits/when_typename/#using","title":"\u7c7b\u578b\u200b\u522b\u540d\u200b\u6216\u200b <code>using</code> \u200b\u8bed\u53e5\u200b\u4e2d\u200b\u7684\u200b\u7c7b\u578b","text":"<p>\u200b\u5728\u200b\u6a21\u677f\u200b\u4e2d\u200b\u58f0\u660e\u200b\u7c7b\u578b\u200b\u522b\u540d\u200b\u65f6\u200b\uff0c\u200b\u4e5f\u200b\u9700\u8981\u200b\u5728\u200b\u6a21\u677f\u200b\u4f9d\u8d56\u200b\u7684\u200b\u7c7b\u578b\u200b\u524d\u200b\u52a0\u4e0a\u200b <code>typename</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nusing InnerType = typename T::type;  // \u200b\u5fc5\u987b\u200b\u52a0\u200b typename\n</code></pre>"},{"location":"programming/cpp/type-traits/when_typename/#decltype","title":"\u5f53\u200b\u7c7b\u578b\u200b\u51fa\u73b0\u200b\u5728\u200b <code>decltype</code> \u200b\u4e2d","text":"<p>\u200b\u5728\u200b <code>decltype</code> \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u6a21\u677f\u200b\u7c7b\u578b\u200b\u63a8\u5bfc\u200b\u65f6\u200b\uff0c\u200b\u5982\u679c\u200b\u8be5\u200b\u7c7b\u578b\u200b\u662f\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u7684\u200b\u5d4c\u5957\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ecd\u200b\u9700\u200b\u52a0\u4e0a\u200b <code>typename</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nauto get_type() -&gt; typename T::type {\n    return typename T::type{};\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/when_typename/#5","title":"5. \u200b\u5728\u200b\u6a21\u677f\u200b\u4e2d\u200b\u7684\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u63a8\u5bfc","text":"<p>\u200b\u5982\u679c\u200b\u8fd4\u56de\u200b\u7c7b\u578b\u200b\u662f\u200b\u5d4c\u5957\u200b\u7c7b\u578b\u200b\u7684\u200b\u6210\u5458\u200b\uff0c\u200b\u9700\u8981\u200b\u5728\u200b\u6a21\u677f\u200b\u4e2d\u663e\u5f0f\u200b\u5730\u200b\u4f7f\u7528\u200b <code>typename</code>\u3002</p> <pre><code>template &lt;typename T&gt;\ntypename T::type func() {\n    return typename T::type{};\n}\n</code></pre>"},{"location":"programming/cpp/type-traits/when_typename/#typename_2","title":"\u4f55\u65f6\u200b\u4e0d\u200b\u9700\u8981\u200b <code>typename</code>","text":""},{"location":"programming/cpp/type-traits/when_typename/#_3","title":"\u975e\u200b\u4f9d\u8d56\u200b\u7c7b\u578b","text":"<p>\u200b\u5f53\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u4f9d\u8d56\u4e8e\u200b\u6a21\u677f\u200b\u53c2\u6570\u200b\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b <code>typename</code>\u3002</p> <pre><code>struct Foo {\n    using type = int;\n};\n\nFoo::type a;  // \u200b\u4e0d\u200b\u9700\u8981\u200b typename\uff0c\u200b\u56e0\u4e3a\u200b Foo \u200b\u662f\u200b\u5df2\u77e5\u200b\u7c7b\u578b\u200b\n</code></pre>"},{"location":"programming/csharp/","title":"C# Programming","text":"<p>Welcome to the C# programming section! This collection focuses on .NET development with C#, covering essential topics from data structures to network programming. Whether you're building desktop applications, web services, or system utilities, you'll find practical guidance here.</p>"},{"location":"programming/csharp/#featured-content","title":"Featured Content","text":""},{"location":"programming/csharp/#data-structures","title":"Data Structures","text":"<p>Comprehensive guide to data structures in C#: - Built-in Collections - Arrays, Lists, Dictionaries, and Sets - Generic Collections - Type-safe collection implementations - Custom Data Structures - Building your own collections - Performance Characteristics - Choosing the right structure - LINQ Integration - Querying and manipulating collections</p>"},{"location":"programming/csharp/#tcp-programming","title":"TCP Programming","text":"<p>Network programming with TCP in C#: - Socket Programming - Low-level network communication - TcpClient and TcpListener - High-level TCP abstractions - Asynchronous Operations - Non-blocking network I/O - Error Handling - Robust network error management - Protocol Implementation - Building custom network protocols</p>"},{"location":"programming/csharp/#core-topics","title":"Core Topics","text":""},{"location":"programming/csharp/#data-structures-and-collections","title":"Data Structures and Collections","text":"<ul> <li>Array Types - Single and multi-dimensional arrays</li> <li>List - Dynamic arrays and list operations <li>Dictionary - Hash-based key-value storage <li>HashSet - Unique element collections <li>Queue and Stack - FIFO and LIFO collections <li>Custom Collections - Implementing IEnumerable and ICollection</li>"},{"location":"programming/csharp/#network-programming","title":"Network Programming","text":"<ul> <li>TCP/IP Fundamentals - Understanding network protocols</li> <li>Client-Server Architecture - Building networked applications</li> <li>Asynchronous Programming - async/await patterns for networking</li> <li>Serialization - Data transmission formats (JSON, XML, Binary)</li> <li>Security Considerations - Secure network communication</li> </ul>"},{"location":"programming/csharp/#net-framework-integration","title":".NET Framework Integration","text":"<ul> <li>System.Collections - Framework collection types</li> <li>System.Net - Network programming APIs</li> <li>System.Threading - Concurrent programming support</li> <li>System.IO - File and stream operations</li> <li>System.Text - String processing and encoding</li> </ul>"},{"location":"programming/csharp/#development-patterns","title":"Development Patterns","text":""},{"location":"programming/csharp/#object-oriented-design","title":"Object-Oriented Design","text":"<ul> <li>Encapsulation - Data hiding and access control</li> <li>Inheritance - Code reuse through class hierarchies</li> <li>Polymorphism - Runtime type behavior</li> <li>Interfaces - Contract-based programming</li> </ul>"},{"location":"programming/csharp/#functional-programming","title":"Functional Programming","text":"<ul> <li>LINQ - Language Integrated Query</li> <li>Lambda Expressions - Anonymous functions</li> <li>Delegates and Events - Function pointers and notifications</li> <li>Immutable Types - Thread-safe data structures</li> </ul>"},{"location":"programming/csharp/#asynchronous-programming","title":"Asynchronous Programming","text":"<ul> <li>Task-based Asynchronous Pattern (TAP) - Modern async programming</li> <li>async/await Keywords - Simplified asynchronous code</li> <li>ConfigureAwait - Context switching control</li> <li>Cancellation Tokens - Cooperative cancellation</li> </ul>"},{"location":"programming/csharp/#performance-and-optimization","title":"Performance and Optimization","text":""},{"location":"programming/csharp/#memory-management","title":"Memory Management","text":"<ul> <li>Garbage Collection - Understanding .NET memory management</li> <li>IDisposable Pattern - Resource cleanup</li> <li>Memory Profiling - Identifying memory leaks</li> <li>Value vs Reference Types - Performance implications</li> </ul>"},{"location":"programming/csharp/#collection-performance","title":"Collection Performance","text":"<ul> <li>Big O Complexity - Understanding algorithmic complexity</li> <li>Benchmarking - Measuring collection performance</li> <li>Memory Usage - Optimizing memory consumption</li> <li>Cache Locality - CPU cache-friendly programming</li> </ul>"},{"location":"programming/csharp/#network-optimization","title":"Network Optimization","text":"<ul> <li>Connection Pooling - Reusing network connections</li> <li>Buffering Strategies - Efficient data transfer</li> <li>Compression - Reducing network traffic</li> <li>Protocol Efficiency - Minimizing round trips</li> </ul>"},{"location":"programming/csharp/#best-practices","title":"Best Practices","text":""},{"location":"programming/csharp/#code-quality","title":"Code Quality","text":"<ul> <li>Naming Conventions - Following C# naming standards</li> <li>Error Handling - Exception handling best practices</li> <li>Code Documentation - XML documentation comments</li> <li>Unit Testing - Test-driven development approaches</li> </ul>"},{"location":"programming/csharp/#security","title":"Security","text":"<ul> <li>Input Validation - Preventing injection attacks</li> <li>Secure Communication - TLS/SSL implementation</li> <li>Authentication - User identity verification</li> <li>Authorization - Access control mechanisms</li> </ul>"},{"location":"programming/csharp/#deployment","title":"Deployment","text":"<ul> <li>Configuration Management - App settings and environment variables</li> <li>Logging - Structured logging with frameworks</li> <li>Monitoring - Application performance monitoring</li> <li>Packaging - NuGet packages and deployment strategies</li> </ul>"},{"location":"programming/csharp/#learning-path","title":"Learning Path","text":""},{"location":"programming/csharp/#beginner-level","title":"Beginner Level","text":"<ol> <li>Data Structures - Master built-in collections and their usage</li> <li>Basic TCP - Understand client-server communication fundamentals</li> <li>Error Handling - Learn exception handling patterns</li> </ol>"},{"location":"programming/csharp/#intermediate-level","title":"Intermediate Level","text":"<ol> <li>Advanced Collections - Custom implementations and performance tuning</li> <li>Asynchronous TCP - Non-blocking network programming</li> <li>Protocol Design - Building robust communication protocols</li> </ol>"},{"location":"programming/csharp/#advanced-level","title":"Advanced Level","text":"<ol> <li>Performance Optimization - Memory and CPU optimization techniques</li> <li>Scalable Architecture - Building high-performance networked systems</li> <li>Security Implementation - Secure coding practices</li> </ol> <p>Each section includes: - \ud83d\udcd6 Detailed Explanations - Comprehensive concept coverage - \ud83d\udcbb Working Examples - Practical, tested code samples - \ud83c\udfaf Best Practices - Industry-standard approaches - \u26a1 Performance Tips - Optimization techniques - \ud83d\udd12 Security Considerations - Safe coding practices</p> <p>Start with data structures to build a solid foundation, then move to network programming for distributed application development!</p>"},{"location":"programming/csharp/data-structure/","title":"C# \u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u6982\u8ff0","text":"<p>C# \u200b\u4f5c\u4e3a\u200b\u4e00\u79cd\u200b\u5f3a\u200b\u7c7b\u578b\u200b\u7684\u200b\u7f16\u7a0b\u8bed\u8a00\u200b\uff0c\u200b\u5185\u7f6e\u200b\u4e86\u200b\u591a\u79cd\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u9ad8\u6548\u200b\u5730\u200b\u5b58\u50a8\u200b\u3001\u200b\u8bbf\u95ee\u200b\u548c\u200b\u7ba1\u7406\u200b\u6570\u636e\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e3b\u8981\u200b\u5305\u542b\u200b\u5728\u200b <code>System.Collections</code>\u3001<code>System.Collections.Generic</code> \u200b\u548c\u200b <code>System.Collections.Concurrent</code> \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u3002\u200b\u4e0b\u9762\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u51e0\u79cd\u200b\u5e38\u7528\u200b\u7684\u200b C# \u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002</p>"},{"location":"programming/csharp/data-structure/#1-array","title":"1. \u200b\u6570\u7ec4\u200b\uff08Array\uff09","text":"<p>\u200b\u6570\u7ec4\u200b\u662f\u200b C# \u200b\u4e2d\u200b\u6700\u200b\u57fa\u672c\u200b\u7684\u200b\u96c6\u5408\u200b\u7c7b\u578b\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u4e00\u7ec4\u200b\u56fa\u5b9a\u200b\u5927\u5c0f\u200b\u7684\u200b\u540c\u200b\u7c7b\u578b\u200b\u5143\u7d20\u200b\u3002\u200b\u6570\u7ec4\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u901a\u8fc7\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u7d22\u5f15\u200b\u4ece\u200b 0 \u200b\u5f00\u59cb\u200b\u3002</p>"},{"location":"programming/csharp/data-structure/#_1","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u56fa\u5b9a\u200b\u5927\u5c0f\u200b\uff1a\u200b\u6570\u7ec4\u200b\u7684\u200b\u5927\u5c0f\u200b\u5728\u200b\u521b\u5efa\u200b\u65f6\u200b\u786e\u5b9a\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u591a\u7ef4\u200b\u6570\u7ec4\u200b\uff1aC# \u200b\u652f\u6301\u200b\u4e00\u7ef4\u200b\u6570\u7ec4\u200b\u3001\u200b\u4e8c\u7ef4\u200b\u6570\u7ec4\u200b\u548c\u200b\u591a\u7ef4\u200b\u6570\u7ec4\u200b\u3002</li> <li>\u200b\u6027\u80fd\u200b\u9ad8\u200b\uff1a\u200b\u7531\u4e8e\u200b\u6570\u7ec4\u200b\u7684\u200b\u5185\u5b58\u200b\u662f\u200b\u8fde\u7eed\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u8bbf\u95ee\u901f\u5ea6\u200b\u975e\u5e38\u200b\u5feb\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_2","title":"\u793a\u4f8b","text":"<pre><code>int[] numbers = new int[5]; // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b5\u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\nnumbers[0] = 10;             // \u200b\u901a\u8fc7\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\u5143\u7d20\u200b\nnumbers[1] = 20;             // \u200b\u8bbe\u7f6e\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b\nnumbers[2] = 30;             // \u200b\u8bbe\u7f6e\u200b\u7b2c\u4e09\u4e2a\u200b\u5143\u7d20\u200b\nConsole.WriteLine(numbers[0]); // \u200b\u8f93\u51fa\u200b: 10\nConsole.WriteLine(numbers[1]); // \u200b\u8f93\u51fa\u200b: 20\nConsole.WriteLine(numbers[2]); // \u200b\u8f93\u51fa\u200b: 30\n\n// \u200b\u4f7f\u7528\u200b\u5faa\u73af\u200b\u904d\u5386\u200b\u6570\u7ec4\u200b\nfor (int i = 0; i &lt; numbers.Length; i++)\n{\n    Console.WriteLine($\"Element at index {i}: {numbers[i]}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// Element at index 0: 10\n// Element at index 1: 20\n// Element at index 2: 30\n</code></pre>"},{"location":"programming/csharp/data-structure/#2-list","title":"2. \u200b\u5217\u8868\u200b\uff08List\uff09","text":"<p><code>List&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u52a8\u6001\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b83\u200b\u5728\u200b <code>System.Collections.Generic</code> \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\u5b9a\u4e49\u200b\u3002\u200b\u4e0e\u200b\u6570\u7ec4\u200b\u4e0d\u540c\u200b\uff0c<code>List&lt;T&gt;</code> \u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u9700\u8981\u200b\u52a8\u6001\u200b\u589e\u957f\u200b\u6216\u200b\u7f29\u5c0f\u200b\u3002</p>"},{"location":"programming/csharp/data-structure/#_3","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b\u5927\u5c0f\u200b\uff1a\u200b\u5f53\u200b\u5143\u7d20\u200b\u6570\u91cf\u200b\u8d85\u8fc7\u200b\u5bb9\u91cf\u200b\u65f6\u200b\uff0c\u200b\u5217\u8868\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u6269\u5c55\u200b\u3002</li> <li>\u200b\u63d0\u4f9b\u200b\u4e30\u5bcc\u200b\u7684\u200b\u64cd\u4f5c\u65b9\u6cd5\u200b\uff1a\u200b\u4f8b\u5982\u200b <code>Add()</code>\u3001<code>Remove()</code>\u3001<code>Insert()</code>\u3001<code>Sort()</code> \u200b\u7b49\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_4","title":"\u793a\u4f8b","text":"<pre><code>List&lt;int&gt; numbers = new List&lt;int&gt;();\nnumbers.Add(1);  // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 1\nnumbers.Add(2);  // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 2\nnumbers.Add(3);  // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 3\nnumbers.Remove(1); // \u200b\u79fb\u9664\u200b\u5143\u7d20\u200b 1\nnumbers.Insert(0, 4); // \u200b\u5728\u200b\u7d22\u5f15\u200b 0 \u200b\u63d2\u5165\u200b\u5143\u7d20\u200b 4\nnumbers.Sort(); // \u200b\u6392\u5e8f\u200b\u5217\u8868\u200b\nConsole.WriteLine(string.Join(\", \", numbers)); // \u200b\u8f93\u51fa\u200b: 2, 3, 4\n\n// \u200b\u4f7f\u7528\u200b\u5faa\u73af\u200b\u904d\u5386\u200b\u5217\u8868\u200b\nforeach (var number in numbers)\n{\n    Console.WriteLine(number);\n}\n// \u200b\u8f93\u51fa\u200b:\n// 2\n// 3\n// 4\n</code></pre>"},{"location":"programming/csharp/data-structure/#3-dictionary","title":"3. \u200b\u5b57\u5178\u200b\uff08Dictionary\uff09 <p><code>Dictionary&lt;TKey, TValue&gt;</code> \u200b\u662f\u200b\u952e\u503c\u200b\u5bf9\u200b\u5f62\u5f0f\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5141\u8bb8\u200b\u6839\u636e\u200b\u952e\u200b\u5feb\u901f\u200b\u67e5\u627e\u200b\u5bf9\u5e94\u200b\u7684\u200b\u503c\u200b\u3002\u200b\u5b83\u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u8868\u200b\u4f5c\u4e3a\u200b\u5e95\u5c42\u200b\u5b9e\u73b0\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_5","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u5feb\u901f\u200b\u67e5\u627e\u200b\uff1a\u200b\u57fa\u4e8e\u200b\u54c8\u5e0c\u200b\u7b97\u6cd5\u200b\uff0c\u200b\u67e5\u627e\u200b\u952e\u200b\u7684\u200b\u64cd\u4f5c\u200b\u5177\u6709\u200b O(1) \u200b\u7684\u200b\u5e73\u5747\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u3002</li> <li>\u200b\u952e\u200b\u552f\u4e00\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u952e\u200b\u5728\u200b\u5b57\u5178\u200b\u4e2d\u200b\u5fc5\u987b\u200b\u662f\u200b\u552f\u4e00\u200b\u7684\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_6","title":"\u793a\u4f8b","text":"<pre><code>Dictionary&lt;string, int&gt; ages = new Dictionary&lt;string, int&gt;();\nages.Add(\"Alice\", 30); // \u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\u5bf9\u200b\nages.Add(\"Bob\", 25);\nages[\"Charlie\"] = 35; // \u200b\u53e6\u200b\u4e00\u79cd\u200b\u6dfb\u52a0\u200b\u65b9\u5f0f\u200b\n\n// \u200b\u4f7f\u7528\u200b TryGetValue \u200b\u6765\u200b\u5b89\u5168\u200b\u83b7\u53d6\u200b\u503c\u200b\nif (ages.TryGetValue(\"Alice\", out int aliceAge))\n{\n    Console.WriteLine($\"Alice's age is {aliceAge}\"); // \u200b\u8f93\u51fa\u200b: Alice's age is 30\n}\n\n// \u200b\u904d\u5386\u200b\u5b57\u5178\u200b\nforeach (var kvp in ages)\n{\n    Console.WriteLine($\"{kvp.Key}: {kvp.Value}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// Alice: 30\n// Bob: 25\n// Charlie: 35\n</code></pre>"},{"location":"programming/csharp/data-structure/#4-queue","title":"4. \u200b\u961f\u5217\u200b\uff08Queue\uff09 <p><code>Queue&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u5148\u8fdb\u5148\u51fa\u200b\uff08FIFO\uff09\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u7b2c\u4e00\u4e2a\u200b\u8fdb\u5165\u200b\u961f\u5217\u200b\u7684\u200b\u5143\u7d20\u200b\u5c06\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u88ab\u200b\u79fb\u9664\u200b\u7684\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_7","title":"\u7279\u70b9","text":"<ul> <li>FIFO \u200b\u539f\u5219\u200b\uff1a\u200b\u9002\u7528\u200b\u4e8e\u200b\u4efb\u52a1\u200b\u6392\u961f\u200b\u3001\u200b\u6d88\u606f\u4f20\u9012\u200b\u7b49\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u63d0\u4f9b\u200b <code>Enqueue()</code> \u200b\u65b9\u6cd5\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\uff0c<code>Dequeue()</code> \u200b\u65b9\u6cd5\u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u961f\u5934\u200b\u5143\u7d20\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_8","title":"\u793a\u4f8b","text":"<pre><code>Queue&lt;string&gt; tasks = new Queue&lt;string&gt;();\ntasks.Enqueue(\"Task 1\"); // \u200b\u6dfb\u52a0\u200b\u4efb\u52a1\u200b 1\ntasks.Enqueue(\"Task 2\"); // \u200b\u6dfb\u52a0\u200b\u4efb\u52a1\u200b 2\ntasks.Enqueue(\"Task 3\"); // \u200b\u6dfb\u52a0\u200b\u4efb\u52a1\u200b 3\n\nwhile (tasks.Count &gt; 0)\n{\n    string nextTask = tasks.Dequeue(); // \u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u961f\u5934\u200b\u5143\u7d20\u200b\n    Console.WriteLine($\"Processing {nextTask}\"); // \u200b\u8f93\u51fa\u200b: Processing Task 1, Processing Task 2, Processing Task 3\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#5-stack","title":"5. \u200b\u6808\u200b\uff08Stack\uff09 <p><code>Stack&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u540e\u8fdb\u5148\u51fa\u200b\uff08LIFO\uff09\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u610f\u5473\u7740\u200b\u6700\u540e\u200b\u4e00\u4e2a\u200b\u8fdb\u5165\u200b\u6808\u200b\u7684\u200b\u5143\u7d20\u200b\u5c06\u200b\u662f\u200b\u7b2c\u4e00\u4e2a\u200b\u88ab\u200b\u79fb\u9664\u200b\u7684\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_9","title":"\u7279\u70b9","text":"<ul> <li>LIFO \u200b\u539f\u5219\u200b\uff1a\u200b\u9002\u7528\u200b\u4e8e\u200b\u9012\u5f52\u200b\u3001\u200b\u9006\u5e8f\u200b\u64cd\u4f5c\u200b\u7b49\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u63d0\u4f9b\u200b <code>Push()</code> \u200b\u65b9\u6cd5\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\uff0c<code>Pop()</code> \u200b\u65b9\u6cd5\u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u6808\u9876\u200b\u5143\u7d20\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_10","title":"\u793a\u4f8b","text":"<pre><code>Stack&lt;int&gt; stack = new Stack&lt;int&gt;();\nstack.Push(1); // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 1\nstack.Push(2); // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 2\nstack.Push(3); // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 3\n\nwhile (stack.Count &gt; 0)\n{\n    int top = stack.Pop(); // \u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u6808\u9876\u200b\u5143\u7d20\u200b\n    Console.WriteLine(top); // \u200b\u8f93\u51fa\u200b: 3, 2, 1\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#6-hashset","title":"6. \u200b\u96c6\u5408\u200b\uff08HashSet\uff09 <p><code>HashSet&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u65e0\u5e8f\u200b\u96c6\u5408\u200b\uff0c\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u4e0d\u200b\u91cd\u590d\u200b\u7684\u200b\u5143\u7d20\u200b\u3002\u200b\u5b83\u200b\u57fa\u4e8e\u200b\u54c8\u5e0c\u200b\u8868\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u5feb\u901f\u200b\u7684\u200b\u6dfb\u52a0\u200b\u3001\u200b\u5220\u9664\u200b\u548c\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_11","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u5143\u7d20\u200b\u552f\u4e00\u200b\uff1a\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0d\u4f1a\u200b\u91cd\u590d\u200b\u3002</li> <li>\u200b\u67e5\u627e\u200b\u901f\u5ea6\u200b\u5feb\u200b\uff1a\u200b\u7531\u4e8e\u200b\u4f7f\u7528\u200b\u54c8\u5e0c\u200b\u8868\u200b\uff0c\u200b\u67e5\u627e\u200b\u64cd\u4f5c\u200b\u975e\u5e38\u200b\u9ad8\u6548\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_12","title":"\u793a\u4f8b","text":"<pre><code>HashSet&lt;int&gt; numbers = new HashSet&lt;int&gt;();\nnumbers.Add(1); // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 1\nnumbers.Add(2); // \u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b 2\nnumbers.Add(2); // \u200b\u5c1d\u8bd5\u200b\u6dfb\u52a0\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b 2\uff08\u200b\u4e0d\u4f1a\u200b\u6dfb\u52a0\u200b\uff09\n\nConsole.WriteLine(numbers.Count); // \u200b\u8f93\u51fa\u200b: 2\n\n// \u200b\u4f7f\u7528\u200b\u5faa\u73af\u200b\u904d\u5386\u200b\u96c6\u5408\u200b\nforeach (var number in numbers)\n{\n    Console.WriteLine(number); // \u200b\u8f93\u51fa\u200b: 1, 2\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#7-linkedlist","title":"7. \u200b\u94fe\u8868\u200b\uff08LinkedList\uff09 <p><code>LinkedList&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b\u6570\u636e\u9879\u200b\u548c\u200b\u6307\u5411\u200b\u524d\u540e\u200b\u8282\u70b9\u200b\u7684\u200b\u5f15\u7528\u200b\u3002\u200b\u4e0e\u200b <code>List&lt;T&gt;</code> \u200b\u4e0d\u540c\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u9ad8\u6548\u200b\u7684\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u95f4\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_13","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u5bf9\u524d\u200b\u4e00\u4e2a\u200b\u548c\u200b\u540e\u200b\u4e00\u4e2a\u200b\u8282\u70b9\u200b\u7684\u200b\u5f15\u7528\u200b\u3002</li> <li>\u200b\u9002\u5408\u200b\u9891\u7e41\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\uff1a\u200b\u5728\u200b\u5217\u8868\u200b\u7684\u200b\u4efb\u610f\u200b\u4f4d\u7f6e\u200b\u63d2\u5165\u200b\u6216\u200b\u5220\u9664\u200b\u5143\u7d20\u200b\u7684\u200b\u6548\u7387\u200b\u8f83\u200b\u9ad8\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_14","title":"\u793a\u4f8b","text":"<pre><code>LinkedList&lt;string&gt; words = new LinkedList&lt;string&gt;();\nwords.AddLast(\"Hello\"); // \u200b\u6dfb\u52a0\u200b\u5230\u200b\u672b\u5c3e\u200b\nwords.AddLast(\"World\"); // \u200b\u6dfb\u52a0\u200b\u5230\u200b\u672b\u5c3e\u200b\nwords.AddFirst(\"Start\"); // \u200b\u6dfb\u52a0\u200b\u5230\u200b\u5f00\u5934\u200b\n\n// \u200b\u904d\u5386\u200b\u94fe\u8868\u200b\nforeach (var word in words)\n{\n    Console.WriteLine(word); // \u200b\u8f93\u51fa\u200b: Start, Hello, World\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#8-concurrent-collections","title":"8. \u200b\u5e76\u53d1\u200b\u96c6\u5408\u200b\uff08Concurrent Collections\uff09 <p>\u200b\u5728\u200b\u591a\u7ebf\u7a0b\u200b\u73af\u5883\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u65f6\u200b\uff0c\u200b\u666e\u901a\u200b\u96c6\u5408\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u6570\u636e\u200b\u7ade\u4e89\u200b\u548c\u200b\u4e0d\u200b\u4e00\u81f4\u200b\u3002\u200b\u4e3a\u4e86\u200b\u89e3\u51b3\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0cC# \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u5e76\u53d1\u200b\u96c6\u5408\u200b\uff0c\u200b\u5b83\u4eec\u200b\u4f4d\u4e8e\u200b <code>System.Collections.Concurrent</code> \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e2d\u200b\uff0c\u200b\u4f8b\u5982\u200b\uff1a</p> <ul> <li><code>ConcurrentDictionary&lt;TKey, TValue&gt;</code>\uff1a\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u5b57\u5178\u200b\u3002</li> <li><code>ConcurrentQueue&lt;T&gt;</code>\uff1a\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u961f\u5217\u200b\u3002</li> <li><code>ConcurrentStack&lt;T&gt;</code>\uff1a\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u6808\u200b\u3002</li> <li><code>BlockingCollection&lt;T&gt;</code>\uff1a\u200b\u63d0\u4f9b\u200b\u751f\u4ea7\u8005\u200b/\u200b\u6d88\u8d39\u8005\u200b\u6a21\u5f0f\u200b\u7684\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u96c6\u5408\u200b\u3002</li> </ul>","text":""},{"location":"programming/csharp/data-structure/#_15","title":"\u793a\u4f8b","text":"<pre><code>ConcurrentDictionary&lt;string, int&gt; concurrentDict = new ConcurrentDictionary&lt;string, int&gt;();\nconcurrentDict.TryAdd(\"key1\", 1); // \u200b\u5c1d\u8bd5\u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\u5bf9\u200b\nconcurrentDict.TryAdd(\"key2\", 2);\nint value = concurrentDict.GetOrAdd(\"key1\", 2); // \u200b\u83b7\u53d6\u200b\u6216\u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\nConsole.WriteLine(value); // \u200b\u8f93\u51fa\u200b: 1\n\n// \u200b\u904d\u5386\u200b\u5b57\u5178\u200b\nforeach (var kvp in concurrentDict)\n{\n    Console.WriteLine($\"{kvp.Key}: {kvp.Value}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// key1: 1\n// key2: 2\n</code></pre>"},{"location":"programming/csharp/data-structure/#9-sortedlist","title":"9. SortedList <p><code>SortedList&lt;TKey, TValue&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u6839\u636e\u200b\u952e\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\u96c6\u5408\u200b\u3002\u200b\u5b83\u200b\u7ed3\u5408\u200b\u4e86\u200b\u6570\u7ec4\u200b\u548c\u200b\u54c8\u5e0c\u200b\u8868\u200b\u7684\u200b\u7279\u70b9\u200b\uff0c\u200b\u80fd\u591f\u200b\u901a\u8fc7\u200b\u952e\u200b\u8fdb\u884c\u200b\u9ad8\u6548\u200b\u67e5\u627e\u200b\uff0c\u200b\u540c\u65f6\u200b\u4fdd\u8bc1\u200b\u952e\u200b\u6309\u200b\u987a\u5e8f\u6392\u5217\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_16","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\uff1a\u200b\u952e\u4f1a\u200b\u6839\u636e\u200b\u6bd4\u8f83\u200b\u89c4\u5219\u200b\u8fdb\u884c\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\u3002</li> <li>\u200b\u4e8c\u5206\u200b\u67e5\u627e\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u5feb\u901f\u200b\u5b9a\u4f4d\u200b\u5143\u7d20\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_17","title":"\u793a\u4f8b","text":"<pre><code>SortedList&lt;int, string&gt; sortedList = new SortedList&lt;int, string&gt;();\nsortedList.Add(2, \"Two\");\nsortedList.Add(1, \"One\");\nsortedList.Add(3, \"Three\");\n\nforeach (var kvp in sortedList)\n{\n    Console.WriteLine($\"{kvp.Key}: {kvp.Value}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// 1: One\n// 2: Two\n// 3: Three\n</code></pre>"},{"location":"programming/csharp/data-structure/#10-sortedset","title":"10. SortedSet <p><code>SortedSet&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\u4e14\u200b\u65e0\u200b\u91cd\u590d\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u5b83\u200b\u7ed3\u5408\u200b\u4e86\u200b <code>HashSet&lt;T&gt;</code> \u200b\u548c\u200b <code>SortedList&lt;TKey, TValue&gt;</code> \u200b\u7684\u200b\u7279\u70b9\u200b\u3002\u200b\u5b83\u200b\u57fa\u4e8e\u200b\u7ea2\u9ed1\u6811\u200b\u5b9e\u73b0\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_18","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u65e0\u200b\u91cd\u590d\u200b\u5143\u7d20\u200b\uff1a\u200b\u50cf\u200b <code>HashSet&lt;T&gt;</code> \u200b\u4e00\u6837\u200b\uff0c\u200b\u5143\u7d20\u200b\u4e0d\u80fd\u200b\u91cd\u590d\u200b\u3002</li> <li>\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\uff1a\u200b\u50cf\u200b <code>SortedList&lt;T&gt;</code> \u200b\u4e00\u6837\u200b\uff0c\u200b\u96c6\u5408\u200b\u4e2d\u200b\u7684\u200b\u5143\u7d20\u200b\u4fdd\u6301\u200b\u6392\u5e8f\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_19","title":"\u793a\u4f8b","text":"<pre><code>SortedSet&lt;int&gt; sortedSet = new SortedSet&lt;int&gt;();\nsortedSet.Add(3);\nsortedSet.Add(1);\nsortedSet.Add(2);\n\nforeach (var number in sortedSet)\n{\n    Console.WriteLine(number); // \u200b\u8f93\u51fa\u200b: 1, 2, 3\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#c_1","title":"C# \u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u6269\u5c55\u200b <p>C# \u200b\u4e2d\u200b\u7684\u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u975e\u5e38\u200b\u4e30\u5bcc\u200b\uff0c\u200b\u9664\u4e86\u200b\u524d\u9762\u200b\u4ecb\u7ecd\u200b\u7684\u200b\u51e0\u79cd\u200b\u5e38\u89c1\u200b\u6570\u636e\u7ed3\u6784\u200b\u5916\u200b\uff0c\u200b\u8fd8\u6709\u200b\u66f4\u200b\u591a\u200b\u6570\u636e\u7ed3\u6784\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e0d\u540c\u200b\u7684\u200b\u573a\u666f\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u66f4\u200b\u591a\u200b C# \u200b\u5185\u7f6e\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u4ee5\u53ca\u200b\u5b83\u4eec\u200b\u7684\u200b\u7279\u70b9\u200b\u548c\u200b\u9002\u7528\u200b\u573a\u666f\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#11-bitarray","title":"11. BitArray <p><code>BitArray</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7528\u4e8e\u200b\u9ad8\u6548\u200b\u5b58\u50a8\u200b\u548c\u200b\u5904\u7406\u200b\u5e03\u5c14\u503c\u200b\u96c6\u5408\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5b83\u200b\u4f7f\u7528\u200b\u4f4d\u200b\u8868\u793a\u6cd5\u200b\u5b58\u50a8\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u5b58\u50a8\u7a7a\u95f4\u200b\u548c\u200b\u6548\u7387\u200b\u4e0a\u200b\u6709\u200b\u660e\u663e\u200b\u4f18\u52bf\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_20","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u8282\u7701\u200b\u7a7a\u95f4\u200b\uff1a\u200b\u6bcf\u4e2a\u200b\u5e03\u5c14\u503c\u200b\u4ec5\u7528\u200b 1 \u200b\u4f4d\u200b\u5b58\u50a8\u200b\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u6267\u884c\u200b\u4f4d\u64cd\u4f5c\u200b\uff1a\u200b\u652f\u6301\u200b\u6309\u4f4d\u200b\u4e0e\u200b (AND)\u3001\u200b\u6309\u4f4d\u200b\u6216\u200b (OR)\u3001\u200b\u6309\u4f4d\u200b\u5f02\u6216\u200b (XOR) \u200b\u7b49\u200b\u64cd\u4f5c\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_21","title":"\u793a\u4f8b","text":"<pre><code>BitArray bitArray = new BitArray(8); // \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u957f\u5ea6\u200b\u4e3a\u200b8\u200b\u7684\u200bBitArray\nbitArray[0] = true;\nbitArray[1] = false;\nbitArray[2] = true;\n\nConsole.WriteLine(bitArray[0]); // \u200b\u8f93\u51fa\u200b: True\nConsole.WriteLine(bitArray[1]); // \u200b\u8f93\u51fa\u200b: False\n\n// \u200b\u4f7f\u7528\u200b\u4f4d\u64cd\u4f5c\u200b\nbitArray.Set(3, true); // \u200b\u8bbe\u7f6e\u200b\u7b2c\u200b 3 \u200b\u4f4d\u4e3a\u200b true\nConsole.WriteLine(bitArray); // \u200b\u8f93\u51fa\u200b: {True, False, True, True, False, False, False, False}\n</code></pre>"},{"location":"programming/csharp/data-structure/#12-namevaluecollection","title":"12. NameValueCollection <p><code>NameValueCollection</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7279\u6b8a\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\u96c6\u5408\u200b\uff0c\u200b\u652f\u6301\u200b\u5728\u200b\u540c\u4e00\u4e2a\u200b\u952e\u4e0b\u200b\u5b58\u50a8\u200b\u591a\u4e2a\u200b\u503c\u200b\u3002\u200b\u5b83\u200b\u5c5e\u4e8e\u200b <code>System.Collections.Specialized</code> \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_22","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u952e\u200b\u53ef\u4ee5\u200b\u91cd\u590d\u200b\uff1a\u200b\u540c\u4e00\u4e2a\u200b\u952e\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u591a\u4e2a\u200b\u503c\u200b\u3002</li> <li>\u200b\u9002\u5408\u200b\u5904\u7406\u200b HTTP \u200b\u8bf7\u6c42\u200b\u5934\u200b\u3001\u200b\u67e5\u8be2\u200b\u5b57\u7b26\u4e32\u200b\u7b49\u200b\u9700\u8981\u200b\u4e00\u5bf9\u200b\u591a\u200b\u5173\u7cfb\u200b\u7684\u200b\u6570\u636e\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_23","title":"\u793a\u4f8b","text":"<pre><code>NameValueCollection collection = new NameValueCollection();\ncollection.Add(\"Name\", \"Alice\");\ncollection.Add(\"Name\", \"Bob\"); // \u200b\u540c\u4e00\u200b\u952e\u4e0b\u200b\u5b58\u50a8\u200b\u591a\u4e2a\u200b\u503c\u200b\ncollection.Add(\"Age\", \"30\");\ncollection.Add(\"Age\", \"25\"); // \u200b\u540c\u4e00\u200b\u952e\u4e0b\u200b\u5b58\u50a8\u200b\u591a\u4e2a\u200b\u503c\u200b\n\nConsole.WriteLine(string.Join(\", \", collection.GetValues(\"Name\"))); // \u200b\u8f93\u51fa\u200b: Alice, Bob\nConsole.WriteLine(string.Join(\", \", collection.GetValues(\"Age\"))); // \u200b\u8f93\u51fa\u200b: 30, 25\n</code></pre>"},{"location":"programming/csharp/data-structure/#13-queue","title":"13. Queue <p>\u200b\u9664\u4e86\u200b\u6cdb\u578b\u200b\u7248\u672c\u200b\u7684\u200b <code>Queue&lt;T&gt;</code>\uff0cC# \u200b\u8fd8\u6709\u200b\u975e\u6cdb\u200b\u578b\u200b\u7248\u672c\u200b\u7684\u200b <code>Queue</code>\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u975e\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u5bf9\u8c61\u200b\u96c6\u5408\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_24","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u9002\u5408\u200b\u4e0d\u200b\u9700\u8981\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u4e0e\u200b <code>Queue&lt;T&gt;</code> \u200b\u4e00\u6837\u200b\uff0c\u200b\u9075\u5faa\u200b\u5148\u8fdb\u5148\u51fa\u200b\uff08FIFO\uff09\u200b\u7684\u200b\u539f\u5219\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_25","title":"\u793a\u4f8b","text":"<pre><code>Queue queue = new Queue();\nqueue.Enqueue(1);\nqueue.Enqueue(\"Hello\");\nqueue.Enqueue(3.14);\n\nwhile (queue.Count &gt; 0)\n{\n    var item = queue.Dequeue(); // \u200b\u79fb\u9664\u200b\u5e76\u200b\u8fd4\u56de\u200b\u961f\u5934\u200b\u5143\u7d20\u200b\n    Console.WriteLine(item); // \u200b\u8f93\u51fa\u200b: 1, Hello, 3.14\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#14-stack","title":"14. Stack <p>\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>Queue</code>\uff0cC# \u200b\u4e5f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u975e\u6cdb\u200b\u578b\u200b\u7248\u672c\u200b\u7684\u200b <code>Stack</code>\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u975e\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u5bf9\u8c61\u200b\u96c6\u5408\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_26","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u4e0d\u200b\u9650\u5b9a\u200b\u5b58\u50a8\u200b\u7684\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u9075\u5faa\u200b\u540e\u8fdb\u5148\u51fa\u200b\uff08LIFO\uff09\u200b\u7684\u200b\u539f\u5219\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_27","title":"\u793a\u4f8b","text":"<pre><code>Stack stack = new Stack();\nstack.Push(1);\nstack.Push(\"Hello\");\nstack.Push(3.14);\n\nwhile (stack.Count &gt; 0)\n{\n    var item = stack.Pop(); // \u200b\u53d6\u51fa\u200b\u6700\u540e\u200b\u5165\u6808\u200b\u7684\u200b\u5143\u7d20\u200b\n    Console.WriteLine(item); // \u200b\u8f93\u51fa\u200b: 3.14, Hello, 1\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#15-hashtable","title":"15. Hashtable <p><code>Hashtable</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u975e\u6cdb\u200b\u578b\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\u96c6\u5408\u200b\uff0c\u200b\u952e\u548c\u503c\u200b\u90fd\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4efb\u610f\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\u3002\u200b\u5b83\u200b\u4e0e\u200b <code>Dictionary&lt;TKey, TValue&gt;</code> \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u5177\u5907\u200b\u7c7b\u578b\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u8f83\u200b\u65e9\u200b\u7248\u672c\u200b\u7684\u200b C# \u200b\u9879\u76ee\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_28","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u952e\u548c\u503c\u200b\u90fd\u200b\u662f\u200b\u5bf9\u8c61\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u63d0\u4f9b\u200b\u5feb\u901f\u200b\u67e5\u627e\u200b\u952e\u200b\u7684\u200b\u80fd\u529b\u200b\uff0c\u200b\u4f46\u200b\u6548\u7387\u200b\u4e0d\u5982\u200b <code>Dictionary&lt;TKey, TValue&gt;</code>\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_29","title":"\u793a\u4f8b","text":"<pre><code>Hashtable hashtable = new Hashtable();\nhashtable.Add(\"Name\", \"Alice\");\nhashtable.Add(1, 100);\nhashtable.Add(\"Age\", 30);\n\nConsole.WriteLine(hashtable[\"Name\"]); // \u200b\u8f93\u51fa\u200b: Alice\nConsole.WriteLine(hashtable[1]); // \u200b\u8f93\u51fa\u200b: 100\nConsole.WriteLine(hashtable[\"Age\"]); // \u200b\u8f93\u51fa\u200b: 30\n</code></pre>"},{"location":"programming/csharp/data-structure/#16-sorteddictionary","title":"16. SortedDictionary <p><code>SortedDictionary&lt;TKey, TValue&gt;</code> \u200b\u662f\u200b <code>Dictionary&lt;TKey, TValue&gt;</code> \u200b\u7684\u200b\u53d8\u4f53\u200b\uff0c\u200b\u5b83\u200b\u5728\u200b\u6dfb\u52a0\u200b\u952e\u503c\u200b\u5bf9\u65f6\u200b\u81ea\u52a8\u200b\u5bf9\u952e\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u3002\u200b\u5b83\u200b\u57fa\u4e8e\u200b\u7ea2\u9ed1\u6811\u200b\u5b9e\u73b0\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_30","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u81ea\u52a8\u200b\u6392\u5e8f\u200b\uff1a\u200b\u952e\u4f1a\u200b\u6309\u7167\u200b\u81ea\u7136\u200b\u987a\u5e8f\u200b\u6216\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u6bd4\u8f83\u200b\u89c4\u5219\u200b\u8fdb\u884c\u200b\u6392\u5e8f\u200b\u3002</li> <li>\u200b\u67e5\u627e\u200b\u3001\u200b\u6dfb\u52a0\u200b\u3001\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u7684\u200b\u65f6\u95f4\u200b\u590d\u6742\u5ea6\u200b\u4e3a\u200b O(log n)\uff0c\u200b\u6bd4\u200b <code>Dictionary&lt;TKey, TValue&gt;</code> \u200b\u7565\u6162\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_31","title":"\u793a\u4f8b","text":"<pre><code>SortedDictionary&lt;int, string&gt; sortedDict = new SortedDictionary&lt;int, string&gt;();\nsortedDict.Add(2, \"Two\");\nsortedDict.Add(1, \"One\");\nsortedDict.Add(3, \"Three\");\n\nforeach (var kvp in sortedDict)\n{\n    Console.WriteLine($\"{kvp.Key}: {kvp.Value}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// 1: One\n// 2: Two\n// 3: Three\n</code></pre>"},{"location":"programming/csharp/data-structure/#17-sortedlist","title":"17. SortedList <p><code>SortedList&lt;TKey, TValue&gt;</code> \u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>SortedDictionary&lt;TKey, TValue&gt;</code>\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5728\u200b\u5185\u90e8\u200b\u4f7f\u7528\u200b\u6570\u7ec4\u200b\u800c\u200b\u975e\u200b\u6811\u7ed3\u6784\u200b\u3002\u200b\u56e0\u6b64\u200b\u5728\u200b\u5c0f\u89c4\u6a21\u200b\u6570\u636e\u200b\u96c6\u4e0a\u200b\u7684\u200b\u8bbf\u95ee\u901f\u5ea6\u200b\u66f4\u200b\u5feb\u200b\uff0c\u200b\u4f46\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u8f83\u6162\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_32","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u6309\u7167\u200b\u952e\u200b\u7684\u200b\u987a\u5e8f\u5b58\u50a8\u200b\u5143\u7d20\u200b\u3002</li> <li>\u200b\u8bbf\u95ee\u200b\u548c\u200b\u67e5\u627e\u200b\u901f\u5ea6\u200b\u5feb\u200b\uff0c\u200b\u4f46\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u6548\u7387\u200b\u8f83\u200b\u4f4e\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_33","title":"\u793a\u4f8b","text":"<pre><code>SortedList&lt;int, string&gt; sortedList = new SortedList&lt;int, string&gt;();\nsortedList.Add(1, \"One\");\nsortedList.Add(3, \"Three\");\nsortedList.Add(2, \"Two\");\n\nforeach (var kvp in sortedList)\n{\n    Console.WriteLine($\"{kvp.Key}: {kvp.Value}\");\n}\n// \u200b\u8f93\u51fa\u200b:\n// 1: One\n// 2: Two\n// 3: Three\n</code></pre>"},{"location":"programming/csharp/data-structure/#18-arraylist","title":"18. ArrayList <p><code>ArrayList</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u975e\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u52a8\u6001\u200b\u6570\u7ec4\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u7684\u200b\u5bf9\u8c61\u200b\u3002\u200b\u5728\u200b\u6cdb\u578b\u200b\u5f15\u5165\u200b\u4e4b\u524d\u200b\uff0c\u200b\u5b83\u200b\u662f\u200b\u6700\u200b\u5e38\u7528\u200b\u7684\u200b\u52a8\u6001\u200b\u96c6\u5408\u200b\u4e4b\u4e00\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_34","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u52a8\u6001\u200b\u8c03\u6574\u200b\u5927\u5c0f\u200b\u3002</li> <li>\u200b\u4e0d\u200b\u9650\u5b9a\u200b\u5143\u7d20\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u5982\u200b <code>List&lt;T&gt;</code> \u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_35","title":"\u793a\u4f8b","text":"<pre><code>ArrayList arrayList = new ArrayList();\narrayList.Add(1);\narrayList.Add(\"Hello\");\narrayList.Add(3.14);\n\nforeach (var item in arrayList)\n{\n    Console.WriteLine(item); // \u200b\u8f93\u51fa\u200b: 1, Hello, 3.14\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#19-hybriddictionary","title":"19. HybridDictionary <p><code>HybridDictionary</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7ed3\u5408\u200b\u4e86\u200b <code>ListDictionary</code> \u200b\u548c\u200b <code>Hashtable</code> \u200b\u4f18\u70b9\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002\u200b\u5f53\u200b\u96c6\u5408\u200b\u8f83\u200b\u5c0f\u65f6\u200b\uff0c\u200b\u5b83\u200b\u4f7f\u7528\u200b <code>ListDictionary</code>\uff0c\u200b\u5f53\u200b\u96c6\u5408\u200b\u8f83\u5927\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u5207\u6362\u200b\u4e3a\u200b <code>Hashtable</code> \u200b\u4ee5\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_36","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u5927\u5c0f\u200b\u672a\u77e5\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</li> <li>\u200b\u5728\u200b\u5c0f\u200b\u6570\u636e\u91cf\u200b\u65f6\u200b\u8282\u7701\u200b\u5185\u5b58\u200b\uff0c\u200b\u5927\u200b\u6570\u636e\u91cf\u200b\u65f6\u200b\u63d0\u4f9b\u200b\u9ad8\u6548\u200b\u67e5\u627e\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_37","title":"\u793a\u4f8b","text":"<pre><code>HybridDictionary hybridDict = new HybridDictionary();\nhybridDict.Add(\"Key1\", \"Value1\");\nhybridDict.Add(\"Key2\", \"Value2\");\n\nConsole.WriteLine(hybridDict[\"Key1\"]); // \u200b\u8f93\u51fa\u200b: Value1\nConsole.WriteLine(hybridDict[\"Key2\"]); // \u200b\u8f93\u51fa\u200b: Value2\n</code></pre>"},{"location":"programming/csharp/data-structure/#20-listdictionary","title":"20. ListDictionary <p><code>ListDictionary</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u5185\u90e8\u200b\u4f7f\u7528\u200b\u94fe\u8868\u200b\u5b9e\u73b0\u200b\u7684\u200b\u5b57\u5178\u200b\u7ed3\u6784\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u5c0f\u89c4\u6a21\u200b\u7684\u200b\u952e\u503c\u200b\u5bf9\u200b\u96c6\u5408\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_38","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u9002\u7528\u200b\u4e8e\u200b\u5b58\u50a8\u200b\u5c11\u91cf\u200b\u952e\u503c\u200b\u5bf9\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u63d2\u5165\u200b\u548c\u200b\u67e5\u627e\u200b\u901f\u5ea6\u200b\u8f83\u6162\u200b\uff08O(n)\uff09\uff0c\u200b\u4f46\u200b\u5728\u200b\u5c11\u91cf\u200b\u6570\u636e\u200b\u65f6\u200b\u8868\u73b0\u200b\u4f18\u5f02\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_39","title":"\u793a\u4f8b","text":"<pre><code>ListDictionary listDict = new ListDictionary();\nlistDict.Add(\"Key1\", \"Value1\");\nlistDict.Add(\"Key2\", \"Value2\");\n\nConsole.WriteLine(listDict[\"Key1\"]); // \u200b\u8f93\u51fa\u200b: Value1\nConsole.WriteLine(listDict[\"Key2\"]); // \u200b\u8f93\u51fa\u200b: Value2\n</code></pre>"},{"location":"programming/csharp/data-structure/#21-ordereddictionary","title":"21. OrderedDictionary <p><code>OrderedDictionary</code> \u200b\u4fdd\u7559\u200b\u952e\u503c\u200b\u5bf9\u200b\u7684\u200b\u63d2\u5165\u200b\u987a\u5e8f\u200b\uff0c\u200b\u5e76\u200b\u5141\u8bb8\u200b\u901a\u8fc7\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\u5143\u7d20\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_40","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u4fdd\u7559\u200b\u63d2\u5165\u200b\u987a\u5e8f\u200b\uff1a\u200b\u4e0d\u50cf\u200b <code>Dictionary</code>\uff0c\u200b\u5b83\u200b\u6309\u200b\u63d2\u5165\u200b\u987a\u5e8f\u5b58\u50a8\u200b\u5143\u7d20\u200b\u3002</li> <li>\u200b\u5141\u8bb8\u200b\u6839\u636e\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\u5143\u7d20\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u50cf\u200b\u6570\u7ec4\u200b\u4e00\u6837\u200b\u8bbf\u95ee\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_41","title":"\u793a\u4f8b","text":"<pre><code>OrderedDictionary orderedDict = new OrderedDictionary();\norderedDict.Add(\"Key1\", \"Value1\");\norderedDict.Add(\"Key2\", \"Value2\");\n\nConsole.WriteLine(orderedDict[0]); // \u200b\u6839\u636e\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u8f93\u51fa\u200b: Value1\nConsole.WriteLine(orderedDict[1]); // \u200b\u6839\u636e\u200b\u7d22\u5f15\u200b\u8bbf\u95ee\u200b\uff0c\u200b\u8f93\u51fa\u200b: Value2\n</code></pre>"},{"location":"programming/csharp/data-structure/#22-linkedlist","title":"22. LinkedList <p>\u200b\u9664\u4e86\u200b\u524d\u9762\u200b\u63d0\u5230\u200b\u7684\u200b <code>LinkedList&lt;T&gt;</code>\uff0cC# \u200b\u4e2d\u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u53cc\u5411\u200b\u94fe\u8868\u200b\u7684\u200b\u5b9e\u73b0\u200b\uff0c\u200b\u8fd9\u200b\u5728\u200b\u9891\u7e41\u200b\u63d2\u5165\u200b\u3001\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u7684\u200b\u573a\u666f\u200b\u4e0b\u200b\u975e\u5e38\u200b\u9ad8\u6548\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_42","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u9002\u5408\u200b\u9891\u7e41\u200b\u5728\u200b\u5217\u8868\u200b\u4e2d\u95f4\u200b\u63d2\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u8282\u70b9\u200b\u5305\u542b\u200b\u5bf9\u200b\u524d\u540e\u200b\u8282\u70b9\u200b\u7684\u200b\u5f15\u7528\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_43","title":"\u793a\u4f8b","text":"<pre><code>LinkedList&lt;int&gt; linkedList = new LinkedList&lt;int&gt;();\nlinkedList.AddLast(1);\nlinkedList.AddLast(2);\nlinkedList.AddFirst(0); // \u200b\u5728\u200b\u5f00\u5934\u200b\u6dfb\u52a0\u200b\u5143\u7d20\u200b\n\nConsole.WriteLine(string.Join(\", \", linkedList)); // \u200b\u8f93\u51fa\u200b: 0, 1, 2\n</code></pre>"},{"location":"programming/csharp/data-structure/#23-blockingcollection","title":"23. BlockingCollection <p><code>BlockingCollection&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u7279\u522b\u200b\u9002\u5408\u200b\u751f\u4ea7\u8005\u200b/\u200b\u6d88\u8d39\u8005\u200b\u6a21\u578b\u200b\u3002\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u591a\u4e2a\u200b\u7ebf\u7a0b\u200b\u4e4b\u95f4\u200b\u5b89\u5168\u200b\u5730\u200b\u5171\u4eab\u200b\u6570\u636e\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_44","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u63d0\u4f9b\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u6dfb\u52a0\u200b\u548c\u200b\u79fb\u9664\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u9650\u91cf\u200b\u7684\u200b\u961f\u5217\u200b\uff0c\u200b\u9632\u6b62\u200b\u8fc7\u5ea6\u200b\u751f\u4ea7\u200b\u5bfc\u81f4\u200b\u5185\u5b58\u200b\u6ea2\u51fa\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_45","title":"\u793a\u4f8b","text":"<pre><code>BlockingCollection&lt;int&gt; blockingCollection = new BlockingCollection&lt;int&gt;(5); // \u200b\u5bb9\u91cf\u200b\u4e3a\u200b5\nblockingCollection.Add(1);\nblockingCollection.Add(2);\n\nint item = blockingCollection.Take(); // \u200b\u4ece\u200b\u96c6\u5408\u200b\u4e2d\u200b\u53d6\u51fa\u200b\u5143\u7d20\u200b\nConsole.WriteLine(item); // \u200b\u8f93\u51fa\u200b: 1\n</code></pre>"},{"location":"programming/csharp/data-structure/#24-concurrentbag","title":"24. ConcurrentBag <p><code>ConcurrentBag&lt;T&gt;</code> \u200b\u662f\u200b\u4e00\u79cd\u200b\u7ebf\u7a0b\u200b\u5b89\u5168\u200b\u7684\u200b\u96c6\u5408\u200b\uff0c\u200b\u9002\u5408\u200b\u9891\u7e41\u200b\u63d2\u5165\u200b\u548c\u200b\u79fb\u9664\u200b\u6570\u636e\u200b\u7684\u200b\u573a\u666f\u200b\u3002\u200b\u5b83\u200b\u4e0e\u200b\u5176\u4ed6\u200b\u5e76\u53d1\u200b\u96c6\u5408\u200b\u4e0d\u540c\u200b\u7684\u200b\u662f\u200b\uff0c\u200b\u5b83\u200b\u5141\u8bb8\u200b\u591a\u4e2a\u200b\u7ebf\u7a0b\u200b\u540c\u65f6\u200b\u8bbf\u95ee\u200b\u3002</p>","text":""},{"location":"programming/csharp/data-structure/#_46","title":"\u7279\u70b9","text":"<ul> <li>\u200b\u65e0\u5e8f\u200b\uff1a\u200b\u4e0d\u200b\u4fdd\u8bc1\u200b\u5143\u7d20\u200b\u6309\u200b\u4efb\u4f55\u200b\u7279\u5b9a\u200b\u987a\u5e8f\u5b58\u50a8\u200b\u3002</li> <li>\u200b\u652f\u6301\u200b\u591a\u4e2a\u200b\u7ebf\u7a0b\u200b\u540c\u65f6\u200b\u6dfb\u52a0\u200b\u548c\u200b\u5220\u9664\u200b\u6570\u636e\u200b\u3002</li> </ul>"},{"location":"programming/csharp/data-structure/#_47","title":"\u793a\u4f8b","text":"<pre><code>ConcurrentBag&lt;int&gt; concurrentBag = new ConcurrentBag&lt;int&gt;();\nconcurrentBag.Add(1);\nconcurrentBag.Add(2);\nint item;\nif (concurrentBag.TryTake(out item))\n{\n    Console.WriteLine(item); // \u200b\u6210\u529f\u200b\u83b7\u53d6\u200b\u4e00\u4e2a\u200b\u5143\u7d20\u200b\uff0c\u200b\u8f93\u51fa\u200b: 1 \u200b\u6216\u200b 2\n}\n</code></pre>"},{"location":"programming/csharp/data-structure/#_48","title":"\u603b\u7ed3\u200b <p>C# \u200b\u63d0\u4f9b\u200b\u7684\u200b\u8fd9\u4e9b\u200b\u5185\u7f6e\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u9ad8\u6548\u6027\u200b\uff0c\u200b\u80fd\u591f\u200b\u5e94\u5bf9\u200b\u591a\u79cd\u4e0d\u540c\u200b\u7684\u200b\u573a\u666f\u200b\u548c\u200b\u9700\u6c42\u200b\u3002\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e0d\u4ec5\u200b\u53ef\u4ee5\u200b\u63d0\u9ad8\u200b\u4ee3\u7801\u200b\u7684\u200b\u53ef\u8bfb\u6027\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u63d0\u5347\u200b\u6027\u80fd\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b\u5927\u91cf\u200b\u6570\u636e\u200b\u6216\u200b\u5e76\u53d1\u200b\u4efb\u52a1\u200b\u65f6\u200b\u3002\u200b\u5f00\u53d1\u8005\u200b\u5e94\u200b\u6839\u636e\u200b\u5177\u4f53\u200b\u9700\u6c42\u200b\u9009\u62e9\u200b\u6700\u5408\u9002\u200b\u7684\u200b\u96c6\u5408\u200b\u7c7b\u578b\u200b\u3002</p>","text":""},{"location":"programming/csharp/tcp/","title":"C# \u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\uff1aTCP \u200b\u901a\u4fe1\u200b\u4e0e\u200b\u5f02\u6b65\u200b\u8bbe\u65bd","text":"<p>C# \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e30\u5bcc\u200b\u7684\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u652f\u6301\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5728\u200b TCP \u200b\u901a\u4fe1\u200b\u65b9\u9762\u200b\uff0c\u200b\u901a\u8fc7\u200b <code>System.Net</code> \u200b\u548c\u200b <code>System.Net.Sockets</code> \u200b\u547d\u540d\u200b\u7a7a\u95f4\u200b\u4e0b\u200b\u7684\u200b\u591a\u200b\u79cd\u7c7b\u200b\u548c\u200b\u63a5\u53e3\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u8f7b\u677e\u200b\u5b9e\u73b0\u200b\u5ba2\u6237\u7aef\u200b\u548c\u200b\u670d\u52a1\u5668\u7aef\u200b\u7684\u200b TCP \u200b\u901a\u4fe1\u200b\u3002\u200b\u540c\u65f6\u200b\uff0cC# \u200b\u7ed3\u5408\u200b\u4e86\u200b\u73b0\u4ee3\u200b\u5f02\u6b65\u200b\u7f16\u7a0b\u200b\u7684\u200b\u8bbe\u65bd\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>async/await</code> \u200b\u4ee5\u53ca\u200b\u57fa\u4e8e\u200b <code>Task</code> \u200b\u7684\u200b\u5f02\u6b65\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u4f7f\u200b\u5f00\u53d1\u8005\u200b\u80fd\u591f\u200b\u7f16\u5199\u200b\u6027\u80fd\u200b\u66f4\u9ad8\u200b\u3001\u200b\u66f4\u5177\u200b\u6269\u5c55\u6027\u200b\u548c\u200b\u54cd\u5e94\u200b\u80fd\u529b\u200b\u7684\u200b\u7f51\u7edc\u5e94\u7528\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#tcp","title":"\u4e00\u200b\u3001\u200b\u6838\u5fc3\u200b TCP \u200b\u7c7b\u200b\u548c\u200b\u63a5\u53e3","text":""},{"location":"programming/csharp/tcp/#11-tcpclient","title":"1.1 <code>TcpClient</code>","text":"<p><code>TcpClient</code> \u200b\u7c7b\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b TCP \u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u5b83\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u62bd\u8c61\u200b\u5c42\u6765\u200b\u7b80\u5316\u200b\u8fde\u63a5\u200b\u3001\u200b\u6570\u636e\u200b\u53d1\u9001\u200b\u548c\u200b\u63a5\u6536\u200b\u64cd\u4f5c\u200b\u3002\u200b\u5176\u200b\u4e3b\u8981\u200b\u6210\u5458\u200b\u548c\u200b\u65b9\u6cd5\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li><code>Connect</code> \u200b\u548c\u200b <code>ConnectAsync</code>\uff1a\u200b\u7528\u4e8e\u200b\u8fde\u63a5\u200b\u5230\u200b\u6307\u5b9a\u200b\u7684\u200b IP \u200b\u5730\u5740\u200b\u548c\u200b\u7aef\u53e3\u200b\u3002<code>Connect</code> \u200b\u662f\u200b\u540c\u6b65\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u800c\u200b <code>ConnectAsync</code> \u200b\u662f\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5728\u200b\u9ad8\u200b\u5e76\u53d1\u200b\u573a\u666f\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u7248\u672c\u200b\u3002</li> <li><code>GetStream</code>\uff1a\u200b\u8fd4\u56de\u200b <code>NetworkStream</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u901a\u8fc7\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u6570\u636e\u200b\u7684\u200b\u8bfb\u53d6\u200b\u548c\u200b\u5199\u5165\u200b\u64cd\u4f5c\u200b\u3002</li> <li><code>Close</code> \u200b\u548c\u200b <code>Dispose</code>\uff1a\u200b\u7528\u4e8e\u200b\u5173\u95ed\u200b\u8fde\u63a5\u200b\u548c\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\u3002</li> </ul>"},{"location":"programming/csharp/tcp/#tcpclient","title":"\u4f7f\u7528\u200b <code>TcpClient</code> \u200b\u7684\u200b\u793a\u4f8b","text":"<pre><code>async Task RunClientAsync()\n{\n    using TcpClient client = new TcpClient();\n    // \u200b\u5f02\u6b65\u200b\u8fde\u63a5\u200b\u5230\u200b\u670d\u52a1\u5668\u200b\n    await client.ConnectAsync(\"127.0.0.1\", 8000);\n\n    using NetworkStream stream = client.GetStream();\n    byte[] message = Encoding.UTF8.GetBytes(\"Hello, Server!\");\n    await stream.WriteAsync(message, 0, message.Length);\n\n    byte[] buffer = new byte[1024];\n    int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n    Console.WriteLine(\"Server response: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b <code>TcpClient</code>\uff0c\u200b\u5e76\u200b\u5f02\u6b65\u200b\u8fde\u63a5\u200b\u5230\u200b\u670d\u52a1\u5668\u200b\u3002\u200b\u901a\u8fc7\u200b <code>NetworkStream</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u8fdb\u884c\u200b\u6570\u636e\u200b\u7684\u200b\u8bfb\u5199\u64cd\u4f5c\u200b\uff0c\u200b\u6574\u4e2a\u200b\u6d41\u7a0b\u200b\u4f7f\u7528\u200b\u4e86\u200b <code>async/await</code> \u200b\u6765\u200b\u786e\u4fdd\u200b\u65b9\u6cd5\u200b\u5728\u200b\u7b49\u5f85\u200b\u7f51\u7edc\u200b\u54cd\u5e94\u200b\u65f6\u200b\u4e0d\u200b\u963b\u585e\u200b\u7ebf\u7a0b\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#12-tcplistener","title":"1.2 <code>TcpListener</code>","text":"<p><code>TcpListener</code> \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b TCP \u200b\u670d\u52a1\u5668\u200b\uff0c\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7279\u5b9a\u200b\u7684\u200b\u7aef\u53e3\u200b\u4e0a\u200b\u76d1\u542c\u200b\u6765\u81ea\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u8fde\u63a5\u200b\u8bf7\u6c42\u200b\u3002<code>TcpListener</code> \u200b\u7684\u200b\u4e3b\u8981\u200b\u65b9\u6cd5\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li><code>Start</code> \u200b\u548c\u200b <code>Stop</code>\uff1a\u200b\u5f00\u59cb\u200b\u6216\u200b\u505c\u6b62\u200b\u76d1\u542c\u200b\u3002</li> <li><code>AcceptTcpClient</code> \u200b\u548c\u200b <code>AcceptTcpClientAsync</code>\uff1a\u200b\u7b49\u5f85\u200b\u5e76\u200b\u63a5\u53d7\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u8fde\u63a5\u200b\u8bf7\u6c42\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b <code>TcpClient</code> \u200b\u5bf9\u8c61\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u5206\u522b\u200b\u662f\u200b\u540c\u6b65\u200b\u548c\u200b\u5f02\u6b65\u200b\u7248\u672c\u200b\u3002</li> <li><code>Pending</code>\uff1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u6307\u793a\u200b\u662f\u5426\u200b\u6709\u200b\u6302\u200b\u8d77\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u8bf7\u6c42\u200b\u3002</li> </ul>"},{"location":"programming/csharp/tcp/#tcplistener","title":"\u4f7f\u7528\u200b <code>TcpListener</code> \u200b\u7684\u200b\u793a\u4f8b","text":"<pre><code>async Task RunServerAsync()\n{\n    TcpListener listener = new TcpListener(IPAddress.Any, 8000);\n    listener.Start();\n    Console.WriteLine(\"Server is running...\");\n\n    while (true)\n    {\n        TcpClient client = await listener.AcceptTcpClientAsync();\n        _ = Task.Run(() =&gt; HandleClientAsync(client)); // \u200b\u5f02\u6b65\u200b\u5904\u7406\u200b\u6bcf\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\n    }\n}\n\nasync Task HandleClientAsync(TcpClient client)\n{\n    Console.WriteLine(\"Client connected!\");\n    using NetworkStream stream = client.GetStream();\n    byte[] buffer = new byte[1024];\n    int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n    Console.WriteLine(\"Received: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n\n    // Echo back the received data\n    await stream.WriteAsync(buffer, 0, bytesRead);\n    Console.WriteLine(\"Data echoed back to client.\");\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c<code>TcpListener</code> \u200b\u88ab\u200b\u7528\u6765\u200b\u76d1\u542c\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u3002\u200b\u5f53\u6709\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u65f6\u200b\uff0c<code>AcceptTcpClientAsync</code> \u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b <code>TcpClient</code> \u200b\u5bf9\u8c61\u200b\uff0c\u200b\u7136\u540e\u200b\u5f02\u6b65\u200b\u5904\u7406\u200b\u8fd9\u4e2a\u200b\u8fde\u63a5\u200b\u3002\u200b\u6211\u4eec\u200b\u5728\u200b <code>HandleClientAsync</code> \u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u548c\u200b\u56de\u663e\u200b\u5ba2\u6237\u7aef\u200b\u53d1\u9001\u200b\u7684\u200b\u6570\u636e\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u56de\u58f0\u200b\u670d\u52a1\u5668\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#13-socket","title":"1.3 <code>Socket</code>","text":"<p><code>Socket</code> \u200b\u7c7b\u200b\u662f\u200b\u66f4\u200b\u5e95\u5c42\u200b\u7684\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u63a5\u53e3\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u66f4\u200b\u5927\u200b\u7684\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u63a7\u5236\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u9700\u8981\u200b\u81ea\u5b9a\u4e49\u200b\u901a\u4fe1\u200b\u884c\u4e3a\u200b\u6216\u200b\u4f7f\u7528\u200b\u975e\u200b TCP \u200b\u534f\u8bae\u200b\uff08\u200b\u5982\u200b UDP\uff09\u200b\u7684\u200b\u573a\u666f\u200b\u3002<code>Socket</code> \u200b\u53ef\u4ee5\u200b\u914d\u7f6e\u200b\u4e3a\u200b\u540c\u6b65\u200b\u6216\u200b\u5f02\u6b65\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5176\u200b\u4e3b\u8981\u200b\u65b9\u6cd5\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li><code>Connect</code> \u200b\u548c\u200b <code>ConnectAsync</code>\uff1a\u200b\u8fde\u63a5\u200b\u5230\u200b\u8fdc\u7a0b\u200b\u670d\u52a1\u5668\u200b\u3002</li> <li><code>Send</code> \u200b\u548c\u200b <code>SendAsync</code>\uff1a\u200b\u53d1\u9001\u6570\u636e\u200b\u3002</li> <li><code>Receive</code> \u200b\u548c\u200b <code>ReceiveAsync</code>\uff1a\u200b\u63a5\u6536\u6570\u636e\u200b\u3002</li> <li><code>Bind</code>\uff1a\u200b\u7ed1\u5b9a\u200b\u5230\u200b\u4e00\u4e2a\u200b\u672c\u5730\u200b\u7aef\u53e3\u200b\uff08\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u670d\u52a1\u5668\u7aef\u200b\uff09\u3002</li> <li><code>Listen</code> \u200b\u548c\u200b <code>AcceptAsync</code>\uff1a\u200b\u5f00\u59cb\u200b\u76d1\u542c\u200b\u5ba2\u6237\u7aef\u200b\u8bf7\u6c42\u200b\u5e76\u200b\u63a5\u53d7\u200b\u8fde\u63a5\u200b\u3002</li> </ul>"},{"location":"programming/csharp/tcp/#socket","title":"\u4f7f\u7528\u200b <code>Socket</code> \u200b\u7684\u200b\u5f02\u6b65\u200b\u793a\u4f8b","text":"<pre><code>async Task RunSocketClientAsync()\n{\n    Socket socket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n    await socket.ConnectAsync(new IPEndPoint(IPAddress.Parse(\"127.0.0.1\"), 8000));\n\n    byte[] message = Encoding.UTF8.GetBytes(\"Hello from Socket!\");\n    await socket.SendAsync(new ArraySegment&lt;byte&gt;(message), SocketFlags.None);\n\n    byte[] buffer = new byte[1024];\n    int bytesRead = await socket.ReceiveAsync(new ArraySegment&lt;byte&gt;(buffer), SocketFlags.None);\n    Console.WriteLine(\"Received from server: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n\n    socket.Shutdown(SocketShutdown.Both);\n    socket.Close();\n}\n</code></pre> <p>\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b <code>Socket</code> \u200b\u7c7b\u200b\uff0c\u200b\u6211\u4eec\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u7cbe\u786e\u200b\u5730\u200b\u63a7\u5236\u200b\u7f51\u7edc\u901a\u4fe1\u200b\u884c\u4e3a\u200b\u3002\u200b\u6b64\u200b\u793a\u4f8b\u200b\u5c55\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5f02\u6b65\u200b TCP \u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>ConnectAsync</code>\u3001<code>SendAsync</code> \u200b\u548c\u200b <code>ReceiveAsync</code> \u200b\u65b9\u6cd5\u200b\u6765\u200b\u5b9e\u73b0\u200b\u5f02\u6b65\u200b\u8fde\u63a5\u200b\u548c\u200b\u6570\u636e\u4f20\u8f93\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#_1","title":"\u4e8c\u200b\u3001\u200b\u5f02\u6b65\u200b\u8bbe\u65bd","text":"<p>C# \u200b\u4e2d\u200b\u5f02\u6b65\u200b\u8bbe\u65bd\u200b\u7684\u200b\u6838\u5fc3\u200b\u662f\u200b <code>Task</code> \u200b\u548c\u200b <code>async/await</code> \u200b\u5173\u952e\u5b57\u200b\u3002\u200b\u5b83\u4eec\u200b\u7684\u200b\u7ed3\u5408\u200b\u53ef\u4ee5\u200b\u8ba9\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u53d8\u5f97\u200b\u66f4\u4e3a\u200b\u9ad8\u6548\u200b\u548c\u200b\u76f4\u89c2\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#21-task-asyncawait","title":"2.1 <code>Task</code> \u200b\u548c\u200b <code>async/await</code>","text":"<p><code>Task</code> \u200b\u548c\u200b <code>Task&lt;T&gt;</code> \u200b\u8868\u793a\u200b\u5f02\u6b65\u200b\u64cd\u4f5c\u200b\u7684\u200b\u7ed3\u679c\u200b\uff0c\u200b\u5176\u4e2d\u200b <code>T</code> \u200b\u4e3a\u200b\u8fd4\u56de\u200b\u7684\u200b\u6570\u636e\u7c7b\u578b\u200b\uff08\u200b\u4f8b\u5982\u200b\uff0c<code>Task&lt;int&gt;</code> \u200b\u53ef\u80fd\u200b\u8868\u793a\u200b\u8bfb\u53d6\u200b\u5230\u200b\u7684\u200b\u5b57\u8282\u6570\u200b\uff09\u3002<code>async/await</code> \u200b\u5173\u952e\u5b57\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u7684\u200b\u903b\u8f91\u200b\u7ec4\u7ec7\u200b\u6210\u200b\u7c7b\u4f3c\u200b\u540c\u6b65\u200b\u7684\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6613\u4e8e\u200b\u7f16\u5199\u200b\u548c\u200b\u7406\u89e3\u200b\u3002</p> <ul> <li><code>ConnectAsync</code>\uff1aTCP \u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b <code>Task</code>\uff0c\u200b\u4ee3\u8868\u200b\u5f02\u6b65\u200b\u8fde\u63a5\u200b\u64cd\u4f5c\u200b\u3002</li> <li><code>ReadAsync</code> \u200b\u548c\u200b <code>WriteAsync</code>\uff1a\u200b\u7528\u4e8e\u200b\u5f02\u6b65\u200b\u8bfb\u53d6\u200b\u548c\u200b\u5199\u5165\u200b\u6570\u636e\u200b\u7684\u200b <code>NetworkStream</code> \u200b\u65b9\u6cd5\u200b\u3002</li> </ul>"},{"location":"programming/csharp/tcp/#22-cancellationtoken","title":"2.2 <code>CancellationToken</code>","text":"<p>\u200b\u4e3a\u4e86\u200b\u5728\u200b\u5f02\u6b65\u200b\u64cd\u4f5c\u200b\u4e2d\u200b\u63d0\u4f9b\u200b\u53d6\u6d88\u200b\u529f\u80fd\u200b\uff0cC# \u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>CancellationToken</code> \u200b\u548c\u200b <code>CancellationTokenSource</code>\u3002\u200b\u5b83\u4eec\u200b\u53ef\u4ee5\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u5f02\u6b65\u200b\u4efb\u52a1\u200b\u7684\u200b\u751f\u547d\u5468\u671f\u200b\uff0c\u200b\u5728\u200b\u5fc5\u8981\u200b\u65f6\u200b\u53d6\u6d88\u200b\u64cd\u4f5c\u200b\u5e76\u200b\u91ca\u653e\u200b\u8d44\u6e90\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#_2","title":"\u793a\u4f8b\u200b\uff1a\u200b\u5e26\u6709\u200b\u53d6\u6d88\u200b\u529f\u80fd\u200b\u7684\u200b\u5f02\u6b65\u200b\u8bfb\u53d6","text":"<pre><code>CancellationTokenSource cts = new CancellationTokenSource();\nNetworkStream stream = client.GetStream();\nbyte[] buffer = new byte[1024];\ntry\n{\n    int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length, cts.Token);\n    Console.WriteLine(\"Read complete.\");\n}\ncatch (OperationCanceledException)\n{\n    Console.WriteLine(\"Read operation was cancelled.\");\n}\n</code></pre>"},{"location":"programming/csharp/tcp/#23-socket","title":"2.3 <code>Socket</code> \u200b\u7684\u200b\u5f02\u6b65\u200b\u652f\u6301","text":"<p><code>Socket</code> \u200b\u7c7b\u200b\u7684\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\uff08\u200b\u5982\u200b <code>ConnectAsync</code>\u3001<code>SendAsync</code>\u3001<code>ReceiveAsync</code>\uff09\u200b\u5bf9\u4e8e\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u5927\u91cf\u200b\u5e76\u53d1\u200b\u8fde\u63a5\u200b\u6216\u200b\u9700\u8981\u200b\u7cbe\u7ec6\u200b\u63a7\u5236\u200b\u7f51\u7edc\u901a\u4fe1\u200b\u7684\u200b\u573a\u666f\u200b\u975e\u5e38\u200b\u6709\u7528\u200b\u3002\u200b\u5b83\u4eec\u200b\u5141\u8bb8\u200b\u5728\u200b\u7b49\u5f85\u200b\u7f51\u7edc\u200b\u64cd\u4f5c\u200b\u5b8c\u6210\u200b\u7684\u200b\u540c\u65f6\u200b\uff0c\u200b\u4e0d\u200b\u963b\u585e\u200b\u5f53\u524d\u200b\u7ebf\u7a0b\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#24-taskcompletionsource","title":"2.4 <code>TaskCompletionSource</code>","text":"<p>\u200b\u5728\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u63a7\u5236\u200b\u4efb\u52a1\u200b\u7684\u200b\u5b8c\u6210\u200b\u60c5\u51b5\u200b\u6216\u200b\u5408\u5e76\u200b\u591a\u4e2a\u200b\u5f02\u6b65\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c<code>TaskCompletionSource</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6709\u7528\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5f53\u200b <code>Socket</code> \u200b\u7c7b\u4e2d\u200b\u7684\u200b\u67d0\u4e9b\u200b\u64cd\u4f5c\u200b\u4e0d\u200b\u76f4\u63a5\u200b\u652f\u6301\u200b <code>await</code> \u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u501f\u52a9\u200b\u5b83\u200b\u5c01\u88c5\u200b\u4e00\u4e2a\u200b\u4efb\u52a1\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#_3","title":"\u4e09\u200b\u3001\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\u548c\u200b\u9ad8\u6548\u200b\u7f16\u7a0b","text":"<ul> <li>\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\uff1a\u200b\u4e3a\u4e86\u200b\u5145\u5206\u5229\u7528\u200b\u7cfb\u7edf\u8d44\u6e90\u200b\u548c\u200b\u63d0\u5347\u200b\u5e76\u53d1\u200b\u6027\u80fd\u200b\uff0c\u200b\u4f18\u5148\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u5982\u200b <code>ConnectAsync</code>\u3001<code>AcceptTcpClientAsync</code> \u200b\u548c\u200b <code>ReadAsync</code>\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>CancellationToken</code> \u200b\u7ba1\u7406\u200b\u957f\u65f6\u95f4\u200b\u4efb\u52a1\u200b\uff1a\u200b\u5728\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u64cd\u4f5c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u56e0\u4e3a\u200b\u5404\u79cd\u200b\u539f\u56e0\u200b\u88ab\u200b\u963b\u585e\u200b\uff08\u200b\u5982\u200b\u8fde\u63a5\u200b\u8d85\u65f6\u200b\uff09\u3002\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b <code>CancellationToken</code>\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u200b\u5b89\u5168\u200b\u5730\u200b\u53d6\u6d88\u200b\u4efb\u52a1\u200b\u3002</li> <li>\u200b\u5408\u7406\u200b\u7ba1\u7406\u200b\u8d44\u6e90\u200b\uff1a\u200b\u5728\u200b\u4f7f\u7528\u200b\u7f51\u7edc\u8d44\u6e90\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u53ca\u65f6\u200b\u91ca\u653e\u200b <code>TcpClient</code>\u3001<code>Socket</code> \u200b\u548c\u200b <code>NetworkStream</code> \u200b\u7b49\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4ee5\u200b\u9632\u6b62\u200b\u5185\u5b58\u200b\u6cc4\u6f0f\u200b\u6216\u200b\u7aef\u53e3\u200b\u88ab\u200b\u5360\u7528\u200b\u3002</li> <li>\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\uff1a\u200b\u7f51\u7edc\u200b\u64cd\u4f5c\u200b\u53ef\u80fd\u200b\u968f\u65f6\u200b\u5931\u8d25\u200b\uff08\u200b\u4f8b\u5982\u200b\u8fde\u63a5\u200b\u4e2d\u65ad\u200b\u3001\u200b\u6570\u636e\u5305\u200b\u4e22\u5931\u200b\uff09\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u4e2d\u200b\u6355\u83b7\u200b\u5f02\u5e38\u200b\uff0c\u200b\u5e76\u200b\u91c7\u53d6\u200b\u9002\u5f53\u200b\u7684\u200b\u6062\u590d\u200b\u6216\u200b\u901a\u77e5\u200b\u673a\u5236\u200b\uff0c\u200b\u662f\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u5173\u952e\u6b65\u9aa4\u200b\u3002</li> </ul>"},{"location":"programming/csharp/tcp/#_4","title":"\u56db\u200b\u3001\u200b\u6269\u5c55\u200b\u548c\u200b\u9ad8\u7ea7\u200b\u5e94\u7528","text":"<p>\u200b\u9664\u4e86\u200b\u57fa\u7840\u200b\u7684\u200b <code>TcpClient</code> \u200b\u548c\u200b <code>TcpListener</code>\uff0cC# \u200b\u4e2d\u200b\u7684\u200b TCP \u200b\u7f16\u7a0b\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u6269\u5c55\u200b\u5230\u200b\u4ee5\u4e0b\u200b\u9ad8\u7ea7\u200b\u5e94\u7528\u200b\uff1a</p>"},{"location":"programming/csharp/tcp/#41-ssltls","title":"4.1 SSL/TLS \u200b\u5b89\u5168\u200b\u8fde\u63a5","text":"<p>\u200b\u4e3a\u4e86\u200b\u786e\u4fdd\u200b\u6570\u636e\u200b\u7684\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u5728\u200b TCP \u200b\u901a\u4fe1\u200b\u4e2d\u200b\u901a\u5e38\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b SSL/TLS \u200b\u52a0\u5bc6\u200b\u3002C# \u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>SslStream</code> \u200b\u7c7b\u200b\uff0c\u200b\u5141\u8bb8\u200b\u6211\u4eec\u200b\u5728\u200b <code>NetworkStream</code> \u200b\u4e0a\u200b\u5efa\u7acb\u200b\u5b89\u5168\u200b\u7684\u200b\u52a0\u5bc6\u200b\u901a\u4fe1\u200b\u3002<code>SslStream</code> \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e00\u4e9b\u200b\u65b9\u6cd5\u200b\u6765\u200b\u5904\u7406\u200b\u8bc1\u4e66\u200b\u9a8c\u8bc1\u200b\u3001\u200b\u6570\u636e\u200b\u52a0\u5bc6\u200b\u548c\u200b\u89e3\u5bc6\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#sslstream","title":"\u4f7f\u7528\u200b <code>SslStream</code> \u200b\u5efa\u7acb\u200b\u5b89\u5168\u200b\u8fde\u63a5\u200b\u7684\u200b\u793a\u4f8b","text":"<pre><code>async Task RunSecureClientAsync()\n{\n    using TcpClient client = new TcpClient();\n    await client.ConnectAsync(\"127.0.0.1\", 443); // 443 \u200b\u662f\u200b HTTPS \u200b\u7aef\u53e3\u200b\n\n    using NetworkStream netStream = client.GetStream();\n    using SslStream sslStream = new SslStream(netStream, false,\n        (sender, certificate, chain, sslPolicyErrors) =&gt; true);\n\n    await sslStream.AuthenticateAsClientAsync(\"example.com\");\n\n    byte[] message = Encoding.UTF8.GetBytes(\"Hello, Secure Server!\");\n    await sslStream.WriteAsync(message, 0, message.Length);\n\n    byte[] buffer = new byte[1024];\n    int bytesRead = await sslStream.ReadAsync(buffer, 0, buffer.Length);\n    Console.WriteLine(\"Secure server response: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n}\n</code></pre> <p>\u200b\u5728\u200b\u6b64\u200b\u793a\u4f8b\u200b\u4e2d\u200b\uff0c\u200b\u6211\u4eec\u200b\u521b\u5efa\u200b\u4e86\u200b\u4e00\u4e2a\u200b <code>SslStream</code>\uff0c\u200b\u5c01\u88c5\u200b\u4e86\u200b <code>TcpClient</code> \u200b\u7684\u200b <code>NetworkStream</code>\uff0c\u200b\u5e76\u200b\u8c03\u7528\u200b <code>AuthenticateAsClientAsync</code> \u200b\u65b9\u6cd5\u200b\u6765\u200b\u542f\u52a8\u200b SSL/TLS \u200b\u63e1\u624b\u200b\u3002\u200b\u8fd9\u6837\u200b\u53ef\u4ee5\u200b\u786e\u4fdd\u200b\u6570\u636e\u200b\u5728\u200b\u4f20\u8f93\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7ecf\u8fc7\u200b\u52a0\u5bc6\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#42","title":"4.2 \u200b\u957f\u200b\u8fde\u63a5\u200b\u4e0e\u200b\u5fc3\u8df3\u200b\u673a\u5236","text":"<p>\u200b\u5728\u200b\u9700\u8981\u200b\u7ef4\u6301\u200b\u957f\u65f6\u95f4\u200b\u8fde\u63a5\u200b\u7684\u200b\u5e94\u7528\u200b\uff08\u200b\u4f8b\u5982\u200b\u5b9e\u65f6\u200b\u6d88\u606f\u200b\u7cfb\u7edf\u200b\u3001\u200b\u6e38\u620f\u200b\u6216\u7269\u200b\u8054\u7f51\u200b\u8bbe\u5907\u200b\uff09\u200b\u4e2d\u200b\uff0c\u200b\u4fdd\u6301\u200b\u8fde\u63a5\u200b\u7684\u200b\u6d3b\u8dc3\u6027\u200b\u81f3\u5173\u91cd\u8981\u200b\u3002\u200b\u5fc3\u8df3\u200b\u673a\u5236\u200b\u662f\u200b\u5b9e\u73b0\u200b\u8fd9\u4e00\u200b\u76ee\u7684\u200b\u7684\u200b\u5e38\u89c1\u200b\u65b9\u5f0f\u200b\u3002\u200b\u901a\u5e38\u200b\u5ba2\u6237\u7aef\u200b\u548c\u200b\u670d\u52a1\u5668\u200b\u4f1a\u200b\u5b9a\u671f\u200b\u4ea4\u6362\u200b\u201c\u200b\u5fc3\u8df3\u200b\u201d\u200b\u6d88\u606f\u200b\uff0c\u200b\u5982\u679c\u200b\u5728\u200b\u6307\u5b9a\u200b\u65f6\u95f4\u200b\u5185\u200b\u6ca1\u6709\u200b\u6536\u5230\u200b\u5bf9\u65b9\u200b\u7684\u200b\u5fc3\u8df3\u200b\u54cd\u5e94\u200b\uff0c\u200b\u5c31\u200b\u4f1a\u200b\u8ba4\u4e3a\u200b\u8fde\u63a5\u200b\u5df2\u7ecf\u200b\u4e2d\u65ad\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#_5","title":"\u5fc3\u8df3\u200b\u673a\u5236\u200b\u7684\u200b\u5b9e\u73b0\u200b\u793a\u4f8b","text":"<pre><code>async Task HeartbeatClientAsync()\n{\n    using TcpClient client = new TcpClient();\n    await client.ConnectAsync(\"127.0.0.1\", 8000);\n\n    using NetworkStream stream = client.GetStream();\n    var heartbeatTask = Task.Run(async () =&gt;\n    {\n        while (true)\n        {\n            byte[] heartbeatMessage = Encoding.UTF8.GetBytes(\"HEARTBEAT\");\n            await stream.WriteAsync(heartbeatMessage, 0, heartbeatMessage.Length);\n            await Task.Delay(5000); // \u200b\u6bcf\u200b5\u200b\u79d2\u200b\u53d1\u9001\u200b\u4e00\u6b21\u200b\u5fc3\u8df3\u200b\n        }\n    });\n\n    byte[] buffer = new byte[1024];\n    while (true)\n    {\n        int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n        Console.WriteLine(\"Received: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n    }\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u5ba2\u6237\u7aef\u200b\u6bcf\u9694\u200b 5 \u200b\u79d2\u200b\u5411\u200b\u670d\u52a1\u5668\u53d1\u9001\u200b\u4e00\u6b21\u200b\u5fc3\u8df3\u200b\u6d88\u606f\u200b\uff0c\u200b\u4ee5\u200b\u786e\u8ba4\u200b\u8fde\u63a5\u200b\u7684\u200b\u6d3b\u8dc3\u6027\u200b\u3002\u200b\u5982\u679c\u200b\u5728\u200b\u89c4\u5b9a\u200b\u65f6\u95f4\u200b\u5185\u200b\u670d\u52a1\u5668\u200b\u6ca1\u6709\u200b\u6536\u5230\u200b\u5fc3\u8df3\u200b\u6d88\u606f\u200b\uff0c\u200b\u5c31\u200b\u53ef\u4ee5\u200b\u5224\u5b9a\u200b\u5ba2\u6237\u7aef\u200b\u65ad\u5f00\u200b\u6216\u200b\u8fde\u63a5\u200b\u4e2d\u65ad\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#43","title":"4.3 \u200b\u670d\u52a1\u5668\u7aef\u200b\u7684\u200b\u5e76\u53d1\u200b\u5904\u7406","text":"<p>\u200b\u9ad8\u200b\u5e76\u53d1\u200b\u670d\u52a1\u5668\u7aef\u200b\u7a0b\u5e8f\u200b\u9700\u8981\u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u5927\u91cf\u200b\u7684\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\u3002C# \u200b\u4e2d\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u548c\u200b <code>Task</code>\uff0c\u200b\u4ee5\u53ca\u200b <code>Task.Run</code> \u200b\u7b49\u200b\u5e76\u53d1\u200b\u8bbe\u65bd\u200b\uff0c\u200b\u5b9e\u73b0\u200b\u9ad8\u6548\u200b\u7684\u200b\u5e76\u53d1\u200b\u7ba1\u7406\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#task","title":"\u4f7f\u7528\u200b <code>Task</code> \u200b\u548c\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u5904\u7406\u200b\u591a\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5","text":"<pre><code>async Task RunConcurrentServerAsync()\n{\n    TcpListener listener = new TcpListener(IPAddress.Any, 8000);\n    listener.Start();\n    Console.WriteLine(\"Concurrent server is running...\");\n\n    while (true)\n    {\n        TcpClient client = await listener.AcceptTcpClientAsync();\n        _ = HandleClientConcurrently(client); // \u200b\u5f02\u6b65\u200b\u5904\u7406\u200b\u6bcf\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\u8fde\u63a5\u200b\n    }\n}\n\nasync Task HandleClientConcurrently(TcpClient client)\n{\n    using NetworkStream stream = client.GetStream();\n    byte[] buffer = new byte[1024];\n\n    try\n    {\n        while (true)\n        {\n            int bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length);\n            if (bytesRead == 0) break; // \u200b\u5ba2\u6237\u7aef\u200b\u65ad\u5f00\u8fde\u63a5\u200b\n\n            Console.WriteLine(\"Received: \" + Encoding.UTF8.GetString(buffer, 0, bytesRead));\n\n            // \u200b\u56de\u663e\u200b\u6570\u636e\u200b\u7ed9\u200b\u5ba2\u6237\u7aef\u200b\n            await stream.WriteAsync(buffer, 0, bytesRead);\n        }\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine(\"Error: \" + ex.Message);\n    }\n    finally\n    {\n        client.Close();\n    }\n}\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c<code>RunConcurrentServerAsync</code> \u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u5faa\u73af\u200b\u6765\u200b\u5904\u7406\u200b\u6765\u81ea\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u8fde\u63a5\u200b\uff0c\u200b\u5e76\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8fde\u63a5\u200b\u542f\u52a8\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u4efb\u52a1\u200b\u3002\u200b\u8fd9\u6837\u200b\u670d\u52a1\u5668\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u5904\u7406\u200b\u591a\u4e2a\u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u800c\u200b\u4e0d\u4f1a\u200b\u963b\u585e\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#44-socketasynceventargs-io","title":"4.4 \u200b\u4f7f\u7528\u200b <code>SocketAsyncEventArgs</code> \u200b\u8fdb\u884c\u200b\u9ad8\u6027\u80fd\u200b I/O","text":"<p>\u200b\u5bf9\u4e8e\u200b\u9ad8\u6027\u80fd\u200b\u670d\u52a1\u5668\u200b\uff08\u200b\u5982\u200b\u9700\u8981\u200b\u5904\u7406\u200b\u5927\u91cf\u200b\u5e76\u53d1\u200b\u8bf7\u6c42\u200b\u7684\u200b\u670d\u52a1\u5668\u200b\uff09\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>SocketAsyncEventArgs</code> \u200b\u7c7b\u6765\u200b\u8fdb\u4e00\u6b65\u200b\u4f18\u5316\u200b\u3002<code>SocketAsyncEventArgs</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u95e8\u200b\u4e3a\u200b\u5904\u7406\u200b\u9ad8\u6027\u80fd\u200b\u3001\u200b\u4f4e\u200b\u5ef6\u8fdf\u200b\u7684\u200b\u7f51\u7edc\u200b I/O \u200b\u64cd\u4f5c\u200b\u8bbe\u8ba1\u200b\u7684\u200b\u7c7b\u200b\uff0c\u200b\u907f\u514d\u200b\u4e86\u200b <code>Task</code> \u200b\u751f\u6210\u200b\u548c\u200b\u5f02\u6b65\u200b\u64cd\u4f5c\u200b\u5e26\u6765\u200b\u7684\u200b\u989d\u5916\u200b\u5f00\u9500\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#socketasynceventargs-io","title":"\u4f7f\u7528\u200b <code>SocketAsyncEventArgs</code> \u200b\u5904\u7406\u200b I/O","text":"<pre><code>SocketAsyncEventArgs eventArgs = new SocketAsyncEventArgs();\neventArgs.Completed += (sender, e) =&gt;\n{\n    if (e.SocketError == SocketError.Success &amp;&amp; e.BytesTransferred &gt; 0)\n    {\n        Console.WriteLine(\"Data received: \" + Encoding.UTF8.GetString(e.Buffer, e.Offset, e.BytesTransferred));\n    }\n};\neventArgs.SetBuffer(new byte[1024], 0, 1024);\n\nSocket serverSocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\nserverSocket.Bind(new IPEndPoint(IPAddress.Any, 8000));\nserverSocket.Listen(100);\n\nSocket clientSocket = await serverSocket.AcceptAsync();\nclientSocket.ReceiveAsync(eventArgs);\n</code></pre> <p>\u200b\u8fd9\u79cd\u200b\u65b9\u6cd5\u200b\u907f\u514d\u200b\u4e86\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u5207\u6362\u200b\uff0c\u200b\u63d0\u9ad8\u200b\u4e86\u200b I/O \u200b\u64cd\u4f5c\u200b\u7684\u200b\u6548\u7387\u200b\uff0c\u200b\u9002\u5408\u200b\u5728\u200b\u9ad8\u200b\u8d1f\u8f7d\u200b\u7684\u200b\u670d\u52a1\u5668\u200b\u73af\u5883\u200b\u4e0b\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"programming/csharp/tcp/#_6","title":"\u4e94\u200b\u3001\u200b\u603b\u7ed3","text":"<p>\u200b\u5728\u200b C# \u200b\u4e2d\u200b\uff0cTCP \u200b\u63a5\u53e3\u200b\u53ca\u5176\u200b\u76f8\u5173\u200b\u7684\u200b\u5f02\u6b65\u200b\u8bbe\u65bd\u200b\u4e3a\u200b\u5f00\u53d1\u8005\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5f3a\u5927\u200b\u800c\u200b\u7075\u6d3b\u200b\u7684\u200b\u5de5\u5177\u96c6\u200b\u6765\u200b\u5b9e\u73b0\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u3002\u200b\u4ece\u200b\u7b80\u5355\u200b\u7684\u200b <code>TcpClient</code> \u200b\u548c\u200b <code>TcpListener</code> \u200b\u5230\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b <code>Socket</code> \u200b\u548c\u200b <code>SslStream</code>\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u9700\u6c42\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u5b9e\u73b0\u200b\u65b9\u5f0f\u200b\u3002\u200b\u6b64\u5916\u200b\uff0c\u200b\u901a\u8fc7\u200b <code>async/await</code>\u3001<code>Task</code>\u3001<code>CancellationToken</code> \u200b\u7b49\u200b\u5f02\u6b65\u200b\u8bbe\u65bd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u7f16\u5199\u51fa\u200b\u9ad8\u6027\u80fd\u200b\u3001\u200b\u54cd\u5e94\u200b\u6027\u5f3a\u200b\u4e14\u200b\u6613\u4e8e\u200b\u7ef4\u62a4\u200b\u7684\u200b\u7f51\u7edc\u5e94\u7528\u200b\u3002</p> <p>\u200b\u5bf9\u4e8e\u200b\u5b9e\u9645\u200b\u5f00\u53d1\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e9b\u200b\u5173\u952e\u200b\u8981\u70b9\u200b\u548c\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff0c\u200b\u6211\u4eec\u200b\u5efa\u8bae\u200b\uff1a</p> <ul> <li>\u200b\u4f18\u5148\u9009\u62e9\u200b\u5f02\u6b65\u200b API\uff1a\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u65b9\u6cd5\u200b\u5982\u200b <code>ConnectAsync</code>\u3001<code>AcceptTcpClientAsync</code> \u200b\u7b49\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u963b\u585e\u200b\u7ebf\u7a0b\u200b\uff0c\u200b\u4ece\u800c\u200b\u63d0\u5347\u200b\u5e76\u53d1\u200b\u80fd\u529b\u200b\u3002</li> <li>\u200b\u5229\u7528\u200b\u9ad8\u7ea7\u200b\u7279\u6027\u200b\uff1a\u200b\u5982\u200b <code>CancellationToken</code> \u200b\u6765\u200b\u7ba1\u7406\u200b\u4efb\u52a1\u200b\u7684\u200b\u53d6\u6d88\u200b\uff0c<code>SslStream</code> \u200b\u6765\u200b\u786e\u4fdd\u200b\u901a\u4fe1\u200b\u7684\u200b\u5b89\u5168\u6027\u200b\uff0c\u200b\u4ee5\u53ca\u200b <code>SocketAsyncEventArgs</code> \u200b\u6765\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u3002</li> <li>\u200b\u7ba1\u7406\u200b\u8d44\u6e90\u200b\u548c\u200b\u5f02\u5e38\u200b\uff1a\u200b\u5728\u200b\u7f51\u7edc\u200b\u7f16\u7a0b\u200b\u4e2d\u200b\uff0c\u200b\u8d44\u6e90\u7ba1\u7406\u200b\uff08\u200b\u5982\u6d41\u200b\u3001\u200b\u5957\u200b\u63a5\u5b57\u200b\u7684\u200b\u91ca\u653e\u200b\uff09\u200b\u548c\u200b\u5f02\u5e38\u200b\u5904\u7406\u200b\uff08\u200b\u7f51\u7edc\u200b\u9519\u8bef\u200b\u3001\u200b\u8fde\u63a5\u200b\u4e2d\u65ad\u200b\u7b49\u200b\uff09\u200b\u975e\u5e38\u200b\u91cd\u8981\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u5f00\u53d1\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u4ed4\u7ec6\u200b\u5904\u7406\u200b\u8fd9\u4e9b\u200b\u95ee\u9898\u200b\uff0c\u200b\u4ee5\u200b\u63d0\u9ad8\u200b\u5e94\u7528\u7a0b\u5e8f\u200b\u7684\u200b\u5065\u58ee\u6027\u200b\u3002</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u8bbe\u65bd\u200b\u548c\u200b\u6280\u672f\u200b\u4e3a\u200b\u6784\u5efa\u200b\u9ad8\u6027\u80fd\u200b\u7684\u200b\u7f51\u7edc\u200b\u7a0b\u5e8f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5168\u9762\u200b\u7684\u200b\u652f\u6301\u200b\uff0c\u200b\u65e0\u8bba\u662f\u200b\u5f00\u53d1\u200b\u7b80\u5355\u200b\u7684\u200b TCP \u200b\u5ba2\u6237\u7aef\u200b\uff0c\u200b\u8fd8\u662f\u200b\u5b9e\u73b0\u200b\u9ad8\u200b\u5e76\u53d1\u200b\u7684\u200b\u670d\u52a1\u5668\u200b\u67b6\u6784\u200b\uff0cC# \u200b\u90fd\u200b\u5177\u5907\u200b\u4e86\u200b\u5145\u8db3\u200b\u7684\u200b\u7075\u6d3b\u6027\u200b\u548c\u200b\u80fd\u529b\u200b\u3002</p>"},{"location":"programming/javascript/","title":"JavaScript Programming","text":"<p>Welcome to the JavaScript programming section! This collection covers modern JavaScript development with focus on popular frameworks and state management solutions. Whether you're building Vue.js applications or managing React state, you'll find comprehensive guides here.</p>"},{"location":"programming/javascript/#featured-content","title":"Featured Content","text":""},{"location":"programming/javascript/#primevue-ui-components","title":"PrimeVue UI Components","text":"<p>Complete guide to PrimeVue - the premier Vue.js UI component suite: - Component Library - Rich set of UI components for Vue.js - Theme System - Styled and Unstyled modes for maximum flexibility - Installation Guide - Step-by-step setup instructions - Best Practices - Effective usage patterns and recommendations - Customization - Theming and styling approaches</p>"},{"location":"programming/javascript/#zustand-state-management","title":"Zustand State Management","text":"<p>Modern state management for React applications: - Simple API - Minimal boilerplate, maximum productivity - TypeScript Support - Full type safety and IntelliSense - Performance Optimized - Efficient re-rendering and updates - Flexible Architecture - Supports various application patterns - Developer Experience - Excellent debugging and development tools</p>"},{"location":"programming/javascript/#framework-coverage","title":"Framework Coverage","text":""},{"location":"programming/javascript/#vuejs-ecosystem","title":"Vue.js Ecosystem","text":"<ul> <li>PrimeVue Components - Professional UI component library</li> <li>Vue 3 Composition API - Modern reactive programming</li> <li>Pinia State Management - Official Vue state management</li> <li>Vue Router - Client-side routing solution</li> <li>Vite Build Tool - Fast development and build experience</li> </ul>"},{"location":"programming/javascript/#react-ecosystem","title":"React Ecosystem","text":"<ul> <li>Zustand - Lightweight state management</li> <li>React Hooks - Modern React patterns</li> <li>Context API - Built-in state sharing</li> <li>Performance Optimization - Memoization and optimization techniques</li> <li>Testing Strategies - Component and state testing</li> </ul>"},{"location":"programming/javascript/#development-patterns","title":"Development Patterns","text":""},{"location":"programming/javascript/#component-architecture","title":"Component Architecture","text":"<ul> <li>Composition over Inheritance - Building reusable components</li> <li>Props and Events - Component communication patterns</li> <li>Slot/Children Patterns - Content projection techniques</li> <li>Higher-Order Components - Component enhancement patterns</li> <li>Render Props - Flexible component composition</li> </ul>"},{"location":"programming/javascript/#state-management","title":"State Management","text":"<ul> <li>Local State - Component-level state management</li> <li>Global State - Application-wide state sharing</li> <li>Derived State - Computed values and selectors</li> <li>Async State - Handling asynchronous operations</li> <li>State Persistence - Local storage and session management</li> </ul>"},{"location":"programming/javascript/#modern-javascript","title":"Modern JavaScript","text":"<ul> <li>ES6+ Features - Arrow functions, destructuring, modules</li> <li>Async/Await - Modern asynchronous programming</li> <li>Module System - ES modules and dynamic imports</li> <li>TypeScript Integration - Type-safe JavaScript development</li> <li>Build Tools - Webpack, Vite, and modern tooling</li> </ul>"},{"location":"programming/javascript/#ui-development","title":"UI Development","text":""},{"location":"programming/javascript/#component-libraries","title":"Component Libraries","text":"<ul> <li>PrimeVue - Comprehensive Vue.js component suite</li> <li>Material Design - Google's design system implementation</li> <li>Ant Design - Enterprise-class UI design language</li> <li>Chakra UI - Modular and accessible component library</li> <li>Custom Components - Building your own component library</li> </ul>"},{"location":"programming/javascript/#styling-approaches","title":"Styling Approaches","text":"<ul> <li>CSS-in-JS - Styled components and emotion</li> <li>CSS Modules - Scoped CSS styling</li> <li>Tailwind CSS - Utility-first CSS framework</li> <li>SCSS/Sass - Enhanced CSS with variables and mixins</li> <li>CSS Custom Properties - Native CSS variables</li> </ul>"},{"location":"programming/javascript/#responsive-design","title":"Responsive Design","text":"<ul> <li>Mobile-First - Progressive enhancement approach</li> <li>Breakpoint Management - Responsive design patterns</li> <li>Flexible Layouts - CSS Grid and Flexbox</li> <li>Touch Interactions - Mobile-friendly user interfaces</li> <li>Performance Optimization - Fast loading and smooth interactions</li> </ul>"},{"location":"programming/javascript/#performance-and-optimization","title":"Performance and Optimization","text":""},{"location":"programming/javascript/#bundle-optimization","title":"Bundle Optimization","text":"<ul> <li>Code Splitting - Lazy loading and dynamic imports</li> <li>Tree Shaking - Eliminating unused code</li> <li>Minification - Code size reduction techniques</li> <li>Compression - Gzip and Brotli compression</li> <li>Caching Strategies - Browser and CDN caching</li> </ul>"},{"location":"programming/javascript/#runtime-performance","title":"Runtime Performance","text":"<ul> <li>Virtual DOM - Efficient rendering strategies</li> <li>Memoization - Preventing unnecessary re-renders</li> <li>Lazy Loading - On-demand resource loading</li> <li>Image Optimization - Responsive images and formats</li> <li>Web Vitals - Core performance metrics</li> </ul>"},{"location":"programming/javascript/#development-experience","title":"Development Experience","text":"<ul> <li>Hot Module Replacement - Fast development feedback</li> <li>Source Maps - Debugging in development</li> <li>Linting and Formatting - Code quality tools</li> <li>Type Checking - Static analysis with TypeScript</li> <li>Testing Integration - Unit and integration testing</li> </ul>"},{"location":"programming/javascript/#best-practices","title":"Best Practices","text":""},{"location":"programming/javascript/#code-quality","title":"Code Quality","text":"<ul> <li>ESLint Configuration - Consistent code style</li> <li>Prettier Integration - Automatic code formatting</li> <li>TypeScript Adoption - Gradual type safety introduction</li> <li>Component Testing - Isolated component verification</li> <li>E2E Testing - Full application workflow testing</li> </ul>"},{"location":"programming/javascript/#architecture","title":"Architecture","text":"<ul> <li>Separation of Concerns - Clear responsibility boundaries</li> <li>Dependency Injection - Loose coupling patterns</li> <li>Error Boundaries - Graceful error handling</li> <li>Loading States - User experience during async operations</li> <li>Accessibility - WCAG compliance and screen reader support</li> </ul>"},{"location":"programming/javascript/#security","title":"Security","text":"<ul> <li>XSS Prevention - Cross-site scripting protection</li> <li>CSRF Protection - Cross-site request forgery prevention</li> <li>Content Security Policy - Browser security headers</li> <li>Input Validation - Client and server-side validation</li> <li>Secure Authentication - JWT and OAuth implementation</li> </ul>"},{"location":"programming/javascript/#learning-path","title":"Learning Path","text":""},{"location":"programming/javascript/#beginner-level","title":"Beginner Level","text":"<ol> <li>Modern JavaScript - ES6+ features and syntax</li> <li>PrimeVue Basics - Component usage and styling</li> <li>Vue.js Fundamentals - Reactive programming concepts</li> </ol>"},{"location":"programming/javascript/#intermediate-level","title":"Intermediate Level","text":"<ol> <li>Advanced PrimeVue - Custom themes and complex components</li> <li>Zustand Integration - State management patterns</li> <li>Performance Optimization - Bundle and runtime optimization</li> </ol>"},{"location":"programming/javascript/#advanced-level","title":"Advanced Level","text":"<ol> <li>Custom Component Libraries - Building reusable component systems</li> <li>Advanced State Patterns - Complex state management architectures</li> <li>Full-Stack Integration - API integration and data flow</li> </ol> <p>Each section includes: - \ud83d\udcd6 Comprehensive Guides - Detailed explanations and concepts - \ud83d\udcbb Working Examples - Practical, tested code samples - \ud83c\udfa8 Design Patterns - UI/UX best practices - \u26a1 Performance Tips - Optimization techniques - \ud83d\udd27 Tool Integration - Development workflow enhancement</p> <p>Start with PrimeVue for Vue.js development or Zustand for React state management!</p>"},{"location":"programming/javascript/primevue/","title":"PrimeVue\uff1a\u200b\u4e0b\u4e00\u4ee3\u200b Vue.js UI \u200b\u7ec4\u4ef6\u200b\u5957\u4ef6\u200b\u63a8\u8350\u200b\u4e0e\u200b\u5b89\u88c5\u200b\u6307\u5357","text":""},{"location":"programming/javascript/primevue/#_1","title":"\u7b80\u4ecb","text":"<p>PrimeVue \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e13\u200b\u4e3a\u200b Vue.js \u200b\u8bbe\u8ba1\u200b\u7684\u200b\u5b8c\u6574\u200b UI \u200b\u5957\u4ef6\u200b\uff0c\u200b\u5305\u542b\u200b\u4e86\u200b\u4e30\u5bcc\u200b\u7684\u200b UI \u200b\u7ec4\u4ef6\u200b\u3001\u200b\u56fe\u6807\u200b\u3001\u200b\u533a\u5757\u200b\u548c\u200b\u5e94\u7528\u200b\u6a21\u677f\u200b\u3002\u200b\u8be5\u9879\u200b\u76ee\u7684\u200b\u4e3b\u8981\u200b\u76ee\u6807\u200b\u662f\u200b\u901a\u8fc7\u200b\u63d0\u4f9b\u200b\u53ef\u200b\u91cd\u7528\u200b\u7684\u200b\u89e3\u51b3\u65b9\u6848\u200b\uff0c\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u5f00\u53d1\u8005\u200b\u7684\u200b\u751f\u4ea7\u529b\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u89e3\u51b3\u65b9\u6848\u200b\u6613\u4e8e\u200b\u8c03\u6574\u200b\u548c\u200b\u5b9a\u5236\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f5c\u4e3a\u200b\u5185\u90e8\u200b\u5e93\u200b\u4f7f\u7528\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_2","title":"\u9879\u76ee\u200b\u80cc\u666f","text":"<p>PrimeVue \u200b\u7531\u200b PrimeTek \u200b\u521b\u5efa\u200b\uff0cPrimeTek \u200b\u662f\u200b\u4e16\u754c\u200b\u77e5\u540d\u200b\u7684\u200b UI \u200b\u7ec4\u4ef6\u200b\u5957\u4ef6\u200b\u4f9b\u5e94\u5546\u200b\uff0c\u200b\u65d7\u4e0b\u200b\u8fd8\u6709\u200b PrimeFaces\u3001PrimeNG \u200b\u548c\u200b PrimeReact \u200b\u7b49\u200b\u77e5\u540d\u200b\u9879\u76ee\u200b\u3002PrimeVue \u200b\u7684\u200b\u5f00\u53d1\u200b\u56e2\u961f\u200b\u7531\u200b PrimeTek \u200b\u7684\u200b\u5168\u804c\u200b\u5458\u5de5\u200b\u7ec4\u6210\u200b\uff0c\u200b\u4ed6\u4eec\u200b\u5bf9\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u5145\u6ee1\u70ed\u60c5\u200b\uff0c\u200b\u81f4\u529b\u4e8e\u200b\u6253\u9020\u200b\u5353\u8d8a\u200b\u7684\u200b UI \u200b\u5e93\u200b\u3002\u200b\u4f9d\u8d56\u200b\u7b2c\u4e09\u65b9\u200b\u5e93\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5e26\u6765\u200b\u98ce\u9669\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5f53\u5e93\u200b\u7684\u200b\u7ef4\u62a4\u8005\u200b\u51b3\u5b9a\u200b\u4e0d\u518d\u200b\u7ef4\u62a4\u200b\u9879\u76ee\u200b\u65f6\u200b\u3002\u200b\u7136\u800c\u200b\uff0cPrimeVue \u200b\u4e0d\u200b\u5b58\u5728\u200b\u8fd9\u4e2a\u200b\u95ee\u9898\u200b\uff0c\u200b\u56e0\u4e3a\u200b PrimeTek \u200b\u6709\u7740\u200b\u957f\u671f\u200b\u7ef4\u62a4\u200b\u5f00\u6e90\u200b\u9879\u76ee\u200b\u7684\u200b\u826f\u597d\u200b\u8bb0\u5f55\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0cPrimeFaces \u200b\u81ea\u200b 2008 \u200b\u5e74\u200b\u4ee5\u6765\u200b\u4e00\u76f4\u200b\u4fdd\u6301\u200b\u6d3b\u8dc3\u200b\u7684\u200b\u7ef4\u62a4\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_3","title":"\u4e3b\u9898\u200b\u4e0e\u200b\u6837\u5f0f","text":"<p>PrimeVue \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e24\u79cd\u200b\u6837\u5f0f\u200b\u6a21\u5f0f\u200b\uff1aStyled \u200b\u548c\u200b Unstyled\u3002</p> <ul> <li>Styled \u200b\u6a21\u5f0f\u200b\uff1a\u200b\u57fa\u4e8e\u200b\u9884\u5b9a\u200b\u4e49\u200b\u7684\u200b\u76ae\u80a4\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u4e3b\u9898\u200b\u53d8\u4f53\u200b\uff0c\u200b\u5982\u200b Aura\u3001Lara \u200b\u6216\u200b Nora \u200b\u9884\u8bbe\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u4e3b\u9898\u200b\u8bbe\u8ba1\u200b\u7cbe\u7f8e\u200b\uff0c\u200b\u5f00\u7bb1\u200b\u5373\u7528\u200b\uff0c\u200b\u9002\u5408\u200b\u5feb\u901f\u200b\u5f00\u53d1\u200b\u3002</li> <li>Unstyled \u200b\u6a21\u5f0f\u200b\uff1a\u200b\u5c06\u200b\u6837\u5f0f\u200b\u5b8c\u5168\u200b\u4ea4\u7ed9\u200b\u5f00\u53d1\u8005\u200b\uff0cPrimeVue \u200b\u53ea\u200b\u8d1f\u8d23\u200b\u529f\u80fd\u200b\u548c\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u8fd9\u79cd\u200b\u6a21\u5f0f\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u5b8c\u5168\u200b\u7684\u200b\u6837\u5f0f\u200b\u63a7\u5236\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u4efb\u4f55\u200b CSS \u200b\u5e93\u200b\uff08\u200b\u5982\u200b Tailwind CSS\u3001Bootstrap\u3001Bulma\uff09\u200b\u6216\u200b\u81ea\u5b9a\u4e49\u200b CSS \u200b\u6765\u200b\u8bbe\u8ba1\u200b\u7ec4\u4ef6\u200b\u3002PrimeVue \u200b\u8fd8\u200b\u63d0\u4f9b\u200b\u4e86\u200b Tailwind Presets \u200b\u5e93\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u4f7f\u7528\u200b Tailwind \u200b\u7684\u200b\u5b9e\u7528\u200b\u7c7b\u6765\u200b\u5feb\u901f\u200b\u5b9a\u5236\u200b UI\u3002\u200b\u8fd9\u79cd\u200b\u8bbe\u8ba1\u200b\u4f7f\u5f97\u200b PrimeVue \u200b\u80fd\u591f\u200b\u4e0e\u200b\u4efb\u4f55\u200b CSS \u200b\u5e93\u200b\u517c\u5bb9\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4e86\u200b\u672a\u6765\u200b\u7684\u200b\u53ef\u6269\u5c55\u6027\u200b\u3002</li> </ul>"},{"location":"programming/javascript/primevue/#pass-through-api","title":"Pass Through API","text":"<p>PrimeVue \u200b\u5f15\u5165\u200b\u4e86\u200b\u521b\u65b0\u200b\u7684\u200b PassThrough API\uff0c\u200b\u5141\u8bb8\u200b\u5f00\u53d1\u8005\u200b\u8bbf\u95ee\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5185\u90e8\u200b DOM \u200b\u5143\u7d20\u200b\uff0c\u200b\u5e76\u200b\u6dfb\u52a0\u200b\u4efb\u610f\u200b\u5c5e\u6027\u200b\u3002\u200b\u4f20\u7edf\u200b\u7684\u200b UI \u200b\u7ec4\u4ef6\u200b\u5e93\u200b\u901a\u5e38\u200b\u5c01\u88c5\u200b\u4e86\u200b UI \u200b\u548c\u200b\u903b\u8f91\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ea\u80fd\u200b\u901a\u8fc7\u200b\u6709\u9650\u200b\u7684\u200b API \u200b\u8fdb\u884c\u200b\u6269\u5c55\u200b\uff0c\u200b\u8fd9\u200b\u9650\u5236\u200b\u4e86\u200b\u7075\u6d3b\u6027\u200b\u3002\u200b\u800c\u200b PassThrough API \u200b\u6d88\u9664\u200b\u4e86\u200b\u8fd9\u200b\u4e00\u200b\u9650\u5236\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u5185\u90e8\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4e8b\u4ef6\u200b\u548c\u200b\u5c5e\u6027\u200b\u3002\u200b\u5e38\u89c1\u200b\u7684\u200b\u7528\u4f8b\u200b\u5305\u62ec\u200b\u6dfb\u52a0\u200b\u6d4b\u8bd5\u200b\u5c5e\u6027\u200b\u3001\u200b\u989d\u5916\u200b\u7684\u200b ARIA \u200b\u5c5e\u6027\u200b\u3001\u200b\u81ea\u5b9a\u4e49\u200b\u4e8b\u4ef6\u200b\u548c\u200b\u6837\u5f0f\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_4","title":"\u53ef\u200b\u8bbf\u95ee\u200b\u6027","text":"<p>PrimeVue \u200b\u7b26\u5408\u200b WCAG 2.1 AA \u200b\u7ea7\u200b\u6807\u51c6\u200b\uff0c\u200b\u6bcf\u4e2a\u200b\u7ec4\u4ef6\u200b\u90fd\u200b\u6709\u200b\u4e13\u95e8\u200b\u7684\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u200b\u6587\u6863\u200b\uff0c\u200b\u8be6\u7ec6\u200b\u8bb0\u5f55\u200b\u4e86\u200b\u952e\u76d8\u200b\u548c\u200b\u5c4f\u5e55\u200b\u9605\u8bfb\u5668\u200b\u7684\u200b\u652f\u6301\u200b\u60c5\u51b5\u200b\u3002\u200b\u901a\u8fc7\u200b GitHub \u200b\u6216\u200b Discord \u200b\u7b49\u200b\u6c9f\u901a\u200b\u6e20\u9053\u200b\uff0c\u200b\u5168\u7403\u200b\u5404\u5730\u200b\u7684\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u200b\u4e13\u5bb6\u200b\u4e0d\u65ad\u200b\u63d0\u4f9b\u200b\u53cd\u9988\u200b\uff0c\u200b\u8fdb\u4e00\u6b65\u200b\u6539\u8fdb\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u529f\u80fd\u200b\u3002\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u67e5\u770b\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u200b\u6307\u5357\u200b\uff0c\u200b\u4e86\u89e3\u200b\u66f4\u200b\u591a\u200b\u7ec6\u8282\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_5","title":"\u9644\u52a0\u200b\u7ec4\u4ef6","text":"<p>PrimeVue \u200b\u4e0d\u200b\u4f9d\u8d56\u200b\u793e\u533a\u200b\u7684\u200b\u8d22\u52a1\u200b\u8d5e\u52a9\u200b\uff0c\u200b\u800c\u662f\u200b\u901a\u8fc7\u200b\u63d0\u4f9b\u200b\u53ef\u9009\u200b\u7684\u200b\u9644\u52a0\u200b\u7ec4\u4ef6\u200b\u6765\u200b\u786e\u4fdd\u200b\u9879\u76ee\u200b\u7684\u200b\u8d22\u52a1\u200b\u57fa\u7840\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u9644\u52a0\u200b\u7ec4\u4ef6\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>Figma UI \u200b\u5957\u4ef6\u200b\uff1a\u200b\u5e2e\u52a9\u200b\u8bbe\u8ba1\u5e08\u200b\u5feb\u901f\u200b\u4e0a\u200b\u624b\u200b PrimeVue \u200b\u7684\u200b\u8bbe\u8ba1\u200b\u8d44\u6e90\u200b\u3002</li> <li>\u200b\u9ad8\u7ea7\u200b\u5e94\u7528\u200b\u6a21\u677f\u200b\uff1a\u200b\u63d0\u4f9b\u200b\u591a\u79cd\u200b\u73b0\u6210\u200b\u7684\u200b\u5e94\u7528\u200b\u6a21\u677f\u200b\uff0c\u200b\u52a0\u901f\u200b\u5f00\u53d1\u200b\u8fdb\u7a0b\u200b\u3002</li> <li>PrimeBlocks\uff1a\u200b\u53ef\u200b\u91cd\u7528\u200b\u7684\u200b UI \u200b\u533a\u5757\u200b\uff0c\u200b\u5e2e\u52a9\u200b\u5f00\u53d1\u8005\u200b\u5feb\u901f\u200b\u6784\u5efa\u200b\u590d\u6742\u200b\u7684\u200b\u754c\u9762\u200b\u3002</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u9644\u52a0\u200b\u7ec4\u4ef6\u200b\u662f\u200b\u53ef\u9009\u200b\u7684\u200b\uff0c\u200b\u4f7f\u7528\u200b PrimeVue \u200b\u672c\u8eab\u200b\u6ca1\u6709\u200b\u4efb\u4f55\u200b\u4ed8\u8d39\u200b\u95e8\u69db\u200b\u3002</p> <p>PrimeVue \u200b\u662f\u200b\u4e00\u4e2a\u200b\u529f\u80fd\u5f3a\u5927\u200b\u4e14\u200b\u7075\u6d3b\u200b\u7684\u200b Vue.js UI \u200b\u7ec4\u4ef6\u200b\u5e93\u200b\uff0c\u200b\u9002\u5408\u200b\u5404\u79cd\u200b\u89c4\u6a21\u200b\u7684\u200b\u9879\u76ee\u200b\u3002\u200b\u65e0\u8bba\u662f\u200b\u5feb\u901f\u200b\u5f00\u53d1\u200b\u8fd8\u662f\u200b\u9ad8\u5ea6\u200b\u5b9a\u5236\u200b\u5316\u200b\u9700\u6c42\u200b\uff0cPrimeVue \u200b\u90fd\u200b\u80fd\u200b\u63d0\u4f9b\u200b\u51fa\u8272\u200b\u7684\u200b\u652f\u6301\u200b\u3002\u200b\u5176\u200b\u521b\u65b0\u200b\u7684\u200b PassThrough API \u200b\u548c\u200b\u5f3a\u5927\u200b\u7684\u200b\u53ef\u200b\u8bbf\u95ee\u200b\u6027\u200b\u652f\u6301\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5f00\u53d1\u8005\u200b\u80fd\u591f\u200b\u8f7b\u677e\u200b\u6784\u5efa\u200b\u73b0\u4ee3\u5316\u200b\u7684\u200b Web \u200b\u5e94\u7528\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u6b63\u5728\u200b\u5bfb\u627e\u200b\u4e00\u4e2a\u200b\u53ef\u9760\u200b\u4e14\u200b\u6613\u4e8e\u200b\u6269\u5c55\u200b\u7684\u200b Vue.js UI \u200b\u5e93\u200b\uff0cPrimeVue \u200b\u65e0\u7591\u200b\u662f\u200b\u4e00\u4e2a\u200b\u503c\u5f97\u200b\u63a8\u8350\u200b\u7684\u200b\u9009\u62e9\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_6","title":"\u5f15\u5165\u200b\u9879\u76ee","text":"<p>\u200b\u5b98\u65b9\u200b\u63d0\u4f9b\u200b\u4e86\u200b\u56db\u79cd\u200b\u5f62\u5f0f\u200b\u7684\u200b\u5f15\u5165\u200b\u65b9\u5f0f\u200b\uff0c\u200b\u4e0b\u9762\u200b\u4ee5\u200b vite \u200b\u4e3a\u4f8b\u200b</p>"},{"location":"programming/javascript/primevue/#vite-primevue","title":"\u5728\u200b Vite \u200b\u9879\u76ee\u200b\u4e2d\u200b\u5b89\u88c5\u200b PrimeVue \u200b\u7684\u200b\u8be6\u7ec6\u200b\u6559\u7a0b","text":"<p>PrimeVue \u200b\u662f\u200b\u4e00\u4e2a\u200b\u529f\u80fd\u5f3a\u5927\u200b\u7684\u200b Vue.js UI \u200b\u7ec4\u4ef6\u200b\u5e93\u200b\uff0c\u200b\u652f\u6301\u200b\u5feb\u901f\u200b\u5f00\u53d1\u200b\u548c\u200b\u9ad8\u5ea6\u200b\u5b9a\u5236\u200b\u5316\u200b\u3002\u200b\u672c\u6587\u200b\u5c06\u200b\u8be6\u7ec6\u200b\u4ecb\u7ecd\u200b\u5982\u4f55\u200b\u5728\u200b Vite \u200b\u9879\u76ee\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u548c\u200b\u914d\u7f6e\u200b PrimeVue\uff0c\u200b\u5e76\u200b\u9a8c\u8bc1\u200b\u5176\u200b\u662f\u5426\u200b\u6b63\u5e38\u200b\u5de5\u4f5c\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#primevue","title":"\u5b89\u88c5\u200b PrimeVue \u200b\u548c\u200b\u4e3b\u9898","text":"<p>PrimeVue \u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b npm\u3001yarn \u200b\u6216\u200b pnpm \u200b\u8fdb\u884c\u200b\u5b89\u88c5\u200b\u3002\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u5b89\u88c5\u200b\u547d\u4ee4\u200b\uff1a</p> <pre><code>npm install primevue @primevue/themes\n</code></pre> <pre><code>yarn add primevue @primevue/themes\n</code></pre> <pre><code>pnpm add primevue @primevue/themes\n</code></pre> <p>\u200b\u5b89\u88c5\u200b\u5b8c\u6210\u200b\u540e\u200b\uff0cPrimeVue \u200b\u548c\u200b\u9ed8\u8ba4\u200b\u4e3b\u9898\u200b\u5c06\u200b\u88ab\u200b\u6dfb\u52a0\u200b\u5230\u200b\u4f60\u200b\u7684\u200b\u9879\u76ee\u200b\u4e2d\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#primevue_1","title":"\u914d\u7f6e\u200b PrimeVue \u200b\u63d2\u4ef6","text":"<p>PrimeVue \u200b\u9700\u8981\u200b\u4e00\u4e2a\u200b\u8f7b\u91cf\u7ea7\u200b\u7684\u200b\u63d2\u4ef6\u200b\u6765\u200b\u8fdb\u884c\u200b\u9ed8\u8ba4\u200b\u914d\u7f6e\u200b\u3002\u200b\u4f60\u200b\u9700\u8981\u200b\u5728\u200b Vue \u200b\u5e94\u7528\u200b\u7684\u200b\u5165\u53e3\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u5e76\u200b\u914d\u7f6e\u200b\u8be5\u200b\u63d2\u4ef6\u200b\u3002</p> <p>\u200b\u5728\u200b\u4f60\u200b\u7684\u200b <code>main.js</code> \u200b\u6216\u200b <code>main.ts</code> \u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u6dfb\u52a0\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>import { createApp } from \"vue\";\nimport PrimeVue from \"primevue/config\"; // \u200b\u5bfc\u5165\u200b PrimeVue \u200b\u63d2\u4ef6\u200b\nimport App from \"./App.vue\"; // \u200b\u5bfc\u5165\u200b\u4f60\u200b\u7684\u200b\u6839\u200b\u7ec4\u4ef6\u200b\n\nconst app = createApp(App);\napp.use(PrimeVue); // \u200b\u4f7f\u7528\u200b PrimeVue \u200b\u63d2\u4ef6\u200b\n\napp.mount(\"#app\"); // \u200b\u6302\u8f7d\u200b\u5e94\u7528\u200b\n</code></pre>"},{"location":"programming/javascript/primevue/#_7","title":"\u914d\u7f6e\u200b\u4e3b\u9898","text":"<p>PrimeVue \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u591a\u79cd\u200b\u9884\u8bbe\u200b\u4e3b\u9898\u200b\uff0c\u200b\u4f8b\u5982\u200b Aura\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4ee5\u4e0b\u200b\u6b65\u9aa4\u200b\u914d\u7f6e\u200b\u4e3b\u9898\u200b\uff1a</p> <p>\u200b\u5728\u200b <code>main.js</code> \u200b\u6216\u200b <code>main.ts</code> \u200b\u4e2d\u200b\uff0c\u200b\u5bfc\u5165\u200b\u4e3b\u9898\u200b\u5e76\u200b\u914d\u7f6e\u200b\uff1a</p> <pre><code>import { createApp } from \"vue\";\nimport PrimeVue from \"primevue/config\";\nimport Aura from \"@primevue/themes/aura\"; // \u200b\u5bfc\u5165\u200b Aura \u200b\u4e3b\u9898\u200b\nimport App from \"./App.vue\";\n\nconst app = createApp(App);\napp.use(PrimeVue, {\n  theme: {\n    preset: Aura, // \u200b\u4f7f\u7528\u200b Aura \u200b\u4e3b\u9898\u200b\n  },\n});\n\napp.mount(\"#app\");\n</code></pre>"},{"location":"programming/javascript/primevue/#_8","title":"\u9a8c\u8bc1\u200b\u5b89\u88c5","text":"<p>\u200b\u4e3a\u4e86\u200b\u9a8c\u8bc1\u200b PrimeVue \u200b\u662f\u5426\u200b\u5b89\u88c5\u200b\u6210\u529f\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5c1d\u8bd5\u200b\u4f7f\u7528\u200b\u4e00\u4e2a\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u4f8b\u5982\u200b <code>Button</code>\u3002PrimeVue \u200b\u7684\u200b\u7ec4\u4ef6\u200b\u662f\u200b\u6309\u200b\u9700\u200b\u5bfc\u5165\u200b\u7684\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4f60\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5bfc\u5165\u200b\u5e76\u200b\u6ce8\u518c\u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u5728\u200b\u4f60\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff08\u200b\u4f8b\u5982\u200b <code>App.vue</code>\uff09\uff0c\u200b\u6dfb\u52a0\u200b\u4ee5\u4e0b\u200b\u4ee3\u7801\u200b\uff1a</p> <pre><code>&lt;template&gt;\n  &lt;Button label=\"Click Me\" /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport Button from 'primevue/button'; // \u200b\u5bfc\u5165\u200b Button \u200b\u7ec4\u4ef6\u200b\n\nexport default {\n  components: {\n    Button // \u200b\u6ce8\u518c\u200b Button \u200b\u7ec4\u4ef6\u200b\n  }\n}\n&lt;/script&gt;\n</code></pre> <p>\u200b\u8fd0\u884c\u200b\u9879\u76ee\u200b\u540e\u200b\uff0c\u200b\u5982\u679c\u200b\u9875\u9762\u200b\u4e0a\u200b\u663e\u793a\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u6309\u94ae\u200b\uff0c\u200b\u8bf4\u660e\u200b PrimeVue \u200b\u5df2\u200b\u6210\u529f\u200b\u5b89\u88c5\u200b\u5e76\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"programming/javascript/primevue/#_9","title":"\u66f4\u200b\u591a\u200b\u793a\u4f8b","text":"<p>PrimeVue \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e30\u5bcc\u200b\u7684\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\uff0c\u200b\u6db5\u76d6\u200b\u4e86\u200b Vue \u200b\u751f\u6001\u7cfb\u7edf\u200b\u4e2d\u200b\u5e38\u89c1\u200b\u7684\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\u3002\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u8bbf\u95ee\u200b primevue-examples \u200b\u4ed3\u5e93\u200b \u200b\u67e5\u770b\u200b\u66f4\u200b\u591a\u200b\u793a\u4f8b\u200b\uff0c\u200b\u5305\u62ec\u200b\uff1a</p> <ul> <li>vite-quickstart\uff1aVite \u200b\u9879\u76ee\u200b\u7684\u200b\u5feb\u901f\u200b\u542f\u52a8\u200b\u793a\u4f8b\u200b\u3002</li> <li>vite-ts-quickstart\uff1aVite + TypeScript \u200b\u9879\u76ee\u200b\u7684\u200b\u5feb\u901f\u200b\u542f\u52a8\u200b\u793a\u4f8b\u200b\u3002</li> </ul>"},{"location":"programming/javascript/primevue/#_10","title":"\u603b\u7ed3","text":"<p>\u200b\u901a\u8fc7\u200b\u4ee5\u4e0a\u200b\u6b65\u9aa4\u200b\uff0c\u200b\u4f60\u200b\u5df2\u7ecf\u200b\u6210\u529f\u200b\u5728\u200b Vite \u200b\u9879\u76ee\u200b\u4e2d\u200b\u5b89\u88c5\u200b\u5e76\u200b\u914d\u7f6e\u200b\u4e86\u200b PrimeVue\u3002PrimeVue \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u4e30\u5bcc\u200b\u7684\u200b UI \u200b\u7ec4\u4ef6\u200b\u548c\u200b\u4e3b\u9898\u200b\uff0c\u200b\u80fd\u591f\u200b\u663e\u8457\u200b\u63d0\u5347\u200b\u5f00\u53d1\u200b\u6548\u7387\u200b\u3002\u200b\u5982\u679c\u200b\u4f60\u200b\u9700\u8981\u200b\u8fdb\u4e00\u6b65\u200b\u5b9a\u5236\u200b\u6216\u200b\u6269\u5c55\u200b\u529f\u80fd\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u53c2\u8003\u200b\u5b98\u65b9\u200b\u6587\u6863\u200b\u6216\u200b\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u3002</p> <p>PrimeVue \u200b\u7684\u200b\u6309\u200b\u9700\u200b\u5bfc\u5165\u200b\u673a\u5236\u200b\u548c\u200b\u7075\u6d3b\u200b\u7684\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u5b83\u200b\u975e\u5e38\u9002\u5408\u200b\u73b0\u4ee3\u200b Vue.js \u200b\u9879\u76ee\u200b\u3002\u200b\u65e0\u8bba\u662f\u200b\u5c0f\u578b\u200b\u9879\u76ee\u200b\u8fd8\u662f\u200b\u5927\u578b\u200b\u5e94\u7528\u200b\uff0cPrimeVue \u200b\u90fd\u200b\u80fd\u200b\u63d0\u4f9b\u200b\u5f3a\u5927\u200b\u7684\u200b\u652f\u6301\u200b\u3002</p>"},{"location":"programming/javascript/zustand/","title":"Zustand State Management","text":"<p>Zustand is a small, fast, and scalable state management solution for React applications. This section provides comprehensive documentation and examples for using Zustand effectively in your React projects.</p>"},{"location":"programming/javascript/zustand/#what-is-zustand","title":"What is Zustand?","text":"<p>Zustand (German for \"state\") is a lightweight state management library that provides: - Minimal boilerplate - Less code, more productivity - TypeScript support - Full type safety out of the box - No providers - Direct store access without context wrapping - Flexible architecture - Works with any React pattern - Excellent DevTools - Great debugging experience</p>"},{"location":"programming/javascript/zustand/#documentation-structure","title":"Documentation Structure","text":"<p>This section contains both API documentation and practical guides:</p>"},{"location":"programming/javascript/zustand/#api-reference","title":"API Reference","text":"<ul> <li>Core APIs - Essential Zustand functions and methods</li> <li>Advanced APIs - Extended functionality and utilities</li> <li>TypeScript Integration - Type-safe store definitions</li> </ul>"},{"location":"programming/javascript/zustand/#guides-and-tutorials","title":"Guides and Tutorials","text":"<ul> <li>Getting Started - Basic setup and usage patterns</li> <li>Advanced Patterns - Complex state management scenarios</li> <li>Best Practices - Recommended approaches and patterns</li> </ul>"},{"location":"programming/javascript/zustand/#examples-and-summaries","title":"Examples and Summaries","text":"<ul> <li>Practical Examples - Real-world usage scenarios</li> <li>Code Summaries - Condensed reference materials</li> <li>Tutorial Walkthroughs - Step-by-step learning guides</li> </ul>"},{"location":"programming/javascript/zustand/#key-features","title":"Key Features","text":""},{"location":"programming/javascript/zustand/#simple-store-creation","title":"Simple Store Creation","text":"<pre><code>import { create } from 'zustand'\n\nconst useStore = create((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  decrement: () =&gt; set((state) =&gt; ({ count: state.count - 1 })),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/#typescript-support","title":"TypeScript Support","text":"<pre><code>interface CounterState {\n  count: number\n  increment: () =&gt; void\n  decrement: () =&gt; void\n}\n\nconst useStore = create&lt;CounterState&gt;()((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  decrement: () =&gt; set((state) =&gt; ({ count: state.count - 1 })),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/#subscription-and-selectors","title":"Subscription and Selectors","text":"<pre><code>// Subscribe to specific state slices\nconst count = useStore((state) =&gt; state.count)\nconst increment = useStore((state) =&gt; state.increment)\n\n// Subscribe to the entire store\nconst { count, increment, decrement } = useStore()\n</code></pre>"},{"location":"programming/javascript/zustand/#advantages-over-other-solutions","title":"Advantages Over Other Solutions","text":""},{"location":"programming/javascript/zustand/#compared-to-redux","title":"Compared to Redux","text":"<ul> <li>Less boilerplate - No actions, reducers, or providers needed</li> <li>Better TypeScript - Automatic type inference</li> <li>Smaller bundle - Minimal runtime overhead</li> <li>Simpler debugging - Direct state access</li> </ul>"},{"location":"programming/javascript/zustand/#compared-to-context-api","title":"Compared to Context API","text":"<ul> <li>Better performance - Selective subscriptions prevent unnecessary re-renders</li> <li>No provider hell - Direct store access</li> <li>Easier testing - Stores can be tested independently</li> <li>More flexible - Works outside React components</li> </ul>"},{"location":"programming/javascript/zustand/#compared-to-usestate","title":"Compared to useState","text":"<ul> <li>Global state - Share state across components</li> <li>Persistent state - State survives component unmounting</li> <li>Better organization - Centralized state logic</li> <li>Advanced patterns - Middleware, persistence, and more</li> </ul>"},{"location":"programming/javascript/zustand/#common-use-cases","title":"Common Use Cases","text":""},{"location":"programming/javascript/zustand/#application-state","title":"Application State","text":"<ul> <li>User authentication status</li> <li>Theme and UI preferences</li> <li>Global loading states</li> <li>Error handling and notifications</li> </ul>"},{"location":"programming/javascript/zustand/#data-management","title":"Data Management","text":"<ul> <li>API response caching</li> <li>Form state management</li> <li>Shopping cart functionality</li> <li>Real-time data synchronization</li> </ul>"},{"location":"programming/javascript/zustand/#ui-state","title":"UI State","text":"<ul> <li>Modal and dialog management</li> <li>Navigation state</li> <li>Sidebar and menu states</li> <li>Multi-step form progress</li> </ul>"},{"location":"programming/javascript/zustand/#performance-benefits","title":"Performance Benefits","text":""},{"location":"programming/javascript/zustand/#selective-subscriptions","title":"Selective Subscriptions","text":"<ul> <li>Components only re-render when their selected state changes</li> <li>Automatic optimization prevents unnecessary updates</li> <li>Fine-grained control over what triggers re-renders</li> </ul>"},{"location":"programming/javascript/zustand/#memory-efficiency","title":"Memory Efficiency","text":"<ul> <li>Small bundle size (~2.5kb gzipped)</li> <li>Minimal runtime overhead</li> <li>Efficient state updates and notifications</li> </ul>"},{"location":"programming/javascript/zustand/#developer-experience","title":"Developer Experience","text":"<ul> <li>Excellent TypeScript integration</li> <li>Great DevTools support</li> <li>Simple debugging and testing</li> <li>Hot reload friendly</li> </ul>"},{"location":"programming/javascript/zustand/#getting-started","title":"Getting Started","text":"<ol> <li>Installation - Add Zustand to your project</li> <li>Basic Store - Create your first store</li> <li>Component Integration - Use the store in React components</li> <li>Advanced Features - Explore middleware and advanced patterns</li> </ol>"},{"location":"programming/javascript/zustand/#best-practices","title":"Best Practices","text":""},{"location":"programming/javascript/zustand/#store-organization","title":"Store Organization","text":"<ul> <li>Keep stores focused and cohesive</li> <li>Use multiple stores for different domains</li> <li>Implement proper separation of concerns</li> <li>Consider store composition patterns</li> </ul>"},{"location":"programming/javascript/zustand/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Use selectors to prevent unnecessary re-renders</li> <li>Implement proper memoization strategies</li> <li>Consider state normalization for complex data</li> <li>Monitor and profile state updates</li> </ul>"},{"location":"programming/javascript/zustand/#typescript-integration","title":"TypeScript Integration","text":"<ul> <li>Define proper interfaces for your stores</li> <li>Use generic types for reusable patterns</li> <li>Implement proper error handling types</li> <li>Leverage type inference where possible</li> </ul> <p>This comprehensive guide will help you master Zustand and build efficient, maintainable React applications with excellent state management.</p>"},{"location":"programming/javascript/zustand/apis/create-store/","title":"createStore","text":"<p><code>createStore</code> lets you create a vanilla store that exposes API utilities.</p> <pre><code>const someStore = createStore(stateCreatorFn)\n</code></pre> <ul> <li>Types</li> <li>Signature</li> <li>Reference</li> <li>Usage</li> <li>Updating state based on previous state</li> <li>Updating Primitives in State</li> <li>Updating Objects in State</li> <li>Updating Arrays in State</li> <li>Subscribing to state updates</li> <li>Troubleshooting</li> <li>I\u2019ve updated the state, but the screen doesn\u2019t update</li> </ul>"},{"location":"programming/javascript/zustand/apis/create-store/#types","title":"Types","text":""},{"location":"programming/javascript/zustand/apis/create-store/#signature","title":"Signature","text":"<pre><code>createStore&lt;T&gt;()(stateCreatorFn: StateCreator&lt;T, [], []&gt;): StoreApi&lt;T&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#reference","title":"Reference","text":""},{"location":"programming/javascript/zustand/apis/create-store/#createstorestatecreatorfn","title":"<code>createStore(stateCreatorFn)</code>","text":""},{"location":"programming/javascript/zustand/apis/create-store/#parameters","title":"Parameters","text":"<ul> <li><code>stateCreatorFn</code>: A function that takes <code>set</code> function, <code>get</code> function and <code>store</code> as arguments.   Usually, you will return an object with the methods you want to expose.</li> </ul>"},{"location":"programming/javascript/zustand/apis/create-store/#returns","title":"Returns","text":"<p><code>createStore</code> returns a vanilla store that exposes API utilities, <code>setState</code>, <code>getState</code>, <code>getInitialState</code> and <code>subscribe</code>.</p>"},{"location":"programming/javascript/zustand/apis/create-store/#usage","title":"Usage","text":""},{"location":"programming/javascript/zustand/apis/create-store/#updating-state-based-on-previous-state","title":"Updating state based on previous state","text":"<p>This example shows how you can support updater functions within actions.</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype AgeStoreState = { age: number }\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void\n}\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions\n\nconst ageStore = createStore&lt;AgeStore&gt;()((set) =&gt; ({\n  age: 42,\n  setAge: (nextAge) =&gt;\n    set((state) =&gt; ({\n      age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n    })),\n}))\n\nfunction increment() {\n  ageStore.getState().setAge((currentAge) =&gt; currentAge + 1)\n}\n\nconst $yourAgeHeading = document.getElementById(\n  'your-age',\n) as HTMLHeadingElement\nconst $incrementBy3Button = document.getElementById(\n  'increment-by-3',\n) as HTMLButtonElement\nconst $incrementBy1Button = document.getElementById(\n  'increment-by-1',\n) as HTMLButtonElement\n\n$incrementBy3Button.addEventListener('click', () =&gt; {\n  increment()\n  increment()\n  increment()\n})\n\n$incrementBy1Button.addEventListener('click', () =&gt; {\n  increment()\n})\n\nconst render: Parameters&lt;typeof ageStore.subscribe&gt;[0] = (state) =&gt; {\n  $yourAgeHeading.innerHTML = `Your age: ${state.age}`\n}\n\nrender(ageStore.getInitialState(), ageStore.getInitialState())\n\nageStore.subscribe(render)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;h1 id=\"your-age\"&gt;&lt;/h1&gt;\n&lt;button id=\"increment-by-3\" type=\"button\"&gt;+3&lt;/button&gt;\n&lt;button id=\"increment-by-1\" type=\"button\"&gt;+1&lt;/button&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#updating-primitives-in-state","title":"Updating Primitives in State","text":"<p>State can hold any kind of JavaScript value. When you want to update built-in primitive values like numbers, strings, booleans, etc. you should directly assign new values to ensure updates are applied correctly, and avoid unexpected behaviors.</p> <p>[!NOTE] By default, <code>set</code> function performs a shallow merge. If you need to completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code></p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype XStore = number\n\nconst xStore = createStore&lt;XStore&gt;()(() =&gt; 0)\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  xStore.setState(event.clientX, true)\n})\n\nconst render: Parameters&lt;typeof xStore.subscribe&gt;[0] = (x) =&gt; {\n  $dot.style.transform = `translate(${x}px, 0)`\n}\n\nrender(xStore.getInitialState(), xStore.getInitialState())\n\nxStore.subscribe(render)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;div\n  id=\"dot-container\"\n  style=\"position: relative; width: 100vw; height: 100vh;\"\n&gt;\n  &lt;div\n    id=\"dot\"\n    style=\"position: absolute; background-color: red; border-radius: 50%; left: -10px; top: -10px; width: 20px; height: 20px;\"\n  &gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#updating-objects-in-state","title":"Updating Objects in State","text":"<p>Objects are mutable in JavaScript, but you should treat them as immutable when you store them in state. Instead, when you want to update an object, you need to create a new one (or make a copy of an existing one), and then set the state to use the new object.</p> <p>By default, <code>set</code> function performs a shallow merge. For most updates where you only need to modify specific properties, the default shallow merge is preferred as it's more efficient. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code> with caution, as it discards any existing nested data within the state.</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst positionStore = createStore&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (position) =&gt; set({ position }),\n}))\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  positionStore.getState().setPosition({\n    x: event.clientX,\n    y: event.clientY,\n  })\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  $dot.style.transform = `translate(${state.position.x}px, ${state.position.y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;div\n  id=\"dot-container\"\n  style=\"position: relative; width: 100vw; height: 100vh;\"\n&gt;\n  &lt;div\n    id=\"dot\"\n    style=\"position: absolute; background-color: red; border-radius: 50%; left: -10px; top: -10px; width: 20px; height: 20px;\"\n  &gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#updating-arrays-in-state","title":"Updating Arrays in State","text":"<p>Arrays are mutable in JavaScript, but you should treat them as immutable when you store them in state. Just like with objects, when you want to update an array stored in state, you need to create a new one (or make a copy of an existing one), and then set state to use the new array.</p> <p>By default, <code>set</code> function performs a shallow merge. To update array values we should assign new values to ensure updates are applied correctly, and avoid unexpected behaviors. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code>.</p> <p>[!IMPORTANT] We should prefer immutable operations like: <code>[...array]</code>, <code>concat(...)</code>, <code>filter(...)</code>, <code>slice(...)</code>, <code>map(...)</code>, <code>toSpliced(...)</code>, <code>toSorted(...)</code>, and <code>toReversed(...)</code>, and avoid mutable operations like <code>array[arrayIndex] = ...</code>, <code>push(...)</code>, <code>unshift(...)</code>, <code>pop(...)</code>, <code>shift(...)</code>, <code>splice(...)</code>, <code>reverse(...)</code>, and <code>sort(...)</code>.</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStore = [number, number]\n\nconst positionStore = create&lt;PositionStore&gt;()(() =&gt; [0, 0])\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  positionStore.setState([event.clientX, event.clientY], true)\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = ([x, y]) =&gt; {\n  $dot.style.transform = `translate(${x}px, ${y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;div\n  id=\"dot-container\"\n  style=\"position: relative; width: 100vw; height: 100vh;\"\n&gt;\n  &lt;div\n    id=\"dot\"\n    style=\"position: absolute; background-color: red; border-radius: 50%; left: -10px; top: -10px; width: 20px; height: 20px;\"\n  &gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#subscribing-to-state-updates","title":"Subscribing to state updates","text":"<p>By subscribing to state updates, you register a callback that fires whenever the store's state updates. We can use <code>subscribe</code> for external state management.</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst positionStore = createStore&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (position) =&gt; set({ position }),\n}))\n\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dot.addEventListener('mouseenter', (event) =&gt; {\n  const parent = event.currentTarget.parentElement\n  const parentWidth = parent.clientWidth\n  const parentHeight = parent.clientHeight\n\n  positionStore.getState().setPosition({\n    x: Math.ceil(Math.random() * parentWidth),\n    y: Math.ceil(Math.random() * parentHeight),\n  })\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  $dot.style.transform = `translate(${state.position.x}px, ${state.position.y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n\nconst logger: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  console.log('new position', { position: state.position })\n}\n\npositionStore.subscribe(logger)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;div\n  id=\"dot-container\"\n  style=\"position: relative; width: 100vw; height: 100vh;\"\n&gt;\n  &lt;div\n    id=\"dot\"\n    style=\"position: absolute; background-color: red; border-radius: 50%; left: -10px; top: -10px; width: 20px; height: 20px;\"\n  &gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-store/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming/javascript/zustand/apis/create-store/#ive-updated-the-state-but-the-screen-doesnt-update","title":"I\u2019ve updated the state, but the screen doesn\u2019t update","text":"<p>In the previous example, the <code>position</code> object is always created fresh from the current cursor position. But often, you will want to include existing data as a part of the new object you\u2019re creating. For example, you may want to update only one field in a form, but keep the previous values for all other fields.</p> <p>These input fields don\u2019t work because the <code>oninput</code> handlers mutate the state:</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PersonStoreState = {\n  person: { firstName: string; lastName: string; email: string }\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: PersonStoreState['person']) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst personStore = createStore&lt;PersonStore&gt;()((set) =&gt; ({\n  person: {\n    firstName: 'Barbara',\n    lastName: 'Hepworth',\n    email: 'bhepworth@sculpture.com',\n  },\n  setPerson: (person) =&gt; set({ person }),\n}))\n\nconst $firstNameInput = document.getElementById(\n  'first-name',\n) as HTMLInputElement\nconst $lastNameInput = document.getElementById('last-name') as HTMLInputElement\nconst $emailInput = document.getElementById('email') as HTMLInputElement\nconst $result = document.getElementById('result') as HTMLDivElement\n\nfunction handleFirstNameChange(event: Event) {\n  personStore.getState().person.firstName = (event.target as any).value\n}\n\nfunction handleLastNameChange(event: Event) {\n  personStore.getState().person.lastName = (event.target as any).value\n}\n\nfunction handleEmailChange(event: Event) {\n  personStore.getState().person.email = (event.target as any).value\n}\n\n$firstNameInput.addEventListener('input', handleFirstNameChange)\n$lastNameInput.addEventListener('input', handleLastNameChange)\n$emailInput.addEventListener('input', handleEmailChange)\n\nconst render: Parameters&lt;typeof personStore.subscribe&gt;[0] = (state) =&gt; {\n  $firstNameInput.value = state.person.firstName\n  $lastNameInput.value = state.person.lastName\n  $emailInput.value = state.person.email\n\n  $result.innerHTML = `${state.person.firstName} ${state.person.lastName} (${state.person.email})`\n}\n\nrender(personStore.getInitialState(), personStore.getInitialState())\n\npersonStore.subscribe(render)\n</code></pre> <p>Here's the <code>html</code> code</p> <pre><code>&lt;label style=\"display: block\"&gt;\n  First name:\n  &lt;input id=\"first-name\" /&gt;\n&lt;/label&gt;\n&lt;label style=\"display: block\"&gt;\n  Last name:\n  &lt;input id=\"last-name\" /&gt;\n&lt;/label&gt;\n&lt;label style=\"display: block\"&gt;\n  Email:\n  &lt;input id=\"email\" /&gt;\n&lt;/label&gt;\n&lt;p id=\"result\"&gt;&lt;/p&gt;\n</code></pre> <p>For example, this line mutates the state from a past render:</p> <pre><code>personStore.getState().firstName = (e.target as any).value\n</code></pre> <p>The reliable way to get the behavior you\u2019re looking for is to create a new object and pass it to <code>setPerson</code>. But here you want to also copy the existing data into it because only one of the fields has changed:</p> <pre><code>personStore.getState().setPerson({\n  firstName: e.target.value, // New first name from the input\n})\n</code></pre> <p>[!NOTE] We don\u2019t need to copy every property separately due to <code>set</code> function performing shallow merge by default.</p> <p>Now the form works!</p> <p>Notice how you didn\u2019t declare a separate state variable for each input field. For large forms, keeping all data grouped in an object is very convenient\u2014as long as you update it correctly!</p> <pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PersonStoreState = {\n  person: { firstName: string; lastName: string; email: string }\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: PersonStoreState['person']) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst personStore = createStore&lt;PersonStore&gt;()((set) =&gt; ({\n  person: {\n    firstName: 'Barbara',\n    lastName: 'Hepworth',\n    email: 'bhepworth@sculpture.com',\n  },\n  setPerson: (person) =&gt; set({ person }),\n}))\n\nconst $firstNameInput = document.getElementById(\n  'first-name',\n) as HTMLInputElement\nconst $lastNameInput = document.getElementById('last-name') as HTMLInputElement\nconst $emailInput = document.getElementById('email') as HTMLInputElement\nconst $result = document.getElementById('result') as HTMLDivElement\n\nfunction handleFirstNameChange(event: Event) {\n  personStore.getState().setPerson({\n    ...personStore.getState().person,\n    firstName: (event.target as any).value,\n  })\n}\n\nfunction handleLastNameChange(event: Event) {\n  personStore.getState().setPerson({\n    ...personStore.getState().person,\n    lastName: (event.target as any).value,\n  })\n}\n\nfunction handleEmailChange(event: Event) {\n  personStore.getState().setPerson({\n    ...personStore.getState().person,\n    email: (event.target as any).value,\n  })\n}\n\n$firstNameInput.addEventListener('input', handleFirstNameChange)\n$lastNameInput.addEventListener('input', handleLastNameChange)\n$emailInput.addEventListener('input', handleEmailChange)\n\nconst render: Parameters&lt;typeof personStore.subscribe&gt;[0] = (state) =&gt; {\n  $firstNameInput.value = state.person.firstName\n  $lastNameInput.value = state.person.lastName\n  $emailInput.value = state.person.email\n\n  $result.innerHTML = `${state.person.firstName} ${state.person.lastName} (${state.person.email})`\n}\n\nrender(personStore.getInitialState(), personStore.getInitialState())\n\npersonStore.subscribe(render)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/","title":"createWithEqualityFn \u269b\ufe0f","text":"<p><code>createWithEqualityFn</code> lets you create a React Hook with API utilities attached, just like <code>create</code>. However, it offers a way to define a custom equality check. This allows for more granular control over when components re-render, improving performance and responsiveness.</p> <pre><code>const useSomeStore = createWithEqualityFn(stateCreatorFn, equalityFn)\n</code></pre> <ul> <li>Types</li> <li>Signature</li> <li>Reference</li> <li>Usage</li> <li>Updating state based on previous state</li> <li>Updating Primitives in State</li> <li>Updating Objects in State</li> <li>Updating Arrays in State</li> <li>Updating state with no store actions</li> <li>Subscribing to state updates</li> <li>Troubleshooting</li> <li>I\u2019ve updated the state, but the screen doesn\u2019t update</li> </ul>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#types","title":"Types","text":""},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#signature","title":"Signature","text":"<pre><code>createWithEqualityFn&lt;T&gt;()(stateCreatorFn: StateCreator&lt;T, [], []&gt;, equalityFn?: (a: T, b: T) =&gt; boolean): UseBoundStore&lt;StoreApi&lt;T&gt;&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#reference","title":"Reference","text":""},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#createwithequalityfnstatecreatorfn","title":"<code>createWithEqualityFn(stateCreatorFn)</code>","text":""},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#parameters","title":"Parameters","text":"<ul> <li><code>stateCreatorFn</code>: A function that takes <code>set</code> function, <code>get</code> function and <code>store</code> as arguments.   Usually, you will return an object with the methods you want to expose.</li> <li>optional <code>equalityFn</code>: Defaults to <code>Object.is</code>. A function that lets you skip re-renders.</li> </ul>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#returns","title":"Returns","text":"<p><code>createWithEqualityFn</code> returns a React Hook with API utilities attached, just like <code>create</code>. It lets you return data that is based on current state, using a selector function, and lets you skip re-renders using an equality function. It should take a selector function, and an equality function as arguments.</p>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#usage","title":"Usage","text":""},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#updating-state-based-on-previous-state","title":"Updating state based on previous state","text":"<p>To update a state based on previous state we should use updater functions. Read more about that here.</p> <p>This example shows how you can support updater functions within actions.</p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype AgeStoreState = { age: number }\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void\n}\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions\n\nconst useAgeStore = createWithEqualityFn&lt;AgeStore&gt;()(\n  (set) =&gt; ({\n    age: 42,\n    setAge: (nextAge) =&gt;\n      set((state) =&gt; ({\n        age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n      })),\n  }),\n  shallow,\n)\n\nexport default function App() {\n  const age = useAgeStore((state) =&gt; state.age)\n  const setAge = useAgeStore((state) =&gt; state.setAge)\n\n  function increment() {\n    setAge((currentAge) =&gt; currentAge + 1)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button\n        type=\"button\"\n        onClick={() =&gt; {\n          increment()\n          increment()\n          increment()\n        }}\n      &gt;\n        +3\n      &lt;/button&gt;\n      &lt;button\n        type=\"button\"\n        onClick={() =&gt; {\n          increment()\n        }}\n      &gt;\n        +1\n      &lt;/button&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#updating-primitives-in-state","title":"Updating Primitives in State","text":"<p>State can hold any kind of JavaScript value. When you want to update built-in primitive values like numbers, strings, booleans, etc. you should directly assign new values to ensure updates are applied correctly, and avoid unexpected behaviors.</p> <p>[!NOTE] By default, <code>set</code> function performs a shallow merge. If you need to completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code></p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype XStore = number\n\nconst useXStore = createWithEqualityFn&lt;XStore&gt;()(() =&gt; 0, shallow)\n\nexport default function MovingDot() {\n  const x = useXStore()\n  const setX = (nextX: number) =&gt; {\n    useXStore.setState(nextX, true)\n  }\n  const position = { y: 0, x }\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setX(e.clientX)\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#updating-objects-in-state","title":"Updating Objects in State","text":"<p>Objects are mutable in JavaScript, but you should treat them as immutable when you store them in state. Instead, when you want to update an object, you need to create a new one (or make a copy of an existing one), and then set the state to use the new object.</p> <p>By default, <code>set</code> function performs a shallow merge. For most updates where you only need to modify specific properties, the default shallow merge is preferred as it's more efficient. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code> with caution, as it discards any existing nested data within the state.</p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst usePositionStore = createWithEqualityFn&lt;PositionStore&gt;()(\n  (set) =&gt; ({\n    position: { x: 0, y: 0 },\n    setPosition: (position) =&gt; set({ position }),\n  }),\n  shallow,\n)\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position)\n  const setPosition = usePositionStore((state) =&gt; state.setPosition)\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition({\n          x: e.clientX,\n          y: e.clientY,\n        })\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#updating-arrays-in-state","title":"Updating Arrays in State","text":"<p>Arrays are mutable in JavaScript, but you should treat them as immutable when you store them in state. Just like with objects, when you want to update an array stored in state, you need to create a new one (or make a copy of an existing one), and then set state to use the new array.</p> <p>By default, <code>set</code> function performs a shallow merge. To update array values we should assign new values to ensure updates are applied correctly, and avoid unexpected behaviors. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code>.</p> <p>[!IMPORTANT] We should prefer immutable operations like: <code>[...array]</code>, <code>concat(...)</code>, <code>filter(...)</code>, <code>slice(...)</code>, <code>map(...)</code>, <code>toSpliced(...)</code>, <code>toSorted(...)</code>, and <code>toReversed(...)</code>, and avoid mutable operations like <code>array[arrayIndex] = ...</code>, <code>push(...)</code>, <code>unshift(...)</code>, <code>pop(...)</code>, <code>shift(...)</code>, <code>splice(...)</code>, <code>reverse(...)</code>, and <code>sort(...)</code>.</p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype PositionStore = [number, number]\n\nconst usePositionStore = createWithEqualityFn&lt;PositionStore&gt;()(\n  () =&gt; [0, 0],\n  shallow,\n)\n\nexport default function MovingDot() {\n  const [x, y] = usePositionStore()\n  const position = { x, y }\n  const setPosition: typeof usePositionStore.setState = (nextPosition) =&gt; {\n    usePositionStore.setState(nextPosition, true)\n  }\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition([e.clientX, e.clientY])\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#updating-state-with-no-store-actions","title":"Updating state with no store actions","text":"<p>Defining actions at module level, external to the store have a few advantages like: it doesn't require a hook to call an action, and it facilitates code splitting.</p> <p>[!NOTE] The recommended way is to colocate actions and states within the store (let your actions be located together with your state).</p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\nconst usePositionStore = createWithEqualityFn&lt;{\n  x: number\n  y: number\n}&gt;()(() =&gt; ({ x: 0, y: 0 }), shallow)\n\nconst setPosition: typeof usePositionStore.setState = (nextPosition) =&gt; {\n  usePositionStore.setState(nextPosition)\n}\n\nexport default function MovingDot() {\n  const position = usePositionStore()\n\n  return (\n    &lt;div\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n        onMouseEnter={(event) =&gt; {\n          const parent = event.currentTarget.parentElement\n          const parentWidth = parent.clientWidth\n          const parentHeight = parent.clientHeight\n\n          setPosition({\n            x: Math.ceil(Math.random() * parentWidth),\n            y: Math.ceil(Math.random() * parentHeight),\n          })\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#subscribing-to-state-updates","title":"Subscribing to state updates","text":"<p>By subscribing to state updates, you register a callback that fires whenever the store's state updates. We can use <code>subscribe</code> for external state management.</p> <pre><code>import { useEffect } from 'react'\nimport { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst usePositionStore = createWithEqualityFn&lt;PositionStore&gt;()(\n  (set) =&gt; ({\n    position: { x: 0, y: 0 },\n    setPosition: (nextPosition) =&gt; set(nextPosition),\n  }),\n  shallow,\n)\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position)\n  const setPosition = usePositionStore((state) =&gt; state.setPosition)\n\n  useEffect(() =&gt; {\n    const unsubscribePositionStore = usePositionStore.subscribe(\n      ({ position }) =&gt; {\n        console.log('new position', { position })\n      },\n    )\n\n    return () =&gt; {\n      unsubscribePositionStore()\n    }\n  }, [])\n\n  return (\n    &lt;div\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n        onMouseEnter={(event) =&gt; {\n          const parent = event.currentTarget.parentElement\n          const parentWidth = parent.clientWidth\n          const parentHeight = parent.clientHeight\n\n          setPosition({\n            x: Math.ceil(Math.random() * parentWidth),\n            y: Math.ceil(Math.random() * parentHeight),\n          })\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming/javascript/zustand/apis/create-with-equality-fn/#ive-updated-the-state-but-the-screen-doesnt-update","title":"I\u2019ve updated the state, but the screen doesn\u2019t update","text":"<p>In the previous example, the <code>position</code> object is always created fresh from the current cursor position. But often, you will want to include existing data as a part of the new object you\u2019re creating. For example, you may want to update only one field in a form, but keep the previous values for all other fields.</p> <p>These input fields don\u2019t work because the <code>onChange</code> handlers mutate the state:</p> <pre><code>import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype PersonStoreState = {\n  person: { firstName: string; lastName: string; email: string }\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: PersonStoreState['person']) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst usePersonStore = createWithEqualityFn&lt;PersonStore&gt;()(\n  (set) =&gt; ({\n    person: {\n      firstName: 'Barbara',\n      lastName: 'Hepworth',\n      email: 'bhepworth@sculpture.com',\n    },\n    setPerson: (person) =&gt; set({ person }),\n  }),\n  shallow,\n)\n\nexport default function Form() {\n  const person = usePersonStore((state) =&gt; state.person)\n  const setPerson = usePersonStore((state) =&gt; state.setPerson)\n\n  function handleFirstNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.firstName = e.target.value\n  }\n\n  function handleLastNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.lastName = e.target.value\n  }\n\n  function handleEmailChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.email = e.target.value\n  }\n\n  return (\n    &lt;&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        First name:\n        &lt;input value={person.firstName} onChange={handleFirstNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Last name:\n        &lt;input value={person.lastName} onChange={handleLastNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Email:\n        &lt;input value={person.email} onChange={handleEmailChange} /&gt;\n      &lt;/label&gt;\n      &lt;p&gt;\n        {person.firstName} {person.lastName} ({person.email})\n      &lt;/p&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre> <p>For example, this line mutates the state from a past render:</p> <pre><code>person.firstName = e.target.value\n</code></pre> <p>The reliable way to get the behavior you\u2019re looking for is to create a new object and pass it to <code>setPerson</code>. But here you want to also copy the existing data into it because only one of the fields has changed:</p> <pre><code>setPerson({ ...person, firstName: e.target.value }) // New first name from the input\n</code></pre> <p>[!NOTE] We don\u2019t need to copy every property separately due to <code>set</code> function performing shallow merge by default.</p> <p>Now the form works!</p> <p>Notice how you didn\u2019t declare a separate state variable for each input field. For large forms, keeping all data grouped in an object is very convenient\u2014as long as you update it correctly!</p> <pre><code>import { type ChangeEvent } from 'react'\nimport { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/vanilla/shallow'\n\ntype PersonStoreState = {\n  person: { firstName: string; lastName: string; email: string }\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: PersonStoreState['person']) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst usePersonStore = createWithEqualityFn&lt;PersonStore&gt;()(\n  (set) =&gt; ({\n    person: {\n      firstName: 'Barbara',\n      lastName: 'Hepworth',\n      email: 'bhepworth@sculpture.com',\n    },\n    setPerson: (person) =&gt; set({ person }),\n  }),\n  shallow,\n)\n\nexport default function Form() {\n  const person = usePersonStore((state) =&gt; state.person)\n  const setPerson = usePersonStore((state) =&gt; state.setPerson)\n\n  function handleFirstNameChange(e: ChangeEvent&lt;HTLMInputElement&gt;) {\n    setPerson({ ...person, firstName: e.target.value })\n  }\n\n  function handleLastNameChange(e: ChangeEvent&lt;HTLMInputElement&gt;) {\n    setPerson({ ...person, lastName: e.target.value })\n  }\n\n  function handleEmailChange(e: ChangeEvent&lt;HTLMInputElement&gt;) {\n    setPerson({ ...person, email: e.target.value })\n  }\n\n  return (\n    &lt;&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        First name:\n        &lt;input value={person.firstName} onChange={handleFirstNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Last name:\n        &lt;input value={person.lastName} onChange={handleLastNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Email:\n        &lt;input value={person.email} onChange={handleEmailChange} /&gt;\n      &lt;/label&gt;\n      &lt;p&gt;\n        {person.firstName} {person.lastName} ({person.email})\n      &lt;/p&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/","title":"create \u269b\ufe0f","text":"<p><code>create</code> lets you create a React Hook with API utilities attached.</p> <pre><code>const useSomeStore = create(stateCreatorFn)\n</code></pre> <ul> <li>Types</li> <li>Signature</li> <li>Reference</li> <li>Usage</li> <li>Updating state based on previous state</li> <li>Updating Primitives in State</li> <li>Updating Objects in State</li> <li>Updating Arrays in State</li> <li>Updating state with no store actions</li> <li>Subscribing to state updates</li> <li>Troubleshooting</li> <li>I\u2019ve updated the state, but the screen doesn\u2019t update</li> </ul>"},{"location":"programming/javascript/zustand/apis/create/#types","title":"Types","text":""},{"location":"programming/javascript/zustand/apis/create/#signature","title":"Signature","text":"<pre><code>create&lt;T&gt;()(stateCreatorFn: StateCreator&lt;T, [], []&gt;): UseBoundStore&lt;StoreApi&lt;T&gt;&gt;\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#reference","title":"Reference","text":""},{"location":"programming/javascript/zustand/apis/create/#createstatecreatorfn","title":"<code>create(stateCreatorFn)</code>","text":""},{"location":"programming/javascript/zustand/apis/create/#parameters","title":"Parameters","text":"<ul> <li><code>stateCreatorFn</code>: A function that takes <code>set</code> function, <code>get</code> function and <code>store</code> as arguments.   Usually, you will return an object with the methods you want to expose.</li> </ul>"},{"location":"programming/javascript/zustand/apis/create/#returns","title":"Returns","text":"<p><code>create</code> returns a React Hook with API utilities, <code>setState</code>, <code>getState</code>, <code>getInitialState</code> and <code>subscribe</code>, attached. It lets you return data that is based on current state, using a selector function. It should take a selector function as its only argument.</p>"},{"location":"programming/javascript/zustand/apis/create/#usage","title":"Usage","text":""},{"location":"programming/javascript/zustand/apis/create/#updating-state-based-on-previous-state","title":"Updating state based on previous state","text":"<p>To update a state based on previous state we should use updater functions. Read more about that here.</p> <p>This example shows how you can support updater functions within actions.</p> <pre><code>import { create } from 'zustand'\n\ntype AgeStoreState = { age: number }\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void\n}\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions\n\nconst useAgeStore = create&lt;AgeStore&gt;()((set) =&gt; ({\n  age: 42,\n  setAge: (nextAge) =&gt; {\n    set((state) =&gt; ({\n      age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n    }))\n  },\n}))\n\nexport default function App() {\n  const age = useAgeStore((state) =&gt; state.age)\n  const setAge = useAgeStore((state) =&gt; state.setAge)\n\n  function increment() {\n    setAge((currentAge) =&gt; currentAge + 1)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button\n        onClick={() =&gt; {\n          increment()\n          increment()\n          increment()\n        }}\n      &gt;\n        +3\n      &lt;/button&gt;\n      &lt;button\n        onClick={() =&gt; {\n          increment()\n        }}\n      &gt;\n        +1\n      &lt;/button&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#updating-primitives-in-state","title":"Updating Primitives in State","text":"<p>State can hold any kind of JavaScript value. When you want to update built-in primitive values like numbers, strings, booleans, etc. you should directly assign new values to ensure updates are applied correctly, and avoid unexpected behaviors.</p> <p>[!NOTE] By default, <code>set</code> function performs a shallow merge. If you need to completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code></p> <pre><code>import { create } from 'zustand'\n\ntype XStore = number\n\nconst useXStore = create&lt;XStore&gt;()(() =&gt; 0)\n\nexport default function MovingDot() {\n  const x = useXStore()\n  const setX = (nextX: number) =&gt; {\n    useXStore.setState(nextX, true)\n  }\n  const position = { y: 0, x }\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setX(e.clientX)\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#updating-objects-in-state","title":"Updating Objects in State","text":"<p>Objects are mutable in JavaScript, but you should treat them as immutable when you store them in state. Instead, when you want to update an object, you need to create a new one (or make a copy of an existing one), and then set the state to use the new object.</p> <p>By default, <code>set</code> function performs a shallow merge. For most updates where you only need to modify specific properties, the default shallow merge is preferred as it's more efficient. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code> with caution, as it discards any existing nested data within the state.</p> <pre><code>import { create } from 'zustand'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst usePositionStore = create&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (nextPosition) =&gt; set(nextPosition),\n}))\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position)\n  const setPosition = usePositionStore((state) =&gt; state.setPosition)\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition({\n          x: e.clientX,\n          y: e.clientY,\n        })\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#updating-arrays-in-state","title":"Updating Arrays in State","text":"<p>Arrays are mutable in JavaScript, but you should treat them as immutable when you store them in state. Just like with objects, when you want to update an array stored in state, you need to create a new one (or make a copy of an existing one), and then set state to use the new array.</p> <p>By default, <code>set</code> function performs a shallow merge. To update array values we should assign new values to ensure updates are applied correctly, and avoid unexpected behaviors. To completely replace the state with a new one, use the <code>replace</code> parameter set to <code>true</code>.</p> <p>[!IMPORTANT] We should prefer immutable operations like: <code>[...array]</code>, <code>concat(...)</code>, <code>filter(...)</code>, <code>slice(...)</code>, <code>map(...)</code>, <code>toSpliced(...)</code>, <code>toSorted(...)</code>, and <code>toReversed(...)</code>, and avoid mutable operations like <code>array[arrayIndex] = ...</code>, <code>push(...)</code>, <code>unshift(...)</code>, <code>pop(...)</code>, <code>shift(...)</code>, <code>splice(...)</code>, <code>reverse(...)</code>, and <code>sort(...)</code>.</p> <pre><code>import { create } from 'zustand'\n\ntype PositionStore = [number, number]\n\nconst usePositionStore = create&lt;PositionStore&gt;()(() =&gt; [0, 0])\n\nexport default function MovingDot() {\n  const [x, y] = usePositionStore()\n  const setPosition: typeof usePositionStore.setState = (nextPosition) =&gt; {\n    usePositionStore.setState(nextPosition, true)\n  }\n  const position = { x, y }\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition([e.clientX, e.clientY])\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#updating-state-with-no-store-actions","title":"Updating state with no store actions","text":"<p>Defining actions at module level, external to the store have a few advantages like: it doesn't require a hook to call an action, and it facilitates code splitting.</p> <p>[!NOTE] The recommended way is to colocate actions and states within the store (let your actions be located together with your state).</p> <pre><code>import { create } from 'zustand'\n\nconst usePositionStore = create&lt;{\n  x: number\n  y: number\n}&gt;()(() =&gt; ({ x: 0, y: 0 }))\n\nconst setPosition: typeof usePositionStore.setState = (nextPosition) =&gt; {\n  usePositionStore.setState(nextPosition)\n}\n\nexport default function MovingDot() {\n  const position = usePositionStore()\n\n  return (\n    &lt;div\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n        onMouseEnter={(event) =&gt; {\n          const parent = event.currentTarget.parentElement\n          const parentWidth = parent.clientWidth\n          const parentHeight = parent.clientHeight\n\n          setPosition({\n            x: Math.ceil(Math.random() * parentWidth),\n            y: Math.ceil(Math.random() * parentHeight),\n          })\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#subscribing-to-state-updates","title":"Subscribing to state updates","text":"<p>By subscribing to state updates, you register a callback that fires whenever the store's state updates. We can use <code>subscribe</code> for external state management.</p> <pre><code>import { useEffect } from 'react'\nimport { create } from 'zustand'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst usePositionStore = create&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (nextPosition) =&gt; set(nextPosition),\n}))\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position)\n  const setPosition = usePositionStore((state) =&gt; state.setPosition)\n\n  useEffect(() =&gt; {\n    const unsubscribePositionStore = usePositionStore.subscribe(\n      ({ position }) =&gt; {\n        console.log('new position', { position })\n      },\n    )\n\n    return () =&gt; {\n      unsubscribePositionStore()\n    }\n  }, [])\n\n  return (\n    &lt;div\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n        onMouseEnter={(event) =&gt; {\n          const parent = event.currentTarget.parentElement\n          const parentWidth = parent.clientWidth\n          const parentHeight = parent.clientHeight\n\n          setPosition({\n            x: Math.ceil(Math.random() * parentWidth),\n            y: Math.ceil(Math.random() * parentHeight),\n          })\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/create/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming/javascript/zustand/apis/create/#ive-updated-the-state-but-the-screen-doesnt-update","title":"I\u2019ve updated the state, but the screen doesn\u2019t update","text":"<p>In the previous example, the <code>position</code> object is always created fresh from the current cursor position. But often, you will want to include existing data as a part of the new object you\u2019re creating. For example, you may want to update only one field in a form, but keep the previous values for all other fields.</p> <p>These input fields don\u2019t work because the <code>onChange</code> handlers mutate the state:</p> <pre><code>import { create } from 'zustand'\n\ntype PersonStoreState = {\n  firstName: string\n  lastName: string\n  email: string\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: Partial&lt;PersonStoreState&gt;) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst usePersonStore = create&lt;PersonStore&gt;()((set) =&gt; ({\n  firstName: 'Barbara',\n  lastName: 'Hepworth',\n  email: 'bhepworth@sculpture.com',\n  setPerson: (nextPerson) =&gt; set(nextPerson),\n}))\n\nexport default function Form() {\n  const person = usePersonStore((state) =&gt; person)\n  const setPerson = usePersonStore((state) =&gt; setPerson)\n\n  function handleFirstNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.firstName = e.target.value\n  }\n\n  function handleLastNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.lastName = e.target.value\n  }\n\n  function handleEmailChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    person.email = e.target.value\n  }\n\n  return (\n    &lt;&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        First name:\n        &lt;input value={person.firstName} onChange={handleFirstNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Last name:\n        &lt;input value={person.lastName} onChange={handleLastNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Email:\n        &lt;input value={person.email} onChange={handleEmailChange} /&gt;\n      &lt;/label&gt;\n      &lt;p&gt;\n        {person.firstName} {person.lastName} ({person.email})\n      &lt;/p&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre> <p>For example, this line mutates the state from a past render:</p> <pre><code>person.firstName = e.target.value\n</code></pre> <p>The reliable way to get the behavior you\u2019re looking for is to create a new object and pass it to <code>setPerson</code>. But here you want to also copy the existing data into it because only one of the fields has changed:</p> <pre><code>setPerson({ ...person, firstName: e.target.value }) // New first name from the input\n</code></pre> <p>[!NOTE] We don\u2019t need to copy every property separately due to <code>set</code> function performing shallow merge by default.</p> <p>Now the form works!</p> <p>Notice how you didn\u2019t declare a separate state variable for each input field. For large forms, keeping all data grouped in an object is very convenient\u2014as long as you update it correctly!</p> <pre><code>import { create } from 'zustand'\n\ntype PersonStoreState = {\n  person: { firstName: string; lastName: string; email: string }\n}\n\ntype PersonStoreActions = {\n  setPerson: (nextPerson: PersonStoreState['person']) =&gt; void\n}\n\ntype PersonStore = PersonStoreState &amp; PersonStoreActions\n\nconst usePersonStore = create&lt;PersonStore&gt;()((set) =&gt; ({\n  person: {\n    firstName: 'Barbara',\n    lastName: 'Hepworth',\n    email: 'bhepworth@sculpture.com',\n  },\n  setPerson: (nextPerson) =&gt; set(nextPerson),\n}))\n\nexport default function Form() {\n  const person = usePersonStore((state) =&gt; state.person)\n  const setPerson = usePersonStore((state) =&gt; state.setPerson)\n\n  function handleFirstNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    setPerson({ ...person, firstName: e.target.value })\n  }\n\n  function handleLastNameChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    setPerson({ ...person, lastName: e.target.value })\n  }\n\n  function handleEmailChange(e: ChangeEvent&lt;HTMLInputElement&gt;) {\n    setPerson({ ...person, email: e.target.value })\n  }\n\n  return (\n    &lt;&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        First name:\n        &lt;input value={person.firstName} onChange={handleFirstNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Last name:\n        &lt;input value={person.lastName} onChange={handleLastNameChange} /&gt;\n      &lt;/label&gt;\n      &lt;label style={{ display: 'block' }}&gt;\n        Email:\n        &lt;input value={person.email} onChange={handleEmailChange} /&gt;\n      &lt;/label&gt;\n      &lt;p&gt;\n        {person.firstName} {person.lastName} ({person.email})\n      &lt;/p&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/","title":"shallow","text":"<p><code>shallow</code> lets you run fast checks on simple data structures. It effectively identifies changes in top-level properties when you're working with data structures that don't have nested objects or arrays within them.</p> <p>[!NOTE] Shallow lets you perform quick comparisons, but keep its limitations in mind.</p> <pre><code>const equal = shallow(a, b)\n</code></pre> <ul> <li>Types</li> <li>Signature</li> <li>Reference</li> <li>Usage</li> <li>Comparing Primitives</li> <li>Comparing Objects</li> <li>Comparing Sets</li> <li>Comparing Maps</li> <li>Troubleshooting</li> <li>Comparing objects returns <code>false</code> even if they are identical.</li> </ul>"},{"location":"programming/javascript/zustand/apis/shallow/#types","title":"Types","text":""},{"location":"programming/javascript/zustand/apis/shallow/#signature","title":"Signature","text":"<pre><code>shallow&lt;T&gt;(a: T, b: T): boolean\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/#reference","title":"Reference","text":""},{"location":"programming/javascript/zustand/apis/shallow/#shallowa-b","title":"<code>shallow(a, b)</code>","text":""},{"location":"programming/javascript/zustand/apis/shallow/#parameters","title":"Parameters","text":"<ul> <li><code>a</code>: The first value.</li> <li><code>b</code>: The second value.</li> </ul>"},{"location":"programming/javascript/zustand/apis/shallow/#returns","title":"Returns","text":"<p><code>shallow</code> returns <code>true</code> when <code>a</code> and <code>b</code> are equal based on a shallow comparison of their top-level properties. Otherwise, it should return <code>false</code>.</p>"},{"location":"programming/javascript/zustand/apis/shallow/#usage","title":"Usage","text":""},{"location":"programming/javascript/zustand/apis/shallow/#comparing-primitives","title":"Comparing Primitives","text":"<p>When comparing primitive values like <code>string</code>s, <code>number</code>s, <code>boolean</code>s, and <code>BigInt</code>s, both <code>Object.is</code> and <code>shallow</code> function return <code>true</code> if the values are the same. This is because primitive values are compared by their actual value rather than by reference.</p> <pre><code>const stringLeft = 'John Doe'\nconst stringRight = 'John Doe'\n\nObject.is(stringLeft, stringRight) // -&gt; true\nshallow(stringLeft, stringRight) // -&gt; true\n\nconst numberLeft = 10\nconst numberRight = 10\n\nObject.is(numberLeft, numberRight) // -&gt; true\nshallow(numberLeft, numberRight) // -&gt; true\n\nconst booleanLeft = true\nconst booleanRight = true\n\nObject.is(booleanLeft, booleanRight) // -&gt; true\nshallow(booleanLeft, booleanRight) // -&gt; true\n\nconst bigIntLeft = 1n\nconst bigIntRight = 1n\n\nObject.is(bigInLeft, bigInRight) // -&gt; true\nshallow(bigInLeft, bigInRight) // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/#comparing-objects","title":"Comparing Objects","text":"<p>When comparing objects, it's important to understand how <code>Object.is</code> and <code>shallow</code> function operate, as they handle comparisons differently.</p> <p>The <code>shallow</code> function returns <code>true</code> because shallow performs a shallow comparison of the objects. It checks if the top-level properties and their values are the same. In this case, the top-level properties (<code>firstName</code>, <code>lastName</code>, and <code>age</code>) and their values are identical between <code>objectLeft</code> and <code>objectRight</code>, so shallow considers them equal.</p> <pre><code>const objectLeft = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n}\nconst objectRight = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n}\n\nObject.is(objectLeft, objectRight) // -&gt; false\nshallow(objectLeft, objectRight) // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/#comparing-sets","title":"Comparing Sets","text":"<p>When comparing sets, it's important to understand how <code>Object.is</code> and <code>shallow</code> function operate, as they handle comparisons differently.</p> <p>The <code>shallow</code> function returns <code>true</code> because shallow performs a shallow comparison of the sets. It checks if the top-level properties (in this case, the sets themselves) are the same. Since <code>setLeft</code> and <code>setRight</code> are both instances of the Set object and contain the same elements, shallow considers them equal.</p> <pre><code>const setLeft = new Set([1, 2, 3])\nconst setRight = new Set([1, 2, 3])\n\nObject.is(setLeft, setRight) // -&gt; false\nshallow(setLeft, setRight) // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/#comparing-maps","title":"Comparing Maps","text":"<p>When comparing maps, it's important to understand how <code>Object.is</code> and <code>shallow</code> function operate, as they handle comparisons differently.</p> <p>The <code>shallow</code> returns <code>true</code> because shallow performs a shallow comparison of the maps. It checks if the top-level properties (in this case, the maps themselves) are the same. Since <code>mapLeft</code> and <code>mapRight</code> are both instances of the Map object and contain the same key-value pairs, shallow considers them equal.</p> <pre><code>const mapLeft = new Map([\n  [1, 'one'],\n  [2, 'two'],\n  [3, 'three'],\n])\nconst mapRight = new Map([\n  [1, 'one'],\n  [2, 'two'],\n  [3, 'three'],\n])\n\nObject.is(mapLeft, mapRight) // -&gt; false\nshallow(mapLeft, mapRight) // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/shallow/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming/javascript/zustand/apis/shallow/#comparing-objects-returns-false-even-if-they-are-identical","title":"Comparing objects returns <code>false</code> even if they are identical.","text":"<p>The <code>shallow</code> function performs a shallow comparison. A shallow comparison checks if the top-level properties of two objects are equal. It does not check nested objects or deeply nested properties. In other words, it only compares the references of the properties.</p> <p>In the following example, the shallow function returns <code>false</code> because it compares only the top-level properties and their references. The address property in both objects is a nested object, and even though their contents are identical, their references are different. Consequently, shallow sees them as different, resulting in <code>false</code>.</p> <pre><code>const objectLeft = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n}\nconst objectRight = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n}\n\nObject.is(objectLeft, objectRight) // -&gt; false\nshallow(objectLeft, objectRight) // -&gt; false\n</code></pre> <p>If we remove the <code>address</code> property, the shallow comparison would work as expected because all top-level properties would be primitive values or references to the same values:</p> <pre><code>const objectLeft = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n}\nconst objectRight = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n}\n\nObject.is(objectLeft, objectRight) // -&gt; false\nshallow(objectLeft, objectRight) // -&gt; true\n</code></pre> <p>In this modified example, <code>objectLeft</code> and <code>objectRight</code> have the same top-level properties and primitive values. Since <code>shallow</code> function only compares the top-level properties, it will return <code>true</code> because the primitive values (<code>firstName</code>, <code>lastName</code>, and <code>age</code>) are identical in both objects.</p>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/","title":"Create store.md summary","text":""},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":""},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#createstorestatecreatorfn","title":"<code>createStore(stateCreatorFn)</code>","text":"<p><code>createStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b vanilla store \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u5b83\u200b\u66b4\u9732\u200b\u4e86\u200b API \u200b\u5de5\u5177\u200b\uff0c\u200b\u5982\u200b <code>setState</code>\u3001<code>getState</code>\u3001<code>getInitialState</code> \u200b\u548c\u200b <code>subscribe</code>\u3002</p>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":""},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#1","title":"\u793a\u4f8b\u200b 1: \u200b\u66f4\u65b0\u200b\u57fa\u4e8e\u200b\u524d\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7684\u200b\u72b6\u6001","text":"<pre><code>import { createStore } from 'zustand/vanilla'\n\ntype AgeStoreState = { age: number }\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void\n}\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions\n\nconst ageStore = createStore&lt;AgeStore&gt;()((set) =&gt; ({\n  age: 42,\n  setAge: (nextAge) =&gt;\n    set((state) =&gt; ({\n      age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n    })),\n}))\n\nfunction increment() {\n  ageStore.getState().setAge((currentAge) =&gt; currentAge + 1)\n}\n\nconst $yourAgeHeading = document.getElementById(\n  'your-age',\n) as HTMLHeadingElement\nconst $incrementBy3Button = document.getElementById(\n  'increment-by-3',\n) as HTMLButtonElement\nconst $incrementBy1Button = document.getElementById(\n  'increment-by-1',\n) as HTMLButtonElement\n\n$incrementBy3Button.addEventListener('click', () =&gt; {\n  increment()\n  increment()\n  increment()\n})\n\n$incrementBy1Button.addEventListener('click', () =&gt; {\n  increment()\n})\n\nconst render: Parameters&lt;typeof ageStore.subscribe&gt;[0] = (state) =&gt; {\n  $yourAgeHeading.innerHTML = `Your age: ${state.age}`\n}\n\nrender(ageStore.getInitialState(), ageStore.getInitialState())\n\nageStore.subscribe(render)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#2","title":"\u793a\u4f8b\u200b 2: \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u539f\u59cb\u200b\u503c","text":"<pre><code>import { createStore } from 'zustand/vanilla'\n\ntype XStore = number\n\nconst xStore = createStore&lt;XStore&gt;()(() =&gt; 0)\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  xStore.setState(event.clientX, true)\n})\n\nconst render: Parameters&lt;typeof xStore.subscribe&gt;[0] = (x) =&gt; {\n  $dot.style.transform = `translate(${x}px, 0)`\n}\n\nrender(xStore.getInitialState(), xStore.getInitialState())\n\nxStore.subscribe(render)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#3","title":"\u793a\u4f8b\u200b 3: \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u5bf9\u8c61","text":"<pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst positionStore = createStore&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (position) =&gt; set({ position }),\n}))\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  positionStore.getState().setPosition({\n    x: event.clientX,\n    y: event.clientY,\n  })\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  $dot.style.transform = `translate(${state.position.x}px, ${state.position.y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#4","title":"\u793a\u4f8b\u200b 4: \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u6570\u7ec4","text":"<pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStore = [number, number]\n\nconst positionStore = create&lt;PositionStore&gt;()(() =&gt; [0, 0])\n\nconst $dotContainer = document.getElementById('dot-container') as HTMLDivElement\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dotContainer.addEventListener('pointermove', (event) =&gt; {\n  positionStore.setState([event.clientX, event.clientY], true)\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = ([x, y]) =&gt; {\n  $dot.style.transform = `translate(${x}px, ${y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#5","title":"\u793a\u4f8b\u200b 5: \u200b\u8ba2\u9605\u200b\u72b6\u6001\u200b\u66f4\u65b0","text":"<pre><code>import { createStore } from 'zustand/vanilla'\n\ntype PositionStoreState = { position: { x: number; y: number } }\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void\n}\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions\n\nconst positionStore = createStore&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (position) =&gt; set({ position }),\n}))\n\nconst $dot = document.getElementById('dot') as HTMLDivElement\n\n$dot.addEventListener('mouseenter', (event) =&gt; {\n  const parent = event.currentTarget.parentElement\n  const parentWidth = parent.clientWidth\n  const parentHeight = parent.clientHeight\n\n  positionStore.getState().setPosition({\n    x: Math.ceil(Math.random() * parentWidth),\n    y: Math.ceil(Math.random() * parentHeight),\n  })\n})\n\nconst render: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  $dot.style.transform = `translate(${state.position.x}px, ${state.position.y}px)`\n}\n\nrender(positionStore.getInitialState(), positionStore.getInitialState())\n\npositionStore.subscribe(render)\n\nconst logger: Parameters&lt;typeof positionStore.subscribe&gt;[0] = (state) =&gt; {\n  console.log('new position', { position: state.position })\n}\n\npositionStore.subscribe(logger)\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-store.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff1a<code>set</code> \u200b\u51fd\u6570\u200b\u9ed8\u8ba4\u200b\u6267\u884c\u200b\u6d45\u200b\u5408\u5e76\u200b\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5b8c\u5168\u200b\u66ff\u6362\u200b\u72b6\u6001\u200b\uff0c\u200b\u8bf7\u200b\u4f7f\u7528\u200b <code>replace</code> \u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u4e3a\u200b <code>true</code>\u3002</li> <li>\u200b\u5bf9\u8c61\u200b\u548c\u200b\u6570\u7ec4\u200b\u66f4\u65b0\u200b\uff1a\u200b\u5728\u200b\u66f4\u65b0\u200b\u5bf9\u8c61\u200b\u548c\u200b\u6570\u7ec4\u200b\u65f6\u200b\uff0c\u200b\u5e94\u200b\u5c06\u200b\u5176\u200b\u89c6\u4e3a\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u6570\u636e\u200b\uff0c\u200b\u521b\u5efa\u200b\u65b0\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\u3002</li> <li>\u200b\u8ba2\u9605\u200b\u66f4\u65b0\u200b\uff1a\u200b\u901a\u8fc7\u200b <code>subscribe</code> \u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u6ce8\u518c\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u65f6\u200b\u89e6\u53d1\u200b\u3002</li> <li>\u200b\u907f\u514d\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\uff1a\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u53ef\u80fd\u200b\u5bfc\u81f4\u200b\u89c6\u56fe\u200b\u4e0d\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5e94\u200b\u901a\u8fc7\u200b <code>set</code> \u200b\u51fd\u6570\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/apis/summaries/create-with-equality-fn.md_summary/","title":"Create with equality fn.md summary","text":""},{"location":"programming/javascript/zustand/apis/summaries/create-with-equality-fn.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>createWithEqualityFn</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b React Hook \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>create</code>\uff0c\u200b\u4f46\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5b9a\u4e49\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u76f8\u7b49\u200b\u6027\u200b\u68c0\u67e5\u200b\u51fd\u6570\u200b\u3002\u200b\u8fd9\u200b\u4f7f\u5f97\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u66f4\u200b\u7cbe\u7ec6\u200b\u5730\u200b\u63a7\u5236\u200b\u7ec4\u4ef6\u200b\u4f55\u65f6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\uff0c\u200b\u4ece\u800c\u200b\u63d0\u9ad8\u200b\u6027\u80fd\u200b\u548c\u200b\u54cd\u5e94\u200b\u6027\u200b\u3002</p>"},{"location":"programming/javascript/zustand/apis/summaries/create-with-equality-fn.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { createWithEqualityFn } from 'zustand/traditional';\nimport { shallow } from 'zustand/vanilla/shallow';\n\ntype AgeStoreState = { age: number };\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void;\n};\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions;\n\nconst useAgeStore = createWithEqualityFn&lt;AgeStore&gt;()(\n  (set) =&gt; ({\n    age: 42,\n    setAge: (nextAge) =&gt;\n      set((state) =&gt; ({\n        age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n      })),\n  }),\n  shallow,\n);\n\nexport default function App() {\n  const age = useAgeStore((state) =&gt; state.age);\n  const setAge = useAgeStore((state) =&gt; state.setAge);\n\n  function increment() {\n    setAge((currentAge) =&gt; currentAge + 1);\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button\n        type=\"button\"\n        onClick={() =&gt; {\n          increment();\n          increment();\n          increment();\n        }}\n      &gt;\n        +3\n      &lt;/button&gt;\n      &lt;button\n        type=\"button\"\n        onClick={() =&gt; {\n          increment();\n        }}\n      &gt;\n        +1\n      &lt;/button&gt;\n    &lt;/&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create-with-equality-fn.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u81ea\u5b9a\u4e49\u200b\u76f8\u7b49\u200b\u6027\u200b\u68c0\u67e5\u200b\uff1a<code>createWithEqualityFn</code> \u200b\u5141\u8bb8\u200b\u4f60\u200b\u4f20\u5165\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b\u76f8\u7b49\u200b\u6027\u200b\u68c0\u67e5\u200b\u51fd\u6570\u200b <code>equalityFn</code>\uff0c\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u4f7f\u7528\u200b <code>Object.is</code>\u3002</li> <li>\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff1a\u200b\u5728\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u65f6\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200b <code>[...array]</code>\u3001<code>concat(...)</code> \u200b\u7b49\u200b\uff09\uff0c\u200b\u907f\u514d\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u3002</li> <li>\u200b\u6d45\u200b\u5408\u5e76\u200b\uff1a\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u6d45\u200b\u5408\u5e76\u200b\u3002\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5b8c\u5168\u200b\u66ff\u6362\u200b\u72b6\u6001\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>replace</code> \u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u4e3a\u200b <code>true</code>\u3002</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u901a\u8fc7\u200b\u81ea\u5b9a\u4e49\u200b\u76f8\u7b49\u200b\u6027\u200b\u68c0\u67e5\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\uff0c\u200b\u4ece\u800c\u200b\u63d0\u9ad8\u200b\u5e94\u7528\u200b\u7684\u200b\u6027\u80fd\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/","title":"Create.md summary","text":""},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":""},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#createstatecreatorfn","title":"<code>create(stateCreatorFn)</code>","text":"<p><code>create</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b React Hook \u200b\u7684\u200b\u51fd\u6570\u200b\uff0c\u200b\u8be5\u200b Hook \u200b\u5e26\u6709\u200b API \u200b\u5de5\u5177\u200b\u51fd\u6570\u200b\uff08\u200b\u5982\u200b <code>setState</code>\u3001<code>getState</code>\u3001<code>getInitialState</code> \u200b\u548c\u200b <code>subscribe</code>\uff09\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u901a\u8fc7\u200b <code>stateCreatorFn</code> \u200b\u51fd\u6570\u200b\u6765\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u548c\u200b\u76f8\u5173\u200b\u64cd\u4f5c\u200b\u3002</p>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { create } from 'zustand';\n\ntype AgeStoreState = { age: number };\n\ntype AgeStoreActions = {\n  setAge: (\n    nextAge:\n      | AgeStoreState['age']\n      | ((currentAge: AgeStoreState['age']) =&gt; AgeStoreState['age']),\n  ) =&gt; void;\n};\n\ntype AgeStore = AgeStoreState &amp; AgeStoreActions;\n\nconst useAgeStore = create&lt;AgeStore&gt;()((set) =&gt; ({\n  age: 42,\n  setAge: (nextAge) =&gt; {\n    set((state) =&gt; ({\n      age: typeof nextAge === 'function' ? nextAge(state.age) : nextAge,\n    }));\n  },\n}));\n\nexport default function App() {\n  const age = useAgeStore((state) =&gt; state.age);\n  const setAge = useAgeStore((state) =&gt; state.setAge);\n\n  function increment() {\n    setAge((currentAge) =&gt; currentAge + 1);\n  }\n\n  return (\n    &lt;&gt;\n      &lt;h1&gt;Your age: {age}&lt;/h1&gt;\n      &lt;button\n        onClick={() =&gt; {\n          increment();\n          increment();\n          increment();\n        }}\n      &gt;\n        +3\n      &lt;/button&gt;\n      &lt;button\n        onClick={() =&gt; {\n          increment();\n        }}\n      &gt;\n        +1\n      &lt;/button&gt;\n    &lt;/&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff1a<code>create</code> \u200b\u8fd4\u56de\u200b\u7684\u200b Hook \u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>setState</code> \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u6d45\u200b\u5408\u5e76\u200b\uff0c\u200b\u5982\u679c\u200b\u9700\u8981\u200b\u5b8c\u5168\u200b\u66ff\u6362\u200b\u72b6\u6001\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>replace</code> \u200b\u53c2\u6570\u8bbe\u7f6e\u200b\u4e3a\u200b <code>true</code>\u3002</li> <li>\u200b\u4e0d\u200b\u53ef\u53d8\u6027\u200b\uff1a\u200b\u5728\u200b\u66f4\u65b0\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u65f6\u200b\uff0c\u200b\u5e94\u200b\u786e\u4fdd\u200b\u4f7f\u7528\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u64cd\u4f5c\u200b\uff08\u200b\u5982\u200b <code>[...array]</code>\u3001<code>{...object}</code>\uff09\uff0c\u200b\u907f\u514d\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u8ba2\u9605\u200b\u66f4\u65b0\u200b\uff1a\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b <code>subscribe</code> \u200b\u65b9\u6cd5\u200b\u8ba2\u9605\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff0c\u200b\u6ce8\u518c\u200b\u4e00\u4e2a\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\uff0c\u200b\u5728\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u65f6\u200b\u89e6\u53d1\u200b\u3002</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u5927\u578b\u200b\u8868\u5355\u200b\u6216\u200b\u590d\u6742\u200b\u72b6\u6001\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5c06\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u96c6\u4e2d\u7ba1\u7406\u200b\uff0c\u200b\u907f\u514d\u200b\u5206\u6563\u200b\u5728\u200b\u591a\u4e2a\u200b\u5730\u65b9\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_4","title":"\u5176\u4ed6\u200b\u793a\u4f8b","text":""},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_5","title":"\u66f4\u65b0\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u72b6\u6001","text":"<pre><code>import { create } from 'zustand';\n\ntype XStore = number;\n\nconst useXStore = create&lt;XStore&gt;()(() =&gt; 0);\n\nexport default function MovingDot() {\n  const x = useXStore();\n  const setX = (nextX: number) =&gt; {\n    useXStore.setState(nextX, true);\n  };\n  const position = { y: 0, x };\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setX(e.clientX);\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_6","title":"\u66f4\u65b0\u200b\u5bf9\u8c61\u200b\u72b6\u6001","text":"<pre><code>import { create } from 'zustand';\n\ntype PositionStoreState = { position: { x: number; y: number } };\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void;\n};\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions;\n\nconst usePositionStore = create&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (nextPosition) =&gt; set(nextPosition),\n}));\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position);\n  const setPosition = usePositionStore((state) =&gt; state.setPosition);\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition({\n          x: e.clientX,\n          y: e.clientY,\n        });\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_7","title":"\u66f4\u65b0\u200b\u6570\u7ec4\u200b\u72b6\u6001","text":"<pre><code>import { create } from 'zustand';\n\ntype PositionStore = [number, number];\n\nconst usePositionStore = create&lt;PositionStore&gt;()(() =&gt; [0, 0]);\n\nexport default function MovingDot() {\n  const [x, y] = usePositionStore();\n  const setPosition: typeof usePositionStore.setState = (nextPosition) =&gt; {\n    usePositionStore.setState(nextPosition, true);\n  };\n  const position = { x, y };\n\n  return (\n    &lt;div\n      onPointerMove={(e) =&gt; {\n        setPosition([e.clientX, e.clientY]);\n      }}\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/create.md_summary/#_8","title":"\u8ba2\u9605\u200b\u72b6\u6001\u200b\u66f4\u65b0","text":"<pre><code>import { useEffect } from 'react';\nimport { create } from 'zustand';\n\ntype PositionStoreState = { position: { x: number; y: number } };\n\ntype PositionStoreActions = {\n  setPosition: (nextPosition: PositionStoreState['position']) =&gt; void;\n};\n\ntype PositionStore = PositionStoreState &amp; PositionStoreActions;\n\nconst usePositionStore = create&lt;PositionStore&gt;()((set) =&gt; ({\n  position: { x: 0, y: 0 },\n  setPosition: (nextPosition) =&gt; set(nextPosition),\n}));\n\nexport default function MovingDot() {\n  const position = usePositionStore((state) =&gt; state.position);\n  const setPosition = usePositionStore((state) =&gt; state.setPosition);\n\n  useEffect(() =&gt; {\n    const unsubscribePositionStore = usePositionStore.subscribe(\n      ({ position }) =&gt; {\n        console.log('new position', { position });\n      },\n    );\n\n    return () =&gt; {\n      unsubscribePositionStore();\n    };\n  }, []);\n\n  return (\n    &lt;div\n      style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh',\n      }}\n    &gt;\n      &lt;div\n        style={{\n          position: 'absolute',\n          backgroundColor: 'red',\n          borderRadius: '50%',\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          left: -10,\n          top: -10,\n          width: 20,\n          height: 20,\n        }}\n        onMouseEnter={(event) =&gt; {\n          const parent = event.currentTarget.parentElement;\n          const parentWidth = parent.clientWidth;\n          const parentHeight = parent.clientHeight;\n\n          setPosition({\n            x: Math.ceil(Math.random() * parentWidth),\n            y: Math.ceil(Math.random() * parentHeight),\n          });\n        }}\n      /&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/","title":"Shallow.md summary","text":""},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>shallow</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u5feb\u901f\u200b\u6bd4\u8f83\u7b80\u5355\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u80fd\u591f\u200b\u6709\u6548\u200b\u5730\u200b\u8bc6\u522b\u200b\u6570\u636e\u7ed3\u6784\u200b\u4e2d\u200b\u9876\u5c42\u200b\u5c5e\u6027\u200b\u7684\u200b\u53d8\u5316\u200b\uff0c\u200b\u7279\u522b\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e0d\u200b\u5305\u542b\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u3002</p>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":""},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#primitives","title":"\u6bd4\u8f83\u200b\u539f\u59cb\u200b\u7c7b\u578b\u200b\uff08Primitives\uff09","text":"<pre><code>const stringLeft = 'John Doe';\nconst stringRight = 'John Doe';\n\nshallow(stringLeft, stringRight); // -&gt; true\n\nconst numberLeft = 10;\nconst numberRight = 10;\n\nshallow(numberLeft, numberRight); // -&gt; true\n\nconst booleanLeft = true;\nconst booleanRight = true;\n\nshallow(booleanLeft, booleanRight); // -&gt; true\n\nconst bigIntLeft = 1n;\nconst bigIntRight = 1n;\n\nshallow(bigIntLeft, bigIntRight); // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#objects","title":"\u6bd4\u8f83\u200b\u5bf9\u8c61\u200b\uff08Objects\uff09","text":"<pre><code>const objectLeft = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n};\nconst objectRight = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n};\n\nshallow(objectLeft, objectRight); // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#sets","title":"\u6bd4\u8f83\u200b\u96c6\u5408\u200b\uff08Sets\uff09","text":"<pre><code>const setLeft = new Set([1, 2, 3]);\nconst setRight = new Set([1, 2, 3]);\n\nshallow(setLeft, setRight); // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#maps","title":"\u6bd4\u8f83\u200b\u6620\u5c04\u200b\uff08Maps\uff09","text":"<pre><code>const mapLeft = new Map([\n  [1, 'one'],\n  [2, 'two'],\n  [3, 'three'],\n]);\nconst mapRight = new Map([\n  [1, 'one'],\n  [2, 'two'],\n  [3, 'three'],\n]);\n\nshallow(mapLeft, mapRight); // -&gt; true\n</code></pre>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li> <p>\u200b\u6d45\u200b\u6bd4\u8f83\u200b\uff1a<code>shallow</code> \u200b\u51fd\u6570\u200b\u4ec5\u200b\u5bf9\u200b\u9876\u5c42\u200b\u5c5e\u6027\u200b\u8fdb\u884c\u200b\u6bd4\u8f83\u200b\uff0c\u200b\u4e0d\u200b\u6d89\u53ca\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6df1\u5c42\u200b\u5c5e\u6027\u200b\u7684\u200b\u6bd4\u8f83\u200b\u3002\u200b\u5982\u679c\u200b\u5bf9\u8c61\u200b\u5305\u542b\u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\uff0c\u200b\u5373\u4f7f\u200b\u5185\u5bb9\u200b\u76f8\u540c\u200b\uff0c<code>shallow</code> \u200b\u4e5f\u200b\u4f1a\u200b\u8fd4\u56de\u200b <code>false</code>\u3002</p> </li> <li> <p>\u200b\u5f15\u7528\u200b\u6bd4\u8f83\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u5bf9\u8c61\u200b\u3001\u200b\u96c6\u5408\u200b\u548c\u200b\u6620\u5c04\u200b\uff0c<code>shallow</code> \u200b\u6bd4\u8f83\u200b\u7684\u200b\u662f\u200b\u9876\u5c42\u200b\u5c5e\u6027\u200b\u7684\u200b\u5f15\u7528\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5185\u5bb9\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u5373\u4f7f\u200b\u4e24\u4e2a\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5185\u5bb9\u200b\u76f8\u540c\u200b\uff0c\u200b\u4f46\u200b\u5982\u679c\u200b\u5b83\u4eec\u200b\u7684\u200b\u5f15\u7528\u200b\u4e0d\u540c\u200b\uff0c<code>shallow</code> \u200b\u4e5f\u200b\u4f1a\u200b\u8fd4\u56de\u200b <code>false</code>\u3002</p> </li> <li> <p>\u200b\u6027\u80fd\u200b\u4f18\u52bf\u200b\uff1a<code>shallow</code> \u200b\u7684\u200b\u6d45\u200b\u6bd4\u8f83\u200b\u4f7f\u5f97\u200b\u5b83\u200b\u5728\u200b\u5904\u7406\u200b\u7b80\u5355\u200b\u6570\u636e\u7ed3\u6784\u200b\u65f6\u200b\u975e\u5e38\u200b\u9ad8\u6548\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\u65f6\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u610f\u5916\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> </li> </ol>"},{"location":"programming/javascript/zustand/apis/summaries/shallow.md_summary/#_4","title":"\u793a\u4f8b\u200b\uff1a\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u6bd4\u8f83","text":"<pre><code>const objectLeft = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n};\nconst objectRight = {\n  firstName: 'John',\n  lastName: 'Doe',\n  age: 30,\n  address: {\n    street: 'Kulas Light',\n    suite: 'Apt. 556',\n    city: 'Gwenborough',\n    zipcode: '92998-3874',\n    geo: {\n      lat: '-37.3159',\n      lng: '81.1496',\n    },\n  },\n};\n\nshallow(objectLeft, objectRight); // -&gt; false\n</code></pre> <p>\u200b\u5728\u200b\u8fd9\u4e2a\u200b\u4f8b\u5b50\u200b\u4e2d\u200b\uff0c\u200b\u5c3d\u7ba1\u200b <code>objectLeft</code> \u200b\u548c\u200b <code>objectRight</code> \u200b\u7684\u200b\u5185\u5bb9\u200b\u5b8c\u5168\u76f8\u540c\u200b\uff0c\u200b\u4f46\u200b\u7531\u4e8e\u200b <code>address</code> \u200b\u5c5e\u6027\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\uff0c<code>shallow</code> \u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b <code>false</code>\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/comparison/","title":"Comparison","text":"<p>Zustand is one of many state management libraries for React. On this page we will discuss Zustand in comparison to some of these libraries, including Redux, Valtio, Jotai, and Recoil.</p> <p>Each library has its own strengths and weaknesses, and we will compare key differences and similarities between each.</p>"},{"location":"programming/javascript/zustand/getting-started/comparison/#redux","title":"Redux","text":""},{"location":"programming/javascript/zustand/getting-started/comparison/#state-model-vs-redux","title":"State Model (vs Redux)","text":"<p>Conceptually, Zustand and Redux are quite similar, both are based on an immutable state model. However, Redux requires your app to be wrapped in context providers; Zustand does not.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  increment: (qty: number) =&gt; set((state) =&gt; ({ count: state.count + qty })),\n  decrement: (qty: number) =&gt; set((state) =&gt; ({ count: state.count - qty })),\n}))\n</code></pre> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\ntype Action = {\n  type: keyof Actions\n  qty: number\n}\n\nconst countReducer = (state: State, action: Action) =&gt; {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + action.qty }\n    case 'decrement':\n      return { count: state.count - action.qty }\n    default:\n      return state\n  }\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  dispatch: (action: Action) =&gt; set((state) =&gt; countReducer(state, action)),\n}))\n</code></pre> <p>Redux</p> <pre><code>import { createStore } from 'redux'\nimport { useSelector, useDispatch } from 'react-redux'\n\ntype State = {\n  count: number\n}\n\ntype Action = {\n  type: 'increment' | 'decrement'\n  qty: number\n}\n\nconst countReducer = (state: State, action: Action) =&gt; {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + action.qty }\n    case 'decrement':\n      return { count: state.count - action.qty }\n    default:\n      return state\n  }\n}\n\nconst countStore = createStore(countReducer)\n</code></pre> <pre><code>import { createSlice, configureStore } from '@reduxjs/toolkit'\n\nconst countSlice = createSlice({\n  name: 'count',\n  initialState: { value: 0 },\n  reducers: {\n    incremented: (state, qty: number) =&gt; {\n      // Redux Toolkit does not mutate the state, it uses the Immer library\n      // behind scenes, allowing us to have something called \"draft state\".\n      state.value += qty\n    },\n    decremented: (state, qty: number) =&gt; {\n      state.value -= qty\n    },\n  },\n})\n\nconst countStore = configureStore({ reducer: countSlice.reducer })\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#render-optimization-vs-redux","title":"Render Optimization (vs Redux)","text":"<p>When it comes to render optimizations within your app, there are no major differences in approach between Zustand and Redux. In both libraries it is recommended that you manually apply render optimizations by using selectors.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  increment: (qty: number) =&gt; set((state) =&gt; ({ count: state.count + qty })),\n  decrement: (qty: number) =&gt; set((state) =&gt; ({ count: state.count - qty })),\n}))\n\nconst Component = () =&gt; {\n  const count = useCountStore((state) =&gt; state.count)\n  const increment = useCountStore((state) =&gt; state.increment)\n  const decrement = useCountStore((state) =&gt; state.decrement)\n  // ...\n}\n</code></pre> <p>Redux</p> <pre><code>import { createStore } from 'redux'\nimport { useSelector, useDispatch } from 'react-redux'\n\ntype State = {\n  count: number\n}\n\ntype Action = {\n  type: 'increment' | 'decrement'\n  qty: number\n}\n\nconst countReducer = (state: State, action: Action) =&gt; {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + action.qty }\n    case 'decrement':\n      return { count: state.count - action.qty }\n    default:\n      return state\n  }\n}\n\nconst countStore = createStore(countReducer)\n\nconst Component = () =&gt; {\n  const count = useSelector((state) =&gt; state.count)\n  const dispatch = useDispatch()\n  // ...\n}\n</code></pre> <pre><code>import { useSelector } from 'react-redux'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\n\nconst countSlice = createSlice({\n  name: 'count',\n  initialState: { value: 0 },\n  reducers: {\n    incremented: (state, qty: number) =&gt; {\n      // Redux Toolkit does not mutate the state, it uses the Immer library\n      // behind scenes, allowing us to have something called \"draft state\".\n      state.value += qty\n    },\n    decremented: (state, qty: number) =&gt; {\n      state.value -= qty\n    },\n  },\n})\n\nconst countStore = configureStore({ reducer: countSlice.reducer })\n\nconst useAppSelector: TypedUseSelectorHook&lt;typeof countStore.getState&gt; =\n  useSelector\n\nconst useAppDispatch: () =&gt; typeof countStore.dispatch = useDispatch\n\nconst Component = () =&gt; {\n  const count = useAppSelector((state) =&gt; state.count.value)\n  const dispatch = useAppDispatch()\n  // ...\n}\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#valtio","title":"Valtio","text":""},{"location":"programming/javascript/zustand/getting-started/comparison/#state-model-vs-valtio","title":"State Model (vs Valtio)","text":"<p>Zustand and Valtio approach state management in a fundamentally different way. Zustand is based on the immutable state model, while Valtio is based on the mutable state model.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  obj: { count: number }\n}\n\nconst store = create&lt;State&gt;(() =&gt; ({ obj: { count: 0 } }))\n\nstore.setState((prev) =&gt; ({ obj: { count: prev.obj.count + 1 } }))\n</code></pre> <p>Valtio</p> <pre><code>import { proxy } from 'valtio'\n\nconst state = proxy({ obj: { count: 0 } })\n\nstate.obj.count += 1\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#render-optimization-vs-valtio","title":"Render Optimization (vs Valtio)","text":"<p>The other difference between Zustand and Valtio is Valtio makes render optimizations through property access. However, with Zustand, it is recommended that you manually apply render optimizations by using selectors.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\nconst useCountStore = create&lt;State&gt;(() =&gt; ({\n  count: 0,\n}))\n\nconst Component = () =&gt; {\n  const count = useCountStore((state) =&gt; state.count)\n  // ...\n}\n</code></pre> <p>Valtio</p> <pre><code>import { proxy, useSnapshot } from 'valtio'\n\nconst state = proxy({\n  count: 0,\n})\n\nconst Component = () =&gt; {\n  const { count } = useSnapshot(state)\n  // ...\n}\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#jotai","title":"Jotai","text":""},{"location":"programming/javascript/zustand/getting-started/comparison/#state-model-vs-jotai","title":"State Model (vs Jotai)","text":"<p>There is one major difference between Zustand and Jotai. Zustand is a single store, while Jotai consists of primitive atoms that can be composed together.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  updateCount: (\n    countCallback: (count: State['count']) =&gt; State['count'],\n  ) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  updateCount: (countCallback) =&gt;\n    set((state) =&gt; ({ count: countCallback(state.count) })),\n}))\n</code></pre> <p>Jotai</p> <pre><code>import { atom } from 'jotai'\n\nconst countAtom = atom&lt;number&gt;(0)\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#render-optimization-vs-jotai","title":"Render Optimization (vs Jotai)","text":"<p>Jotai achieves render optimizations through atom dependency. However, with Zustand it is recommended that you manually apply render optimizations by using selectors.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  updateCount: (\n    countCallback: (count: State['count']) =&gt; State['count'],\n  ) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  updateCount: (countCallback) =&gt;\n    set((state) =&gt; ({ count: countCallback(state.count) })),\n}))\n\nconst Component = () =&gt; {\n  const count = useCountStore((state) =&gt; state.count)\n  const updateCount = useCountStore((state) =&gt; state.updateCount)\n  // ...\n}\n</code></pre> <p>Jotai</p> <pre><code>import { atom, useAtom } from 'jotai'\n\nconst countAtom = atom&lt;number&gt;(0)\n\nconst Component = () =&gt; {\n  const [count, updateCount] = useAtom(countAtom)\n  // ...\n}\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#recoil","title":"Recoil","text":""},{"location":"programming/javascript/zustand/getting-started/comparison/#state-model-vs-recoil","title":"State Model (vs Recoil)","text":"<p>The difference between Zustand and Recoil is similar to that between Zustand and Jotai. Recoil depends on atom string keys instead of atom object referential identities. Additionally, Recoil needs to wrap your app in a context provider.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  setCount: (countCallback: (count: State['count']) =&gt; State['count']) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  setCount: (countCallback) =&gt;\n    set((state) =&gt; ({ count: countCallback(state.count) })),\n}))\n</code></pre> <p>Recoil</p> <pre><code>import { atom } from 'recoil'\n\nconst count = atom({\n  key: 'count',\n  default: 0,\n})\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#render-optimization-vs-recoil","title":"Render Optimization (vs Recoil)","text":"<p>Similar to previous optimization comparisons, Recoil makes render optimizations through atom dependency. Whereas with Zustand, it is recommended that you manually apply render optimizations by using selectors.</p> <p>Zustand</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  setCount: (countCallback: (count: State['count']) =&gt; State['count']) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  setCount: (countCallback) =&gt;\n    set((state) =&gt; ({ count: countCallback(state.count) })),\n}))\n\nconst Component = () =&gt; {\n  const count = useCountStore((state) =&gt; state.count)\n  const setCount = useCountStore((state) =&gt; state.setCount)\n  // ...\n}\n</code></pre> <p>Recoil</p> <pre><code>import { atom, useRecoilState } from 'recoil'\n\nconst countAtom = atom({\n  key: 'count',\n  default: 0,\n})\n\nconst Component = () =&gt; {\n  const [count, setCount] = useRecoilState(countAtom)\n  // ...\n}\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/comparison/#npm-downloads-trend","title":"Npm Downloads Trend","text":"<ul> <li>Npm Downloads Trend of State Management Libraries for React</li> </ul>"},{"location":"programming/javascript/zustand/getting-started/introduction/","title":"Introduction","text":"<p>A small, fast, and scalable bearbones state management solution. Zustand has a comfy API based on hooks. It isn't boilerplatey or opinionated, but has enough convention to be explicit and flux-like.</p> <p>Don't disregard it because it's cute, it has claws! Lots of time was spent to deal with common pitfalls, like the dreaded zombie child problem, React concurrency, and context loss between mixed renderers. It may be the one state manager in the React space that gets all of these right.</p> <p>You can try a live demo here.</p>"},{"location":"programming/javascript/zustand/getting-started/introduction/#installation","title":"Installation","text":"<p>Zustand is available as a package on NPM for use:</p> <pre><code># NPM\nnpm install zustand\n# Or, use any package manager of your choice.\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/introduction/#first-create-a-store","title":"First create a store","text":"<p>Your store is a hook! You can put anything in it: primitives, objects, functions. The <code>set</code> function merges state.</p> <pre><code>import { create } from 'zustand'\n\nconst useStore = create((set) =&gt; ({\n  bears: 0,\n  increasePopulation: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n  removeAllBears: () =&gt; set({ bears: 0 }),\n  updateBears: (newBears) =&gt; set({ bears: newBears }),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/introduction/#then-bind-your-components-and-thats-it","title":"Then bind your components, and that's it!","text":"<p>You can use the hook anywhere, without the need of providers. Select your state and the consuming component will re-render when that state changes.</p> <pre><code>function BearCounter() {\n  const bears = useStore((state) =&gt; state.bears)\n  return &lt;h1&gt;{bears} around here...&lt;/h1&gt;\n}\n\nfunction Controls() {\n  const increasePopulation = useStore((state) =&gt; state.increasePopulation)\n  return &lt;button onClick={increasePopulation}&gt;one up&lt;/button&gt;\n}\n</code></pre>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/","title":"Comparison.md summary","text":""},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#1-create-zustand","title":"1. <code>create</code> (Zustand)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b store\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u72b6\u6001\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\u4ee5\u53ca\u200b\u72b6\u6001\u200b\u7684\u200b\u66f4\u65b0\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { create } from 'zustand'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\nconst useCountStore = create&lt;State &amp; Actions&gt;((set) =&gt; ({\n  count: 0,\n  increment: (qty: number) =&gt; set((state) =&gt; ({ count: state.count + qty })),\n  decrement: (qty: number) =&gt; set((state) =&gt; ({ count: state.count - qty })),\n}))\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>create</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b\u4e00\u4e2a\u200b hook\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u3002 - <code>set</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e14\u200b\u72b6\u6001\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff08immutable\uff09\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#2-useselector-redux","title":"2. <code>useSelector</code> (Redux)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useSelector</code> \u200b\u662f\u200b Redux \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b hook\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b Redux store \u200b\u4e2d\u200b\u9009\u62e9\u200b\u7279\u5b9a\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8fd4\u56de\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { useSelector } from 'react-redux'\n\nconst Component = () =&gt; {\n  const count = useSelector((state) =&gt; state.count)\n  // ...\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useSelector</code> \u200b\u4f1a\u200b\u8ba2\u9605\u200b Redux store\uff0c\u200b\u5e76\u200b\u5728\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u7ec4\u4ef6\u200b\u3002 - \u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u5e94\u200b\u5c3d\u91cf\u200b\u4fdd\u6301\u200b\u7b80\u5355\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#3-proxy-valtio","title":"3. <code>proxy</code> (Valtio)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>proxy</code> \u200b\u662f\u200b Valtio \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002\u200b\u4e0e\u200b Zustand \u200b\u7684\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u72b6\u6001\u200b\u6a21\u578b\u200b\u4e0d\u540c\u200b\uff0cValtio \u200b\u7684\u200b\u72b6\u6001\u200b\u662f\u200b\u53ef\u53d8\u200b\u7684\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { proxy } from 'valtio'\n\nconst state = proxy({ obj: { count: 0 } })\n\nstate.obj.count += 1\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>proxy</code> \u200b\u521b\u5efa\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u662f\u200b\u53ef\u53d8\u200b\u7684\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u5176\u200b\u5c5e\u6027\u200b\u3002 - \u200b\u7531\u4e8e\u200b\u72b6\u6001\u200b\u662f\u200b\u53ef\u53d8\u200b\u7684\u200b\uff0cValtio \u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u662f\u200b\u901a\u8fc7\u200b\u5c5e\u6027\u200b\u8bbf\u95ee\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#4-atom-jotai","title":"4. <code>atom</code> (Jotai)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>atom</code> \u200b\u662f\u200b Jotai \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u3002Jotai \u200b\u7684\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u662f\u200b\u57fa\u4e8e\u200b\u539f\u5b50\u200b\u7684\u200b\uff0c\u200b\u539f\u5b50\u200b\u53ef\u4ee5\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u5f62\u6210\u200b\u590d\u6742\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { atom } from 'jotai'\n\nconst countAtom = atom&lt;number&gt;(0)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>atom</code> \u200b\u521b\u5efa\u200b\u7684\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u65f6\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7279\u5b9a\u200b\u7684\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u3002 - Jotai \u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u662f\u200b\u901a\u8fc7\u200b\u539f\u5b50\u200b\u4f9d\u8d56\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#5-usesnapshot-valtio","title":"5. <code>useSnapshot</code> (Valtio)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useSnapshot</code> \u200b\u662f\u200b Valtio \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b hook\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u8ba2\u9605\u200b Valtio \u200b\u72b6\u6001\u200b\u7684\u200b\u5feb\u7167\u200b\u3002\u200b\u5b83\u200b\u8fd4\u56de\u200b\u72b6\u6001\u200b\u7684\u200b\u5feb\u7167\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { proxy, useSnapshot } from 'valtio'\n\nconst state = proxy({\n  count: 0,\n})\n\nconst Component = () =&gt; {\n  const { count } = useSnapshot(state)\n  // ...\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useSnapshot</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u72b6\u6001\u200b\u5feb\u7167\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u5373\u4f7f\u200b\u5e95\u5c42\u200b\u72b6\u6001\u200b\u662f\u200b\u53ef\u53d8\u200b\u7684\u200b\u3002 - \u200b\u4f7f\u7528\u200b <code>useSnapshot</code> \u200b\u53ef\u4ee5\u200b\u5b9e\u73b0\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#6-useatom-jotai","title":"6. <code>useAtom</code> (Jotai)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useAtom</code> \u200b\u662f\u200b Jotai \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b hook\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u8ba2\u9605\u200b Jotai \u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u8fd4\u56de\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u5f53\u524d\u200b\u503c\u200b\u4ee5\u53ca\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { atom, useAtom } from 'jotai'\n\nconst countAtom = atom&lt;number&gt;(0)\n\nconst Component = () =&gt; {\n  const [count, updateCount] = useAtom(countAtom)\n  // ...\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useAtom</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u5f53\u524d\u200b\u503c\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u51fd\u6570\u200b\u3002 - Jotai \u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u662f\u200b\u901a\u8fc7\u200b\u539f\u5b50\u200b\u4f9d\u8d56\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#7-atom-recoil","title":"7. <code>atom</code> (Recoil)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>atom</code> \u200b\u662f\u200b Recoil \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u3002Recoil \u200b\u7684\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u662f\u200b\u57fa\u4e8e\u200b\u539f\u5b50\u200b\u7684\u200b\uff0c\u200b\u539f\u5b50\u200b\u53ef\u4ee5\u200b\u7ec4\u5408\u200b\u5728\u200b\u4e00\u8d77\u200b\u5f62\u6210\u200b\u590d\u6742\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { atom } from 'recoil'\n\nconst countAtom = atom({\n  key: 'count',\n  default: 0,\n})\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>atom</code> \u200b\u521b\u5efa\u200b\u7684\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u662f\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u7684\u200b\uff0c\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u65f6\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u7279\u5b9a\u200b\u7684\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u3002 - Recoil \u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u662f\u200b\u901a\u8fc7\u200b\u539f\u5b50\u200b\u4f9d\u8d56\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/comparison.md_summary/#8-userecoilstate-recoil","title":"8. <code>useRecoilState</code> (Recoil)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useRecoilState</code> \u200b\u662f\u200b Recoil \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b hook\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u8ba2\u9605\u200b Recoil \u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u8fd4\u56de\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u5f53\u524d\u200b\u503c\u200b\u4ee5\u53ca\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { atom, useRecoilState } from 'recoil'\n\nconst countAtom = atom({\n  key: 'count',\n  default: 0,\n})\n\nconst Component = () =&gt; {\n  const [count, setCount] = useRecoilState(countAtom)\n  // ...\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useRecoilState</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u6570\u7ec4\u200b\u4e2d\u200b\uff0c\u200b\u7b2c\u4e00\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u5f53\u524d\u200b\u503c\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u5143\u7d20\u200b\u662f\u200b\u66f4\u65b0\u200b\u539f\u5b50\u200b\u72b6\u6001\u200b\u7684\u200b\u51fd\u6570\u200b\u3002 - Recoil \u200b\u7684\u200b\u6e32\u67d3\u200b\u4f18\u5316\u200b\u662f\u200b\u901a\u8fc7\u200b\u539f\u5b50\u200b\u4f9d\u8d56\u200b\u5b9e\u73b0\u200b\u7684\u200b\u3002</p>"},{"location":"programming/javascript/zustand/getting-started/summaries/introduction.md_summary/","title":"Introduction.md summary","text":""},{"location":"programming/javascript/zustand/getting-started/summaries/introduction.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>create</code>:</li> <li>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b Zustand \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\uff08store\uff09\u3002\u200b\u8fd9\u4e2a\u200b store \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b React hook\uff0c\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u4efb\u4f55\u200b\u7c7b\u578b\u200b\u7684\u200b\u72b6\u6001\u200b\uff08\u200b\u5982\u200b\u539f\u59cb\u200b\u7c7b\u578b\u200b\u3001\u200b\u5bf9\u8c61\u200b\u3001\u200b\u51fd\u6570\u200b\u7b49\u200b\uff09\u3002<code>set</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u4e14\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>import { create } from 'zustand'\n\nconst useStore = create((set) =&gt; ({\n  bears: 0,\n  increasePopulation: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n  removeAllBears: () =&gt; set({ bears: 0 }),\n  updateBears: (newBears) =&gt; set({ bears: newBears }),\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</p> <ul> <li><code>set</code> \u200b\u51fd\u6570\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u5408\u5e76\u200b\u3002</li> <li>\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u662f\u200b\u5f02\u6b65\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u7ec4\u4ef6\u200b\u4f1a\u200b\u5728\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> </ul> </li> <li> <p><code>useStore</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>useStore</code> \u200b\u662f\u200b Zustand \u200b\u521b\u5efa\u200b\u7684\u200b store \u200b\u7684\u200b hook\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u8bbf\u95ee\u200b\u548c\u200b\u8ba2\u9605\u200b\u72b6\u6001\u200b\u3002\u200b\u901a\u8fc7\u200b\u4f20\u9012\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u9009\u62e9\u6027\u200b\u5730\u200b\u8ba2\u9605\u200b\u7279\u5b9a\u200b\u7684\u200b\u72b6\u6001\u200b\u7247\u6bb5\u200b\uff0c\u200b\u4ece\u800c\u200b\u4f18\u5316\u200b\u6027\u80fd\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>function BearCounter() {\n  const bears = useStore((state) =&gt; state.bears)\n  return &lt;h1&gt;{bears} around here...&lt;/h1&gt;\n}\n\nfunction Controls() {\n  const increasePopulation = useStore((state) =&gt; state.increasePopulation)\n  return &lt;button onClick={increasePopulation}&gt;one up&lt;/button&gt;\n}\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:<ul> <li>\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u5e94\u200b\u5c3d\u91cf\u200b\u4fdd\u6301\u200b\u7b80\u5355\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> <li>\u200b\u5982\u679c\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5f15\u7528\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u7ec4\u4ef6\u200b\u4e0d\u4f1a\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> </ul> </li> </ol>"},{"location":"programming/javascript/zustand/getting-started/summaries/introduction.md_summary/#_2","title":"\u603b\u7ed3","text":"<ul> <li><code>create</code>: \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u5e76\u200b\u81ea\u52a8\u200b\u5408\u5e76\u200b\u3002</li> <li><code>useStore</code>: \u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u8bbf\u95ee\u200b\u548c\u200b\u8ba2\u9605\u200b\u72b6\u6001\u200b\uff0c\u200b\u901a\u8fc7\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u4f18\u5316\u200b\u6027\u80fd\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/getting-started/summaries/introduction.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b: <code>set</code> \u200b\u51fd\u6570\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u662f\u200b\u5f02\u6b65\u200b\u7684\u200b\uff0c\u200b\u4f46\u200b\u7ec4\u4ef6\u200b\u4f1a\u200b\u5728\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\u81ea\u52a8\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> <li>\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b: \u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u5e94\u200b\u5c3d\u91cf\u200b\u4fdd\u6301\u200b\u7b80\u5355\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002\u200b\u5982\u679c\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5f15\u7528\u200b\u4e0d\u53d8\u200b\uff0c\u200b\u7ec4\u4ef6\u200b\u4e0d\u4f1a\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/auto-generating-selectors/","title":"Auto Generating Selectors","text":"<p>We recommend using selectors when using either the properties or actions from the store. You can access values from the store like so:</p> <pre><code>const bears = useBearStore((state) =&gt; state.bears)\n</code></pre> <p>However, writing these could be tedious. If that is the case for you, you can auto-generate your selectors.</p>"},{"location":"programming/javascript/zustand/guides/auto-generating-selectors/#create-the-following-function-createselectors","title":"Create the following function: <code>createSelectors</code>","text":"<pre><code>import { StoreApi, UseBoundStore } from 'zustand'\n\ntype WithSelectors&lt;S&gt; = S extends { getState: () =&gt; infer T }\n  ? S &amp; { use: { [K in keyof T]: () =&gt; T[K] } }\n  : never\n\nconst createSelectors = &lt;S extends UseBoundStore&lt;StoreApi&lt;object&gt;&gt;&gt;(\n  _store: S,\n) =&gt; {\n  let store = _store as WithSelectors&lt;typeof _store&gt;\n  store.use = {}\n  for (let k of Object.keys(store.getState())) {\n    ;(store.use as any)[k] = () =&gt; store((s) =&gt; s[k as keyof typeof s])\n  }\n\n  return store\n}\n</code></pre> <p>If you have a store like this:</p> <pre><code>interface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n  increment: () =&gt; void\n}\n\nconst useBearStoreBase = create&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  increment: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n}))\n</code></pre> <p>Apply that function to your store:</p> <pre><code>const useBearStore = createSelectors(useBearStoreBase)\n</code></pre> <p>Now the selectors are auto generated and you can access them directly:</p> <pre><code>// get the property\nconst bears = useBearStore.use.bears()\n\n// get the action\nconst increment = useBearStore.use.increment()\n</code></pre>"},{"location":"programming/javascript/zustand/guides/auto-generating-selectors/#vanilla-store","title":"Vanilla Store","text":"<p>If you are using a vanilla store, use the following <code>createSelectors</code> function:</p> <pre><code>import { StoreApi, useStore } from 'zustand'\n\ntype WithSelectors&lt;S&gt; = S extends { getState: () =&gt; infer T }\n  ? S &amp; { use: { [K in keyof T]: () =&gt; T[K] } }\n  : never\n\nconst createSelectors = &lt;S extends StoreApi&lt;object&gt;&gt;(_store: S) =&gt; {\n  const store = _store as WithSelectors&lt;typeof _store&gt;\n  store.use = {}\n  for (const k of Object.keys(store.getState())) {\n    ;(store.use as any)[k] = () =&gt;\n      useStore(_store, (s) =&gt; s[k as keyof typeof s])\n  }\n\n  return store\n}\n</code></pre> <p>The usage is the same as a React store. If you have a store like this:</p> <pre><code>import { createStore } from 'zustand'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n  increment: () =&gt; void\n}\n\nconst store = createStore&lt;BearState&gt;((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  increment: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n}))\n</code></pre> <p>Apply that function to your store:</p> <pre><code>const useBearStore = createSelectors(store)\n</code></pre> <p>Now the selectors are auto generated and you can access them directly:</p> <pre><code>// get the property\nconst bears = useBearStore.use.bears()\n\n// get the action\nconst increment = useBearStore.use.increment()\n</code></pre>"},{"location":"programming/javascript/zustand/guides/auto-generating-selectors/#live-demo","title":"Live Demo","text":"<p>For a working example of this, see the Code Sandbox.</p>"},{"location":"programming/javascript/zustand/guides/auto-generating-selectors/#third-party-libraries","title":"Third-party Libraries","text":"<ul> <li>auto-zustand-selectors-hook</li> <li>react-hooks-global-state</li> <li>zustood</li> <li>@davstack/store</li> </ul>"},{"location":"programming/javascript/zustand/guides/connect-to-state-with-url-hash/","title":"Connect to state with URL","text":""},{"location":"programming/javascript/zustand/guides/connect-to-state-with-url-hash/#connect-state-with-url-hash","title":"Connect State with URL Hash","text":"<p>If you want to connect state of a store to URL hash, you can create your own hash storage.</p> <pre><code>import { create } from 'zustand'\nimport { persist, StateStorage, createJSONStorage } from 'zustand/middleware'\n\nconst hashStorage: StateStorage = {\n  getItem: (key): string =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    const storedValue = searchParams.get(key) ?? ''\n    return JSON.parse(storedValue)\n  },\n  setItem: (key, newValue): void =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    searchParams.set(key, JSON.stringify(newValue))\n    location.hash = searchParams.toString()\n  },\n  removeItem: (key): void =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    searchParams.delete(key)\n    location.hash = searchParams.toString()\n  },\n}\n\nexport const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      fishes: 0,\n      addAFish: () =&gt; set({ fishes: get().fishes + 1 }),\n    }),\n    {\n      name: 'food-storage', // unique name\n      storage: createJSONStorage(() =&gt; hashStorage),\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/connect-to-state-with-url-hash/#codesandbox-demo","title":"CodeSandbox Demo","text":"<p>https://codesandbox.io/s/zustand-state-with-url-hash-demo-f29b88?file=/src/store/index.ts</p>"},{"location":"programming/javascript/zustand/guides/connect-to-state-with-url-hash/#persist-and-connect-state-with-url-parameters-example-url-query-parameters","title":"Persist and Connect State with URL Parameters (Example: URL Query Parameters)","text":"<p>There are times when you want to conditionally connect the state to the URL. This example depicts usage of the URL query parameters while keeping it synced with another persistence implementation, like <code>localstorage</code>.</p> <p>If you want the URL params to always populate, the conditional check on <code>getUrlSearch()</code> can be removed.</p> <p>The implementation below will update the URL in place, without refresh, as the relevant states change.</p> <pre><code>import { create } from 'zustand'\nimport { persist, StateStorage, createJSONStorage } from 'zustand/middleware'\n\nconst getUrlSearch = () =&gt; {\n  return window.location.search.slice(1)\n}\n\nconst persistentStorage: StateStorage = {\n  getItem: (key): string =&gt; {\n    // Check URL first\n    if (getUrlSearch()) {\n      const searchParams = new URLSearchParams(getUrlSearch())\n      const storedValue = searchParams.get(key)\n      return JSON.parse(storedValue as string)\n    } else {\n      // Otherwise, we should load from localstorage or alternative storage\n      return JSON.parse(localStorage.getItem(key) as string)\n    }\n  },\n  setItem: (key, newValue): void =&gt; {\n    // Check if query params exist at all, can remove check if always want to set URL\n    if (getUrlSearch()) {\n      const searchParams = new URLSearchParams(getUrlSearch())\n      searchParams.set(key, JSON.stringify(newValue))\n      window.history.replaceState(null, '', `?${searchParams.toString()}`)\n    }\n\n    localStorage.setItem(key, JSON.stringify(newValue))\n  },\n  removeItem: (key): void =&gt; {\n    const searchParams = new URLSearchParams(getUrlSearch())\n    searchParams.delete(key)\n    window.location.search = searchParams.toString()\n  },\n}\n\ntype LocalAndUrlStore = {\n  typesOfFish: string[]\n  addTypeOfFish: (fishType: string) =&gt; void\n  numberOfBears: number\n  setNumberOfBears: (newNumber: number) =&gt; void\n}\n\nconst storageOptions = {\n  name: 'fishAndBearsStore',\n  storage: createJSONStorage&lt;LocalAndUrlStore&gt;(() =&gt; persistentStorage),\n}\n\nconst useLocalAndUrlStore = create(\n  persist&lt;LocalAndUrlStore&gt;(\n    (set) =&gt; ({\n      typesOfFish: [],\n      addTypeOfFish: (fishType) =&gt;\n        set((state) =&gt; ({ typesOfFish: [...state.typesOfFish, fishType] })),\n\n      numberOfBears: 0,\n      setNumberOfBears: (numberOfBears) =&gt; set(() =&gt; ({ numberOfBears })),\n    }),\n    storageOptions,\n  ),\n)\n\nexport default useLocalAndUrlStore\n</code></pre> <p>When generating the URL from a component, you can call buildShareableUrl:</p> <pre><code>const buildURLSuffix = (params, version = 0) =&gt; {\n  const searchParams = new URLSearchParams()\n\n  const zustandStoreParams = {\n    state: {\n      typesOfFish: params.typesOfFish,\n      numberOfBears: params.numberOfBears,\n    },\n    version: version, // version is here because that is included with how Zustand sets the state\n  }\n\n  // The URL param key should match the name of the store, as specified as in storageOptions above\n  searchParams.set('fishAndBearsStore', JSON.stringify(zustandStoreParams))\n  return searchParams.toString()\n}\n\nexport const buildShareableUrl = (params, version) =&gt; {\n  return `${window.location.origin}?${buildURLSuffix(params, version)}`\n}\n</code></pre> <p>The generated URL would look like (here without any encoding, for readability):</p> <p><code>https://localhost/search?fishAndBearsStore={\"state\":{\"typesOfFish\":[\"tilapia\",\"salmon\"],\"numberOfBears\":15},\"version\":0}}</code></p>"},{"location":"programming/javascript/zustand/guides/event-handler-in-pre-react-18/","title":"Calling actions outside a React event handler in pre React 18","text":"<p>Because React handles <code>setState</code> synchronously if it's called outside an event handler, updating the state outside an event handler will force react to update the components synchronously. Therefore, there is a risk of encountering the zombie-child effect. In order to fix this, the action needs to be wrapped in <code>unstable_batchedUpdates</code> like so:</p> <pre><code>import { unstable_batchedUpdates } from 'react-dom' // or 'react-native'\n\nconst useFishStore = create((set) =&gt; ({\n  fishes: 0,\n  increaseFishes: () =&gt; set((prev) =&gt; ({ fishes: prev.fishes + 1 })),\n}))\n\nconst nonReactCallback = () =&gt; {\n  unstable_batchedUpdates(() =&gt; {\n    useFishStore.getState().increaseFishes()\n  })\n}\n</code></pre> <p>More details: https://github.com/pmndrs/zustand/issues/302</p>"},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/","title":"Flux inspired practice","text":"<p>Although Zustand is an unopinionated library, we do recommend a few patterns. These are inspired by practices originally found in Flux, and more recently Redux, so if you are coming from another library, you should feel right at home.</p> <p>However, Zustand does differ in some fundamental ways, so some terminology may not perfectly align to other libraries.</p>"},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/#recommended-patterns","title":"Recommended patterns","text":""},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/#single-store","title":"Single store","text":"<p>Your applications global state should be located in a single Zustand store.</p> <p>If you have a large application, Zustand supports splitting the store into slices.</p>"},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/#use-set-setstate-to-update-the-store","title":"Use <code>set</code> / <code>setState</code> to update the store","text":"<p>Always use <code>set</code> (or <code>setState</code>) to perform updates to your store. <code>set</code> (and <code>setState</code>) ensures the described update is correctly merged and listeners are appropriately notified.</p>"},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/#colocate-store-actions","title":"Colocate store actions","text":"<p>In Zustand, state can be updated without the use of dispatched actions and reducers found in other Flux libraries. These store actions can be added directly to the store as shown below.</p> <p>Optionally, by using <code>setState</code> they can be located external to the store</p> <pre><code>const useBoundStore = create((set) =&gt; ({\n  storeSliceA: ...,\n  storeSliceB: ...,\n  storeSliceC: ...,\n  updateX: () =&gt; set(...),\n  updateY: () =&gt; set(...),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/guides/flux-inspired-practice/#redux-like-patterns","title":"Redux-like patterns","text":"<p>If you can't live without Redux-like reducers, you can define a <code>dispatch</code> function on the root level of the store:</p> <pre><code>const types = { increase: 'INCREASE', decrease: 'DECREASE' }\n\nconst reducer = (state, { type, by = 1 }) =&gt; {\n  switch (type) {\n    case types.increase:\n      return { grumpiness: state.grumpiness + by }\n    case types.decrease:\n      return { grumpiness: state.grumpiness - by }\n  }\n}\n\nconst useGrumpyStore = create((set) =&gt; ({\n  grumpiness: 0,\n  dispatch: (args) =&gt; set((state) =&gt; reducer(state, args)),\n}))\n\nconst dispatch = useGrumpyStore((state) =&gt; state.dispatch)\ndispatch({ type: types.increase, by: 2 })\n</code></pre> <p>You could also use our redux-middleware. It wires up your main reducer, sets initial state, and adds a dispatch function to the state itself and the vanilla api.</p> <pre><code>import { redux } from 'zustand/middleware'\n\nconst useReduxStore = create(redux(reducer, initialState))\n</code></pre> <p>Another way to update the store could be through functions wrapping the state functions. These could also handle side-effects of actions. For example, with HTTP-calls. To use Zustand in a non-reactive way, see the readme.</p>"},{"location":"programming/javascript/zustand/guides/how-to-reset-state/","title":"How to reset state","text":"<p>The following pattern can be used to reset the state to its initial value.</p> <pre><code>import { create } from 'zustand'\n\n// define types for state values and actions separately\ntype State = {\n  salmon: number\n  tuna: number\n}\n\ntype Actions = {\n  addSalmon: (qty: number) =&gt; void\n  addTuna: (qty: number) =&gt; void\n  reset: () =&gt; void\n}\n\n// define the initial state\nconst initialState: State = {\n  salmon: 0,\n  tuna: 0,\n}\n\n// create store\nconst useSlice = create&lt;State &amp; Actions&gt;()((set, get) =&gt; ({\n  ...initialState,\n  addSalmon: (qty: number) =&gt; {\n    set({ salmon: get().salmon + qty })\n  },\n  addTuna: (qty: number) =&gt; {\n    set({ tuna: get().tuna + qty })\n  },\n  reset: () =&gt; {\n    set(initialState)\n  },\n}))\n</code></pre> <p>Resetting multiple stores at once</p> <pre><code>import type { StateCreator } from 'zustand'\nimport { create: actualCreate } from 'zustand'\n\nconst storeResetFns = new Set&lt;() =&gt; void&gt;()\n\nconst resetAllStores = () =&gt; {\n  storeResetFns.forEach((resetFn) =&gt; {\n    resetFn()\n  })\n}\n\nexport const create = (&lt;T&gt;() =&gt; {\n  return (stateCreator: StateCreator&lt;T&gt;) =&gt; {\n    const store = actualCreate(stateCreator)\n    const initialState = store.getInitialState()\n    storeResetFns.add(() =&gt; {\n      store.setState(initialState, true)\n    })\n    return store\n  }\n}) as typeof actualCreate\n</code></pre>"},{"location":"programming/javascript/zustand/guides/how-to-reset-state/#codesandbox-demo","title":"CodeSandbox Demo","text":"<ul> <li>Basic: https://codesandbox.io/s/zustand-how-to-reset-state-basic-demo-rrqyon</li> <li>Advanced: https://codesandbox.io/s/zustand-how-to-reset-state-advanced-demo-gtu0qe</li> <li>Immer: https://codesandbox.io/s/how-to-reset-state-advance-immer-demo-nyet3f</li> </ul>"},{"location":"programming/javascript/zustand/guides/immutable-state-and-merging/","title":"Immutable state and merging","text":"<p>Like with React's <code>useState</code>, we need to update state immutably.</p> <p>Here's a typical example:</p> <pre><code>import { create } from 'zustand'\n\nconst useCountStore = create((set) =&gt; ({\n  count: 0,\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}))\n</code></pre> <p>The <code>set</code> function is to update state in the store. Because the state is immutable, it should have been like this:</p> <pre><code>set((state) =&gt; ({ ...state, count: state.count + 1 }))\n</code></pre> <p>However, as this is a common pattern, <code>set</code> actually merges state, and we can skip the <code>...state</code> part:</p> <pre><code>set((state) =&gt; ({ count: state.count + 1 }))\n</code></pre>"},{"location":"programming/javascript/zustand/guides/immutable-state-and-merging/#nested-objects","title":"Nested objects","text":"<p>The <code>set</code> function merges state at only one level. If you have a nested object, you need to merge them explicitly. You will use the spread operator pattern like so:</p> <pre><code>import { create } from 'zustand'\n\nconst useCountStore = create((set) =&gt; ({\n  nested: { count: 0 },\n  inc: () =&gt;\n    set((state) =&gt; ({\n      nested: { ...state.nested, count: state.nested.count + 1 },\n    })),\n}))\n</code></pre> <p>For complex use cases, consider using some libraries that help with immutable updates. You can refer to Updating nested state object values.</p>"},{"location":"programming/javascript/zustand/guides/immutable-state-and-merging/#replace-flag","title":"Replace flag","text":"<p>To disable the merging behavior, you can specify a <code>replace</code> boolean value for <code>set</code> like so:</p> <pre><code>set((state) =&gt; newState, true)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/","title":"Initialize state with props","text":"<p>In cases where dependency injection is needed, such as when a store should be initialized with props from a component, the recommended approach is to use a vanilla store with React.context.</p>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#store-creator-with-createstore","title":"Store creator with <code>createStore</code>","text":"<pre><code>import { createStore } from 'zustand'\n\ninterface BearProps {\n  bears: number\n}\n\ninterface BearState extends BearProps {\n  addBear: () =&gt; void\n}\n\ntype BearStore = ReturnType&lt;typeof createBearStore&gt;\n\nconst createBearStore = (initProps?: Partial&lt;BearProps&gt;) =&gt; {\n  const DEFAULT_PROPS: BearProps = {\n    bears: 0,\n  }\n  return createStore&lt;BearState&gt;()((set) =&gt; ({\n    ...DEFAULT_PROPS,\n    ...initProps,\n    addBear: () =&gt; set((state) =&gt; ({ bears: ++state.bears })),\n  }))\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#creating-a-context-with-reactcreatecontext","title":"Creating a context with <code>React.createContext</code>","text":"<pre><code>import { createContext } from 'react'\n\nexport const BearContext = createContext&lt;BearStore | null&gt;(null)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#basic-component-usage","title":"Basic component usage","text":"<pre><code>// Provider implementation\nimport { useRef } from 'react'\n\nfunction App() {\n  const store = useRef(createBearStore()).current\n  return (\n    &lt;BearContext.Provider value={store}&gt;\n      &lt;BasicConsumer /&gt;\n    &lt;/BearContext.Provider&gt;\n  )\n}\n</code></pre> <pre><code>// Consumer component\nimport { useContext } from 'react'\nimport { useStore } from 'zustand'\n\nfunction BasicConsumer() {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  const bears = useStore(store, (s) =&gt; s.bears)\n  const addBear = useStore(store, (s) =&gt; s.addBear)\n  return (\n    &lt;&gt;\n      &lt;div&gt;{bears} Bears.&lt;/div&gt;\n      &lt;button onClick={addBear}&gt;Add bear&lt;/button&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#common-patterns","title":"Common patterns","text":""},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#wrapping-the-context-provider","title":"Wrapping the context provider","text":"<pre><code>// Provider wrapper\nimport { useRef } from 'react'\n\ntype BearProviderProps = React.PropsWithChildren&lt;BearProps&gt;\n\nfunction BearProvider({ children, ...props }: BearProviderProps) {\n  const storeRef = useRef&lt;BearStore&gt;()\n  if (!storeRef.current) {\n    storeRef.current = createBearStore(props)\n  }\n  return (\n    &lt;BearContext.Provider value={storeRef.current}&gt;\n      {children}\n    &lt;/BearContext.Provider&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#extracting-context-logic-into-a-custom-hook","title":"Extracting context logic into a custom hook","text":"<pre><code>// Mimic the hook returned by `create`\nimport { useContext } from 'react'\nimport { useStore } from 'zustand'\n\nfunction useBearContext&lt;T&gt;(selector: (state: BearState) =&gt; T): T {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  return useStore(store, selector)\n}\n</code></pre> <pre><code>// Consumer usage of the custom hook\nfunction CommonConsumer() {\n  const bears = useBearContext((s) =&gt; s.bears)\n  const addBear = useBearContext((s) =&gt; s.addBear)\n  return (\n    &lt;&gt;\n      &lt;div&gt;{bears} Bears.&lt;/div&gt;\n      &lt;button onClick={addBear}&gt;Add bear&lt;/button&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#optionally-allow-using-a-custom-equality-function","title":"Optionally allow using a custom equality function","text":"<pre><code>// Allow custom equality function by using useStoreWithEqualityFn instead of useStore\nimport { useContext } from 'react'\nimport { useStoreWithEqualityFn } from 'zustand/traditional'\n\nfunction useBearContext&lt;T&gt;(\n  selector: (state: BearState) =&gt; T,\n  equalityFn?: (left: T, right: T) =&gt; boolean,\n): T {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  return useStoreWithEqualityFn(store, selector, equalityFn)\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/initialize-state-with-props/#complete-example","title":"Complete example","text":"<pre><code>// Provider wrapper &amp; custom hook consumer\nfunction App2() {\n  return (\n    &lt;BearProvider bears={2}&gt;\n      &lt;HookConsumer /&gt;\n    &lt;/BearProvider&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/maps-and-sets-usage/","title":"Map and Set Usage","text":"<p>You need to wrap Maps and Sets inside an object. When you want its update to be reflected (e.g. in React), you do it by calling <code>setState</code> on it:</p> <p>You can view a codesandbox here: https://codesandbox.io/s/late-https-bxz9qy</p> <pre><code>import { create } from 'zustand'\n\nconst useFooBar = create(() =&gt; ({ foo: new Map(), bar: new Set() }))\n\nfunction doSomething() {\n  // doing something...\n\n  // If you want to update some React component that uses `useFooBar`, you have to call setState\n  // to let React know that an update happened.\n  // Following React's best practices, you should create a new Map/Set when updating them:\n  useFooBar.setState((prev) =&gt; ({\n    foo: new Map(prev.foo).set('newKey', 'newValue'),\n    bar: new Set(prev.bar).add('newKey'),\n  }))\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/nextjs/","title":"Setup with Next.js","text":"<p>Next.js is a popular server-side rendering framework for React that presents some unique challenges for using Zustand properly. Keep in mind that Zustand store is a global variable (AKA module state) making it optional to use a <code>Context</code>. These challenges include:</p> <ul> <li>Per-request store: A Next.js server can handle multiple requests simultaneously. This means   that the store should be created per request and should not be shared across requests.</li> <li>SSR friendly: Next.js applications are rendered twice, first on the server   and again on the client. Having different outputs on both the client and the server will result   in \"hydration errors.\" The store will have to be initialized on the server and then   re-initialized on the client with the same data in order to avoid that. Please read more about   that in our SSR and Hydration guide.</li> <li>SPA routing friendly: Next.js supports a hybrid model for client side routing, which means   that in order to reset a store, we need to initialize it at the component level using a   <code>Context</code>.</li> <li>Server caching friendly: Recent versions of Next.js (specifically applications using the App   Router architecture) support aggressive server caching. Due to our store being a module state,   it is completely compatible with this caching.</li> </ul> <p>We have these general recommendations for the appropriate use of Zustand:</p> <ul> <li>No global stores - Because the store should not be shared across requests, it should not be defined   as a global variable. Instead, the store should be created per request.</li> <li>React Server Components should not read from or write to the store - RSCs cannot use hooks or context. They aren't   meant to be stateful. Having an RSC read from or write values to a global store violates the   architecture of Next.js.</li> </ul>"},{"location":"programming/javascript/zustand/guides/nextjs/#creating-a-store-per-request","title":"Creating a store per request","text":"<p>Let's write our store factory function that will create a new store for each request.</p> <pre><code>// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}\n</code></pre> <p>Note: do not forget to remove all comments from your <code>tsconfig.json</code> file.</p> <pre><code>// src/stores/counter-store.ts\nimport { createStore } from 'zustand/vanilla'\n\nexport type CounterState = {\n  count: number\n}\n\nexport type CounterActions = {\n  decrementCount: () =&gt; void\n  incrementCount: () =&gt; void\n}\n\nexport type CounterStore = CounterState &amp; CounterActions\n\nexport const defaultInitState: CounterState = {\n  count: 0,\n}\n\nexport const createCounterStore = (\n  initState: CounterState = defaultInitState,\n) =&gt; {\n  return createStore&lt;CounterStore&gt;()((set) =&gt; ({\n    ...initState,\n    decrementCount: () =&gt; set((state) =&gt; ({ count: state.count - 1 })),\n    incrementCount: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  }))\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/nextjs/#providing-the-store","title":"Providing the store","text":"<p>Let's use the <code>createCounterStore</code> in our component and share it using a context provider.</p> <pre><code>// src/providers/counter-store-provider.tsx\n'use client'\n\nimport { type ReactNode, createContext, useRef, useContext } from 'react'\nimport { useStore } from 'zustand'\n\nimport { type CounterStore, createCounterStore } from '@/stores/counter-store'\n\nexport type CounterStoreApi = ReturnType&lt;typeof createCounterStore&gt;\n\nexport const CounterStoreContext = createContext&lt;CounterStoreApi | undefined&gt;(\n  undefined,\n)\n\nexport interface CounterStoreProviderProps {\n  children: ReactNode\n}\n\nexport const CounterStoreProvider = ({\n  children,\n}: CounterStoreProviderProps) =&gt; {\n  const storeRef = useRef&lt;CounterStoreApi&gt;()\n  if (!storeRef.current) {\n    storeRef.current = createCounterStore()\n  }\n\n  return (\n    &lt;CounterStoreContext.Provider value={storeRef.current}&gt;\n      {children}\n    &lt;/CounterStoreContext.Provider&gt;\n  )\n}\n\nexport const useCounterStore = &lt;T,&gt;(\n  selector: (store: CounterStore) =&gt; T,\n): T =&gt; {\n  const counterStoreContext = useContext(CounterStoreContext)\n\n  if (!counterStoreContext) {\n    throw new Error(`useCounterStore must be used within CounterStoreProvider`)\n  }\n\n  return useStore(counterStoreContext, selector)\n}\n</code></pre> <p>Note: In this example, we ensure that this component is re-render-safe by checking the value of the reference, so that the store is only created once. This component will only be rendered once per request on the server, but might be re-rendered multiple times on the client if there are stateful client components located above this component in the tree, or if this component also contains other mutable state that causes a re-render.</p>"},{"location":"programming/javascript/zustand/guides/nextjs/#initializing-the-store","title":"Initializing the store","text":"<pre><code>// src/stores/counter-store.ts\nimport { createStore } from 'zustand/vanilla'\n\nexport type CounterState = {\n  count: number\n}\n\nexport type CounterActions = {\n  decrementCount: () =&gt; void\n  incrementCount: () =&gt; void\n}\n\nexport type CounterStore = CounterState &amp; CounterActions\n\nexport const initCounterStore = (): CounterState =&gt; {\n  return { count: new Date().getFullYear() }\n}\n\nexport const defaultInitState: CounterState = {\n  count: 0,\n}\n\nexport const createCounterStore = (\n  initState: CounterState = defaultInitState,\n) =&gt; {\n  return createStore&lt;CounterStore&gt;()((set) =&gt; ({\n    ...initState,\n    decrementCount: () =&gt; set((state) =&gt; ({ count: state.count - 1 })),\n    incrementCount: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  }))\n}\n</code></pre> <pre><code>// src/providers/counter-store-provider.tsx\n'use client'\n\nimport { type ReactNode, createContext, useRef, useContext } from 'react'\nimport { useStore } from 'zustand'\n\nimport {\n  type CounterStore,\n  createCounterStore,\n  initCounterStore,\n} from '@/stores/counter-store'\n\nexport type CounterStoreApi = ReturnType&lt;typeof createCounterStore&gt;\n\nexport const CounterStoreContext = createContext&lt;CounterStoreApi | undefined&gt;(\n  undefined,\n)\n\nexport interface CounterStoreProviderProps {\n  children: ReactNode\n}\n\nexport const CounterStoreProvider = ({\n  children,\n}: CounterStoreProviderProps) =&gt; {\n  const storeRef = useRef&lt;CounterStoreApi&gt;()\n  if (!storeRef.current) {\n    storeRef.current = createCounterStore(initCounterStore())\n  }\n\n  return (\n    &lt;CounterStoreContext.Provider value={storeRef.current}&gt;\n      {children}\n    &lt;/CounterStoreContext.Provider&gt;\n  )\n}\n\nexport const useCounterStore = &lt;T,&gt;(\n  selector: (store: CounterStore) =&gt; T,\n): T =&gt; {\n  const counterStoreContext = useContext(CounterStoreContext)\n\n  if (!counterStoreContext) {\n    throw new Error(`useCounterStore must be used within CounterStoreProvider`)\n  }\n\n  return useStore(counterStoreContext, selector)\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/nextjs/#using-the-store-with-different-architectures","title":"Using the store with different architectures","text":"<p>There are two architectures for a Next.js application: the Pages Router and the App Router. The usage of Zustand on both architectures should be the same with slight differences related to each architecture.</p>"},{"location":"programming/javascript/zustand/guides/nextjs/#pages-router","title":"Pages Router","text":"<pre><code>// src/components/pages/home-page.tsx\nimport { useCounterStore } from '@/providers/counter-store-provider.ts'\n\nexport const HomePage = () =&gt; {\n  const { count, incrementCount, decrementCount } = useCounterStore(\n    (state) =&gt; state,\n  )\n\n  return (\n    &lt;div&gt;\n      Count: {count}\n      &lt;hr /&gt;\n      &lt;button type=\"button\" onClick={() =&gt; void incrementCount()}&gt;\n        Increment Count\n      &lt;/button&gt;\n      &lt;button type=\"button\" onClick={() =&gt; void decrementCount()}&gt;\n        Decrement Count\n      &lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <pre><code>// src/_app.tsx\nimport type { AppProps } from 'next/app'\n\nimport { CounterStoreProvider } from '@/providers/counter-store-provider.tsx'\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    &lt;CounterStoreProvider&gt;\n      &lt;Component {...pageProps} /&gt;\n    &lt;/CounterStoreProvider&gt;\n  )\n}\n</code></pre> <pre><code>// src/pages/index.tsx\nimport { HomePage } from '@/components/pages/home-page.tsx'\n\nexport default function Home() {\n  return &lt;HomePage /&gt;\n}\n</code></pre> <p>Note: creating a store per route would require creating and sharing the store at page (route) component level. Try not to use this if you do not need to create a store per route.</p> <pre><code>// src/pages/index.tsx\nimport { CounterStoreProvider } from '@/providers/counter-store-provider.tsx'\nimport { HomePage } from '@/components/pages/home-page.tsx'\n\nexport default function Home() {\n  return (\n    &lt;CounterStoreProvider&gt;\n      &lt;HomePage /&gt;\n    &lt;/CounterStoreProvider&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/nextjs/#app-router","title":"App Router","text":"<pre><code>// src/components/pages/home-page.tsx\n'use client'\n\nimport { useCounterStore } from '@/providers/counter-store-provider'\n\nexport const HomePage = () =&gt; {\n  const { count, incrementCount, decrementCount } = useCounterStore(\n    (state) =&gt; state,\n  )\n\n  return (\n    &lt;div&gt;\n      Count: {count}\n      &lt;hr /&gt;\n      &lt;button type=\"button\" onClick={() =&gt; void incrementCount()}&gt;\n        Increment Count\n      &lt;/button&gt;\n      &lt;button type=\"button\" onClick={() =&gt; void decrementCount()}&gt;\n        Decrement Count\n      &lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <pre><code>// src/app/layout.tsx\nimport type { Metadata } from 'next'\nimport { Inter } from 'next/font/google'\nimport './globals.css'\n\nimport { CounterStoreProvider } from '@/providers/counter-store-provider'\n\nconst inter = Inter({ subsets: ['latin'] })\n\nexport const metadata: Metadata = {\n  title: 'Create Next App',\n  description: 'Generated by create next app',\n}\n\nexport default function RootLayout({\n  children,\n}: Readonly&lt;{\n  children: React.ReactNode\n}&gt;) {\n  return (\n    &lt;html lang=\"en\"&gt;\n      &lt;body className={inter.className}&gt;\n        &lt;CounterStoreProvider&gt;{children}&lt;/CounterStoreProvider&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n  )\n}\n</code></pre> <pre><code>// src/app/page.tsx\nimport { HomePage } from '@/components/pages/home-page'\n\nexport default function Home() {\n  return &lt;HomePage /&gt;\n}\n</code></pre> <p>Note: creating a store per route would require creating and sharing the store at page (route) component level. Try not to use this if you do not need to create a store per route.</p> <pre><code>// src/app/page.tsx\nimport { CounterStoreProvider } from '@/providers/counter-store-provider'\nimport { HomePage } from '@/components/pages/home-page'\n\nexport default function Home() {\n  return (\n    &lt;CounterStoreProvider&gt;\n      &lt;HomePage /&gt;\n    &lt;/CounterStoreProvider&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/practice-with-no-store-actions/","title":"Practice with no store actions","text":"<p>The recommended usage is to colocate actions and states within the store (let your actions be located together with your state).</p> <p>For example:</p> <pre><code>export const useBoundStore = create((set) =&gt; ({\n  count: 0,\n  text: 'hello',\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  setText: (text) =&gt; set({ text }),\n}))\n</code></pre> <p>This creates a self-contained store with data and actions together.</p> <p>An alternative approach is to define actions at module level, external to the store.</p> <pre><code>export const useBoundStore = create(() =&gt; ({\n  count: 0,\n  text: 'hello',\n}))\n\nexport const inc = () =&gt;\n  useBoundStore.setState((state) =&gt; ({ count: state.count + 1 }))\n\nexport const setText = (text) =&gt; useBoundStore.setState({ text })\n</code></pre> <p>This has a few advantages:</p> <ul> <li>It doesn't require a hook to call an action;</li> <li>It facilitates code splitting.</li> </ul> <p>While this pattern doesn't offer any downsides, some may prefer colocating due to its encapsulated nature.</p>"},{"location":"programming/javascript/zustand/guides/prevent-rerenders-with-use-shallow/","title":"Prevent rerenders with useShallow","text":"<p>When you need to subscribe to a computed state from a store, the recommended way is to use a selector.</p> <p>The computed selector will cause a rerender if the output has changed according to Object.is.</p> <p>In this case you might want to use <code>useShallow</code> to avoid a rerender if the computed value is always shallow equal the previous one.</p>"},{"location":"programming/javascript/zustand/guides/prevent-rerenders-with-use-shallow/#example","title":"Example","text":"<p>We have a store that associates to each bear a meal and we want to render their names.</p> <pre><code>import { create } from 'zustand'\n\nconst useMeals = create(() =&gt; ({\n  papaBear: 'large porridge-pot',\n  mamaBear: 'middle-size porridge pot',\n  littleBear: 'A little, small, wee pot',\n}))\n\nexport const BearNames = () =&gt; {\n  const names = useMeals((state) =&gt; Object.keys(state))\n\n  return &lt;div&gt;{names.join(', ')}&lt;/div&gt;\n}\n</code></pre> <p>Now papa bear wants a pizza instead:</p> <pre><code>useMeals.setState({\n  papaBear: 'a large pizza',\n})\n</code></pre> <p>This change causes <code>BearNames</code> rerenders even though the actual output of <code>names</code> has not changed according to shallow equal.</p> <p>We can fix that using <code>useShallow</code>!</p> <pre><code>import { create } from 'zustand'\nimport { useShallow } from 'zustand/react/shallow'\n\nconst useMeals = create(() =&gt; ({\n  papaBear: 'large porridge-pot',\n  mamaBear: 'middle-size porridge pot',\n  littleBear: 'A little, small, wee pot',\n}))\n\nexport const BearNames = () =&gt; {\n  const names = useMeals(useShallow((state) =&gt; Object.keys(state)))\n\n  return &lt;div&gt;{names.join(', ')}&lt;/div&gt;\n}\n</code></pre> <p>Now they can all order other meals without causing unnecessary rerenders of our <code>BearNames</code> component.</p>"},{"location":"programming/javascript/zustand/guides/slices-pattern/","title":"Slices Pattern","text":""},{"location":"programming/javascript/zustand/guides/slices-pattern/#slicing-the-store-into-smaller-stores","title":"Slicing the store into smaller stores","text":"<p>Your store can become bigger and bigger and tougher to maintain as you add more features.</p> <p>You can divide your main store into smaller individual stores to achieve modularity. This is simple to accomplish in Zustand!</p> <p>The first individual store:</p> <pre><code>export const createFishSlice = (set) =&gt; ({\n  fishes: 0,\n  addFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes + 1 })),\n})\n</code></pre> <p>Another individual store:</p> <pre><code>export const createBearSlice = (set) =&gt; ({\n  bears: 0,\n  addBear: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n  eatFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes - 1 })),\n})\n</code></pre> <p>You can now combine both the stores into one bounded store:</p> <pre><code>import { create } from 'zustand'\nimport { createBearSlice } from './bearSlice'\nimport { createFishSlice } from './fishSlice'\n\nexport const useBoundStore = create((...a) =&gt; ({\n  ...createBearSlice(...a),\n  ...createFishSlice(...a),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/guides/slices-pattern/#usage-in-a-react-component","title":"Usage in a React component","text":"<pre><code>import { useBoundStore } from './stores/useBoundStore'\n\nfunction App() {\n  const bears = useBoundStore((state) =&gt; state.bears)\n  const fishes = useBoundStore((state) =&gt; state.fishes)\n  const addBear = useBoundStore((state) =&gt; state.addBear)\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Number of bears: {bears}&lt;/h2&gt;\n      &lt;h2&gt;Number of fishes: {fishes}&lt;/h2&gt;\n      &lt;button onClick={() =&gt; addBear()}&gt;Add a bear&lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n\nexport default App\n</code></pre>"},{"location":"programming/javascript/zustand/guides/slices-pattern/#updating-multiple-stores","title":"Updating multiple stores","text":"<p>You can update multiple stores, at the same time, in a single function.</p> <pre><code>export const createBearFishSlice = (set, get) =&gt; ({\n  addBearAndFish: () =&gt; {\n    get().addBear()\n    get().addFish()\n  },\n})\n</code></pre> <p>Combining all the stores together is the same as before.</p> <pre><code>import { create } from 'zustand'\nimport { createBearSlice } from './bearSlice'\nimport { createFishSlice } from './fishSlice'\nimport { createBearFishSlice } from './createBearFishSlice'\n\nexport const useBoundStore = create((...a) =&gt; ({\n  ...createBearSlice(...a),\n  ...createFishSlice(...a),\n  ...createBearFishSlice(...a),\n}))\n</code></pre>"},{"location":"programming/javascript/zustand/guides/slices-pattern/#adding-middlewares","title":"Adding middlewares","text":"<p>Adding middlewares to a combined store is the same as with other normal stores.</p> <p>Adding <code>persist</code> middleware to our <code>useBoundStore</code>:</p> <pre><code>import { create } from 'zustand'\nimport { createBearSlice } from './bearSlice'\nimport { createFishSlice } from './fishSlice'\nimport { persist } from 'zustand/middleware'\n\nexport const useBoundStore = create(\n  persist(\n    (...a) =&gt; ({\n      ...createBearSlice(...a),\n      ...createFishSlice(...a),\n    }),\n    { name: 'bound-store' },\n  ),\n)\n</code></pre> <p>Please keep in mind you should only apply middlewares in the combined store. Applying them inside individual slices can lead to unexpected issues.</p>"},{"location":"programming/javascript/zustand/guides/slices-pattern/#usage-with-typescript","title":"Usage with TypeScript","text":"<p>A detailed guide on how to use the slice pattern in Zustand with TypeScript can be found here.</p>"},{"location":"programming/javascript/zustand/guides/ssr-and-hydration/","title":"SSR and Hydration","text":""},{"location":"programming/javascript/zustand/guides/ssr-and-hydration/#server-side-rendering-ssr","title":"Server-side Rendering (SSR)","text":"<p>Server-side Rendering (SSR) is a technique that helps us render our components into HTML strings on the server, send them directly to the browser, and finally \"hydrate\" the static markup into a fully interactive app on the client.</p>"},{"location":"programming/javascript/zustand/guides/ssr-and-hydration/#react","title":"React","text":"<p>Let's say we want to render a stateless app using React. In order to do that, we need to use <code>express</code>, <code>react</code> and <code>react-dom/server</code>. We don't need <code>react-dom/client</code> since it's a stateless app.</p> <p>Let's dive into that:</p> <ul> <li><code>express</code> helps us build a web app that we can run using Node,</li> <li><code>react</code> helps us build the UI components that we use in our app,</li> <li><code>react-dom/server</code> helps us render our components on a server.</li> </ul> <pre><code>// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"noImplicitAny\": false,\n    \"noEmitOnError\": true,\n    \"removeComments\": false,\n    \"sourceMap\": true,\n    \"target\": \"esnext\"\n  },\n  \"include\": [\"**/*\"]\n}\n</code></pre> <p>Note: do not forget to remove all comments from your <code>tsconfig.json</code> file.</p> <pre><code>// app.tsx\nexport const App = () =&gt; {\n  return (\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;meta charSet=\"utf-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt;\n        &lt;title&gt;Static Server-side-rendered App&lt;/title&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n        &lt;div&gt;Hello World!&lt;/div&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n  )\n}\n</code></pre> <pre><code>// server.tsx\nimport express from 'express'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nimport { App } from './app.tsx'\n\nconst port = Number.parseInt(process.env.PORT || '3000', 10)\nconst app = express()\n\napp.get('/', (_, res) =&gt; {\n  const { pipe } = ReactDOMServer.renderToPipeableStream(&lt;App /&gt;, {\n    onShellReady() {\n      res.setHeader('content-type', 'text/html')\n      pipe(res)\n    },\n  })\n})\n\napp.listen(port, () =&gt; {\n  console.log(`Server is listening at ${port}`)\n})\n</code></pre> <pre><code>tsc --build\n</code></pre> <pre><code>node server.js\n</code></pre>"},{"location":"programming/javascript/zustand/guides/ssr-and-hydration/#hydration","title":"Hydration","text":"<p>Hydration turns the initial HTML snapshot from the server into a fully interactive app that runs in the browser. The right way to \"hydrate\" a component is by using <code>hydrateRoot</code>.</p>"},{"location":"programming/javascript/zustand/guides/ssr-and-hydration/#react_1","title":"React","text":"<p>Let's say we want to render a stateful app using React. In order to do that we need to use <code>express</code>, <code>react</code>, <code>react-dom/server</code> and <code>react-dom/client</code>.</p> <p>Let's dive into that:</p> <ul> <li><code>express</code> helps us build a web app that we can run using Node,</li> <li><code>react</code> helps us build the UI components that we use in our app,</li> <li><code>react-dom/server</code> helps us render our components on a server,</li> <li><code>react-dom/client</code> helps us hydrate our components on a client.</li> </ul> <p>Note: Do not forget that even if we can render our components on a server, it is important to \"hydrate\" them on a client to make them interactive.</p> <pre><code>// tsconfig.json\n{\n  \"compilerOptions\": {\n    \"noImplicitAny\": false,\n    \"noEmitOnError\": true,\n    \"removeComments\": false,\n    \"sourceMap\": true,\n    \"target\": \"esnext\"\n  },\n  \"include\": [\"**/*\"]\n}\n</code></pre> <p>Note: do not forget to remove all comments in your <code>tsconfig.json</code> file.</p> <pre><code>// app.tsx\nexport const App = () =&gt; {\n  return (\n    &lt;html&gt;\n      &lt;head&gt;\n        &lt;meta charSet=\"utf-8\" /&gt;\n        &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" /&gt;\n        &lt;title&gt;Static Server-side-rendered App&lt;/title&gt;\n      &lt;/head&gt;\n      &lt;body&gt;\n        &lt;div&gt;Hello World!&lt;/div&gt;\n      &lt;/body&gt;\n    &lt;/html&gt;\n  )\n}\n</code></pre> <pre><code>// main.tsx\nimport ReactDOMClient from 'react-dom/client'\n\nimport { App } from './app.tsx'\n\nReactDOMClient.hydrateRoot(document, &lt;App /&gt;)\n</code></pre> <pre><code>// server.tsx\nimport express from 'express'\nimport React from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nimport { App } from './app.tsx'\n\nconst port = Number.parseInt(process.env.PORT || '3000', 10)\nconst app = express()\n\napp.use('/', (_, res) =&gt; {\n  const { pipe } = ReactDOMServer.renderToPipeableStream(&lt;App /&gt;, {\n    bootstrapScripts: ['/main.js'],\n    onShellReady() {\n      res.setHeader('content-type', 'text/html')\n      pipe(res)\n    },\n  })\n})\n\napp.listen(port, () =&gt; {\n  console.log(`Server is listening at ${port}`)\n})\n</code></pre> <pre><code>tsc --build\n</code></pre> <pre><code>node server.js\n</code></pre> <p>Warning: The React tree you pass to <code>hydrateRoot</code> needs to produce the same output as it did on the server. The most common causes leading to hydration errors include:</p> <ul> <li>Extra whitespace (like newlines) around the React-generated HTML inside the root node.</li> <li>Using checks like typeof window !== 'undefined' in your rendering logic.</li> <li>Using browser-only APIs like <code>window.matchMedia</code> in your rendering logic.</li> <li>Rendering different data on the server and the client.</li> </ul> <p>React recovers from some hydration errors, but you must fix them like other bugs. In the best case, they\u2019ll lead to a slowdown; in the worst case, event handlers can get attached to the wrong elements.</p> <p>You can read more about the caveats and pitfalls here: hydrateRoot</p>"},{"location":"programming/javascript/zustand/guides/testing/","title":"Testing","text":""},{"location":"programming/javascript/zustand/guides/testing/#setting-up-a-test-environment","title":"Setting Up a Test Environment","text":""},{"location":"programming/javascript/zustand/guides/testing/#test-runners","title":"Test Runners","text":"<p>Usually, your test runner needs to be configured to run JavaScript/TypeScript syntax. If you're going to be testing UI components, you will likely need to configure the test runner to use JSDOM to provide a mock DOM environment.</p> <p>See these resources for test runner configuration instructions:</p> <ul> <li>Jest</li> <li>Jest: Getting Started</li> <li>Jest: Configuration - Test Environment</li> <li>Vitest</li> <li>Vitest: Getting Started</li> <li>Vitest: Configuration - Test Environment</li> </ul>"},{"location":"programming/javascript/zustand/guides/testing/#ui-and-network-testing-tools","title":"UI and Network Testing Tools","text":"<p>We recommend using React Testing Library (RTL) to test out React components that connect to Zustand. RTL is a simple and complete React DOM testing utility that encourages good testing practices. It uses ReactDOM's <code>render</code> function and <code>act</code> from <code>react-dom/tests-utils</code>. Futhermore, Native Testing Library (RNTL) is the alternative to RTL to test out React Native components. The Testing Library family of tools also includes adapters for many other popular frameworks.</p> <p>We also recommend using Mock Service Worker (MSW) to mock network requests, as this means your application logic does not need to be changed or mocked when writing tests.</p> <ul> <li>React Testing Library (DOM)</li> <li>DOM Testing Library: Setup</li> <li>React Testing Library: Setup</li> <li>Testing Library Jest-DOM Matchers</li> <li>Native Testing Library (React Native)</li> <li>Native Testing Library: Setup</li> <li>User Event Testing Library (DOM)</li> <li>User Event Testing Library: Setup</li> <li>TypeScript for Jest</li> <li>TypeScript for Jest: Setup</li> <li>TypeScript for Node</li> <li>TypeScript for Node: Setup</li> <li>Mock Service Worker</li> <li>MSW: Installation</li> <li>MSW: Setting up mock requests</li> <li>MSW: Mock server configuration for Node</li> </ul>"},{"location":"programming/javascript/zustand/guides/testing/#setting-up-zustand-for-testing","title":"Setting Up Zustand for testing","text":"<p>Note: Since Jest and Vitest have slight differences, like Vitest using ES modules and Jest using CommonJS modules, you need to keep that in mind if you are using Vitest instead of Jest.</p> <p>The mock provided below will enable the relevant test runner to reset the zustand stores after each test.</p>"},{"location":"programming/javascript/zustand/guides/testing/#shared-code-just-for-testing-purposes","title":"Shared code just for testing purposes","text":"<p>This shared code was added to avoid code duplication in our demo since we use the same counter store creator for both implementations, with and without <code>Context</code> API \u2014 <code>createStore</code> and <code>create</code>, respectively.</p> <pre><code>// shared/counter-store-creator.ts\nimport { type StateCreator } from 'zustand'\n\nexport type CounterStore = {\n  count: number\n  inc: () =&gt; void\n}\n\nexport const counterStoreCreator: StateCreator&lt;CounterStore&gt; = (set) =&gt; ({\n  count: 1,\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n})\n</code></pre>"},{"location":"programming/javascript/zustand/guides/testing/#jest","title":"Jest","text":"<p>In the next steps we are going to setup our Jest environment in order to mock Zustand.</p> <pre><code>// __mocks__/zustand.ts\nimport { act } from '@testing-library/react'\nimport type * as ZustandExportedTypes from 'zustand'\nexport * from 'zustand'\n\nconst { create: actualCreate, createStore: actualCreateStore } =\n  jest.requireActual&lt;typeof ZustandExportedTypes&gt;('zustand')\n\n// a variable to hold reset functions for all stores declared in the app\nexport const storeResetFns = new Set&lt;() =&gt; void&gt;()\n\nconst createUncurried = &lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  const store = actualCreate(stateCreator)\n  const initialState = store.getInitialState()\n  storeResetFns.add(() =&gt; {\n    store.setState(initialState, true)\n  })\n  return store\n}\n\n// when creating a store, we get its initial state, create a reset function and add it in the set\nexport const create = (&lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  console.log('zustand create mock')\n\n  // to support curried version of create\n  return typeof stateCreator === 'function'\n    ? createUncurried(stateCreator)\n    : createUncurried\n}) as typeof ZustandExportedTypes.create\n\nconst createStoreUncurried = &lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  const store = actualCreateStore(stateCreator)\n  const initialState = store.getInitialState()\n  storeResetFns.add(() =&gt; {\n    store.setState(initialState, true)\n  })\n  return store\n}\n\n// when creating a store, we get its initial state, create a reset function and add it in the set\nexport const createStore = (&lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  console.log('zustand createStore mock')\n\n  // to support curried version of createStore\n  return typeof stateCreator === 'function'\n    ? createStoreUncurried(stateCreator)\n    : createStoreUncurried\n}) as typeof ZustandExportedTypes.createStore\n\n// reset all stores after each test run\nafterEach(() =&gt; {\n  act(() =&gt; {\n    storeResetFns.forEach((resetFn) =&gt; {\n      resetFn()\n    })\n  })\n})\n</code></pre> <pre><code>// setup-jest.ts\nimport '@testing-library/jest-dom'\n</code></pre> <pre><code>// jest.config.ts\nimport type { JestConfigWithTsJest } from 'ts-jest'\n\nconst config: JestConfigWithTsJest = {\n  preset: 'ts-jest',\n  testEnvironment: 'jsdom',\n  setupFilesAfterEnv: ['./setup-jest.ts'],\n}\n\nexport default config\n</code></pre> <p>Note: to use TypeScript we need to install two packages <code>ts-jest</code> and <code>ts-node</code>.</p>"},{"location":"programming/javascript/zustand/guides/testing/#vitest","title":"Vitest","text":"<p>In the next steps we are going to setup our Vitest environment in order to mock Zustand.</p> <p>Warning: In Vitest you can change the root. Due to that, you need make sure that you are creating your <code>__mocks__</code> directory in the right place. Let's say that you change the root to <code>./src</code>, that means you need to create a <code>__mocks__</code> directory under <code>./src</code>. The end result would be <code>./src/__mocks__</code>, rather than <code>./__mocks__</code>. Creating <code>__mocks__</code> directory in the wrong place can lead to issues when using Vitest.</p> <pre><code>// __mocks__/zustand.ts\nimport { act } from '@testing-library/react'\nimport type * as ZustandExportedTypes from 'zustand'\nexport * from 'zustand'\n\nconst { create: actualCreate, createStore: actualCreateStore } =\n  await vi.importActual&lt;typeof ZustandExportedTypes&gt;('zustand')\n\n// a variable to hold reset functions for all stores declared in the app\nexport const storeResetFns = new Set&lt;() =&gt; void&gt;()\n\nconst createUncurried = &lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  const store = actualCreate(stateCreator)\n  const initialState = store.getInitialState()\n  storeResetFns.add(() =&gt; {\n    store.setState(initialState, true)\n  })\n  return store\n}\n\n// when creating a store, we get its initial state, create a reset function and add it in the set\nexport const create = (&lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  console.log('zustand create mock')\n\n  // to support curried version of create\n  return typeof stateCreator === 'function'\n    ? createUncurried(stateCreator)\n    : createUncurried\n}) as typeof ZustandExportedTypes.create\n\nconst createStoreUncurried = &lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  const store = actualCreateStore(stateCreator)\n  const initialState = store.getInitialState()\n  storeResetFns.add(() =&gt; {\n    store.setState(initialState, true)\n  })\n  return store\n}\n\n// when creating a store, we get its initial state, create a reset function and add it in the set\nexport const createStore = (&lt;T&gt;(\n  stateCreator: ZustandExportedTypes.StateCreator&lt;T&gt;,\n) =&gt; {\n  console.log('zustand createStore mock')\n\n  // to support curried version of createStore\n  return typeof stateCreator === 'function'\n    ? createStoreUncurried(stateCreator)\n    : createStoreUncurried\n}) as typeof ZustandExportedTypes.createStore\n\n// reset all stores after each test run\nafterEach(() =&gt; {\n  act(() =&gt; {\n    storeResetFns.forEach((resetFn) =&gt; {\n      resetFn()\n    })\n  })\n})\n</code></pre> <p>Note: without globals configuration enabled, we need to add <code>import { afterEach, vi } from 'vitest'</code> at the top.</p> <pre><code>// global.d.ts\n/// &lt;reference types=\"vite/client\" /&gt;\n/// &lt;reference types=\"vitest/globals\" /&gt;\n</code></pre> <p>Note: without globals configuration enabled, we do need to remove <code>/// &lt;reference types=\"vitest/globals\" /&gt;</code>.</p> <pre><code>// setup-vitest.ts\nimport '@testing-library/jest-dom'\n\nvi.mock('zustand') // to make it work like Jest (auto-mocking)\n</code></pre> <p>Note: without globals configuration enabled, we need to add <code>import { vi } from 'vitest'</code> at the top.</p> <pre><code>// vitest.config.ts\nimport { defineConfig, mergeConfig } from 'vitest/config'\nimport viteConfig from './vite.config'\n\nexport default mergeConfig(\n  viteConfig,\n  defineConfig({\n    test: {\n      globals: true,\n      environment: 'jsdom',\n      setupFiles: ['./setup-vitest.ts'],\n    },\n  }),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/testing/#testing-components","title":"Testing components","text":"<p>In the next examples we are going to use <code>useCounterStore</code></p> <p>Note: all of these examples are written using TypeScript.</p> <pre><code>// shared/counter-store-creator.ts\nimport { type StateCreator } from 'zustand'\n\nexport type CounterStore = {\n  count: number\n  inc: () =&gt; void\n}\n\nexport const counterStoreCreator: StateCreator&lt;CounterStore&gt; = (set) =&gt; ({\n  count: 1,\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n})\n</code></pre> <pre><code>// stores/use-counter-store.ts\nimport { create } from 'zustand'\n\nimport {\n  type CounterStore,\n  counterStoreCreator,\n} from '../shared/counter-store-creator'\n\nexport const useCounterStore = create&lt;CounterStore&gt;()(counterStoreCreator)\n</code></pre> <pre><code>// contexts/use-counter-store-context.tsx\nimport { type ReactNode, createContext, useContext, useRef } from 'react'\nimport { createStore } from 'zustand'\nimport { useStoreWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/shallow'\n\nimport {\n  type CounterStore,\n  counterStoreCreator,\n} from '../shared/counter-store-creator'\n\nexport const createCounterStore = () =&gt; {\n  return createStore&lt;CounterStore&gt;(counterStoreCreator)\n}\n\nexport type CounterStoreApi = ReturnType&lt;typeof createCounterStore&gt;\n\nexport const CounterStoreContext = createContext&lt;CounterStoreApi | undefined&gt;(\n  undefined,\n)\n\nexport interface CounterStoreProviderProps {\n  children: ReactNode\n}\n\nexport const CounterStoreProvider = ({\n  children,\n}: CounterStoreProviderProps) =&gt; {\n  const counterStoreRef = useRef&lt;CounterStoreApi&gt;()\n  if (!counterStoreRef.current) {\n    counterStoreRef.current = createCounterStore()\n  }\n\n  return (\n    &lt;CounterStoreContext.Provider value={counterStoreRef.current}&gt;\n      {children}\n    &lt;/CounterStoreContext.Provider&gt;\n  )\n}\n\nexport type UseCounterStoreContextSelector&lt;T&gt; = (store: CounterStore) =&gt; T\n\nexport const useCounterStoreContext = &lt;T,&gt;(\n  selector: UseCounterStoreContextSelector&lt;T&gt;,\n): T =&gt; {\n  const counterStoreContext = useContext(CounterStoreContext)\n\n  if (counterStoreContext === undefined) {\n    throw new Error(\n      'useCounterStoreContext must be used within CounterStoreProvider',\n    )\n  }\n\n  return useStoreWithEqualityFn(counterStoreContext, selector, shallow)\n}\n</code></pre> <pre><code>// components/counter/counter.tsx\nimport { useCounterStore } from '../../stores/use-counter-store'\n\nexport function Counter() {\n  const { count, inc } = useCounterStore()\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Counter Store&lt;/h2&gt;\n      &lt;h4&gt;{count}&lt;/h4&gt;\n      &lt;button onClick={inc}&gt;One Up&lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <pre><code>// components/counter/index.ts\nexport * from './counter'\n</code></pre> <pre><code>// components/counter/counter.test.tsx\nimport { act, render, screen } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\nimport { Counter } from './counter'\n\ndescribe('Counter', () =&gt; {\n  test('should render with initial state of 1', async () =&gt; {\n    renderCounter()\n\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument()\n    expect(\n      await screen.findByRole('button', { name: /one up/i }),\n    ).toBeInTheDocument()\n  })\n\n  test('should increase count by clicking a button', async () =&gt; {\n    const user = userEvent.setup()\n\n    renderCounter()\n\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument()\n\n    await act(async () =&gt; {\n      await user.click(await screen.findByRole('button', { name: /one up/i }))\n    })\n\n    expect(await screen.findByText(/^2$/)).toBeInTheDocument()\n  })\n})\n\nconst renderCounter = () =&gt; {\n  return render(&lt;Counter /&gt;)\n}\n</code></pre> <pre><code>// components/counter-with-context/counter-with-context.tsx\nimport {\n  CounterStoreProvider,\n  useCounterStoreContext,\n} from '../../contexts/use-counter-store-context'\n\nconst Counter = () =&gt; {\n  const { count, inc } = useCounterStoreContext((state) =&gt; state)\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Counter Store Context&lt;/h2&gt;\n      &lt;h4&gt;{count}&lt;/h4&gt;\n      &lt;button onClick={inc}&gt;One Up&lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n\nexport const CounterWithContext = () =&gt; {\n  return (\n    &lt;CounterStoreProvider&gt;\n      &lt;Counter /&gt;\n    &lt;/CounterStoreProvider&gt;\n  )\n}\n</code></pre> <pre><code>// components/counter-with-context/index.ts\nexport * from './counter-with-context'\n</code></pre> <pre><code>// components/counter-with-context/counter-with-context.test.tsx\nimport { act, render, screen } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\n\nimport { CounterWithContext } from './counter-with-context'\n\ndescribe('CounterWithContext', () =&gt; {\n  test('should render with initial state of 1', async () =&gt; {\n    renderCounterWithContext()\n\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument()\n    expect(\n      await screen.findByRole('button', { name: /one up/i }),\n    ).toBeInTheDocument()\n  })\n\n  test('should increase count by clicking a button', async () =&gt; {\n    const user = userEvent.setup()\n\n    renderCounterWithContext()\n\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument()\n\n    await act(async () =&gt; {\n      await user.click(await screen.findByRole('button', { name: /one up/i }))\n    })\n\n    expect(await screen.findByText(/^2$/)).toBeInTheDocument()\n  })\n})\n\nconst renderCounterWithContext = () =&gt; {\n  return render(&lt;CounterWithContext /&gt;)\n}\n</code></pre> <p>Note: without globals configuration enabled, we need to add <code>import { describe, test, expect } from 'vitest'</code> at the top of each test file.</p> <p>CodeSandbox Demos</p> <ul> <li>Jest Demo: https://stackblitz.com/edit/jest-zustand</li> <li>Vitest Demo: https://stackblitz.com/edit/vitest-zustand</li> </ul>"},{"location":"programming/javascript/zustand/guides/testing/#references","title":"References","text":"<ul> <li>React Testing Library: React Testing Library (RTL)   is a very lightweight solution for testing React components. It provides utility functions on top   of <code>react-dom</code> and <code>react-dom/test-utils</code>, in a way that encourages better testing practices. Its   primary guiding principle is: \"The more your tests resemble the way your software is used, the   more confidence they can give you.\"</li> <li>Native Testing Library: Native Testing Library (RNTL)   is a very lightweight solution for testing React Native components, similarly to RTL, but its   functions are built on top of <code>react-test-renderer</code>.</li> <li>Testing Implementation Details: Blog post by Kent C. Dodds on why he recommends to avoid   testing implementation details.</li> </ul>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/","title":"Tutorial: Tic-Tac-Toe","text":""},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#building-a-game","title":"Building a game","text":"<p>You will build a small tic-tac-toe game during this tutorial. This tutorial does assume existing React knowledge. The techniques you'll learn in the tutorial are fundamental to building any React app, and fully understanding it will give you a deep understanding of React and Zustand.</p> <p>[!NOTE] This tutorial is crafted for those who learn best through hands-on experience and want to swiftly create something tangible. It draws inspiration from React's tic-tac-toe tutorial.</p> <p>The tutorial is divided into several sections:</p> <ul> <li>Setup for the tutorial will give you a starting point to follow the tutorial.</li> <li>Overview will teach you the fundamentals of React: components, props, and state.</li> <li>Completing the game will teach you the most common techniques in React development.</li> <li>Adding time travel will give you a deeper insight into the unique strengths of React.</li> </ul>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#what-are-you-building","title":"What are you building?","text":"<p>In this tutorial, you'll build an interactive tic-tac-toe game with React and Zustand.</p> <p>You can see what it will look like when you're finished here:</p> <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useGameStore = create(\n  combine(\n    {\n      history: [Array(9).fill(null)],\n      currentMove: 0,\n    },\n    (set, get) =&gt; {\n      return {\n        setHistory: (nextHistory) =&gt; {\n          set((state) =&gt; ({\n            history:\n              typeof nextHistory === 'function'\n                ? nextHistory(state.history)\n                : nextHistory,\n          }))\n        },\n        setCurrentMove: (nextCurrentMove) =&gt; {\n          set((state) =&gt; ({\n            currentMove:\n              typeof nextCurrentMove === 'function'\n                ? nextCurrentMove(state.currentMove)\n                : nextCurrentMove,\n          }))\n        },\n      }\n    },\n  ),\n)\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    &lt;button\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 0,\n        backgroundColor: '#fff',\n        border: '1px solid #999',\n        outline: 0,\n        borderRadius: 0,\n        fontSize: '1rem',\n        fontWeight: 'bold',\n      }}\n      onClick={onSquareClick}\n    &gt;\n      {value}\n    &lt;/button&gt;\n  )\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    onPlay(nextSquares)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((_, i) =&gt; (\n          &lt;Square\n            key={`square-${i}`}\n            value={squares[i]}\n            onSquareClick={() =&gt; handleClick(i)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n\nexport default function Game() {\n  const { history, setHistory, currentMove, setCurrentMove } = useGameStore()\n  const xIsNext = currentMove % 2 === 0\n  const currentSquares = history[currentMove]\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]\n    setHistory(nextHistory)\n    setCurrentMove(nextHistory.length - 1)\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;\n          {history.map((_, historyIndex) =&gt; {\n            const description =\n              historyIndex &gt; 0\n                ? `Go to move #${historyIndex}`\n                : 'Go to game start'\n\n            return (\n              &lt;li key={historyIndex}&gt;\n                &lt;button onClick={() =&gt; jumpTo(historyIndex)}&gt;\n                  {description}\n                &lt;/button&gt;\n              &lt;/li&gt;\n            )\n          })}\n        &lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i &lt; lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n\n  return null\n}\n\nfunction calculateTurns(squares) {\n  return squares.filter((square) =&gt; !square).length\n}\n\nfunction calculateStatus(winner, turns, player) {\n  if (!winner &amp;&amp; !turns) return 'Draw'\n  if (winner) return `Winner ${winner}`\n  return `Next player: ${player}`\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#building-the-board","title":"Building the board","text":"<p>Let's start by creating the <code>Square</code> component, which will be a building block for our <code>Board</code> component. This component will represent each square in our game.</p> <p>The <code>Square</code> component should take <code>value</code> and <code>onSquareClick</code> as props. It should return a <code>&lt;button&gt;</code> element, styled to look like a square. The button displays the value prop, which can be <code>'X'</code>, <code>'O'</code>, or <code>null</code>, depending on the game's state. When the button is clicked, it triggers the <code>onSquareClick</code> function passed in as a prop, allowing the game to respond to user input.</p> <p>Here's the code for the <code>Square</code> component:</p> <pre><code>function Square({ value, onSquareClick }) {\n  return (\n    &lt;button\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 0,\n        backgroundColor: '#fff',\n        border: '1px solid #999',\n        outline: 0,\n        borderRadius: 0,\n        fontSize: '1rem',\n        fontWeight: 'bold',\n      }}\n      onClick={onSquareClick}\n    &gt;\n      {value}\n    &lt;/button&gt;\n  )\n}\n</code></pre> <p>Let's move on to creating the Board component, which will consist of 9 squares arranged in a grid. This component will serve as the main playing area for our game.</p> <p>The <code>Board</code> component should return a <code>&lt;div&gt;</code> element styled as a grid. The grid layout is achieved using CSS Grid, with three columns and three rows, each taking up an equal fraction of the available space. The overall size of the grid is determined by the width and height properties, ensuring that it is square-shaped and appropriately sized.</p> <p>Inside the grid, we place nine Square components, each with a value prop representing its position. These Square components will eventually hold the game symbols (<code>'X'</code> or <code>'O'</code>) and handle user interactions.</p> <p>Here's the code for the <code>Board</code> component:</p> <pre><code>export default function Board() {\n  return (\n    &lt;div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridTemplateRows: 'repeat(3, 1fr)',\n        width: 'calc(3 * 2.5rem)',\n        height: 'calc(3 * 2.5rem)',\n        border: '1px solid #999',\n      }}\n    &gt;\n      &lt;Square value=\"1\" /&gt;\n      &lt;Square value=\"2\" /&gt;\n      &lt;Square value=\"3\" /&gt;\n      &lt;Square value=\"4\" /&gt;\n      &lt;Square value=\"5\" /&gt;\n      &lt;Square value=\"6\" /&gt;\n      &lt;Square value=\"7\" /&gt;\n      &lt;Square value=\"8\" /&gt;\n      &lt;Square value=\"9\" /&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>This Board component sets up the basic structure for our game board by arranging nine squares in a 3x3 grid. It positions the squares neatly, providing a foundation for adding more features and handling player interactions in the future.</p>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#lifting-state-up","title":"Lifting state up","text":"<p>Each <code>Square</code> component could maintain a part of the game's state. To check for a winner in a tic-tac-toe game, the <code>Board</code> component would need to somehow know the state of each of the 9 <code>Square</code> components.</p> <p>How would you approach that? At first, you might guess that the <code>Board</code> component needs to ask each <code>Square</code> component for that <code>Square</code>'s component state. Although this approach is technically possible in React, we discourage it because the code becomes difficult to understand, susceptible to bugs, and hard to refactor. Instead, the best approach is to store the game's state in the parent <code>Board</code> component instead of in each <code>Square</code> component. The <code>Board</code> component can tell each <code>Square</code> component what to display by passing a prop, like you did when you passed a number to each <code>Square</code> component.</p> <p>[!IMPORTANT] To collect data from multiple children, or to have two or more child components communicate with each other, declare the shared state in their parent component instead. The parent component can pass that state back down to the children via props. This keeps the child components in sync with each other and with their parent.</p> <p>Let's take this opportunity to try it out. Edit the <code>Board</code> component so that it declares a state variable named squares that defaults to an array of 9 nulls corresponding to the 9 squares:</p> <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useGameStore = create(\n  combine({ squares: Array(9).fill(null) }, (set) =&gt; {\n    return {\n      setSquares: (nextSquares) =&gt; {\n        set((state) =&gt; ({\n          squares:\n            typeof nextSquares === 'function'\n              ? nextSquares(state.squares)\n              : nextSquares,\n        }))\n      },\n    }\n  }),\n)\n\nexport default function Board() {\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n\n  return (\n    &lt;div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridTemplateRows: 'repeat(3, 1fr)',\n        width: 'calc(3 * 2.5rem)',\n        height: 'calc(3 * 2.5rem)',\n        border: '1px solid #999',\n      }}\n    &gt;\n      {squares.map((square, squareIndex) =&gt; (\n        &lt;Square key={squareIndex} value={square} /&gt;\n      ))}\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p><code>Array(9).fill(null)</code> creates an array with nine elements and sets each of them to <code>null</code>. The <code>useGameStore</code> declares a <code>squares</code> state that's initially set to that array. Each entry in the array corresponds to the value of a square. When you fill the board in later, the squares array will look like this:</p> <pre><code>const squares = ['O', null, 'X', 'X', 'X', 'O', 'O', null, null]\n</code></pre> <p>Each Square will now receive a <code>value</code> prop that will either be <code>'X'</code>, <code>'O'</code>, or <code>null</code> for empty squares.</p> <p>Next, you need to change what happens when a <code>Square</code> component is clicked. The <code>Board</code> component now maintains which squares are filled. You'll need to create a way for the <code>Square</code> component to update the <code>Board</code>'s component state. Since state is private to a component that defines it, you cannot update the <code>Board</code>'s component state directly from <code>Square</code> component.</p> <p>Instead, you'll pass down a function from the Board component to the <code>Square</code> component, and you'll have <code>Square</code> component call that function when a square is clicked. You'll start with the function that the <code>Square</code> component will call when it is clicked. You'll call that function <code>onSquareClick</code>:</p> <p>Now you'll connect the <code>onSquareClick</code> prop to a function in the <code>Board</code> component that you'll name <code>handleClick</code>. To connect <code>onSquareClick</code> to <code>handleClick</code> you'll pass an inline function to the <code>onSquareClick</code> prop of the first Square component:</p> <pre><code>&lt;Square key={squareIndex} value={square} onSquareClick={() =&gt; handleClick(i)} /&gt;\n</code></pre> <p>Lastly, you will define the <code>handleClick</code> function inside the <code>Board</code> component to update the squares array holding your board's state.</p> <p>The <code>handleClick</code> function should take the index of the square to update and create a copy of the <code>squares</code> array (<code>nextSquares</code>). Then, <code>handleClick</code> updates the <code>nextSquares</code> array by adding <code>X</code> to the square at the specified index (<code>i</code>) if is not already filled.</p> <pre><code>export default function Board() {\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n\n  function handleClick(i) {\n    if (squares[i]) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = 'X'\n    setSquares(nextSquares)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridTemplateRows: 'repeat(3, 1fr)',\n        width: 'calc(3 * 2.5rem)',\n        height: 'calc(3 * 2.5rem)',\n        border: '1px solid #999',\n      }}\n    &gt;\n      {squares.map((square, squareIndex) =&gt; (\n        &lt;Square\n          key={squareIndex}\n          value={square}\n          onSquareClick={() =&gt; handleClick(squareIndex)}\n        /&gt;\n      ))}\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>[!IMPORTANT] Note how in <code>handleClick</code> function, you call <code>.slice()</code> to create a copy of the squares array instead of modifying the existing array.</p>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#taking-turns","title":"Taking turns","text":"<p>It's now time to fix a major defect in this tic-tac-toe game: the <code>'O'</code>s cannot be used on the board.</p> <p>You'll set the first move to be <code>'X'</code> by default. Let's keep track of this by adding another piece of state to the <code>useGameStore</code> hook:</p> <pre><code>const useGameStore = create(\n  combine({ squares: Array(9).fill(null), xIsNext: true }, (set) =&gt; {\n    return {\n      setSquares: (nextSquares) =&gt; {\n        set((state) =&gt; ({\n          squares:\n            typeof nextSquares === 'function'\n              ? nextSquares(state.squares)\n              : nextSquares,\n        }))\n      },\n      setXIsNext: (nextXIsNext) =&gt; {\n        set((state) =&gt; ({\n          xIsNext:\n            typeof nextXIsNext === 'function'\n              ? nextXIsNext(state.xIsNext)\n              : nextXIsNext,\n        }))\n      },\n    }\n  }),\n)\n</code></pre> <p>Each time a player moves, <code>xIsNext</code> (a boolean) will be flipped to determine which player goes next and the game's state will be saved. You'll update the Board's <code>handleClick</code> function to flip the value of <code>xIsNext</code>:</p> <pre><code>export default function Board() {\n  const [xIsNext, setXIsNext] = useGameStore((state) =&gt; [\n    state.xIsNext,\n    state.setXIsNext,\n  ])\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n  const player = xIsNext ? 'X' : 'O'\n\n  function handleClick(i) {\n    if (squares[i]) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    setSquares(nextSquares)\n    setXIsNext(!xIsNext)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridTemplateRows: 'repeat(3, 1fr)',\n        width: 'calc(3 * 2.5rem)',\n        height: 'calc(3 * 2.5rem)',\n        border: '1px solid #999',\n      }}\n    &gt;\n      {squares.map((square, squareIndex) =&gt; (\n        &lt;Square\n          key={squareIndex}\n          value={square}\n          onSquareClick={() =&gt; handleClick(squareIndex)}\n        /&gt;\n      ))}\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#declaring-a-winner-or-draw","title":"Declaring a winner or draw","text":"<p>Now that the players can take turns, you'll want to show when the game is won or drawn and there are no more turns to make. To do this you'll add three helper functions. The first helper function called <code>calculateWinner</code> that takes an array of 9 squares, checks for a winner and returns <code>'X'</code>, <code>'O'</code>, or <code>null</code> as appropriate. The second helper function called <code>calculateTurns</code> that takes the same array, checks for remaining turns by filtering out only <code>null</code> items, and returns the count of them. The last helper called <code>calculateStatus</code> that takes the remaining turns, the winner, and the current player (<code>'X' or 'O'</code>):</p> <pre><code>function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i &lt; lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n\n  return null\n}\n\nfunction calculateTurns(squares) {\n  return squares.filter((square) =&gt; !square).length\n}\n\nfunction calculateStatus(winner, turns, player) {\n  if (!winner &amp;&amp; !turns) return 'Draw'\n  if (winner) return `Winner ${winner}`\n  return `Next player: ${player}`\n}\n</code></pre> <p>You will use the result of <code>calculateWinner(squares)</code> in the Board component's <code>handleClick</code> function to check if a player has won. You can perform this check at the same time you check if a user has clicked a square that already has a <code>'X'</code> or and <code>'O'</code>. We'd like to return early in both cases:</p> <pre><code>function handleClick(i) {\n  if (squares[i] || winner) return\n  const nextSquares = squares.slice()\n  nextSquares[i] = player'\n  setSquares(nextSquares)\n  setXIsNext(!xIsNext)\n}\n</code></pre> <p>To let the players know when the game is over, you can display text such as <code>'Winner: X'</code> or <code>'Winner: O'</code>. To do that you'll add a <code>status</code> section to the <code>Board</code> component. The status will display the winner or draw if the game is over and if the game is ongoing you'll display which player's turn is next:</p> <pre><code>export default function Board() {\n  const [xIsNext, setXIsNext] = useGameStore((state) =&gt; [\n    state.xIsNext,\n    state.setXIsNext,\n  ])\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    setSquares(nextSquares)\n    setXIsNext(!xIsNext)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((square, squareIndex) =&gt; (\n          &lt;Square\n            key={squareIndex}\n            value={square}\n            onSquareClick={() =&gt; handleClick(squareIndex)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre> <p>Congratulations! You now have a working tic-tac-toe game. And you've just learned the basics of React and Zustand too. So you are the real winner here. Here is what the code should look like:</p> <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useGameStore = create(\n  combine({ squares: Array(9).fill(null), xIsNext: true }, (set) =&gt; {\n    return {\n      setSquares: (nextSquares) =&gt; {\n        set((state) =&gt; ({\n          squares:\n            typeof nextSquares === 'function'\n              ? nextSquares(state.squares)\n              : nextSquares,\n        }))\n      },\n      setXIsNext: (nextXIsNext) =&gt; {\n        set((state) =&gt; ({\n          xIsNext:\n            typeof nextXIsNext === 'function'\n              ? nextXIsNext(state.xIsNext)\n              : nextXIsNext,\n        }))\n      },\n    }\n  }),\n)\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    &lt;button\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 0,\n        backgroundColor: '#fff',\n        border: '1px solid #999',\n        outline: 0,\n        borderRadius: 0,\n        fontSize: '1rem',\n        fontWeight: 'bold',\n      }}\n      onClick={onSquareClick}\n    &gt;\n      {value}\n    &lt;/button&gt;\n  )\n}\n\nexport default function Board() {\n  const [xIsNext, setXIsNext] = useGameStore((state) =&gt; [\n    state.xIsNext,\n    state.setXIsNext,\n  ])\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    setSquares(nextSquares)\n    setXIsNext(!xIsNext)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((square, squareIndex) =&gt; (\n          &lt;Square\n            key={squareIndex}\n            value={square}\n            onSquareClick={() =&gt; handleClick(squareIndex)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i &lt; lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n\n  return null\n}\n\nfunction calculateTurns(squares) {\n  return squares.filter((square) =&gt; !square).length\n}\n\nfunction calculateStatus(winner, turns, player) {\n  if (!winner &amp;&amp; !turns) return 'Draw'\n  if (winner) return `Winner ${winner}`\n  return `Next player: ${player}`\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#adding-time-travel","title":"Adding time travel","text":"<p>As a final exercise, let's make it possible to \u201cgo back in time\u201d and revisit previous moves in the game.</p> <p>If you had directly modified the squares array, implementing this time-travel feature would be very difficult. However, since you used <code>slice()</code> to create a new copy of the squares array after every move, treating it as immutable, you can store every past version of the squares array and navigate between them.</p> <p>You'll keep track of these past squares arrays in a new state variable called <code>history</code>. This <code>history</code> array will store all board states, from the first move to the latest one, and will look something like this:</p> <pre><code>const history = [\n  // First move\n  [null, null, null, null, null, null, null, null, null],\n  // Second move\n  ['X', null, null, null, null, null, null, null, null],\n  // Third move\n  ['X', 'O', null, null, null, null, null, null, null],\n  // and so on...\n]\n</code></pre> <p>This approach allows you to easily navigate between different game states and implement the time-travel feature.</p>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#lifting-state-up-again","title":"Lifting state up, again","text":"<p>Next, you will create a new top-level component called <code>Game</code> to display a list of past moves. This is where you will store the <code>history</code> state that contains the entire game history.</p> <p>By placing the <code>history</code> state in the <code>Game</code> component, you can remove the <code>squares</code> state from the <code>Board</code> component. You will now lift the state up from the <code>Board</code> component to the top-level <code>Game</code> component. This change allows the <code>Game</code> component to have full control over the <code>Board</code>'s component data and instruct the <code>Board</code> component to render previous turns from the <code>history</code>.</p> <p>First, add a <code>Game</code> component with <code>export default</code> and remove it from <code>Board</code> component. Here is what the code should look like:</p> <pre><code>function Board() {\n  const [xIsNext, setXIsNext] = useGameStore((state) =&gt; [\n    state.xIsNext,\n    state.setXIsNext,\n  ])\n  const [squares, setSquares] = useGameStore((state) =&gt; [\n    state.squares,\n    state.setSquares,\n  ])\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    setSquares(nextSquares)\n    setXIsNext(!xIsNext)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((square, squareIndex) =&gt; (\n          &lt;Square\n            key={squareIndex}\n            value={square}\n            onSquareClick={() =&gt; handleClick(squareIndex)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n\nexport default function Game() {\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;{/*TODO*/}&lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>Add some state to the <code>useGameStore</code> hook to track the history of moves:</p> <pre><code>const useGameStore = create(\n  combine({ history: [Array(9).fill(null)], xIsNext: true }, (set) =&gt; {\n    return {\n      setHistory: (nextHistory) =&gt; {\n        set((state) =&gt; ({\n          history:\n            typeof nextHistory === 'function'\n              ? nextHistory(state.history)\n              : nextHistory,\n        }))\n      },\n      setXIsNext: (nextXIsNext) =&gt; {\n        set((state) =&gt; ({\n          xIsNext:\n            typeof nextXIsNext === 'function'\n              ? nextXIsNext(state.xIsNext)\n              : nextXIsNext,\n        }))\n      },\n    }\n  }),\n)\n</code></pre> <p>Notice how <code>[Array(9).fill(null)]</code> creates an array with a single item, which is itself an array of 9 null values.</p> <p>To render the squares for the current move, you'll need to read the most recent squares array from the <code>history</code> state. You don't need an extra state for this because you already have enough information to calculate it during rendering:</p> <pre><code>export default function Game() {\n  const { history, setHistory, xIsNext, setXIsNext } = useGameStore()\n  const currentSquares = history[history.length - 1]\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;{/*TODO*/}&lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>Next, create a <code>handlePlay</code> function inside the <code>Game</code> component that will be called by the <code>Board</code> component to update the game. Pass <code>xIsNext</code>, <code>currentSquares</code> and <code>handlePlay</code> as props to the <code>Board</code> component:</p> <pre><code>export default function Game() {\n  const { history, setHistory, xIsNext, setXIsNext } = useGameStore()\n  const currentSquares = history[history.length - 1]\n\n  function handlePlay(nextSquares) {\n    // TODO\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;{/*TODO*/}&lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>Let's make the <code>Board</code> component fully controlled by the props it receives. To do this, we'll modify the <code>Board</code> component to accept three props: <code>xIsNext</code>, <code>squares</code>, and a new <code>onPlay</code> function that the <code>Board</code> component can call with the updated squares array when a player makes a move.</p> <pre><code>function Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    setSquares(nextSquares)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((square, squareIndex) =&gt; (\n          &lt;Square\n            key={squareIndex}\n            value={square}\n            onSquareClick={() =&gt; handleClick(squareIndex)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre> <p>The <code>Board</code> component is now fully controlled by the props passed to it by the <code>Game</code> component. To get the game working again, you need to implement the <code>handlePlay</code> function in the <code>Game</code> component.</p> <p>What should <code>handlePlay</code> do when called? Previously, the <code>Board</code> component called <code>setSquares</code> with an updated array; now it passes the updated squares array to <code>onPlay</code>.</p> <p>The <code>handlePlay</code> function needs to update the <code>Game</code> component's state to trigger a re-render. Instead of using <code>setSquares</code>, you'll update the <code>history</code> state variable by appending the updated squares array as a new <code>history</code> entry. You also need to toggle <code>xIsNext</code>, just as the <code>Board</code> component used to do.</p> <pre><code>function handlePlay(nextSquares) {\n  setHistory(history.concat([nextSquares]))\n  setXIsNext(!xIsNext)\n}\n</code></pre> <p>At this point, you've moved the state to live in the <code>Game</code> component, and the UI should be fully working, just as it was before the refactor. Here is what the code should look like at this point:</p> <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useGameStore = create(\n  combine({ history: [Array(9).fill(null)], xIsNext: true }, (set) =&gt; {\n    return {\n      setHistory: (nextHistory) =&gt; {\n        set((state) =&gt; ({\n          history:\n            typeof nextHistory === 'function'\n              ? nextHistory(state.history)\n              : nextHistory,\n        }))\n      },\n      setXIsNext: (nextXIsNext) =&gt; {\n        set((state) =&gt; ({\n          xIsNext:\n            typeof nextXIsNext === 'function'\n              ? nextXIsNext(state.xIsNext)\n              : nextXIsNext,\n        }))\n      },\n    }\n  }),\n)\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    &lt;button\n      style={{\n        display: 'inline-flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 0,\n        backgroundColor: '#fff',\n        border: '1px solid #999',\n        outline: 0,\n        borderRadius: 0,\n        fontSize: '1rem',\n        fontWeight: 'bold',\n      }}\n      onClick={onSquareClick}\n    &gt;\n      {value}\n    &lt;/button&gt;\n  )\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares)\n  const turns = calculateTurns(squares)\n  const player = xIsNext ? 'X' : 'O'\n  const status = calculateStatus(winner, turns, player)\n\n  function handleClick(i) {\n    if (squares[i] || winner) return\n    const nextSquares = squares.slice()\n    nextSquares[i] = player\n    onPlay(nextSquares)\n  }\n\n  return (\n    &lt;&gt;\n      &lt;div style={{ marginBottom: '0.5rem' }}&gt;{status}&lt;/div&gt;\n      &lt;div\n        style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 1fr)',\n          gridTemplateRows: 'repeat(3, 1fr)',\n          width: 'calc(3 * 2.5rem)',\n          height: 'calc(3 * 2.5rem)',\n          border: '1px solid #999',\n        }}\n      &gt;\n        {squares.map((square, squareIndex) =&gt; (\n          &lt;Square\n            key={squareIndex}\n            value={square}\n            onSquareClick={() =&gt; handleClick(squareIndex)}\n          /&gt;\n        ))}\n      &lt;/div&gt;\n    &lt;/&gt;\n  )\n}\n\nexport default function Game() {\n  const { history, setHistory, xIsNext, setXIsNext } = useGameStore()\n  const currentSquares = history[history.length - 1]\n\n  function handlePlay(nextSquares) {\n    setHistory(history.concat([nextSquares]))\n    setXIsNext(!xIsNext)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;{/*TODO*/}&lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i &lt; lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] &amp;&amp; squares[a] === squares[b] &amp;&amp; squares[a] === squares[c]) {\n      return squares[a]\n    }\n  }\n\n  return null\n}\n\nfunction calculateTurns(squares) {\n  return squares.filter((square) =&gt; !square).length\n}\n\nfunction calculateStatus(winner, turns, player) {\n  if (!winner &amp;&amp; !turns) return 'Draw'\n  if (winner) return `Winner ${winner}`\n  return `Next player: ${player}`\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#showing-the-past-moves","title":"Showing the past moves","text":"<p>Since you are recording the tic-tac-toe game's history, you can now display a list of past moves to the player.</p> <p>You already have an array of <code>history</code> moves in store, so now you need to transform it to an array of React elements. In JavaScript, to transform one array into another, you can use the Array <code>.map()</code> method:</p> <p>You'll use <code>map</code> to transform your <code>history</code> of moves into React elements representing buttons on the screen, and display a list of buttons to jump to past moves. Let's <code>map</code> over the <code>history</code> in the <code>Game</code> component:</p> <pre><code>export default function Game() {\n  const { history, setHistory, xIsNext, setXIsNext } = useGameStore()\n  const currentSquares = history[history.length - 1]\n\n  function handlePlay(nextSquares) {\n    setHistory(history.concat([nextSquares]))\n    setXIsNext(!xIsNext)\n  }\n\n  function jumpTo(nextMove) {\n    // TODO\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;\n          {history.map((_, historyIndex) =&gt; {\n            const description =\n              historyIndex &gt; 0\n                ? `Go to move #${historyIndex}`\n                : 'Go to game start'\n\n            return (\n              &lt;li key={historyIndex}&gt;\n                &lt;button onClick={() =&gt; jumpTo(historyIndex)}&gt;\n                  {description}\n                &lt;/button&gt;\n              &lt;/li&gt;\n            )\n          })}\n        &lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>Before you can implement the <code>jumpTo</code> function, you need the <code>Game</code> component to keep track of which step the user is currently viewing. To do this, define a new state variable called <code>currentMove</code>, which will start at <code>0</code>:</p> <pre><code>const useGameStore = create(\n  combine(\n    { history: [Array(9).fill(null)], currentMove: 0, xIsNext: true },\n    (set) =&gt; {\n      return {\n        setHistory: (nextHistory) =&gt; {\n          set((state) =&gt; ({\n            history:\n              typeof nextHistory === 'function'\n                ? nextHistory(state.history)\n                : nextHistory,\n          }))\n        },\n        setCurrentMove: (nextCurrentMove) =&gt; {\n          set((state) =&gt; ({\n            currentMove:\n              typeof nextCurrentMove === 'function'\n                ? nextCurrentMove(state.currentMove)\n                : nextCurrentMove,\n          }))\n        },\n        setXIsNext: (nextXIsNext) =&gt; {\n          set((state) =&gt; ({\n            xIsNext:\n              typeof nextXIsNext === 'function'\n                ? nextXIsNext(state.xIsNext)\n                : nextXIsNext,\n          }))\n        },\n      }\n    },\n  ),\n)\n</code></pre> <p>Next, update the <code>jumpTo</code> function inside <code>Game</code> component to update that <code>currentMove</code>. You\u2019ll also set <code>xIsNext</code> to <code>true</code> if the number that you\u2019re changing <code>currentMove</code> to is even.</p> <pre><code>function jumpTo(nextMove) {\n  setCurrentMove(nextMove)\n  setXIsNext(currentMove % 2 === 0)\n}\n</code></pre> <p>You will now make two changes to the <code>handlePlay</code> function in the <code>Game</code> component, which is called when you click on a square.</p> <ul> <li>If you \"go back in time\" and then make a new move from that point, you only want to keep the   history up to that point. Instead of adding <code>nextSquares</code> after all items in the history (using   the Array <code>.concat()</code> method), you'll add it after all items in   <code>history.slice(0, currentMove + 1)</code> to keep only that portion of the old history.</li> <li>Each time a move is made, you need to update <code>currentMove</code> to point to the latest history entry.</li> </ul> <pre><code>function handlePlay(nextSquares) {\n  const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares])\n  setHistory(nextHistory)\n  setCurrentMove(nextHistory.length - 1)\n  setXIsNext(!xIsNext)\n}\n</code></pre> <p>Finally, you will modify the <code>Game</code> component to render the currently selected move, instead of always rendering the final move:</p> <pre><code>export default function Game() {\n  const {\n    history,\n    setHistory,\n    currentMove,\n    setCurrentMove,\n    xIsNext,\n    setXIsNext,\n  } = useGameStore()\n  const currentSquares = history[currentMove]\n\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares])\n    setHistory(nextHistory)\n    setCurrentMove(nextHistory.length - 1)\n    setXIsNext(!xIsNext)\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove)\n    setXIsNext(currentMove % 2 === 0)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;\n          {history.map((_, historyIndex) =&gt; {\n            const description =\n              historyIndex &gt; 0\n                ? `Go to move #${historyIndex}`\n                : 'Go to game start'\n\n            return (\n              &lt;li key={historyIndex}&gt;\n                &lt;button onClick={() =&gt; jumpTo(historyIndex)}&gt;\n                  {description}\n                &lt;/button&gt;\n              &lt;/li&gt;\n            )\n          })}\n        &lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#final-cleanup","title":"Final cleanup","text":"<p>If you look closely at the code, you'll see that <code>xIsNext</code> is <code>true</code> when <code>currentMove</code> is even and <code>false</code> when <code>currentMove</code> is odd. This means that if you know the value of <code>currentMove</code>, you can always determine what <code>xIsNext</code> should be.</p> <p>There's no need to store <code>xIsNext</code> separately in the state. It\u2019s better to avoid redundant state because it can reduce bugs and make your code easier to understand. Instead, you can calculate <code>xIsNext</code> based on <code>currentMove</code>:</p> <pre><code>export default function Game() {\n  const { history, setHistory, currentMove, setCurrentMove } = useGameStore()\n  const xIsNext = currentMove % 2 === 0\n  const currentSquares = history[currentMove]\n\n  function handlePlay(nextSquares) {\n    const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares])\n    setHistory(nextHistory)\n    setCurrentMove(nextHistory.length - 1)\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove)\n  }\n\n  return (\n    &lt;div\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        fontFamily: 'monospace',\n      }}\n    &gt;\n      &lt;div&gt;\n        &lt;Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} /&gt;\n      &lt;/div&gt;\n      &lt;div style={{ marginLeft: '1rem' }}&gt;\n        &lt;ol&gt;\n          {history.map((_, historyIndex) =&gt; {\n            const description =\n              historyIndex &gt; 0\n                ? `Go to move #${historyIndex}`\n                : 'Go to game start'\n\n            return (\n              &lt;li key={historyIndex}&gt;\n                &lt;button onClick={() =&gt; jumpTo(historyIndex)}&gt;\n                  {description}\n                &lt;/button&gt;\n              &lt;/li&gt;\n            )\n          })}\n        &lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>You no longer need the <code>xIsNext</code> state declaration or the calls to <code>setXIsNext</code>. Now, there\u2019s no chance for <code>xIsNext</code> to get out of sync with <code>currentMove</code>, even if you make a mistake while coding the components.</p>"},{"location":"programming/javascript/zustand/guides/tutorial-tic-tac-toe/#wrapping-up","title":"Wrapping up","text":"<p>Congratulations! You\u2019ve created a tic-tac-toe game that:</p> <ul> <li>Lets you play tic-tac-toe,</li> <li>Indicates when a player has won the game or when is drawn,</li> <li>Stores a game\u2019s history as a game progresses,</li> <li>Allows players to review a game\u2019s history and see previous versions of a game\u2019s board.</li> </ul> <p>Nice work! We hope you now feel like you have a decent grasp of how React and Zustand works.</p>"},{"location":"programming/javascript/zustand/guides/typescript/","title":"TypeScript Guide","text":""},{"location":"programming/javascript/zustand/guides/typescript/#basic-usage","title":"Basic usage","text":"<p>The difference when using TypeScript is that instead of writing <code>create(...)</code>, you have to write <code>create&lt;T&gt;()(...)</code> (notice the extra parentheses <code>()</code> too along with the type parameter) where <code>T</code> is the type of the state to annotate it. For example:</p> <pre><code>import { create } from 'zustand'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n</code></pre> Why can't we simply infer the type from the initial state?   **TLDR**: Because state generic `T` is invariant.  Consider this minimal version `create`:  <pre><code>declare const create: &lt;T&gt;(f: (get: () =&gt; T) =&gt; T) =&gt; T\n\nconst x = create((get) =&gt; ({\n  foo: 0,\n  bar: () =&gt; get(),\n}))\n// `x` is inferred as `unknown` instead of\n// interface X {\n//   foo: number,\n//   bar: () =&gt; X\n// }\n</code></pre>  Here, if you look at the type of `f` in `create`, i.e. `(get: () =&gt; T) =&gt; T`, it \"gives\" `T` via return (making it covariant), but it also \"takes\" `T` via `get` (making it contravariant). \"So where does `T` come from?\" TypeScript wonders. It's like that chicken or egg problem. At the end TypeScript, gives up and infers `T` as `unknown`.  So, as long as the generic to be inferred is invariant (i.e. both covariant and contravariant), TypeScript will be unable to infer it. Another simple example would be this:  <pre><code>const createFoo = {} as &lt;T&gt;(f: (t: T) =&gt; T) =&gt; T\nconst x = createFoo((_) =&gt; 'hello')\n</code></pre>  Here again, `x` is `unknown` instead of `string`.     More about the inference (just for the people curious and interested in TypeScript)  In some sense this inference failure is not a problem because a value of type `(f: (t: T) =&gt; T) =&gt; T` cannot be written. That is to say you can't write the real runtime implementation of `createFoo`. Let's try it:  <pre><code>const createFoo = (f) =&gt; f(/* ? */)\n</code></pre>  `createFoo` needs to return the return value of `f`. And to do that we first have to call `f`. And to call it we have to pass a value of type `T`. And to pass a value of type `T` we first have to produce it. But how can we produce a value of type `T` when we don't even know what `T` is? The only way to produce a value of type `T` is to call `f`, but then to call `f` itself we need a value of type `T`. So you see it's impossible to actually write `createFoo`.  So what we're saying is, the inference failure in case of `createFoo` is not really a problem because it's impossible to implement `createFoo`. But what about the inference failure in case of `create`? That also is not really a problem because it's impossible to implement `create` too. Wait a minute, if it's impossible to implement `create` then how does Zustand implement it? The answer is, it doesn't.  Zustand lies that it implemented `create`'s type, it implemented only the most part of it. Here's a simple proof by showing unsoundness. Consider the following code:  <pre><code>import { create } from 'zustand'\n\nconst useBoundStore = create&lt;{ foo: number }&gt;()((_, get) =&gt; ({\n  foo: get().foo,\n}))\n</code></pre>  This code compiles. But if we run it, we'll get an exception: \"Uncaught TypeError: Cannot read properties of undefined (reading 'foo')\". This is because `get` would return `undefined` before the initial state is created (hence you shouldn't call `get` when creating the initial state). The types promise that `get` will never return `undefined` but it does initially, which means Zustand failed to implement it.  And of course Zustand failed because it's impossible to implement `create` the way types promise (in the same way it's impossible to implement `createFoo`). In other words we don't have a type to express the actual `create` we have implemented. We can't type `get` as `() =&gt; T | undefined` because it would cause inconvenience and it still won't be correct as `get` is indeed `() =&gt; T` eventually, just if called synchronously it would be `() =&gt; undefined`. What we need is some kind of TypeScript feature that allows us to type `get` as `(() =&gt; T) &amp; WhenSync&lt;() =&gt; undefined&gt;`, which of course is extremely far-fetched.  So we have two problems: lack of inference and unsoundness. Lack of inference can be solved if TypeScript can improve its inference for invariants. And unsoundness can be solved if TypeScript introduces something like `WhenSync`. To work around lack of inference we manually annotate the state type. And we can't work around unsoundness, but it's not a big deal because it's not much, calling `get` synchronously anyway doesn't make sense.   Why the currying `()(...)`?   **TLDR**: It is a workaround for [microsoft/TypeScript#10571](https://github.com/microsoft/TypeScript/issues/10571).  Imagine you have a scenario like this:  <pre><code>declare const withError: &lt;T, E&gt;(\n  p: Promise&lt;T&gt;,\n) =&gt; Promise&lt;[error: undefined, value: T] | [error: E, value: undefined]&gt;\ndeclare const doSomething: () =&gt; Promise&lt;string&gt;\n\nconst main = async () =&gt; {\n  let [error, value] = await withError(doSomething())\n}\n</code></pre>  Here, `T` is inferred to be a `string` and `E` is inferred to be `unknown`. You might want to annotate `E` as `Foo`, because you are certain of the shape of error `doSomething()` would throw. However, you can't do that. You can either pass all generics or none. Along with annotating `E` as `Foo`, you will also have to annotate `T` as `string` even though it gets inferred anyway. The solution is to make a curried version of `withError` that does nothing at runtime. Its purpose is to just allow you annotate `E`.  <pre><code>declare const withError: {\n  &lt;E&gt;(): &lt;T&gt;(\n    p: Promise&lt;T&gt;,\n  ) =&gt; Promise&lt;[error: undefined, value: T] | [error: E, value: undefined]&gt;\n  &lt;T, E&gt;(\n    p: Promise&lt;T&gt;,\n  ): Promise&lt;[error: undefined, value: T] | [error: E, value: undefined]&gt;\n}\ndeclare const doSomething: () =&gt; Promise&lt;string&gt;\ninterface Foo {\n  bar: string\n}\n\nconst main = async () =&gt; {\n  let [error, value] = await withError&lt;Foo&gt;()(doSomething())\n}\n</code></pre>  This way, `T` gets inferred and you get to annotate `E`. Zustand has the same use case when we want to annotate the state (the first type parameter) but allow other parameters to get inferred.   <p>Alternatively, you can also use <code>combine</code>, which infers the state so that you do not need to type it.</p> <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useBearStore = create(\n  combine({ bears: 0 }, (set) =&gt; ({\n    increase: (by: number) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  })),\n)\n</code></pre> Be a little careful   We achieve the inference by lying a little in the types of `set`, `get`, and `store` that you receive as parameters. The lie is that they're typed as if the state is the first parameter, when in fact the state is the shallow-merge (`{ ...a, ...b }`) of both first parameter and the second parameter's return. For example, `get` from the second parameter has type `() =&gt; { bears: number }` and that is a lie as it should be `() =&gt; { bears: number, increase: (by: number) =&gt; void }`. And `useBearStore` still has the correct type; for example, `useBearStore.getState` is typed as `() =&gt; { bears: number, increase: (by: number) =&gt; void }`.  It isn't really a lie because `{ bears: number }` is still a subtype of `{ bears: number, increase: (by: number) =&gt; void }`. Therefore, there will be no problem in most cases. You should just be careful while using replace. For example, `set({ bears: 0 }, true)` would compile but will be unsound as it will delete the `increase` function. Another instance where you should be careful is if you use `Object.keys`. `Object.keys(get())` will return `[\"bears\", \"increase\"]` and not `[\"bears\"]`. The return type of `get` can make you fall for these mistakes.  `combine` trades off a little type-safety for the convenience of not having to write a type for state. Hence, you should use `combine` accordingly. It is fine in most cases and you can use it conveniently.   <p>Note that we don't use the curried version when using <code>combine</code> because <code>combine</code> \"creates\" the state. When using a middleware that creates the state, it isn't necessary to use the curried version because the state now can be inferred. Another middleware that creates state is <code>redux</code>. So when using <code>combine</code>, <code>redux</code>, or any other custom middleware that creates the state, we don't recommend using the curried version.</p>"},{"location":"programming/javascript/zustand/guides/typescript/#using-middlewares","title":"Using middlewares","text":"<p>You do not have to do anything special to use middlewares in TypeScript.</p> <pre><code>import { create } from 'zustand'\nimport { devtools, persist } from 'zustand/middleware'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()(\n  devtools(\n    persist(\n      (set) =&gt; ({\n        bears: 0,\n        increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n      }),\n      { name: 'bearStore' },\n    ),\n  ),\n)\n</code></pre> <p>Just make sure you are using them immediately inside <code>create</code> so as to make the contextual inference work. Doing something even remotely fancy like the following <code>myMiddlewares</code> would require more advanced types.</p> <pre><code>import { create } from 'zustand'\nimport { devtools, persist } from 'zustand/middleware'\n\nconst myMiddlewares = (f) =&gt; devtools(persist(f, { name: 'bearStore' }))\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()(\n  myMiddlewares((set) =&gt; ({\n    bears: 0,\n    increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  })),\n)\n</code></pre> <p>Also, we recommend using <code>devtools</code> middleware as last as possible. For example, when you use it with <code>immer</code> as a middleware, it should be <code>devtools(immer(...))</code> and not <code>immer(devtools(...))</code>. This is because<code>devtools</code> mutates the <code>setState</code> and adds a type parameter on it, which could get lost if other middlewares (like <code>immer</code>) also mutate <code>setState</code> before <code>devtools</code>. Hence using <code>devtools</code> at the end makes sure that no middlewares mutate <code>setState</code> before it.</p>"},{"location":"programming/javascript/zustand/guides/typescript/#authoring-middlewares-and-advanced-usage","title":"Authoring middlewares and advanced usage","text":"<p>Imagine you had to write this hypothetical middleware.</p> <pre><code>import { create } from 'zustand'\n\nconst foo = (f, bar) =&gt; (set, get, store) =&gt; {\n  store.foo = bar\n  return f(set, get, store)\n}\n\nconst useBearStore = create(foo(() =&gt; ({ bears: 0 }), 'hello'))\nconsole.log(useBearStore.foo.toUpperCase())\n</code></pre> <p>Zustand middlewares can mutate the store. But how could we possibly encode the mutation on the type-level? That is to say how could we type <code>foo</code> so that this code compiles?</p> <p>For a usual statically typed language, this is impossible. But thanks to TypeScript, Zustand has something called a \"higher-kinded mutator\" that makes this possible. If you are dealing with complex type problems, like typing a middleware or using the <code>StateCreator</code> type, you will have to understand this implementation detail. For this, you can check out #710.</p> <p>If you are eager to know what the answer is to this particular problem then you can see it here.</p>"},{"location":"programming/javascript/zustand/guides/typescript/#handling-dynamic-replace-flag","title":"Handling Dynamic <code>replace</code> Flag","text":"<p>If the value of the <code>replace</code> flag is not known at compile time and is determined dynamically, you might face issues. To handle this, you can use a workaround by annotating the <code>replace</code> parameter with the parameters of the <code>setState</code> function:</p> <pre><code>const replaceFlag = Math.random() &gt; 0.5\nconst args = [{ bears: 5 }, replaceFlag] as Parameters&lt;\n  typeof useBearStore.setState\n&gt;\nstore.setState(...args)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/typescript/#example-with-as-parameters-workaround","title":"Example with <code>as Parameters</code> Workaround","text":"<pre><code>import { create } from 'zustand'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n\nconst replaceFlag = Math.random() &gt; 0.5\nconst args = [{ bears: 5 }, replaceFlag] as Parameters&lt;\n  typeof useBearStore.setState\n&gt;\nuseBearStore.setState(...args) // Using the workaround\n</code></pre> <p>By following this approach, you can ensure that your code handles dynamic <code>replace</code> flags without encountering type issues.</p>"},{"location":"programming/javascript/zustand/guides/typescript/#common-recipes","title":"Common recipes","text":""},{"location":"programming/javascript/zustand/guides/typescript/#middleware-that-doesnt-change-the-store-type","title":"Middleware that doesn't change the store type","text":"<pre><code>import { create, StateCreator, StoreMutatorIdentifier } from 'zustand'\n\ntype Logger = &lt;\n  T,\n  Mps extends [StoreMutatorIdentifier, unknown][] = [],\n  Mcs extends [StoreMutatorIdentifier, unknown][] = [],\n&gt;(\n  f: StateCreator&lt;T, Mps, Mcs&gt;,\n  name?: string,\n) =&gt; StateCreator&lt;T, Mps, Mcs&gt;\n\ntype LoggerImpl = &lt;T&gt;(\n  f: StateCreator&lt;T, [], []&gt;,\n  name?: string,\n) =&gt; StateCreator&lt;T, [], []&gt;\n\nconst loggerImpl: LoggerImpl = (f, name) =&gt; (set, get, store) =&gt; {\n  const loggedSet: typeof set = (...a) =&gt; {\n    set(...(a as Parameters&lt;typeof set&gt;))\n    console.log(...(name ? [`${name}:`] : []), get())\n  }\n  const setState = store.setState\n  store.setState = (...a) =&gt; {\n    setState(...(a as Parameters&lt;typeof setState&gt;))\n    console.log(...(name ? [`${name}:`] : []), store.getState())\n  }\n\n  return f(loggedSet, get, store)\n}\n\nexport const logger = loggerImpl as unknown as Logger\n\n// ---\n\nconst useBearStore = create&lt;BearState&gt;()(\n  logger(\n    (set) =&gt; ({\n      bears: 0,\n      increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n    }),\n    'bear-store',\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/typescript/#middleware-that-changes-the-store-type","title":"Middleware that changes the store type","text":"<pre><code>import {\n  create,\n  StateCreator,\n  StoreMutatorIdentifier,\n  Mutate,\n  StoreApi,\n} from 'zustand'\n\ntype Foo = &lt;\n  T,\n  A,\n  Mps extends [StoreMutatorIdentifier, unknown][] = [],\n  Mcs extends [StoreMutatorIdentifier, unknown][] = [],\n&gt;(\n  f: StateCreator&lt;T, [...Mps, ['foo', A]], Mcs&gt;,\n  bar: A,\n) =&gt; StateCreator&lt;T, Mps, [['foo', A], ...Mcs]&gt;\n\ndeclare module 'zustand' {\n  interface StoreMutators&lt;S, A&gt; {\n    foo: Write&lt;Cast&lt;S, object&gt;, { foo: A }&gt;\n  }\n}\n\ntype FooImpl = &lt;T, A&gt;(\n  f: StateCreator&lt;T, [], []&gt;,\n  bar: A,\n) =&gt; StateCreator&lt;T, [], []&gt;\n\nconst fooImpl: FooImpl = (f, bar) =&gt; (set, get, _store) =&gt; {\n  type T = ReturnType&lt;typeof f&gt;\n  type A = typeof bar\n\n  const store = _store as Mutate&lt;StoreApi&lt;T&gt;, [['foo', A]]&gt;\n  store.foo = bar\n  return f(set, get, _store)\n}\n\nexport const foo = fooImpl as unknown as Foo\n\ntype Write&lt;T extends object, U extends object&gt; = Omit&lt;T, keyof U&gt; &amp; U\n\ntype Cast&lt;T, U&gt; = T extends U ? T : U\n\n// ---\n\nconst useBearStore = create(foo(() =&gt; ({ bears: 0 }), 'hello'))\nconsole.log(useBearStore.foo.toUpperCase())\n</code></pre>"},{"location":"programming/javascript/zustand/guides/typescript/#create-without-curried-workaround","title":"<code>create</code> without curried workaround","text":"<p>The recommended way to use <code>create</code> is using the curried workaround like so: <code>create&lt;T&gt;()(...)</code>. This is because it enables you to infer the store type. But if for some reason you do not want to use the workaround, you can pass the type parameters like the following. Note that in some cases, this acts as an assertion instead of annotation, so we don't recommend it.</p> <pre><code>import { create } from \"zustand\"\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;\n  BearState,\n  [\n    ['zustand/persist', BearState],\n    ['zustand/devtools', never]\n  ]\n&gt;(devtools(persist((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}), { name: 'bearStore' }))\n</code></pre>"},{"location":"programming/javascript/zustand/guides/typescript/#slices-pattern","title":"Slices pattern","text":"<pre><code>import { create, StateCreator } from 'zustand'\n\ninterface BearSlice {\n  bears: number\n  addBear: () =&gt; void\n  eatFish: () =&gt; void\n}\n\ninterface FishSlice {\n  fishes: number\n  addFish: () =&gt; void\n}\n\ninterface SharedSlice {\n  addBoth: () =&gt; void\n  getBoth: () =&gt; void\n}\n\nconst createBearSlice: StateCreator&lt;\n  BearSlice &amp; FishSlice,\n  [],\n  [],\n  BearSlice\n&gt; = (set) =&gt; ({\n  bears: 0,\n  addBear: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n  eatFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes - 1 })),\n})\n\nconst createFishSlice: StateCreator&lt;\n  BearSlice &amp; FishSlice,\n  [],\n  [],\n  FishSlice\n&gt; = (set) =&gt; ({\n  fishes: 0,\n  addFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes + 1 })),\n})\n\nconst createSharedSlice: StateCreator&lt;\n  BearSlice &amp; FishSlice,\n  [],\n  [],\n  SharedSlice\n&gt; = (set, get) =&gt; ({\n  addBoth: () =&gt; {\n    // you can reuse previous methods\n    get().addBear()\n    get().addFish()\n    // or do them from scratch\n    // set((state) =&gt; ({ bears: state.bears + 1, fishes: state.fishes + 1 })\n  },\n  getBoth: () =&gt; get().bears + get().fishes,\n})\n\nconst useBoundStore = create&lt;BearSlice &amp; FishSlice &amp; SharedSlice&gt;()((...a) =&gt; ({\n  ...createBearSlice(...a),\n  ...createFishSlice(...a),\n  ...createSharedSlice(...a),\n}))\n</code></pre> <p>A detailed explanation on the slices pattern can be found here.</p> <p>If you have some middlewares then replace <code>StateCreator&lt;MyState, [], [], MySlice&gt;</code> with <code>StateCreator&lt;MyState, Mutators, [], MySlice&gt;</code>. For example, if you are using <code>devtools</code> then it will be <code>StateCreator&lt;MyState, [[\"zustand/devtools\", never]], [], MySlice&gt;</code>. See the \"Middlewares and their mutators reference\" section for a list of all mutators.</p>"},{"location":"programming/javascript/zustand/guides/typescript/#bounded-usestore-hook-for-vanilla-stores","title":"Bounded <code>useStore</code> hook for vanilla stores","text":"<pre><code>import { useStore } from 'zustand'\nimport { createStore } from 'zustand/vanilla'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst bearStore = createStore&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n\nfunction useBearStore(): BearState\nfunction useBearStore&lt;T&gt;(selector: (state: BearState) =&gt; T): T\nfunction useBearStore&lt;T&gt;(selector?: (state: BearState) =&gt; T) {\n  return useStore(bearStore, selector!)\n}\n</code></pre> <p>You can also make an abstract <code>createBoundedUseStore</code> function if you need to create bounded <code>useStore</code> hooks often and want to DRY things up...</p> <pre><code>import { useStore, StoreApi } from 'zustand'\nimport { createStore } from 'zustand/vanilla'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst bearStore = createStore&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n\nconst createBoundedUseStore = ((store) =&gt; (selector) =&gt;\n  useStore(store, selector)) as &lt;S extends StoreApi&lt;unknown&gt;&gt;(\n  store: S,\n) =&gt; {\n  (): ExtractState&lt;S&gt;\n  &lt;T&gt;(selector: (state: ExtractState&lt;S&gt;) =&gt; T): T\n}\n\ntype ExtractState&lt;S&gt; = S extends { getState: () =&gt; infer X } ? X : never\n\nconst useBearStore = createBoundedUseStore(bearStore)\n</code></pre>"},{"location":"programming/javascript/zustand/guides/typescript/#middlewares-and-their-mutators-reference","title":"Middlewares and their mutators reference","text":"<ul> <li><code>devtools</code> \u2014 <code>[\"zustand/devtools\", never]</code></li> <li><code>persist</code> \u2014 <code>[\"zustand/persist\", YourPersistedState]</code> <code>YourPersistedState</code> is the type of state you are going to persist, ie the return type of <code>options.partialize</code>, if you're not passing <code>partialize</code> options the <code>YourPersistedState</code> becomes <code>Partial&lt;YourState&gt;</code>. Also sometimes passing actual <code>PersistedState</code> won't work. In those cases, try passing <code>unknown</code>.</li> <li><code>immer</code> \u2014 <code>[\"zustand/immer\", never]</code></li> <li><code>subscribeWithSelector</code> \u2014 <code>[\"zustand/subscribeWithSelector\", never]</code></li> <li><code>redux</code> \u2014 <code>[\"zustand/redux\", YourAction]</code></li> <li><code>combine</code> \u2014 no mutator as <code>combine</code> does not mutate the store</li> </ul>"},{"location":"programming/javascript/zustand/guides/updating-state/","title":"Updating state","text":""},{"location":"programming/javascript/zustand/guides/updating-state/#flat-updates","title":"Flat updates","text":"<p>Updating state with Zustand is simple! Call the provided <code>set</code> function with the new state, and it will be shallowly merged with the existing state in the store. Note See next section for nested state.</p> <pre><code>import { create } from 'zustand'\n\ntype State = {\n  firstName: string\n  lastName: string\n}\n\ntype Action = {\n  updateFirstName: (firstName: State['firstName']) =&gt; void\n  updateLastName: (lastName: State['lastName']) =&gt; void\n}\n\n// Create your store, which includes both state and (optionally) actions\nconst usePersonStore = create&lt;State &amp; Action&gt;((set) =&gt; ({\n  firstName: '',\n  lastName: '',\n  updateFirstName: (firstName) =&gt; set(() =&gt; ({ firstName: firstName })),\n  updateLastName: (lastName) =&gt; set(() =&gt; ({ lastName: lastName })),\n}))\n\n// In consuming app\nfunction App() {\n  // \"select\" the needed state and actions, in this case, the firstName value\n  // and the action updateFirstName\n  const firstName = usePersonStore((state) =&gt; state.firstName)\n  const updateFirstName = usePersonStore((state) =&gt; state.updateFirstName)\n\n  return (\n    &lt;main&gt;\n      &lt;label&gt;\n        First name\n        &lt;input\n          // Update the \"firstName\" state\n          onChange={(e) =&gt; updateFirstName(e.currentTarget.value)}\n          value={firstName}\n        /&gt;\n      &lt;/label&gt;\n\n      &lt;p&gt;\n        Hello, &lt;strong&gt;{firstName}!&lt;/strong&gt;\n      &lt;/p&gt;\n    &lt;/main&gt;\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/guides/updating-state/#deeply-nested-object","title":"Deeply nested object","text":"<p>If you have a deep state object like this:</p> <pre><code>type State = {\n  deep: {\n    nested: {\n      obj: { count: number }\n    }\n  }\n}\n</code></pre> <p>Updating nested state requires some effort to ensure the process is completed immutably.</p>"},{"location":"programming/javascript/zustand/guides/updating-state/#normal-approach","title":"Normal approach","text":"<p>Similar to React or Redux, the normal approach is to copy each level of the state object. This is done with the spread operator <code>...</code>, and by manually merging that in with the new state values. Like so:</p> <pre><code>  normalInc: () =&gt;\n    set((state) =&gt; ({\n      deep: {\n        ...state.deep,\n        nested: {\n          ...state.deep.nested,\n          obj: {\n            ...state.deep.nested.obj,\n            count: state.deep.nested.obj.count + 1\n          }\n        }\n      }\n    })),\n</code></pre> <p>This is very long! Let's explore some alternatives that will make your life easier.</p>"},{"location":"programming/javascript/zustand/guides/updating-state/#with-immer","title":"With Immer","text":"<p>Many people use Immer to update nested values. Immer can be used anytime you need to update nested state such as in React, Redux and of course, Zustand!</p> <p>You can use Immer to shorten your state updates for deeply nested object. Let's take a look at an example:</p> <pre><code>  immerInc: () =&gt;\n    set(produce((state: State) =&gt; { ++state.deep.nested.obj.count })),\n</code></pre> <p>What a reduction! Please take note of the gotchas listed here.</p>"},{"location":"programming/javascript/zustand/guides/updating-state/#with-optics-ts","title":"With optics-ts","text":"<p>There is another option with optics-ts:</p> <pre><code>  opticsInc: () =&gt;\n    set(O.modify(O.optic&lt;State&gt;().path(\"deep.nested.obj.count\"))((c) =&gt; c + 1)),\n</code></pre> <p>Unlike Immer, optics-ts doesn't use proxies or mutation syntax.</p>"},{"location":"programming/javascript/zustand/guides/updating-state/#with-ramda","title":"With Ramda","text":"<p>You can also use Ramda:</p> <pre><code>  ramdaInc: () =&gt;\n    set(R.modifyPath([\"deep\", \"nested\", \"obj\", \"count\"], (c) =&gt; c + 1)),\n</code></pre> <p>Both ramda and optics-ts also work with types.</p>"},{"location":"programming/javascript/zustand/guides/updating-state/#codesandbox-demo","title":"CodeSandbox Demo","text":"<p>https://codesandbox.io/s/zustand-normal-immer-optics-ramda-updating-ynn3o?file=/src/App.tsx</p>"},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/","title":"Auto generating selectors.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":""},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#createselectors","title":"<code>createSelectors</code>","text":"<p><code>createSelectors</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u9009\u62e9\u5668\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u904d\u5386\u200b\u5b58\u50a8\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u6240\u6709\u200b\u5c5e\u6027\u200b\uff0c\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u5c5e\u6027\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u53ef\u4ee5\u200b\u76f4\u63a5\u200b\u8bbf\u95ee\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u5c5e\u6027\u200b\u6216\u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":""},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#react-store","title":"React Store","text":"<pre><code>import { create } from 'zustand';\nimport { createSelectors } from './createSelectors';\n\ninterface BearState {\n  bears: number;\n  increase: (by: number) =&gt; void;\n  increment: () =&gt; void;\n}\n\nconst useBearStoreBase = create&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  increment: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n}));\n\nconst useBearStore = createSelectors(useBearStoreBase);\n\n// \u200b\u4f7f\u7528\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u7684\u200b\u9009\u62e9\u5668\u200b\nconst bears = useBearStore.use.bears();\nconst increment = useBearStore.use.increment();\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#vanilla-store","title":"Vanilla Store","text":"<pre><code>import { createStore } from 'zustand';\nimport { createSelectors } from './createSelectors';\n\ninterface BearState {\n  bears: number;\n  increase: (by: number) =&gt; void;\n  increment: () =&gt; void;\n}\n\nconst store = createStore&lt;BearState&gt;((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  increment: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n}));\n\nconst useBearStore = createSelectors(store);\n\n// \u200b\u4f7f\u7528\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u7684\u200b\u9009\u62e9\u5668\u200b\nconst bears = useBearStore.use.bears();\nconst increment = useBearStore.use.increment();\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff1a<code>createSelectors</code> \u200b\u51fd\u6570\u200b\u4f9d\u8d56\u4e8e\u200b TypeScript \u200b\u7684\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5b58\u50a8\u72b6\u6001\u200b\u7684\u200b\u7c7b\u578b\u5b9a\u4e49\u200b\u6b63\u786e\u200b\u3002</li> <li>\u200b\u6027\u80fd\u200b\uff1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u7684\u200b\u9009\u62e9\u5668\u200b\u5728\u200b\u6bcf\u6b21\u200b\u8c03\u7528\u200b\u65f6\u200b\u90fd\u200b\u4f1a\u200b\u91cd\u65b0\u200b\u8ba1\u7b97\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5728\u200b\u6027\u80fd\u200b\u654f\u611f\u200b\u7684\u200b\u573a\u666f\u200b\u4e2d\u200b\uff0c\u200b\u53ef\u80fd\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u4f18\u5316\u200b\u9009\u62e9\u5668\u200b\u3002</li> <li>\u200b\u517c\u5bb9\u6027\u200b\uff1a<code>createSelectors</code> \u200b\u51fd\u6570\u200b\u9002\u7528\u200b\u4e8e\u200b <code>zustand</code> \u200b\u5e93\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4f60\u200b\u4f7f\u7528\u200b\u7684\u200b\u662f\u200b\u517c\u5bb9\u200b\u7684\u200b\u7248\u672c\u200b\u3002</li> <li>\u200b\u547d\u540d\u200b\u51b2\u7a81\u200b\uff1a\u200b\u81ea\u52a8\u200b\u751f\u6210\u200b\u7684\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u540d\u79f0\u200b\u4e0e\u200b\u5b58\u50a8\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u5c5e\u6027\u200b\u540d\u79f0\u200b\u4e00\u81f4\u200b\uff0c\u200b\u907f\u514d\u200b\u547d\u540d\u200b\u51b2\u7a81\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/auto-generating-selectors.md_summary/#_4","title":"\u53c2\u8003\u200b\u94fe\u63a5","text":"<ul> <li>Code Sandbox \u200b\u793a\u4f8b\u200b</li> <li>auto-zustand-selectors-hook</li> <li>react-hooks-global-state</li> <li>zustood</li> <li>@davstack/store</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/","title":"Connect to state with url hash.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#1-hashstorage","title":"1. <code>hashStorage</code> \u200b\u5bf9\u8c61","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>hashStorage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b <code>StateStorage</code> \u200b\u5b9e\u73b0\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u5728\u200b URL \u200b\u7684\u200b hash \u200b\u90e8\u5206\u200b\u3002\u200b\u5b83\u200b\u63d0\u4f9b\u200b\u4e86\u200b <code>getItem</code>\u3001<code>setItem</code> \u200b\u548c\u200b <code>removeItem</code> \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b URL hash \u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u3001\u200b\u5199\u5165\u200b\u548c\u200b\u5220\u9664\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const hashStorage: StateStorage = {\n  getItem: (key): string =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    const storedValue = searchParams.get(key) ?? ''\n    return JSON.parse(storedValue)\n  },\n  setItem: (key, newValue): void =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    searchParams.set(key, JSON.stringify(newValue))\n    location.hash = searchParams.toString()\n  },\n  removeItem: (key): void =&gt; {\n    const searchParams = new URLSearchParams(location.hash.slice(1))\n    searchParams.delete(key)\n    location.hash = searchParams.toString()\n  },\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>getItem</code> \u200b\u65b9\u6cd5\u200b\u4ece\u200b URL hash \u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u89e3\u6790\u200b\u4e3a\u200b JSON \u200b\u683c\u5f0f\u200b\u3002 - <code>setItem</code> \u200b\u65b9\u6cd5\u200b\u5c06\u200b\u72b6\u6001\u200b\u5199\u5165\u200b URL hash\uff0c\u200b\u5e76\u200b\u66f4\u65b0\u200b\u9875\u9762\u200b\u7684\u200b hash \u200b\u90e8\u5206\u200b\u3002 - <code>removeItem</code> \u200b\u65b9\u6cd5\u200b\u4ece\u200b URL hash \u200b\u4e2d\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u952e\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#2-useboundstore","title":"2. <code>useBoundStore</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useBoundStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b <code>zustand</code> \u200b\u548c\u200b <code>persist</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u521b\u5efa\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316\u5230\u200b URL hash \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      fishes: 0,\n      addAFish: () =&gt; set({ fishes: get().fishes + 1 }),\n    }),\n    {\n      name: 'food-storage',\n      storage: createJSONStorage(() =&gt; hashStorage),\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>name</code> \u200b\u5c5e\u6027\u200b\u7528\u4e8e\u200b\u6307\u5b9a\u200b\u5b58\u50a8\u200b\u7684\u200b\u552f\u4e00\u200b\u6807\u8bc6\u7b26\u200b\u3002 - <code>storage</code> \u200b\u5c5e\u6027\u200b\u6307\u5b9a\u200b\u4e86\u200b\u4f7f\u7528\u200b <code>hashStorage</code> \u200b\u4f5c\u4e3a\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#3-persistentstorage","title":"3. <code>persistentStorage</code> \u200b\u5bf9\u8c61","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>persistentStorage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b <code>StateStorage</code> \u200b\u5b9e\u73b0\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u5728\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u4e2d\u200b\uff0c\u200b\u5e76\u200b\u5728\u200b\u5fc5\u8981\u200b\u65f6\u200b\u56de\u9000\u200b\u5230\u200b <code>localStorage</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const persistentStorage: StateStorage = {\n  getItem: (key): string =&gt; {\n    if (getUrlSearch()) {\n      const searchParams = new URLSearchParams(getUrlSearch())\n      const storedValue = searchParams.get(key)\n      return JSON.parse(storedValue as string)\n    } else {\n      return JSON.parse(localStorage.getItem(key) as string)\n    }\n  },\n  setItem: (key, newValue): void =&gt; {\n    if (getUrlSearch()) {\n      const searchParams = new URLSearchParams(getUrlSearch())\n      searchParams.set(key, JSON.stringify(newValue))\n      window.history.replaceState(null, '', `?${searchParams.toString()}`)\n    }\n    localStorage.setItem(key, JSON.stringify(newValue))\n  },\n  removeItem: (key): void =&gt; {\n    const searchParams = new URLSearchParams(getUrlSearch())\n    searchParams.delete(key)\n    window.location.search = searchParams.toString()\n  },\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>getItem</code> \u200b\u65b9\u6cd5\u200b\u9996\u5148\u200b\u68c0\u67e5\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\uff0c\u200b\u5982\u679c\u200b\u4e0d\u200b\u5b58\u5728\u200b\u5219\u200b\u4ece\u200b <code>localStorage</code> \u200b\u4e2d\u200b\u8bfb\u53d6\u200b\u3002 - <code>setItem</code> \u200b\u65b9\u6cd5\u200b\u9996\u5148\u200b\u5c1d\u8bd5\u200b\u66f4\u65b0\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\uff0c\u200b\u7136\u540e\u200b\u540c\u6b65\u200b\u5230\u200b <code>localStorage</code>\u3002 - <code>removeItem</code> \u200b\u65b9\u6cd5\u200b\u4ece\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u4e2d\u200b\u5220\u9664\u200b\u6307\u5b9a\u200b\u952e\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#4-uselocalandurlstore","title":"4. <code>useLocalAndUrlStore</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useLocalAndUrlStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b <code>zustand</code> \u200b\u548c\u200b <code>persist</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u521b\u5efa\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5b83\u200b\u5c06\u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316\u5230\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u548c\u200b <code>localStorage</code> \u200b\u4e2d\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const useLocalAndUrlStore = create(\n  persist&lt;LocalAndUrlStore&gt;(\n    (set) =&gt; ({\n      typesOfFish: [],\n      addTypeOfFish: (fishType) =&gt;\n        set((state) =&gt; ({ typesOfFish: [...state.typesOfFish, fishType] })),\n      numberOfBears: 0,\n      setNumberOfBears: (numberOfBears) =&gt; set(() =&gt; ({ numberOfBears })),\n    }),\n    storageOptions,\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>storageOptions</code> \u200b\u6307\u5b9a\u200b\u4e86\u200b\u5b58\u50a8\u200b\u7684\u200b\u540d\u79f0\u200b\u548c\u200b\u4f7f\u7528\u200b <code>persistentStorage</code> \u200b\u4f5c\u4e3a\u200b\u6301\u4e45\u200b\u5316\u200b\u5b58\u50a8\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#5-buildurlsuffix","title":"5. <code>buildURLSuffix</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>buildURLSuffix</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u7684\u200b\u540e\u7f00\u200b\uff0c\u200b\u57fa\u4e8e\u200b <code>zustand</code> \u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const buildURLSuffix = (params, version = 0) =&gt; {\n  const searchParams = new URLSearchParams()\n  const zustandStoreParams = {\n    state: {\n      typesOfFish: params.typesOfFish,\n      numberOfBears: params.numberOfBears,\n    },\n    version: version,\n  }\n  searchParams.set('fishAndBearsStore', JSON.stringify(zustandStoreParams))\n  return searchParams.toString()\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>params</code> \u200b\u53c2\u6570\u200b\u5305\u542b\u200b\u9700\u8981\u200b\u8f6c\u6362\u200b\u4e3a\u200b URL \u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u7684\u200b\u72b6\u6001\u200b\u3002 - <code>version</code> \u200b\u53c2\u6570\u200b\u7528\u4e8e\u200b\u6807\u8bc6\u200b\u72b6\u6001\u200b\u7684\u200b\u7248\u672c\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/connect-to-state-with-url-hash.md_summary/#6-buildshareableurl","title":"6. <code>buildShareableUrl</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>buildShareableUrl</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b\u53ef\u200b\u5206\u4eab\u200b\u7684\u200b URL\uff0c\u200b\u5305\u542b\u200b\u5f53\u524d\u200b\u7684\u200b\u72b6\u6001\u200b\u4fe1\u606f\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const buildShareableUrl = (params, version) =&gt; {\n  return `${window.location.origin}?${buildURLSuffix(params, version)}`\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u751f\u6210\u200b\u7684\u200b URL \u200b\u5305\u542b\u200b\u5f53\u524d\u200b\u9875\u9762\u200b\u7684\u200b origin \u200b\u548c\u200b\u901a\u8fc7\u200b <code>buildURLSuffix</code> \u200b\u751f\u6210\u200b\u7684\u200b\u67e5\u8be2\u200b\u53c2\u6570\u200b\u3002 - \u200b\u793a\u4f8b\u200b\u751f\u6210\u200b\u7684\u200b URL \u200b\u53ef\u80fd\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b\uff1a<code>https://localhost/search?fishAndBearsStore={\"state\":{\"typesOfFish\":[\"tilapia\",\"salmon\"],\"numberOfBears\":15},\"version\":0}}</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/event-handler-in-pre-react-18.md_summary/","title":"Event handler in pre react 18.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/event-handler-in-pre-react-18.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>unstable_batchedUpdates</code></p> <p><code>unstable_batchedUpdates</code> \u200b\u662f\u200b React \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b\u591a\u4e2a\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u64cd\u4f5c\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u5728\u200b React 18 \u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0c\u200b\u7531\u4e8e\u200b\u540c\u6b65\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u800c\u200b\u5f15\u53d1\u200b\u7684\u200b\u201c\u200b\u50f5\u5c38\u200b\u5b50\u200b\u8282\u70b9\u200b\u201d\u200b\u95ee\u9898\u200b\uff08zombie-child effect\uff09\u3002\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5728\u200b React \u200b\u4e8b\u4ef6\u200b\u5904\u7406\u7a0b\u5e8f\u200b\u4e4b\u5916\u200b\u8c03\u7528\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u8fd9\u4e9b\u200b\u64cd\u4f5c\u200b\u88ab\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u540c\u6b65\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/event-handler-in-pre-react-18.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { unstable_batchedUpdates } from 'react-dom'; // \u200b\u6216\u8005\u200b 'react-native'\n\nconst useFishStore = create((set) =&gt; ({\n  fishes: 0,\n  increaseFishes: () =&gt; set((prev) =&gt; ({ fishes: prev.fishes + 1 })),\n}));\n\nconst nonReactCallback = () =&gt; {\n  unstable_batchedUpdates(() =&gt; {\n    useFishStore.getState().increaseFishes();\n  });\n};\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/event-handler-in-pre-react-18.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u9002\u7528\u200b\u7248\u672c\u200b\uff1a<code>unstable_batchedUpdates</code> \u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b React 18 \u200b\u4e4b\u524d\u200b\u7684\u200b\u7248\u672c\u200b\u3002\u200b\u5728\u200b React 18 \u200b\u53ca\u200b\u66f4\u200b\u9ad8\u200b\u7248\u672c\u200b\u4e2d\u200b\uff0cReact \u200b\u5df2\u7ecf\u200b\u9ed8\u8ba4\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u518d\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u4f7f\u7528\u200b\u6b64\u200b\u65b9\u6cd5\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u573a\u666f\u200b\uff1a\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5728\u200b React \u200b\u4e8b\u4ef6\u200b\u5904\u7406\u7a0b\u5e8f\u200b\u4e4b\u5916\u200b\u8c03\u7528\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u64cd\u4f5c\u200b\u65f6\u200b\uff0c\u200b\u907f\u514d\u200b\u540c\u6b65\u200b\u66f4\u65b0\u200b\u5bfc\u81f4\u200b\u7684\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\u6216\u200b\u201c\u200b\u50f5\u5c38\u200b\u5b50\u200b\u8282\u70b9\u200b\u201d\u200b\u95ee\u9898\u200b\u3002</li> <li>\u200b\u7a33\u5b9a\u6027\u200b\uff1a<code>unstable_batchedUpdates</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u201c\u200b\u4e0d\u200b\u7a33\u5b9a\u200b\u201d\u200b\u7684\u200b API\uff0c\u200b\u610f\u5473\u7740\u200b\u5b83\u200b\u5728\u200b\u672a\u6765\u200b\u7684\u200b React \u200b\u7248\u672c\u200b\u4e2d\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u53d1\u751f\u53d8\u5316\u200b\u6216\u200b\u88ab\u200b\u79fb\u9664\u200b\u3002\u200b\u56e0\u6b64\u200b\uff0c\u200b\u4f7f\u7528\u200b\u65f6\u5e94\u200b\u8c28\u614e\u200b\uff0c\u200b\u5e76\u200b\u8003\u8651\u200b\u662f\u5426\u200b\u6709\u200b\u5176\u4ed6\u200b\u66ff\u4ee3\u200b\u65b9\u6848\u200b\u3002</li> <li>\u200b\u4f9d\u8d56\u200b\u5e93\u200b\uff1a\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u53ef\u4ee5\u200b\u4ece\u200b <code>react-dom</code> \u200b\u6216\u200b <code>react-native</code> \u200b\u4e2d\u200b\u5bfc\u5165\u200b\uff0c\u200b\u5177\u4f53\u200b\u53d6\u51b3\u4e8e\u200b\u4f60\u200b\u7684\u200b\u5e94\u7528\u200b\u662f\u200b\u8fd0\u884c\u200b\u5728\u200b Web \u200b\u73af\u5883\u200b\u8fd8\u662f\u200b\u79fb\u52a8\u200b\u7aef\u200b\u73af\u5883\u200b\u3002</li> </ol> <p>\u200b\u901a\u8fc7\u200b\u4f7f\u7528\u200b <code>unstable_batchedUpdates</code>\uff0c\u200b\u53ef\u4ee5\u200b\u786e\u4fdd\u200b\u5728\u200b React \u200b\u4e8b\u4ef6\u200b\u5904\u7406\u7a0b\u5e8f\u200b\u4e4b\u5916\u200b\u7684\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u64cd\u4f5c\u200b\u88ab\u200b\u6279\u91cf\u200b\u5904\u7406\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u6f5c\u5728\u200b\u7684\u200b\u6027\u80fd\u200b\u95ee\u9898\u200b\u548c\u200b\u201c\u200b\u50f5\u5c38\u200b\u5b50\u200b\u8282\u70b9\u200b\u201d\u200b\u95ee\u9898\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/","title":"Flux inspired practice.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#1-set-setstate","title":"1. <code>set</code> / <code>setState</code> \u200b\u65b9\u6cd5","text":""},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_1","title":"\u63cf\u8ff0","text":"<p><code>set</code> \u200b\u548c\u200b <code>setState</code> \u200b\u662f\u200b Zustand \u200b\u4e2d\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b store \u200b\u72b6\u6001\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002\u200b\u5b83\u4eec\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u88ab\u200b\u6b63\u786e\u200b\u5408\u5e76\u200b\uff0c\u200b\u5e76\u4e14\u200b\u901a\u77e5\u200b\u6240\u6709\u200b\u76d1\u542c\u5668\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>const useBoundStore = create((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  decrement: () =&gt; set((state) =&gt; ({ count: state.count - 1 })),\n}));\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nconst { increment, decrement } = useBoundStore.getState();\nincrement(); // count \u200b\u53d8\u4e3a\u200b 1\ndecrement(); // count \u200b\u53d8\u4e3a\u200b 0\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li><code>set</code> \u200b\u548c\u200b <code>setState</code> \u200b\u662f\u200b\u540c\u6b65\u64cd\u4f5c\u200b\uff0c\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u662f\u200b\u539f\u5b50\u200b\u7684\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>set</code> \u200b\u65f6\u200b\uff0c\u200b\u4f20\u5165\u200b\u7684\u200b\u51fd\u6570\u200b\u4f1a\u200b\u63a5\u6536\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u5e76\u200b\u8fd4\u56de\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#2-dispatch","title":"2. <code>dispatch</code> \u200b\u51fd\u6570","text":""},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_4","title":"\u63cf\u8ff0","text":"<p><code>dispatch</code> \u200b\u51fd\u6570\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b Redux \u200b\u4e2d\u200b\u7684\u200b <code>dispatch</code>\uff0c\u200b\u7528\u4e8e\u200b\u89e6\u53d1\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u3002\u200b\u5b83\u200b\u901a\u5e38\u200b\u4e0e\u200b reducer \u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5904\u7406\u200b\u590d\u6742\u200b\u7684\u200b\u66f4\u65b0\u200b\u903b\u8f91\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_5","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>const types = { increase: 'INCREASE', decrease: 'DECREASE' };\n\nconst reducer = (state, { type, by = 1 }) =&gt; {\n  switch (type) {\n    case types.increase:\n      return { grumpiness: state.grumpiness + by };\n    case types.decrease:\n      return { grumpiness: state.grumpiness - by };\n    default:\n      return state;\n  }\n};\n\nconst useGrumpyStore = create((set) =&gt; ({\n  grumpiness: 0,\n  dispatch: (args) =&gt; set((state) =&gt; reducer(state, args)),\n}));\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nconst dispatch = useGrumpyStore((state) =&gt; state.dispatch);\ndispatch({ type: types.increase, by: 2 }); // grumpiness \u200b\u53d8\u4e3a\u200b 2\ndispatch({ type: types.decrease }); // grumpiness \u200b\u53d8\u4e3a\u200b 1\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li><code>dispatch</code> \u200b\u901a\u5e38\u200b\u4e0e\u200b reducer \u200b\u7ed3\u5408\u200b\u4f7f\u7528\u200b\uff0creducer \u200b\u8d1f\u8d23\u200b\u6839\u636e\u200b action \u200b\u7c7b\u578b\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li><code>dispatch</code> \u200b\u7684\u200b\u53c2\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5305\u542b\u200b <code>type</code> \u200b\u548c\u200b\u53ef\u9009\u200b\u7684\u200b <code>payload</code>\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#3-redux","title":"3. <code>redux</code> \u200b\u4e2d\u95f4\u4ef6","text":""},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_7","title":"\u63cf\u8ff0","text":"<p><code>redux</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5728\u200b Zustand \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u7c7b\u4f3c\u200b Redux \u200b\u7684\u200b\u6a21\u5f0f\u200b\uff0c\u200b\u5305\u62ec\u200b reducer\u3001\u200b\u521d\u59cb\u72b6\u6001\u200b\u548c\u200b <code>dispatch</code> \u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_8","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { redux } from 'zustand/middleware';\n\nconst initialState = { grumpiness: 0 };\nconst reducer = (state, action) =&gt; {\n  switch (action.type) {\n    case 'INCREASE':\n      return { grumpiness: state.grumpiness + 1 };\n    case 'DECREASE':\n      return { grumpiness: state.grumpiness - 1 };\n    default:\n      return state;\n  }\n};\n\nconst useReduxStore = create(redux(reducer, initialState));\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nconst { dispatch } = useReduxStore.getState();\ndispatch({ type: 'INCREASE' }); // grumpiness \u200b\u53d8\u4e3a\u200b 1\ndispatch({ type: 'DECREASE' }); // grumpiness \u200b\u53d8\u4e3a\u200b 0\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_9","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li><code>redux</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u5c06\u200b reducer \u200b\u548c\u200b\u521d\u59cb\u72b6\u6001\u200b\u7ed1\u5b9a\u200b\u5230\u200b Zustand store \u200b\u4e2d\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>dispatch</code> \u200b\u65f6\u200b\uff0caction \u200b\u5bf9\u8c61\u200b\u5fc5\u987b\u200b\u5305\u542b\u200b <code>type</code> \u200b\u5c5e\u6027\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#4","title":"4. \u200b\u5916\u90e8\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u51fd\u6570","text":""},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_10","title":"\u63cf\u8ff0","text":"<p>\u200b\u9664\u4e86\u200b\u5728\u200b store \u200b\u5185\u90e8\u200b\u5b9a\u4e49\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u5916\u200b\uff0c\u200b\u8fd8\u200b\u53ef\u4ee5\u200b\u5c06\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u653e\u5728\u200b store \u200b\u5916\u90e8\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>setState</code> \u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_11","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>const useBoundStore = create(() =&gt; ({\n  count: 0,\n}));\n\n// \u200b\u5916\u90e8\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\nconst increment = () =&gt; useBoundStore.setState((state) =&gt; ({ count: state.count + 1 }));\nconst decrement = () =&gt; useBoundStore.setState((state) =&gt; ({ count: state.count - 1 }));\n\n// \u200b\u4f7f\u7528\u200b\u793a\u4f8b\u200b\nincrement(); // count \u200b\u53d8\u4e3a\u200b 1\ndecrement(); // count \u200b\u53d8\u4e3a\u200b 0\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/flux-inspired-practice.md_summary/#_12","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u5916\u90e8\u200b\u66f4\u65b0\u200b\u51fd\u6570\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b <code>setState</code> \u200b\u8bbf\u95ee\u200b store \u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u9002\u5408\u200b\u5904\u7406\u200b\u7b80\u5355\u200b\u7684\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u903b\u8f91\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/how-to-reset-state.md_summary/","title":"How to reset state.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/how-to-reset-state.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>create</code> (Zustand Store Creator)</li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b Zustand \u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u5b58\u50a8\u200b\u5bf9\u8c61\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const useSlice = create&lt;State &amp; Actions&gt;()((set, get) =&gt; ({\n  ...initialState,\n  addSalmon: (qty: number) =&gt; {\n    set({ salmon: get().salmon + qty })\n  },\n  addTuna: (qty: number) =&gt; {\n    set({ tuna: get().tuna + qty })\n  },\n  reset: () =&gt; {\n    set(initialState)\n  },\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: </p> <ul> <li><code>set</code> \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li><code>get</code> \u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u3002</li> <li><code>initialState</code> \u200b\u662f\u200b\u72b6\u6001\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\u3002</li> </ul> </li> <li> <p><code>reset</code> (State Reset Function)</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u5c06\u200b\u72b6\u6001\u200b\u91cd\u7f6e\u200b\u4e3a\u200b\u5176\u200b\u521d\u59cb\u503c\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const reset = () =&gt; {\n  set(initialState)\n}\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: </p> <ul> <li><code>set</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li><code>initialState</code> \u200b\u662f\u200b\u72b6\u6001\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\u3002</li> </ul> </li> <li> <p><code>resetAllStores</code> (Reset Multiple Stores)</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u91cd\u7f6e\u200b\u591a\u4e2a\u200b Zustand \u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const resetAllStores = () =&gt; {\n  storeResetFns.forEach((resetFn) =&gt; {\n    resetFn()\n  })\n}\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: </p> <ul> <li><code>storeResetFns</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u6240\u6709\u200b\u5b58\u50a8\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</li> <li><code>resetFn</code> \u200b\u662f\u200b\u6bcf\u4e2a\u200b\u5b58\u50a8\u200b\u7684\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\u3002</li> </ul> </li> <li> <p><code>create</code> (Custom Store Creator for Resetting Multiple Stores)</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u81ea\u5b9a\u4e49\u200b\u7684\u200b Zustand \u200b\u5b58\u50a8\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u521b\u5efa\u200b\u5b58\u50a8\u200b\u65f6\u200b\u81ea\u52a8\u200b\u6ce8\u518c\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const create = (&lt;T&gt;() =&gt; {\n  return (stateCreator: StateCreator&lt;T&gt;) =&gt; {\n    const store = actualCreate(stateCreator)\n    const initialState = store.getInitialState()\n    storeResetFns.add(() =&gt; {\n      store.setState(initialState, true)\n    })\n    return store\n  }\n}) as typeof actualCreate\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: <ul> <li><code>actualCreate</code> \u200b\u662f\u200b\u539f\u59cb\u200b\u7684\u200b Zustand \u200b\u5b58\u50a8\u200b\u521b\u5efa\u200b\u51fd\u6570\u200b\u3002</li> <li><code>storeResetFns</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u6240\u6709\u200b\u5b58\u50a8\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\u7684\u200b\u96c6\u5408\u200b\u3002</li> <li><code>store.setState(initialState, true)</code> \u200b\u7528\u4e8e\u200b\u5c06\u200b\u5b58\u50a8\u72b6\u6001\u200b\u91cd\u7f6e\u200b\u4e3a\u200b\u521d\u59cb\u503c\u200b\u3002</li> </ul> </li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/how-to-reset-state.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u603b\u7ed3","text":"<ul> <li><code>create</code>: \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b Zustand \u200b\u5b58\u50a8\u200b\uff0c\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u3002</li> <li><code>reset</code>: \u200b\u7528\u4e8e\u200b\u5c06\u200b\u5355\u4e2a\u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\u91cd\u7f6e\u200b\u4e3a\u200b\u521d\u59cb\u503c\u200b\u3002</li> <li><code>resetAllStores</code>: \u200b\u7528\u4e8e\u200b\u91cd\u7f6e\u200b\u591a\u4e2a\u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</li> <li><code>create</code> (Custom): \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u5b58\u50a8\u200b\u65f6\u200b\u81ea\u52a8\u200b\u6ce8\u518c\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u652f\u6301\u200b\u591a\u4e2a\u200b\u5b58\u50a8\u200b\u7684\u200b\u91cd\u7f6e\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/how-to-reset-state.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879\u200b\u603b\u7ed3","text":"<ul> <li><code>set</code> \u200b\u548c\u200b <code>get</code>: \u200b\u5728\u200b Zustand \u200b\u4e2d\u200b\uff0c<code>set</code> \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c<code>get</code> \u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u3002</li> <li><code>initialState</code>: \u200b\u72b6\u6001\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u91cd\u7f6e\u200b\u72b6\u6001\u200b\u3002</li> <li><code>storeResetFns</code>: \u200b\u4e00\u4e2a\u200b\u96c6\u5408\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b58\u50a8\u200b\u6240\u6709\u200b\u5b58\u50a8\u200b\u7684\u200b\u91cd\u7f6e\u200b\u51fd\u6570\u200b\u3002</li> <li><code>store.setState(initialState, true)</code>: \u200b\u7528\u4e8e\u200b\u5c06\u200b\u5b58\u50a8\u72b6\u6001\u200b\u91cd\u7f6e\u200b\u4e3a\u200b\u521d\u59cb\u503c\u200b\uff0c\u200b\u5e76\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u7684\u200b\u66f4\u65b0\u200b\u662f\u200b\u6df1\u5c42\u6b21\u200b\u7684\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/immutable-state-and-merging.md_summary/","title":"Immutable state and merging.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/immutable-state-and-merging.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>create</code> \u200b\u51fd\u6570\u200b</li> <li>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b <code>zustand</code> \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\uff08store\uff09\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5305\u542b\u200b\u521d\u59cb\u72b6\u6001\u200b\u548c\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u7684\u200b\u65b9\u6cd5\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>import { create } from 'zustand'\n\nconst useCountStore = create((set) =&gt; ({\n  count: 0,\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: <code>create</code> \u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u662f\u200b\u4e00\u4e2a\u200b React Hook\uff0c\u200b\u53ea\u80fd\u200b\u5728\u200b React \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u3002</p> </li> <li> <p><code>set</code> \u200b\u51fd\u6570\u200b</p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>set</code> \u200b\u662f\u200b <code>zustand</code> \u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002<code>set</code> \u200b\u51fd\u6570\u200b\u9ed8\u8ba4\u200b\u4f1a\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f20\u9012\u200b <code>true</code> \u200b\u4f5c\u4e3a\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u6765\u200b\u7981\u7528\u200b\u5408\u5e76\u200b\u884c\u4e3a\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>set((state) =&gt; ({ count: state.count + 1 }))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</p> <ul> <li>\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u4f1a\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u7701\u7565\u200b <code>...state</code> \u200b\u90e8\u5206\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u53ea\u4f1a\u200b\u5728\u200b\u7b2c\u4e00\u5c42\u200b\u8fdb\u884c\u200b\u5408\u5e76\u200b\uff0c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u4f7f\u7528\u200b\u6269\u5c55\u200b\u8fd0\u7b97\u7b26\u200b <code>...</code> \u200b\u6765\u200b\u5408\u5e76\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u3002</li> <li>\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b\u4f20\u9012\u200b <code>true</code> \u200b\u4f5c\u4e3a\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u6765\u200b\u7981\u7528\u200b\u5408\u5e76\u200b\u884c\u4e3a\u200b\uff0c\u200b\u76f4\u63a5\u200b\u66ff\u6362\u200b\u6574\u4e2a\u200b\u72b6\u6001\u200b\u3002</li> </ul> </li> <li> <p>\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5408\u5e76\u200b</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u5f53\u200b\u72b6\u6001\u200b\u5305\u542b\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u65f6\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u53ea\u4f1a\u200b\u5728\u200b\u7b2c\u4e00\u5c42\u200b\u8fdb\u884c\u200b\u5408\u5e76\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u4f7f\u7528\u200b\u6269\u5c55\u200b\u8fd0\u7b97\u7b26\u200b <code>...</code> \u200b\u6765\u200b\u5408\u5e76\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>set((state) =&gt; ({\n  nested: { ...state.nested, count: state.nested.count + 1 },\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u7684\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u4e13\u95e8\u200b\u5904\u7406\u200b\u4e0d\u53ef\u200b\u53d8\u66f4\u200b\u65b0\u200b\u7684\u200b\u5e93\u200b\uff0c\u200b\u5982\u200b <code>immer</code>\u3002</p> </li> <li> <p><code>replace</code> \u200b\u6807\u5fd7\u200b</p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>replace</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b <code>set</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u5408\u5e76\u200b\u884c\u4e3a\u200b\u3002\u200b\u5f53\u200b\u4f20\u9012\u200b <code>true</code> \u200b\u65f6\u200b\uff0c<code>set</code> \u200b\u51fd\u6570\u200b\u4f1a\u200b\u76f4\u63a5\u200b\u66ff\u6362\u200b\u6574\u4e2a\u200b\u72b6\u6001\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>set((state) =&gt; newState, true)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u4f7f\u7528\u200b <code>replace</code> \u200b\u6807\u5fd7\u200b\u65f6\u200b\uff0c\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u5c06\u200b\u5b8c\u5168\u200b\u66ff\u6362\u200b\u65e7\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u56e0\u6b64\u200b\u9700\u8981\u200b\u786e\u4fdd\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u5305\u542b\u200b\u6240\u6709\u200b\u5fc5\u8981\u200b\u7684\u200b\u72b6\u6001\u5b57\u200b\u6bb5\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/immutable-state-and-merging.md_summary/#_2","title":"\u603b\u7ed3","text":"<ul> <li><code>create</code> \u200b\u51fd\u6570\u200b \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u3002</li> <li><code>set</code> \u200b\u51fd\u6570\u200b \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u9ed8\u8ba4\u200b\u5408\u5e76\u200b\u72b6\u6001\u200b\uff0c\u200b\u4f46\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>replace</code> \u200b\u6807\u5fd7\u200b\u7981\u7528\u200b\u5408\u5e76\u200b\u884c\u4e3a\u200b\u3002</li> <li>\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5408\u5e76\u200b \u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u4f7f\u7528\u200b\u6269\u5c55\u200b\u8fd0\u7b97\u7b26\u200b <code>...</code>\u3002</li> <li><code>replace</code> \u200b\u6807\u5fd7\u200b \u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b <code>set</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u5408\u5e76\u200b\u884c\u4e3a\u200b\uff0c\u200b\u4f20\u9012\u200b <code>true</code> \u200b\u65f6\u200b\u76f4\u63a5\u200b\u66ff\u6362\u200b\u6574\u4e2a\u200b\u72b6\u6001\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/","title":"Initialize state with props.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#1-createstore","title":"1. <code>createStore</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>createStore</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5b9a\u4e49\u200b\u72b6\u6001\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\u4ee5\u53ca\u200b\u72b6\u6001\u200b\u7684\u200b\u66f4\u65b0\u200b\u65b9\u6cd5\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const createBearStore = (initProps?: Partial&lt;BearProps&gt;) =&gt; {\n  const DEFAULT_PROPS: BearProps = {\n    bears: 0,\n  }\n  return createStore&lt;BearState&gt;()((set) =&gt; ({\n    ...DEFAULT_PROPS,\n    ...initProps,\n    addBear: () =&gt; set((state) =&gt; ({ bears: ++state.bears })),\n  }))\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>createStore</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b <code>set</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002 - \u200b\u521d\u59cb\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>initProps</code> \u200b\u53c2\u6570\u200b\u8fdb\u884c\u200b\u90e8\u5206\u200b\u521d\u59cb\u5316\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#2-reactcreatecontext","title":"2. <code>React.createContext</code> \u200b\u65b9\u6cd5","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>React.createContext</code> \u200b\u662f\u200b React \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u4e0a\u4e0b\u6587\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5141\u8bb8\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u5171\u4eab\u200b\u6570\u636e\u200b\uff0c\u200b\u800c\u200b\u4e0d\u200b\u9700\u8981\u200b\u901a\u8fc7\u200b props \u200b\u9010\u5c42\u200b\u4f20\u9012\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const BearContext = createContext&lt;BearStore | null&gt;(null)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b <code>null</code>\uff0c\u200b\u8868\u793a\u200b\u5728\u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b <code>Provider</code> \u200b\u7684\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u4e0a\u4e0b\u6587\u200b\u503c\u4e3a\u200b\u7a7a\u200b\u3002 - \u200b\u5728\u200b\u4f7f\u7528\u200b\u4e0a\u4e0b\u6587\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>Provider</code> \u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\u503c\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#3-useref","title":"3. <code>useRef</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useRef</code> \u200b\u662f\u200b React \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u53ef\u53d8\u200b\u7684\u200b\u5f15\u7528\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u8be5\u200b\u5bf9\u8c61\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u6574\u4e2a\u200b\u751f\u547d\u5468\u671f\u200b\u5185\u200b\u4fdd\u6301\u200b\u4e0d\u53d8\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function App() {\n  const store = useRef(createBearStore()).current\n  return (\n    &lt;BearContext.Provider value={store}&gt;\n      &lt;BasicConsumer /&gt;\n    &lt;/BearContext.Provider&gt;\n  )\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useRef</code> \u200b\u8fd4\u56de\u200b\u7684\u200b\u5bf9\u8c61\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b <code>current</code> \u200b\u5c5e\u6027\u200b\uff0c\u200b\u8be5\u200b\u5c5e\u6027\u200b\u53ef\u4ee5\u200b\u5b58\u50a8\u200b\u4efb\u610f\u200b\u503c\u200b\u3002 - <code>useRef</code> \u200b\u7684\u200b\u503c\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u65f6\u200b\u4e0d\u4f1a\u200b\u6539\u53d8\u200b\uff0c\u200b\u9664\u975e\u200b\u624b\u52a8\u200b\u66f4\u65b0\u200b <code>current</code> \u200b\u5c5e\u6027\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#4-usecontext","title":"4. <code>useContext</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useContext</code> \u200b\u662f\u200b React \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u51fd\u6570\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u6d88\u8d39\u200b\u4e0a\u4e0b\u6587\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function BasicConsumer() {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  const bears = useStore(store, (s) =&gt; s.bears)\n  const addBear = useStore(store, (s) =&gt; s.addBear)\n  return (\n    &lt;&gt;\n      &lt;div&gt;{bears} Bears.&lt;/div&gt;\n      &lt;button onClick={addBear}&gt;Add bear&lt;/button&gt;\n    &lt;/&gt;\n  )\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u4f7f\u7528\u200b <code>useContext</code> \u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>Provider</code> \u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\u503c\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u629b\u51fa\u200b\u9519\u8bef\u200b\u3002 - \u200b\u4e0a\u4e0b\u6587\u200b\u503c\u200b\u7684\u200b\u53d8\u5316\u200b\u4f1a\u200b\u89e6\u53d1\u200b\u4f7f\u7528\u200b\u8be5\u200b\u4e0a\u4e0b\u6587\u200b\u7684\u200b\u7ec4\u4ef6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#5-usestore","title":"5. <code>useStore</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useStore</code> \u200b\u662f\u200b Zustand \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u9009\u62e9\u200b\u548c\u200b\u8ba2\u9605\u200b\u7279\u5b9a\u200b\u7684\u200b\u72b6\u6001\u200b\u7247\u6bb5\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const bears = useStore(store, (s) =&gt; s.bears)\nconst addBear = useStore(store, (s) =&gt; s.addBear)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>useStore</code> \u200b\u7684\u200b\u7b2c\u4e00\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u5b58\u50a8\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u7b2c\u4e8c\u4e2a\u200b\u53c2\u6570\u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b\u72b6\u6001\u200b\u4e2d\u200b\u63d0\u53d6\u200b\u6240\u200b\u9700\u200b\u7684\u200b\u6570\u636e\u200b\u3002 - \u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u503c\u4f1a\u200b\u88ab\u200b\u8ba2\u9605\u200b\uff0c\u200b\u5f53\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\uff0c\u200b\u7ec4\u4ef6\u200b\u4f1a\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#6-usebearcontext","title":"6. <code>useBearContext</code> \u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useBearContext</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u5b58\u50a8\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u5e76\u200b\u4ece\u4e2d\u200b\u9009\u62e9\u200b\u7279\u5b9a\u200b\u7684\u200b\u72b6\u6001\u200b\u7247\u6bb5\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function useBearContext&lt;T&gt;(selector: (state: BearState) =&gt; T): T {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  return useStore(store, selector)\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u94a9\u5b50\u200b\u5c01\u88c5\u200b\u4e86\u200b <code>useContext</code> \u200b\u548c\u200b <code>useStore</code>\uff0c\u200b\u7b80\u5316\u200b\u4e86\u200b\u4ece\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u72b6\u6001\u200b\u7684\u200b\u903b\u8f91\u200b\u3002 - \u200b\u4f7f\u7528\u200b\u8be5\u200b\u94a9\u5b50\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u6709\u200b\u4e00\u4e2a\u200b <code>Provider</code> \u200b\u63d0\u4f9b\u200b\u4e0a\u4e0b\u6587\u200b\u503c\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/initialize-state-with-props.md_summary/#7-usestorewithequalityfn","title":"7. <code>useStoreWithEqualityFn</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useStoreWithEqualityFn</code> \u200b\u662f\u200b Zustand \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e00\u4e2a\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7c7b\u4f3c\u200b\u4e8e\u200b <code>useStore</code>\uff0c\u200b\u4f46\u200b\u5141\u8bb8\u200b\u81ea\u5b9a\u4e49\u200b\u76f8\u7b49\u200b\u6027\u200b\u68c0\u67e5\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function useBearContext&lt;T&gt;(\n  selector: (state: BearState) =&gt; T,\n  equalityFn?: (left: T, right: T) =&gt; boolean,\n): T {\n  const store = useContext(BearContext)\n  if (!store) throw new Error('Missing BearContext.Provider in the tree')\n  return useStoreWithEqualityFn(store, selector, equalityFn)\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>equalityFn</code> \u200b\u53c2\u6570\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5b9a\u4e49\u200b\u5982\u4f55\u200b\u6bd4\u8f83\u200b\u9009\u62e9\u5668\u200b\u8fd4\u56de\u200b\u7684\u200b\u503c\u200b\uff0c\u200b\u4ece\u800c\u200b\u63a7\u5236\u200b\u7ec4\u4ef6\u200b\u662f\u5426\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002 - \u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u63d0\u4f9b\u200b <code>equalityFn</code>\uff0c\u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b\u6d45\u200b\u6bd4\u8f83\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/maps-and-sets-usage.md_summary/","title":"Maps and sets usage.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/maps-and-sets-usage.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>create</code> (from <code>zustand</code>)</li> <li>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b <code>zustand</code> \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5bf9\u8c61\u200b\u3002\u200b\u8fd9\u4e2a\u200b\u5bf9\u8c61\u200b\u53ef\u4ee5\u200b\u5305\u542b\u200b\u4efb\u610f\u200b\u7684\u200b JavaScript \u200b\u6570\u636e\u7ed3\u6784\u200b\uff0c\u200b\u5982\u200b <code>Map</code> \u200b\u548c\u200b <code>Set</code>\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>import { create } from 'zustand';\n\nconst useFooBar = create(() =&gt; ({ foo: new Map(), bar: new Set() }));\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: </p> <ul> <li><code>create</code> \u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u901a\u5e38\u200b\u5728\u200b React \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b <code>useFooBar</code> \u200b\u6765\u200b\u8bbf\u95ee\u200b\u548c\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u7684\u200b\u521d\u59cb\u503c\u200b\u662f\u200b\u901a\u8fc7\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>create</code> \u200b\u7684\u200b\u51fd\u6570\u200b\u8fd4\u56de\u200b\u7684\u200b\u3002</li> </ul> </li> <li> <p><code>setState</code> (from <code>zustand</code>)</p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>setState</code> \u200b\u662f\u200b <code>zustand</code> \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u5e76\u200b\u901a\u77e5\u200b React \u200b\u7ec4\u4ef6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\u6216\u200b\u5bf9\u8c61\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>useFooBar.setState((prev) =&gt; ({\n  foo: new Map(prev.foo).set('newKey', 'newValue'),\n  bar: new Set(prev.bar).add('newKey'),\n}));\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</p> <ul> <li>\u200b\u4e3a\u4e86\u200b\u9075\u5faa\u200b React \u200b\u7684\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff0c\u200b\u66f4\u65b0\u200b <code>Map</code> \u200b\u6216\u200b <code>Set</code> \u200b\u65f6\u200b\u5e94\u8be5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u5b9e\u4f8b\u200b\u3002</li> <li><code>setState</code> \u200b\u7684\u200b\u53c2\u6570\u200b\u53ef\u4ee5\u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u8be5\u200b\u51fd\u6570\u200b\u63a5\u6536\u200b\u524d\u200b\u4e00\u4e2a\u200b\u72b6\u6001\u200b\u4f5c\u4e3a\u200b\u53c2\u6570\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002</li> </ul> </li> <li> <p><code>Map.set</code></p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>Map.set</code> \u200b\u662f\u200b JavaScript \u200b\u4e2d\u200b <code>Map</code> \u200b\u5bf9\u8c61\u200b\u7684\u200b\u4e00\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5411\u200b <code>Map</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6216\u200b\u66f4\u65b0\u200b\u952e\u503c\u200b\u5bf9\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const newMap = new Map(prev.foo).set('newKey', 'newValue');\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</p> <ul> <li><code>Map.set</code> \u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b <code>Map</code> \u200b\u5bf9\u8c61\u200b\u672c\u8eab\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u94fe\u5f0f\u200b\u8c03\u7528\u200b\u3002</li> <li>\u200b\u5728\u200b React \u200b\u4e2d\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u65f6\u200b\uff0c\u200b\u5e94\u8be5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>Map</code> \u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b <code>Map</code>\u3002</li> </ul> </li> <li> <p><code>Set.add</code></p> </li> <li>\u200b\u63cf\u8ff0\u200b: <code>Set.add</code> \u200b\u662f\u200b JavaScript \u200b\u4e2d\u200b <code>Set</code> \u200b\u5bf9\u8c61\u200b\u7684\u200b\u4e00\u4e2a\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5411\u200b <code>Set</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u503c\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const newSet = new Set(prev.bar).add('newKey');\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:<ul> <li><code>Set.add</code> \u200b\u65b9\u6cd5\u200b\u8fd4\u56de\u200b <code>Set</code> \u200b\u5bf9\u8c61\u200b\u672c\u8eab\u200b\uff0c\u200b\u56e0\u6b64\u200b\u53ef\u4ee5\u200b\u94fe\u5f0f\u200b\u8c03\u7528\u200b\u3002</li> <li>\u200b\u5728\u200b React \u200b\u4e2d\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u65f6\u200b\uff0c\u200b\u5e94\u8be5\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b <code>Set</code> \u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b <code>Set</code>\u3002</li> </ul> </li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/maps-and-sets-usage.md_summary/#_2","title":"\u603b\u7ed3","text":"<ul> <li><code>create</code>: \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5bf9\u8c61\u200b\u3002</li> <li><code>setState</code>: \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u5e76\u200b\u901a\u77e5\u200b React \u200b\u7ec4\u4ef6\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> <li><code>Map.set</code>: \u200b\u7528\u4e8e\u200b\u5411\u200b <code>Map</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u6216\u200b\u66f4\u65b0\u200b\u952e\u503c\u200b\u5bf9\u200b\u3002</li> <li><code>Set.add</code>: \u200b\u7528\u4e8e\u200b\u5411\u200b <code>Set</code> \u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u503c\u200b\u3002</li> </ul> <p>\u200b\u5728\u200b React \u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u65f6\u200b\uff0c\u200b\u5e94\u200b\u9075\u5faa\u200b\u6700\u4f73\u200b\u5b9e\u8df5\u200b\uff0c\u200b\u5373\u200b\u5728\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u65f6\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b <code>Map</code> \u200b\u6216\u200b <code>Set</code> \u200b\u5b9e\u4f8b\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u5b9e\u4f8b\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/","title":"Nextjs.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#1-createcounterstore","title":"1. <code>createCounterStore</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>createCounterStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5de5\u5382\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b Zustand \u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u521d\u59cb\u72b6\u6001\u200b <code>initState</code>\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u7684\u200b Zustand \u200b\u5b58\u50a8\u200b\u5bf9\u8c61\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { createCounterStore } from '@/stores/counter-store';\n\nconst store = createCounterStore({ count: 10 });\nconsole.log(store.getState().count); // \u200b\u8f93\u51fa\u200b: 10\nstore.getState().incrementCount();\nconsole.log(store.getState().count); // \u200b\u8f93\u51fa\u200b: 11\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u51fd\u6570\u200b\u5e94\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8bf7\u6c42\u200b\u4e2d\u200b\u72ec\u7acb\u200b\u8c03\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u591a\u4e2a\u200b\u8bf7\u6c42\u200b\u4e4b\u95f4\u200b\u5171\u4eab\u200b\u3002 - \u200b\u521d\u59cb\u72b6\u6001\u200b <code>initState</code> \u200b\u662f\u200b\u53ef\u9009\u200b\u7684\u200b\uff0c\u200b\u9ed8\u8ba4\u503c\u200b\u4e3a\u200b <code>{ count: 0 }</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#2-counterstoreprovider","title":"2. <code>CounterStoreProvider</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>CounterStoreProvider</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u63d0\u4f9b\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u4f7f\u7528\u200b <code>createCounterStore</code> \u200b\u521b\u5efa\u200b\u5b58\u50a8\u200b\uff0c\u200b\u5e76\u200b\u901a\u8fc7\u200b <code>Context</code> \u200b\u5c06\u200b\u5176\u200b\u4f20\u9012\u200b\u7ed9\u5b50\u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { CounterStoreProvider } from '@/providers/counter-store-provider';\n\nconst App = () =&gt; (\n  &lt;CounterStoreProvider&gt;\n    &lt;HomePage /&gt;\n  &lt;/CounterStoreProvider&gt;\n);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u7ec4\u4ef6\u200b\u5e94\u200b\u5728\u200b\u670d\u52a1\u5668\u7aef\u200b\u6bcf\u4e2a\u200b\u8bf7\u6c42\u200b\u4e2d\u200b\u53ea\u200b\u6e32\u67d3\u200b\u4e00\u6b21\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u5b58\u50a8\u200b\u4e0d\u4f1a\u200b\u5728\u200b\u591a\u4e2a\u200b\u8bf7\u6c42\u200b\u4e4b\u95f4\u200b\u5171\u4eab\u200b\u3002 - \u200b\u5982\u679c\u200b\u7ec4\u4ef6\u200b\u5728\u200b\u5ba2\u6237\u7aef\u200b\u88ab\u200b\u591a\u6b21\u200b\u6e32\u67d3\u200b\uff0c\u200b\u5b58\u50a8\u200b\u53ea\u4f1a\u200b\u88ab\u200b\u521b\u5efa\u200b\u4e00\u6b21\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u4f7f\u7528\u200b\u4e86\u200b <code>useRef</code> \u200b\u6765\u200b\u7f13\u5b58\u200b\u5b58\u50a8\u200b\u5b9e\u4f8b\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#3-usecounterstore","title":"3. <code>useCounterStore</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useCounterStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b Hook\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b <code>CounterStoreProvider</code> \u200b\u63d0\u4f9b\u200b\u7684\u200b Zustand \u200b\u5b58\u50a8\u200b\u4e2d\u200b\u9009\u62e9\u200b\u7279\u5b9a\u200b\u72b6\u6001\u200b\u6216\u200b\u64cd\u4f5c\u200b\u3002\u200b\u5b83\u200b\u63a5\u53d7\u200b\u4e00\u4e2a\u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b <code>selector</code>\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u9009\u62e9\u5668\u200b\u7684\u200b\u7ed3\u679c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { useCounterStore } from '@/providers/counter-store-provider';\n\nconst HomePage = () =&gt; {\n  const { count, incrementCount, decrementCount } = useCounterStore((state) =&gt; state);\n\n  return (\n    &lt;div&gt;\n      Count: {count}\n      &lt;button onClick={() =&gt; incrementCount()}&gt;Increment&lt;/button&gt;\n      &lt;button onClick={() =&gt; decrementCount()}&gt;Decrement&lt;/button&gt;\n    &lt;/div&gt;\n  );\n};\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b Hook \u200b\u5fc5\u987b\u200b\u5728\u200b <code>CounterStoreProvider</code> \u200b\u7684\u200b\u5b50\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u629b\u51fa\u200b\u9519\u8bef\u200b\u3002 - \u200b\u9009\u62e9\u5668\u200b\u51fd\u6570\u200b <code>selector</code> \u200b\u5e94\u200b\u5c3d\u53ef\u80fd\u200b\u5177\u4f53\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#4-initcounterstore","title":"4. <code>initCounterStore</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>initCounterStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521d\u59cb\u5316\u200b Zustand \u200b\u5b58\u50a8\u200b\u7684\u200b\u521d\u59cb\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b <code>count</code> \u200b\u5c5e\u6027\u200b\u7684\u200b\u5bf9\u8c61\u200b\uff0c<code>count</code> \u200b\u7684\u200b\u503c\u200b\u4e3a\u200b\u5f53\u524d\u200b\u5e74\u4efd\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { initCounterStore } from '@/stores/counter-store';\n\nconst initialState = initCounterStore();\nconsole.log(initialState.count); // \u200b\u8f93\u51fa\u200b: \u200b\u5f53\u524d\u200b\u5e74\u4efd\u200b\uff0c\u200b\u4f8b\u5982\u200b 2023\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u5728\u200b\u670d\u52a1\u5668\u7aef\u200b\u521d\u59cb\u5316\u200b\u5b58\u50a8\u72b6\u6001\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u670d\u52a1\u5668\u200b\u548c\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u521d\u59cb\u72b6\u6001\u200b\u4e00\u81f4\u200b\u3002 - \u200b\u8be5\u200b\u51fd\u6570\u200b\u5e94\u200b\u5728\u200b\u6bcf\u4e2a\u200b\u8bf7\u6c42\u200b\u4e2d\u200b\u72ec\u7acb\u200b\u8c03\u7528\u200b\uff0c\u200b\u4ee5\u200b\u907f\u514d\u200b\u72b6\u6001\u200b\u5171\u4eab\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#5-homepage-pages-router","title":"5. <code>HomePage</code> (Pages Router)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>HomePage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u5728\u200b\u4f7f\u7528\u200b Pages Router \u200b\u7684\u200b Next.js \u200b\u5e94\u7528\u200b\u4e2d\u200b\u4f7f\u7528\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u4ece\u200b <code>useCounterStore</code> \u200b\u4e2d\u200b\u83b7\u53d6\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u6e32\u67d3\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u8ba1\u6570\u5668\u200b\u754c\u9762\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { HomePage } from '@/components/pages/home-page';\n\nconst IndexPage = () =&gt; &lt;HomePage /&gt;;\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u7ec4\u4ef6\u200b\u5e94\u200b\u5728\u200b <code>CounterStoreProvider</code> \u200b\u7684\u200b\u5b50\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u80fd\u591f\u200b\u8bbf\u95ee\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002 - \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8def\u7531\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8def\u7531\u200b\u7ec4\u4ef6\u200b\u7ea7\u522b\u200b\u4f7f\u7528\u200b <code>CounterStoreProvider</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#6-homepage-app-router","title":"6. <code>HomePage</code> (App Router)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>HomePage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u5728\u200b\u4f7f\u7528\u200b App Router \u200b\u7684\u200b Next.js \u200b\u5e94\u7528\u200b\u4e2d\u200b\u4f7f\u7528\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u4ece\u200b <code>useCounterStore</code> \u200b\u4e2d\u200b\u83b7\u53d6\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u5e76\u200b\u6e32\u67d3\u200b\u4e00\u4e2a\u200b\u7b80\u5355\u200b\u7684\u200b\u8ba1\u6570\u5668\u200b\u754c\u9762\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { HomePage } from '@/components/pages/home-page';\n\nconst Home = () =&gt; &lt;HomePage /&gt;;\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u7ec4\u4ef6\u200b\u5e94\u200b\u5728\u200b <code>CounterStoreProvider</code> \u200b\u7684\u200b\u5b50\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u80fd\u591f\u200b\u8bbf\u95ee\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002 - \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8def\u7531\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8def\u7531\u200b\u7ec4\u4ef6\u200b\u7ea7\u522b\u200b\u4f7f\u7528\u200b <code>CounterStoreProvider</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#7-counterstoreprovider-pages-router","title":"7. <code>CounterStoreProvider</code> (Pages Router)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>CounterStoreProvider</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u4f7f\u7528\u200b Pages Router \u200b\u7684\u200b Next.js \u200b\u5e94\u7528\u200b\u4e2d\u200b\u63d0\u4f9b\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u5c06\u200b\u5b58\u50a8\u200b\u4f20\u9012\u200b\u7ed9\u5b50\u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { CounterStoreProvider } from '@/providers/counter-store-provider';\n\nconst App = ({ Component, pageProps }) =&gt; (\n  &lt;CounterStoreProvider&gt;\n    &lt;Component {...pageProps} /&gt;\n  &lt;/CounterStoreProvider&gt;\n);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u7ec4\u4ef6\u200b\u5e94\u200b\u5728\u200b\u5e94\u7528\u200b\u7684\u200b\u6839\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u6240\u6709\u200b\u5b50\u200b\u7ec4\u4ef6\u200b\u90fd\u200b\u80fd\u200b\u8bbf\u95ee\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002 - \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8def\u7531\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8def\u7531\u200b\u7ec4\u4ef6\u200b\u7ea7\u522b\u200b\u4f7f\u7528\u200b <code>CounterStoreProvider</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/nextjs.md_summary/#8-counterstoreprovider-app-router","title":"8. <code>CounterStoreProvider</code> (App Router)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>CounterStoreProvider</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u4f7f\u7528\u200b App Router \u200b\u7684\u200b Next.js \u200b\u5e94\u7528\u200b\u4e2d\u200b\u63d0\u4f9b\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002\u200b\u5b83\u200b\u5c06\u200b\u5b58\u50a8\u200b\u4f20\u9012\u200b\u7ed9\u5b50\u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { CounterStoreProvider } from '@/providers/counter-store-provider';\n\nconst RootLayout = ({ children }) =&gt; (\n  &lt;html lang=\"en\"&gt;\n    &lt;body&gt;\n      &lt;CounterStoreProvider&gt;{children}&lt;/CounterStoreProvider&gt;\n    &lt;/body&gt;\n  &lt;/html&gt;\n);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u7ec4\u4ef6\u200b\u5e94\u200b\u5728\u200b\u5e94\u7528\u200b\u7684\u200b\u6839\u200b\u5e03\u5c40\u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b\u6240\u6709\u200b\u5b50\u200b\u7ec4\u4ef6\u200b\u90fd\u200b\u80fd\u200b\u8bbf\u95ee\u200b Zustand \u200b\u5b58\u50a8\u200b\u3002 - \u200b\u5982\u679c\u200b\u9700\u8981\u200b\u4e3a\u200b\u6bcf\u4e2a\u200b\u8def\u7531\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u7684\u200b\u5b58\u50a8\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5728\u200b\u8def\u7531\u200b\u7ec4\u4ef6\u200b\u7ea7\u522b\u200b\u4f7f\u7528\u200b <code>CounterStoreProvider</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/practice-with-no-store-actions.md_summary/","title":"Practice with no store actions.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/practice-with-no-store-actions.md_summary/#_1","title":"\u51fd\u6570\u200b/\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>create</code>:</li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u81ea\u200b\u5305\u542b\u200b\u7684\u200b\u5b58\u50a8\u200b\uff08store\uff09\uff0c\u200b\u5176\u4e2d\u200b\u5305\u542b\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const useBoundStore = create((set) =&gt; ({\n  count: 0,\n  text: 'hello',\n  inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n  setText: (text) =&gt; set({ text }),\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u5c06\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u5c01\u88c5\u200b\u5728\u200b\u4e00\u8d77\u200b\uff0c\u200b\u4fbf\u4e8e\u7ba1\u7406\u200b\u548c\u200b\u7ef4\u62a4\u200b\u3002</p> </li> <li> <p><code>set</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>inc: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\nsetText: (text) =&gt; set({ text }),\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: <code>set</code> \u200b\u65b9\u6cd5\u200b\u901a\u5e38\u200b\u5728\u200b <code>create</code> \u200b\u51fd\u6570\u200b\u5185\u90e8\u200b\u4f7f\u7528\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5b9a\u4e49\u200b\u5982\u4f55\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</p> </li> <li> <p><code>useBoundStore.setState</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u5c06\u200b\u64cd\u4f5c\u200b\u5b9a\u4e49\u200b\u5728\u200b\u5b58\u50a8\u200b\u5916\u90e8\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const inc = () =&gt;\n  useBoundStore.setState((state) =&gt; ({ count: state.count + 1 }))\n\nexport const setText = (text) =&gt; useBoundStore.setState({ text })\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u4e0d\u200b\u9700\u8981\u200b\u4f7f\u7528\u200b\u94a9\u5b50\u200b\uff08hook\uff09\u200b\u6765\u200b\u8c03\u7528\u200b\u64cd\u4f5c\u200b\uff0c\u200b\u4e14\u200b\u6709\u52a9\u4e8e\u200b\u4ee3\u7801\u200b\u5206\u5272\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/practice-with-no-store-actions.md_summary/#_2","title":"\u603b\u7ed3","text":"<ul> <li><code>create</code>: \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u72b6\u6001\u200b\u548c\u200b\u64cd\u4f5c\u200b\u7684\u200b\u81ea\u200b\u5305\u542b\u200b\u5b58\u50a8\u200b\u3002</li> <li><code>set</code>: \u200b\u5728\u200b\u5b58\u50a8\u200b\u5185\u90e8\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\u3002</li> <li><code>useBoundStore.setState</code>: \u200b\u5728\u200b\u5b58\u50a8\u200b\u5916\u90e8\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u4e0d\u200b\u9700\u8981\u200b\u94a9\u5b50\u200b\u8c03\u7528\u200b\u64cd\u4f5c\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> </ul> <p>\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u5404\u6709\u200b\u4f18\u52bf\u200b\uff0c\u200b\u9009\u62e9\u200b\u54ea\u200b\u79cd\u200b\u65b9\u5f0f\u200b\u53d6\u51b3\u4e8e\u200b\u5177\u4f53\u200b\u7684\u200b\u5e94\u7528\u200b\u573a\u666f\u200b\u548c\u200b\u5f00\u53d1\u8005\u200b\u7684\u200b\u504f\u597d\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/prevent-rerenders-with-use-shallow.md_summary/","title":"Prevent rerenders with use shallow.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/prevent-rerenders-with-use-shallow.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>useShallow</code></p> <p><code>useShallow</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u907f\u514d\u200b\u4e0d\u5fc5\u8981\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u7684\u200b\u5de5\u5177\u200b\u3002\u200b\u5b83\u200b\u901a\u8fc7\u200b\u6d45\u200b\u6bd4\u8f83\u200b\uff08shallow comparison\uff09\u200b\u6765\u200b\u5224\u65ad\u200b\u8ba1\u7b97\u200b\u503c\u200b\u662f\u5426\u200b\u4e0e\u200b\u524d\u200b\u4e00\u6b21\u200b\u76f8\u540c\u200b\uff0c\u200b\u4ece\u800c\u200b\u51b3\u5b9a\u200b\u662f\u5426\u200b\u89e6\u53d1\u200b\u7ec4\u4ef6\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/prevent-rerenders-with-use-shallow.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst useMeals = create(() =&gt; ({\n  papaBear: 'large porridge-pot',\n  mamaBear: 'middle-size porridge pot',\n  littleBear: 'A little, small, wee pot',\n}));\n\nexport const BearNames = () =&gt; {\n  const names = useMeals(useShallow((state) =&gt; Object.keys(state)));\n\n  return &lt;div&gt;{names.join(', ')}&lt;/div&gt;;\n};\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/prevent-rerenders-with-use-shallow.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li>\u200b\u6d45\u200b\u6bd4\u8f83\u200b\uff1a<code>useShallow</code> \u200b\u4f7f\u7528\u200b\u6d45\u200b\u6bd4\u8f83\u200b\u6765\u200b\u5224\u65ad\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u662f\u5426\u200b\u53d1\u751f\u53d8\u5316\u200b\u3002\u200b\u5982\u679c\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u7684\u200b\u5f15\u7528\u200b\u6ca1\u6709\u200b\u6539\u53d8\u200b\uff0c\u200b\u5373\u4f7f\u200b\u5176\u200b\u5185\u90e8\u200b\u503c\u200b\u53d1\u751f\u53d8\u5316\u200b\uff0c\u200b\u4e5f\u200b\u4e0d\u4f1a\u200b\u89e6\u53d1\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\u3002</li> <li>\u200b\u9002\u7528\u200b\u573a\u666f\u200b\uff1a\u200b\u9002\u7528\u200b\u4e8e\u200b\u90a3\u4e9b\u200b\u4f9d\u8d56\u4e8e\u200b\u8ba1\u7b97\u200b\u503c\u200b\u7684\u200b\u7ec4\u4ef6\u200b\uff0c\u200b\u4e14\u200b\u8ba1\u7b97\u200b\u503c\u200b\u7684\u200b\u8f93\u51fa\u200b\u662f\u200b\u5bf9\u8c61\u200b\u6216\u200b\u6570\u7ec4\u200b\u7684\u200b\u60c5\u51b5\u200b\u3002</li> <li>\u200b\u6027\u80fd\u200b\u4f18\u5316\u200b\uff1a\u200b\u4f7f\u7528\u200b <code>useShallow</code> \u200b\u53ef\u4ee5\u200b\u6709\u6548\u200b\u51cf\u5c11\u200b\u4e0d\u5fc5\u8981\u200b\u7684\u200b\u91cd\u65b0\u200b\u6e32\u67d3\u200b\uff0c\u200b\u63d0\u5347\u200b\u5e94\u7528\u200b\u6027\u80fd\u200b\u3002</li> <li>\u200b\u5c40\u9650\u6027\u200b\uff1a\u200b\u5982\u679c\u200b\u8ba1\u7b97\u200b\u503c\u200b\u7684\u200b\u8f93\u51fa\u200b\u662f\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\uff08\u200b\u5982\u200b\u5b57\u7b26\u4e32\u200b\u3001\u200b\u6570\u5b57\u200b\u3001\u200b\u5e03\u5c14\u503c\u200b\uff09\uff0c<code>useShallow</code> \u200b\u53ef\u80fd\u200b\u4e0d\u4f1a\u200b\u5e26\u6765\u200b\u660e\u663e\u200b\u7684\u200b\u6027\u80fd\u200b\u63d0\u5347\u200b\uff0c\u200b\u56e0\u4e3a\u200b\u57fa\u672c\u200b\u7c7b\u578b\u200b\u7684\u200b\u6bd4\u8f83\u200b\u662f\u200b\u76f4\u63a5\u200b\u7684\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/slices-pattern.md_summary/","title":"Slices pattern.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/slices-pattern.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>createFishSlice</code>:</li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u9c7c\u200b\u6570\u91cf\u200b\u548c\u200b\u589e\u52a0\u200b\u9c7c\u200b\u6570\u91cf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u7684\u200b\u72ec\u7acb\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const createFishSlice = (set) =&gt; ({\n  fishes: 0,\n  addFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes + 1 })),\n})\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u5207\u7247\u200b\u4ec5\u200b\u7ba1\u7406\u200b\u9c7c\u200b\u7684\u200b\u6570\u91cf\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u4e0d\u200b\u6d89\u53ca\u200b\u5176\u4ed6\u200b\u72b6\u6001\u200b\u3002</p> </li> <li> <p><code>createBearSlice</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u718a\u200b\u6570\u91cf\u200b\u3001\u200b\u589e\u52a0\u200b\u718a\u200b\u6570\u91cf\u200b\u548c\u200b\u51cf\u5c11\u200b\u9c7c\u200b\u6570\u91cf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u7684\u200b\u72ec\u7acb\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const createBearSlice = (set) =&gt; ({\n  bears: 0,\n  addBear: () =&gt; set((state) =&gt; ({ bears: state.bears + 1 })),\n  eatFish: () =&gt; set((state) =&gt; ({ fishes: state.fishes - 1 })),\n})\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u5207\u7247\u200b\u7ba1\u7406\u200b\u718a\u200b\u7684\u200b\u6570\u91cf\u200b\u548c\u200b\u9c7c\u200b\u7684\u200b\u6570\u91cf\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u6ce8\u610f\u200b<code>eatFish</code>\u200b\u65b9\u6cd5\u200b\u4f1a\u200b\u51cf\u5c11\u200b\u9c7c\u200b\u7684\u200b\u6570\u91cf\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> </li> <li> <p><code>useBoundStore</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u5c06\u200b\u591a\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u7ec4\u5408\u6210\u200b\u4e00\u4e2a\u200b\u7edf\u4e00\u200b\u7684\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>import { create } from 'zustand'\nimport { createBearSlice } from './bearSlice'\nimport { createFishSlice } from './fishSlice'\n\nexport const useBoundStore = create((...a) =&gt; ({\n  ...createBearSlice(...a),\n  ...createFishSlice(...a),\n}))\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u7ec4\u5408\u200b\u540e\u200b\u7684\u200b\u5b58\u50a8\u200b\u53ef\u4ee5\u200b\u540c\u65f6\u200b\u7ba1\u7406\u200b\u591a\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6bcf\u4e2a\u200b\u5207\u7247\u200b\u7684\u200b\u72b6\u6001\u200b\u4e0d\u4f1a\u200b\u76f8\u4e92\u200b\u5e72\u6270\u200b\u3002</p> </li> <li> <p><code>createBearFishSlice</code>:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b\u540c\u65f6\u200b\u589e\u52a0\u200b\u718a\u548c\u9c7c\u200b\u6570\u91cf\u200b\u7684\u200b\u65b9\u6cd5\u200b\u7684\u200b\u72ec\u7acb\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>export const createBearFishSlice = (set, get) =&gt; ({\n  addBearAndFish: () =&gt; {\n    get().addBear()\n    get().addFish()\n  },\n})\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u5207\u7247\u200b\u4f9d\u8d56\u4e8e\u200b\u5176\u4ed6\u200b\u5207\u7247\u200b\u7684\u200b\u65b9\u6cd5\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u7ec4\u5408\u200b\u65f6\u200b\u5176\u4ed6\u200b\u5207\u7247\u200b\u5df2\u7ecf\u200b\u5b9a\u4e49\u200b\u3002</p> </li> <li> <p><code>persist</code> Middleware:</p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u4e3a\u200b\u7ec4\u5408\u200b\u540e\u200b\u7684\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u6dfb\u52a0\u200b\u6301\u4e45\u200b\u5316\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u4f7f\u5f97\u200b\u72b6\u6001\u200b\u53ef\u4ee5\u200b\u5728\u200b\u9875\u9762\u200b\u5237\u65b0\u200b\u540e\u200b\u4fdd\u6301\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>import { create } from 'zustand'\nimport { createBearSlice } from './bearSlice'\nimport { createFishSlice } from './fishSlice'\nimport { persist } from 'zustand/middleware'\n\nexport const useBoundStore = create(\n  persist(\n    (...a) =&gt; ({\n      ...createBearSlice(...a),\n      ...createFishSlice(...a),\n    }),\n    { name: 'bound-store' },\n  ),\n)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u4e2d\u95f4\u4ef6\u200b\u5e94\u4ec5\u200b\u5728\u200b\u7ec4\u5408\u200b\u540e\u200b\u7684\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u5e94\u7528\u200b\uff0c\u200b\u907f\u514d\u200b\u5728\u200b\u72ec\u7acb\u200b\u5207\u7247\u200b\u4e2d\u200b\u5e94\u7528\u200b\uff0c\u200b\u4ee5\u514d\u200b\u5f15\u53d1\u200b\u610f\u5916\u200b\u95ee\u9898\u200b\u3002</li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/slices-pattern.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>import { useBoundStore } from './stores/useBoundStore'\n\nfunction App() {\n  const bears = useBoundStore((state) =&gt; state.bears)\n  const fishes = useBoundStore((state) =&gt; state.fishes)\n  const addBear = useBoundStore((state) =&gt; state.addBear)\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Number of bears: {bears}&lt;/h2&gt;\n      &lt;h2&gt;Number of fishes: {fishes}&lt;/h2&gt;\n      &lt;button onClick={() =&gt; addBear()}&gt;Add a bear&lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\n\nexport default App\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/slices-pattern.md_summary/#_3","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u72ec\u7acb\u6027\u200b: \u200b\u6bcf\u4e2a\u200b\u72ec\u7acb\u200b\u7684\u200b\u72b6\u6001\u200b\u5207\u7247\u200b\u5e94\u4ec5\u200b\u7ba1\u7406\u200b\u81ea\u5df1\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u907f\u514d\u200b\u8de8\u200b\u5207\u7247\u200b\u7684\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3002</li> <li>\u200b\u7ec4\u5408\u200b\u5b58\u50a8\u200b: \u200b\u7ec4\u5408\u200b\u5b58\u50a8\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u6bcf\u4e2a\u200b\u5207\u7247\u200b\u7684\u200b\u65b9\u6cd5\u200b\u548c\u200b\u72b6\u6001\u200b\u4e0d\u4f1a\u200b\u76f8\u4e92\u200b\u5e72\u6270\u200b\u3002</li> <li>\u200b\u4e2d\u95f4\u4ef6\u200b\u5e94\u7528\u200b: \u200b\u4e2d\u95f4\u4ef6\u200b\u5e94\u4ec5\u200b\u5728\u200b\u7ec4\u5408\u200b\u540e\u200b\u7684\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u5e94\u7528\u200b\uff0c\u200b\u907f\u514d\u200b\u5728\u200b\u72ec\u7acb\u200b\u5207\u7247\u200b\u4e2d\u200b\u5e94\u7528\u200b\uff0c\u200b\u4ee5\u514d\u200b\u5f15\u53d1\u200b\u610f\u5916\u200b\u95ee\u9898\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/ssr-and-hydration.md_summary/","title":"Ssr and hydration.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/ssr-and-hydration.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<ol> <li><code>ReactDOMServer.renderToPipeableStream</code></li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u5728\u200b\u670d\u52a1\u5668\u7aef\u200b\u5c06\u200b React \u200b\u7ec4\u4ef6\u200b\u6e32\u67d3\u200b\u4e3a\u200b\u53ef\u200b\u7ba1\u9053\u5316\u200b\u7684\u200b\u6d41\u200b\u3002\u200b\u5b83\u200b\u751f\u6210\u200b\u4e00\u4e2a\u200b HTML \u200b\u5b57\u7b26\u4e32\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u901a\u8fc7\u200b\u7ba1\u9053\u200b\u4f20\u8f93\u200b\u5230\u200b\u54cd\u5e94\u200b\u5bf9\u8c61\u200b\u4e2d\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>const { pipe } = ReactDOMServer.renderToPipeableStream(&lt;App /&gt;, {\n  onShellReady() {\n    res.setHeader('content-type', 'text/html');\n    pipe(res);\n  },\n});\n</code></pre></li> <li> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</p> <ul> <li>\u200b\u8be5\u200b\u65b9\u6cd5\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u670d\u52a1\u5668\u7aef\u200b\u6e32\u67d3\u200b (SSR)\uff0c\u200b\u751f\u6210\u200b\u7684\u200b HTML \u200b\u5b57\u7b26\u4e32\u200b\u4f1a\u200b\u88ab\u200b\u53d1\u9001\u5230\u200b\u5ba2\u6237\u7aef\u200b\u3002</li> <li><code>onShellReady</code> \u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\u5728\u200b HTML \u200b\u5916\u58f3\u200b\u51c6\u5907\u200b\u597d\u65f6\u200b\u89e6\u53d1\u200b\uff0c\u200b\u6b64\u65f6\u200b\u53ef\u4ee5\u200b\u8bbe\u7f6e\u200b\u54cd\u5e94\u200b\u5934\u200b\u5e76\u200b\u5f00\u59cb\u200b\u7ba1\u9053\u200b\u4f20\u8f93\u200b\u3002</li> </ul> </li> <li> <p><code>ReactDOMClient.hydrateRoot</code></p> </li> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u5728\u200b\u5ba2\u6237\u7aef\u200b\u5bf9\u200b\u670d\u52a1\u5668\u7aef\u200b\u6e32\u67d3\u200b\u7684\u200b HTML \u200b\u8fdb\u884c\u200b hydration\uff0c\u200b\u4f7f\u200b\u5176\u200b\u53d8\u4e3a\u200b\u4e00\u4e2a\u200b\u5b8c\u5168\u200b\u4ea4\u4e92\u5f0f\u200b\u7684\u200b React \u200b\u5e94\u7528\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:      <pre><code>ReactDOMClient.hydrateRoot(document, &lt;App /&gt;);\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:<ul> <li>\u200b\u4f20\u9012\u200b\u7ed9\u200b <code>hydrateRoot</code> \u200b\u7684\u200b React \u200b\u6811\u200b\u5fc5\u987b\u200b\u4e0e\u200b\u670d\u52a1\u5668\u7aef\u200b\u751f\u6210\u200b\u7684\u200b HTML \u200b\u8f93\u51fa\u200b\u4e00\u81f4\u200b\uff0c\u200b\u5426\u5219\u200b\u4f1a\u200b\u5bfc\u81f4\u200b hydration \u200b\u9519\u8bef\u200b\u3002</li> <li>\u200b\u5e38\u89c1\u200b\u7684\u200b hydration \u200b\u9519\u8bef\u200b\u5305\u62ec\u200b\uff1a\u200b\u989d\u5916\u200b\u7684\u200b\u7a7a\u767d\u200b\u5b57\u7b26\u200b\u3001\u200b\u4f7f\u7528\u200b\u6d4f\u89c8\u5668\u200b\u7279\u5b9a\u200b\u7684\u200b API\u3001\u200b\u670d\u52a1\u5668\u200b\u548c\u200b\u5ba2\u6237\u7aef\u200b\u6e32\u67d3\u200b\u4e0d\u540c\u200b\u7684\u200b\u6570\u636e\u200b\u7b49\u200b\u3002</li> <li>React \u200b\u53ef\u4ee5\u200b\u6062\u590d\u200b\u4e00\u4e9b\u200b hydration \u200b\u9519\u8bef\u200b\uff0c\u200b\u4f46\u200b\u5fc5\u987b\u200b\u4fee\u590d\u200b\u8fd9\u4e9b\u200b\u9519\u8bef\u200b\u4ee5\u200b\u907f\u514d\u200b\u6027\u80fd\u200b\u4e0b\u964d\u200b\u6216\u200b\u4e8b\u4ef6\u200b\u5904\u7406\u7a0b\u5e8f\u200b\u9644\u52a0\u200b\u5230\u200b\u9519\u8bef\u200b\u7684\u200b\u5143\u7d20\u200b\u4e0a\u200b\u3002</li> </ul> </li> </ol>"},{"location":"programming/javascript/zustand/guides/summaries/ssr-and-hydration.md_summary/#_2","title":"\u603b\u7ed3","text":"<ul> <li><code>ReactDOMServer.renderToPipeableStream</code> \u200b\u7528\u4e8e\u200b\u670d\u52a1\u5668\u7aef\u200b\u6e32\u67d3\u200b\uff0c\u200b\u751f\u6210\u200b HTML \u200b\u5b57\u7b26\u4e32\u200b\u5e76\u200b\u901a\u8fc7\u200b\u7ba1\u9053\u200b\u4f20\u8f93\u200b\u5230\u200b\u5ba2\u6237\u7aef\u200b\u3002</li> <li><code>ReactDOMClient.hydrateRoot</code> \u200b\u7528\u4e8e\u200b\u5ba2\u6237\u7aef\u200b hydration\uff0c\u200b\u5c06\u200b\u670d\u52a1\u5668\u7aef\u200b\u751f\u6210\u200b\u7684\u200b\u9759\u6001\u200b HTML \u200b\u8f6c\u6362\u200b\u4e3a\u200b\u4ea4\u4e92\u5f0f\u200b\u7684\u200b React \u200b\u5e94\u7528\u200b\u3002</li> <li>\u200b\u5728\u200b\u4f7f\u7528\u200b\u8fd9\u4e9b\u200b\u65b9\u6cd5\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b\u670d\u52a1\u5668\u200b\u548c\u200b\u5ba2\u6237\u7aef\u200b\u7684\u200b\u6e32\u67d3\u200b\u8f93\u51fa\u200b\u4e00\u81f4\u200b\uff0c\u200b\u907f\u514d\u200b\u5e38\u89c1\u200b\u7684\u200b hydration \u200b\u9519\u8bef\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/","title":"Testing.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u53ca\u200b\u793a\u4f8b","text":""},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#1-counterstorecreator","title":"1. <code>counterStoreCreator</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>counterStoreCreator</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b Zustand \u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u7684\u200b\u51fd\u6570\u200b\u3002\u200b\u5b83\u200b\u5b9a\u4e49\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u8ba1\u6570\u5668\u200b\u72b6\u6001\u200b\uff0c\u200b\u5305\u542b\u200b\u4e00\u4e2a\u200b <code>count</code> \u200b\u5c5e\u6027\u200b\u548c\u200b\u4e00\u4e2a\u200b <code>inc</code> \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u589e\u52a0\u200b\u8ba1\u6570\u5668\u200b\u7684\u200b\u503c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { create } from 'zustand';\nimport { counterStoreCreator } from '../shared/counter-store-creator';\n\nconst useCounterStore = create(counterStoreCreator);\n\nconst { count, inc } = useCounterStore.getState();\nconsole.log(count); // \u200b\u8f93\u51fa\u200b: 1\ninc();\nconsole.log(count); // \u200b\u8f93\u51fa\u200b: 2\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u73af\u5883\u200b\u4e2d\u200b\uff0c\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u5728\u200b\u6bcf\u6b21\u200b\u6d4b\u8bd5\u200b\u540e\u200b\u91cd\u7f6e\u200b\u3002 - \u200b\u4f7f\u7528\u200b <code>create</code> \u200b\u51fd\u6570\u200b\u65f6\u200b\uff0c\u200b\u786e\u4fdd\u200b Zustand \u200b\u7684\u200b mock \u200b\u914d\u7f6e\u200b\u6b63\u786e\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#2-create-zustand-mock","title":"2. <code>create</code> (Zustand Mock)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b mock Zustand \u200b\u7684\u200b <code>create</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u5b83\u200b\u786e\u4fdd\u200b\u5728\u200b\u6bcf\u6b21\u200b\u6d4b\u8bd5\u200b\u540e\u200b\u91cd\u7f6e\u200b\u72b6\u6001\u200b\uff0c\u200b\u907f\u514d\u200b\u72b6\u6001\u200b\u6c61\u67d3\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { create } from 'zustand';\nimport { counterStoreCreator } from '../shared/counter-store-creator';\n\nconst useCounterStore = create(counterStoreCreator);\n\n// \u200b\u6d4b\u8bd5\u4ee3\u7801\u200b\nafterEach(() =&gt; {\n  useCounterStore.setState(useCounterStore.getInitialState(), true);\n});\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b mock \u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b Jest \u200b\u6216\u200b Vitest \u200b\u73af\u5883\u200b\u4e2d\u200b\u3002 - \u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u7ed3\u675f\u200b\u540e\u200b\u8c03\u7528\u200b <code>afterEach</code> \u200b\u6765\u200b\u91cd\u7f6e\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#3-createstore-zustand-mock","title":"3. <code>createStore</code> (Zustand Mock)","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>createStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u7528\u4e8e\u200b mock Zustand \u200b\u7684\u200b <code>createStore</code> \u200b\u51fd\u6570\u200b\u7684\u200b\u5b9e\u73b0\u200b\u3002\u200b\u5b83\u200b\u4e0e\u200b <code>create</code> \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u72ec\u7acb\u200b\u7684\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { createStore } from 'zustand';\nimport { counterStoreCreator } from '../shared/counter-store-creator';\n\nconst store = createStore(counterStoreCreator);\n\n// \u200b\u6d4b\u8bd5\u4ee3\u7801\u200b\nafterEach(() =&gt; {\n  store.setState(store.getInitialState(), true);\n});\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b mock \u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b Jest \u200b\u6216\u200b Vitest \u200b\u73af\u5883\u200b\u4e2d\u200b\u3002 - \u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u7ed3\u675f\u200b\u540e\u200b\u8c03\u7528\u200b <code>afterEach</code> \u200b\u6765\u200b\u91cd\u7f6e\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#4-usecounterstore","title":"4. <code>useCounterStore</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useCounterStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b Zustand \u200b\u521b\u5efa\u200b\u7684\u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u94a9\u5b50\u200b\uff0c\u200b\u57fa\u4e8e\u200b <code>counterStoreCreator</code> \u200b\u521b\u5efa\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { useCounterStore } from '../../stores/use-counter-store';\n\nfunction Counter() {\n  const { count, inc } = useCounterStore();\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Counter Store&lt;/h2&gt;\n      &lt;h4&gt;{count}&lt;/h4&gt;\n      &lt;button onClick={inc}&gt;One Up&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u94a9\u5b50\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b React \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u6b63\u786e\u200b\u3002 - \u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\uff0c\u200b\u786e\u4fdd\u200b\u72b6\u6001\u200b\u5728\u200b\u6bcf\u6b21\u200b\u6d4b\u8bd5\u200b\u540e\u200b\u91cd\u7f6e\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#5-counterstoreprovider","title":"5. <code>CounterStoreProvider</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>CounterStoreProvider</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b React \u200b\u4e0a\u4e0b\u6587\u200b\u63d0\u4f9b\u8005\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u7ec4\u4ef6\u200b\u6811\u4e2d\u200b\u5171\u4eab\u200b Zustand \u200b\u72b6\u6001\u200b\u5b58\u50a8\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { CounterStoreProvider } from '../../contexts/use-counter-store-context';\n\nfunction App() {\n  return (\n    &lt;CounterStoreProvider&gt;\n      &lt;Counter /&gt;\n    &lt;/CounterStoreProvider&gt;\n  );\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u6b63\u786e\u200b\u914d\u7f6e\u200b\u4e0a\u4e0b\u6587\u200b\u63d0\u4f9b\u8005\u200b\u3002 - \u200b\u4f7f\u7528\u200b <code>useCounterStoreContext</code> \u200b\u94a9\u5b50\u200b\u6765\u200b\u8bbf\u95ee\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#6-usecounterstorecontext","title":"6. <code>useCounterStoreContext</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useCounterStoreContext</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u94a9\u5b50\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4ece\u200b <code>CounterStoreProvider</code> \u200b\u63d0\u4f9b\u200b\u7684\u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u83b7\u53d6\u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { useCounterStoreContext } from '../../contexts/use-counter-store-context';\n\nfunction Counter() {\n  const { count, inc } = useCounterStoreContext((state) =&gt; state);\n\n  return (\n    &lt;div&gt;\n      &lt;h2&gt;Counter Store Context&lt;/h2&gt;\n      &lt;h4&gt;{count}&lt;/h4&gt;\n      &lt;button onClick={inc}&gt;One Up&lt;/button&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u786e\u4fdd\u200b\u5728\u200b <code>CounterStoreProvider</code> \u200b\u4e0a\u4e0b\u6587\u200b\u4e2d\u200b\u4f7f\u7528\u200b\u8be5\u200b\u94a9\u5b50\u200b\u3002 - \u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4e0a\u4e0b\u6587\u200b\u63d0\u4f9b\u8005\u200b\u6b63\u786e\u200b\u914d\u7f6e\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#7-rendercounter","title":"7. <code>renderCounter</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>renderCounter</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u6e32\u67d3\u200b <code>Counter</code> \u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { renderCounter } from './counter.test';\n\ndescribe('Counter', () =&gt; {\n  test('should render with initial state of 1', async () =&gt; {\n    renderCounter();\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument();\n  });\n});\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u7b80\u5316\u200b\u6e32\u67d3\u200b\u903b\u8f91\u200b\u3002 - \u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b <code>render</code> \u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#8-rendercounterwithcontext","title":"8. <code>renderCounterWithContext</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>renderCounterWithContext</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u6e32\u67d3\u200b <code>CounterWithContext</code> \u200b\u7ec4\u4ef6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { renderCounterWithContext } from './counter-with-context.test';\n\ndescribe('CounterWithContext', () =&gt; {\n  test('should render with initial state of 1', async () =&gt; {\n    renderCounterWithContext();\n    expect(await screen.findByText(/^1$/)).toBeInTheDocument();\n  });\n});\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u51fd\u6570\u200b\u901a\u5e38\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u200b\u6587\u4ef6\u200b\u4e2d\u200b\uff0c\u200b\u7b80\u5316\u200b\u6e32\u67d3\u200b\u903b\u8f91\u200b\u3002 - \u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u4e2d\u200b\u6b63\u786e\u200b\u4f7f\u7528\u200b <code>render</code> \u200b\u51fd\u6570\u200b\uff0c\u200b\u5e76\u200b\u914d\u7f6e\u200b\u4e0a\u4e0b\u6587\u200b\u63d0\u4f9b\u8005\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/testing.md_summary/#_2","title":"\u603b\u7ed3","text":"<p>\u200b\u4ee5\u4e0a\u200b\u662f\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7b80\u8981\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u548c\u200b\u65b9\u6cd5\u200b\u4e3b\u8981\u200b\u7528\u4e8e\u200b\u6d4b\u8bd5\u73af\u5883\u200b\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u548c\u200b\u7ec4\u4ef6\u200b\u6e32\u67d3\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u6d4b\u8bd5\u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u72b6\u6001\u200b\u7684\u200b\u6b63\u786e\u6027\u200b\u548c\u200b\u4e00\u81f4\u6027\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/","title":"Tutorial tic tac toe.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#1-square","title":"1. <code>Square</code> \u200b\u7ec4\u4ef6","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>Square</code> \u200b\u7ec4\u4ef6\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8868\u793a\u200b\u4e95\u5b57\u68cb\u200b\u68cb\u76d8\u200b\u4e0a\u200b\u5355\u4e2a\u200b\u65b9\u683c\u200b\u7684\u200b React \u200b\u7ec4\u4ef6\u200b\u3002\u200b\u5b83\u200b\u63a5\u6536\u200b <code>value</code> \u200b\u548c\u200b <code>onSquareClick</code> \u200b\u4f5c\u4e3a\u200b props\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b <code>&lt;button&gt;</code> \u200b\u5143\u7d20\u200b\uff0c\u200b\u8be5\u200b\u6309\u94ae\u200b\u663e\u793a\u200b <code>value</code> \u200b\u5c5e\u6027\u200b\uff08\u200b\u53ef\u4ee5\u200b\u662f\u200b <code>'X'</code>\u3001<code>'O'</code> \u200b\u6216\u200b <code>null</code>\uff09\u3002\u200b\u5f53\u200b\u6309\u94ae\u200b\u88ab\u200b\u70b9\u51fb\u200b\u65f6\u200b\uff0c\u200b\u5b83\u4f1a\u200b\u89e6\u53d1\u200b <code>onSquareClick</code> \u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>&lt;Square value=\"X\" onSquareClick={() =&gt; console.log('Square clicked')} /&gt;\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>value</code> \u200b\u53ef\u4ee5\u200b\u662f\u200b <code>'X'</code>\u3001<code>'O'</code> \u200b\u6216\u200b <code>null</code>\u3002 - <code>onSquareClick</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\u6309\u94ae\u200b\u88ab\u200b\u70b9\u51fb\u200b\u65f6\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#2-board","title":"2. <code>Board</code> \u200b\u7ec4\u4ef6","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>Board</code> \u200b\u7ec4\u4ef6\u200b\u662f\u200b\u4e00\u4e2a\u200b\u8868\u793a\u200b\u4e95\u5b57\u68cb\u200b\u68cb\u76d8\u200b\u7684\u200b React \u200b\u7ec4\u4ef6\u200b\u3002\u200b\u5b83\u200b\u7531\u200b 9 \u200b\u4e2a\u200b <code>Square</code> \u200b\u7ec4\u4ef6\u200b\u7ec4\u6210\u200b\uff0c\u200b\u6392\u5217\u6210\u200b 3x3 \u200b\u7684\u200b\u7f51\u683c\u200b\u3002<code>Board</code> \u200b\u7ec4\u4ef6\u200b\u63a5\u6536\u200b <code>xIsNext</code>\u3001<code>squares</code> \u200b\u548c\u200b <code>onPlay</code> \u200b\u4f5c\u4e3a\u200b props\uff0c\u200b\u5e76\u200b\u6839\u636e\u200b\u8fd9\u4e9b\u200b props \u200b\u6e32\u67d3\u200b\u68cb\u76d8\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>&lt;Board xIsNext={true} squares={Array(9).fill(null)} onPlay={(nextSquares) =&gt; console.log(nextSquares)} /&gt;\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>xIsNext</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u8868\u793a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u73a9\u5bb6\u200b\u662f\u5426\u662f\u200b <code>'X'</code>\u3002 - <code>squares</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b 9 \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8868\u793a\u200b\u68cb\u76d8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002 - <code>onPlay</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\u73a9\u5bb6\u200b\u70b9\u51fb\u200b\u65b9\u683c\u200b\u65f6\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\uff0c\u200b\u5e76\u200b\u4f20\u9012\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b <code>squares</code> \u200b\u6570\u7ec4\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#3-usegamestore","title":"3. <code>useGameStore</code> \u200b\u94a9\u5b50","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>useGameStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4f7f\u7528\u200b Zustand \u200b\u521b\u5efa\u200b\u7684\u200b\u5168\u5c40\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u94a9\u5b50\u200b\u3002\u200b\u5b83\u200b\u7ba1\u7406\u200b\u4e86\u200b\u4e95\u5b57\u68cb\u200b\u6e38\u620f\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u5305\u62ec\u200b <code>history</code>\u3001<code>currentMove</code> \u200b\u548c\u200b <code>xIsNext</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const { history, setHistory, currentMove, setCurrentMove, xIsNext, setXIsNext } = useGameStore();\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>history</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u7ec4\u200b\uff0c\u200b\u5b58\u50a8\u200b\u4e86\u200b\u6e38\u620f\u200b\u7684\u200b\u5386\u53f2\u200b\u72b6\u6001\u200b\u3002 - <code>currentMove</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\uff0c\u200b\u8868\u793a\u200b\u5f53\u524d\u200b\u663e\u793a\u200b\u7684\u200b\u79fb\u52a8\u200b\u6b65\u6570\u200b\u3002 - <code>xIsNext</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5e03\u5c14\u503c\u200b\uff0c\u200b\u8868\u793a\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u73a9\u5bb6\u200b\u662f\u5426\u662f\u200b <code>'X'</code>\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#4-handleclick","title":"4. <code>handleClick</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>handleClick</code> \u200b\u51fd\u6570\u200b\u662f\u200b <code>Board</code> \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e8b\u4ef6\u5904\u7406\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\u73a9\u5bb6\u200b\u70b9\u51fb\u200b\u67d0\u4e2a\u200b\u65b9\u683c\u200b\u65f6\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\u3002\u200b\u5b83\u4f1a\u200b\u66f4\u65b0\u200b\u68cb\u76d8\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u8c03\u7528\u200b <code>onPlay</code> \u200b\u51fd\u6570\u200b\u4f20\u9012\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b <code>squares</code> \u200b\u6570\u7ec4\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function handleClick(i) {\n  if (squares[i] || winner) return;\n  const nextSquares = squares.slice();\n  nextSquares[i] = player;\n  onPlay(nextSquares);\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>i</code> \u200b\u662f\u200b\u70b9\u51fb\u200b\u7684\u200b\u65b9\u683c\u200b\u7684\u200b\u7d22\u5f15\u200b\u3002 - <code>squares</code> \u200b\u6570\u7ec4\u200b\u4f1a\u200b\u88ab\u200b\u590d\u5236\u200b\u5e76\u200b\u66f4\u65b0\u200b\uff0c\u200b\u800c\u200b\u4e0d\u662f\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u539f\u59cb\u200b\u6570\u7ec4\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#5-calculatewinner","title":"5. <code>calculateWinner</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>calculateWinner</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u5f53\u524d\u200b\u68cb\u76d8\u200b\u72b6\u6001\u200b\u662f\u5426\u200b\u6709\u200b\u73a9\u5bb6\u200b\u83b7\u80dc\u200b\u3002\u200b\u5b83\u4f1a\u200b\u904d\u5386\u200b\u6240\u6709\u200b\u53ef\u80fd\u200b\u7684\u200b\u80dc\u5229\u200b\u7ec4\u5408\u200b\uff0c\u200b\u5e76\u200b\u8fd4\u56de\u200b\u83b7\u80dc\u200b\u7684\u200b\u73a9\u5bb6\u200b\uff08<code>'X'</code> \u200b\u6216\u200b <code>'O'</code>\uff09\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u83b7\u80dc\u8005\u200b\u5219\u200b\u8fd4\u56de\u200b <code>null</code>\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const winner = calculateWinner(squares);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>squares</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b 9 \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8868\u793a\u200b\u68cb\u76d8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#6-calculateturns","title":"6. <code>calculateTurns</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>calculateTurns</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u5f53\u524d\u200b\u68cb\u76d8\u200b\u4e0a\u200b\u5269\u4f59\u200b\u7684\u200b\u7a7a\u683c\u200b\u6570\u200b\u3002\u200b\u5b83\u4f1a\u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u6570\u5b57\u200b\uff0c\u200b\u8868\u793a\u200b\u5269\u4f59\u200b\u7684\u200b\u7a7a\u683c\u200b\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const turns = calculateTurns(squares);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>squares</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u5305\u542b\u200b 9 \u200b\u4e2a\u200b\u5143\u7d20\u200b\u7684\u200b\u6570\u7ec4\u200b\uff0c\u200b\u8868\u793a\u200b\u68cb\u76d8\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#7-calculatestatus","title":"7. <code>calculateStatus</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>calculateStatus</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u8ba1\u7b97\u200b\u5f53\u524d\u200b\u6e38\u620f\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u5305\u62ec\u200b\u80dc\u5229\u8005\u200b\u3001\u200b\u5e73\u5c40\u200b\u6216\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u73a9\u5bb6\u200b\u7684\u200b\u63d0\u793a\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const status = calculateStatus(winner, turns, player);\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>winner</code> \u200b\u662f\u200b\u83b7\u80dc\u200b\u7684\u200b\u73a9\u5bb6\u200b\uff08<code>'X'</code> \u200b\u6216\u200b <code>'O'</code>\uff09\uff0c\u200b\u5982\u679c\u200b\u6ca1\u6709\u200b\u83b7\u80dc\u8005\u200b\u5219\u200b\u4e3a\u200b <code>null</code>\u3002 - <code>turns</code> \u200b\u662f\u200b\u5269\u4f59\u200b\u7684\u200b\u7a7a\u683c\u200b\u6570\u200b\u3002 - <code>player</code> \u200b\u662f\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u73a9\u5bb6\u200b\uff08<code>'X'</code> \u200b\u6216\u200b <code>'O'</code>\uff09\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#8-handleplay","title":"8. <code>handlePlay</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>handlePlay</code> \u200b\u51fd\u6570\u200b\u662f\u200b <code>Game</code> \u200b\u7ec4\u4ef6\u200b\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e8b\u4ef6\u5904\u7406\u200b\u51fd\u6570\u200b\uff0c\u200b\u5f53\u200b\u73a9\u5bb6\u200b\u5728\u200b\u68cb\u76d8\u200b\u4e0a\u200b\u79fb\u52a8\u200b\u65f6\u4f1a\u200b\u88ab\u200b\u8c03\u7528\u200b\u3002\u200b\u5b83\u4f1a\u200b\u66f4\u65b0\u200b\u6e38\u620f\u200b\u7684\u200b\u5386\u53f2\u200b\u72b6\u6001\u200b\uff0c\u200b\u5e76\u200b\u5207\u6362\u200b\u4e0b\u200b\u4e00\u4e2a\u200b\u73a9\u5bb6\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function handlePlay(nextSquares) {\n  const nextHistory = history.slice(0, currentMove + 1).concat([nextSquares]);\n  setHistory(nextHistory);\n  setCurrentMove(nextHistory.length - 1);\n  setXIsNext(!xIsNext);\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>nextSquares</code> \u200b\u662f\u200b\u66f4\u65b0\u200b\u540e\u200b\u7684\u200b\u68cb\u76d8\u200b\u72b6\u6001\u200b\u6570\u7ec4\u200b\u3002 - <code>history</code> \u200b\u4f1a\u200b\u88ab\u200b\u66f4\u65b0\u200b\u4ee5\u200b\u5305\u542b\u200b\u65b0\u200b\u7684\u200b\u68cb\u76d8\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#9-jumpto","title":"9. <code>jumpTo</code> \u200b\u51fd\u6570","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>jumpTo</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u5c06\u200b\u6e38\u620f\u200b\u72b6\u6001\u200b\u56de\u9000\u200b\u5230\u200b\u6307\u5b9a\u200b\u7684\u200b\u5386\u53f2\u200b\u6b65\u9aa4\u200b\u3002\u200b\u5b83\u4f1a\u200b\u66f4\u65b0\u200b <code>currentMove</code> \u200b\u548c\u200b <code>xIsNext</code> \u200b\u72b6\u6001\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>function jumpTo(nextMove) {\n  setCurrentMove(nextMove);\n  setXIsNext(currentMove % 2 === 0);\n}\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>nextMove</code> \u200b\u662f\u200b\u76ee\u6807\u200b\u5386\u53f2\u200b\u6b65\u9aa4\u200b\u7684\u200b\u7d22\u5f15\u200b\u3002 - <code>xIsNext</code> \u200b\u4f1a\u200b\u6839\u636e\u200b <code>currentMove</code> \u200b\u7684\u200b\u5947\u5076\u6027\u200b\u8fdb\u884c\u200b\u66f4\u65b0\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/tutorial-tic-tac-toe.md_summary/#_2","title":"\u603b\u7ed3","text":"<p>\u200b\u4ee5\u4e0a\u200b\u662f\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u51fd\u6570\u200b\u548c\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7b80\u8981\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u3002\u200b\u8fd9\u4e9b\u200b\u51fd\u6570\u200b\u548c\u200b\u65b9\u6cd5\u200b\u5171\u540c\u200b\u6784\u6210\u200b\u4e86\u200b\u4e00\u4e2a\u200b\u5b8c\u6574\u200b\u7684\u200b\u4e95\u5b57\u68cb\u200b\u6e38\u620f\u200b\uff0c\u200b\u5c55\u793a\u200b\u4e86\u200b React \u200b\u548c\u200b Zustand \u200b\u7684\u200b\u57fa\u672c\u200b\u7528\u6cd5\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/","title":"Typescript.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":""},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#createt","title":"<code>create&lt;T&gt;()(...)</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>create</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5b58\u50a8\u200b\u3002\u200b\u5728\u200b TypeScript \u200b\u4e2d\u200b\uff0c\u200b\u4f7f\u7528\u200b <code>create&lt;T&gt;()(...)</code> \u200b\u7684\u200b\u5f62\u5f0f\u200b\u6765\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u72b6\u6001\u200b\u7684\u200b\u7c7b\u578b\u200b <code>T</code>\uff0c\u200b\u4ee5\u4fbf\u200b TypeScript \u200b\u80fd\u591f\u200b\u6b63\u786e\u200b\u63a8\u65ad\u200b\u548c\u200b\u68c0\u67e5\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { create } from 'zustand'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li>\u200b\u5fc5\u987b\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b <code>T</code>\uff0c\u200b\u5426\u5219\u200b TypeScript \u200b\u65e0\u6cd5\u200b\u6b63\u786e\u200b\u63a8\u65ad\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>create&lt;T&gt;()(...)</code> \u200b\u7684\u200b\u5f62\u5f0f\u200b\u65f6\u200b\uff0c\u200b\u6ce8\u610f\u200b\u62ec\u53f7\u200b\u7684\u200b\u6b63\u786e\u200b\u5339\u914d\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#combine","title":"<code>combine</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>combine</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7ec4\u5408\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u5141\u8bb8\u200b\u4f60\u200b\u5c06\u200b\u72b6\u6001\u200b\u5206\u5272\u200b\u6210\u200b\u591a\u4e2a\u200b\u90e8\u5206\u200b\uff0c\u200b\u5e76\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\uff0c\u200b\u4ece\u800c\u200b\u907f\u514d\u200b\u624b\u52a8\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { create } from 'zustand'\nimport { combine } from 'zustand/middleware'\n\nconst useBearStore = create(\n  combine({ bears: 0 }, (set) =&gt; ({\n    increase: (by: number) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  })),\n)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li><code>combine</code> \u200b\u4f1a\u200b\u81ea\u52a8\u200b\u63a8\u65ad\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\uff0c\u200b\u56e0\u6b64\u200b\u4e0d\u200b\u9700\u8981\u200b\u663e\u5f0f\u200b\u6307\u5b9a\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b <code>combine</code> \u200b\u65f6\u200b\uff0c<code>set</code> \u200b\u548c\u200b <code>get</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4e0e\u200b\u5b9e\u9645\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5b8c\u5168\u200b\u5339\u914d\u200b\uff0c\u200b\u9700\u8c28\u614e\u200b\u4f7f\u7528\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#devtools","title":"<code>devtools</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>devtools</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u4e0e\u200b Redux DevTools \u200b\u96c6\u6210\u200b\uff0c\u200b\u65b9\u4fbf\u200b\u8c03\u8bd5\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { create } from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()(\n  devtools((set) =&gt; ({\n    bears: 0,\n    increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n  })),\n)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li><code>devtools</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u5e94\u200b\u5c3d\u53ef\u80fd\u200b\u653e\u5728\u200b\u6700\u540e\u200b\u4f7f\u7528\u200b\uff0c\u200b\u4ee5\u200b\u786e\u4fdd\u200b <code>setState</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u53c2\u6570\u200b\u4e0d\u4f1a\u200b\u4e22\u5931\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#persist","title":"<code>persist</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>persist</code> \u200b\u662f\u200b Zustand \u200b\u5e93\u4e2d\u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\uff0c\u200b\u4f7f\u200b\u5176\u200b\u5728\u200b\u9875\u9762\u200b\u5237\u65b0\u200b\u540e\u200b\u4ecd\u7136\u200b\u4fdd\u7559\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst useBearStore = create&lt;BearState&gt;()(\n  persist(\n    (set) =&gt; ({\n      bears: 0,\n      increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n    }),\n    { name: 'bearStore' },\n  ),\n)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li><code>persist</code> \u200b\u4e2d\u95f4\u4ef6\u200b\u9700\u8981\u200b\u6307\u5b9a\u200b\u4e00\u4e2a\u200b <code>name</code> \u200b\u5c5e\u6027\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6807\u8bc6\u200b\u5b58\u50a8\u200b\u7684\u200b\u952e\u540d\u200b\u3002</li> <li>\u200b\u6301\u4e45\u200b\u5316\u200b\u7684\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u4e0e\u200b\u5b9e\u9645\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u4e0d\u200b\u5b8c\u5168\u200b\u5339\u914d\u200b\uff0c\u200b\u9700\u8c28\u614e\u200b\u4f7f\u7528\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#foo-middleware-that-changes-the-store-type","title":"<code>foo</code> (Middleware that changes the store type)","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>foo</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u81ea\u5b9a\u4e49\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u6dfb\u52a0\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u5c5e\u6027\u200b <code>foo</code>\uff0c\u200b\u5e76\u200b\u6539\u53d8\u200b\u5b58\u50a8\u200b\u7684\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { create } from 'zustand'\nimport { foo } from 'zustand/middleware'\n\nconst useBearStore = create(foo(() =&gt; ({ bears: 0 }), 'hello'))\nconsole.log(useBearStore.foo.toUpperCase())\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li>\u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u4f1a\u200b\u6539\u53d8\u200b\u5b58\u50a8\u200b\u7684\u200b\u7c7b\u578b\u200b\uff0c\u200b\u9700\u200b\u786e\u4fdd\u200b\u5728\u200b\u4f7f\u7528\u200b\u65f6\u200b\u7c7b\u578b\u200b\u63a8\u65ad\u200b\u6b63\u786e\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u65f6\u200b\uff0c\u200b\u5b58\u50a8\u200b\u7684\u200b\u7c7b\u578b\u200b\u4f1a\u200b\u5305\u542b\u200b <code>foo</code> \u200b\u5c5e\u6027\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/typescript.md_summary/#createboundedusestore","title":"<code>createBoundedUseStore</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: <code>createBoundedUseStore</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u4e00\u4e2a\u200b\u5e26\u6709\u200b\u7c7b\u578b\u200b\u7ea6\u675f\u200b\u7684\u200b <code>useStore</code> \u200b\u94a9\u5b50\u200b\uff0c\u200b\u4ee5\u4fbf\u200b\u5728\u200b\u4f7f\u7528\u200b vanilla store \u200b\u65f6\u200b\u80fd\u591f\u200b\u6b63\u786e\u200b\u63a8\u65ad\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { useStore, StoreApi } from 'zustand'\nimport { createStore } from 'zustand/vanilla'\n\ninterface BearState {\n  bears: number\n  increase: (by: number) =&gt; void\n}\n\nconst bearStore = createStore&lt;BearState&gt;()((set) =&gt; ({\n  bears: 0,\n  increase: (by) =&gt; set((state) =&gt; ({ bears: state.bears + by })),\n}))\n\nconst createBoundedUseStore = ((store) =&gt; (selector) =&gt;\n  useStore(store, selector)) as &lt;S extends StoreApi&lt;unknown&gt;&gt;(\n  store: S,\n) =&gt; {\n  (): ExtractState&lt;S&gt;\n  &lt;T&gt;(selector: (state: ExtractState&lt;S&gt;) =&gt; T): T\n}\n\ntype ExtractState&lt;S&gt; = S extends { getState: () =&gt; infer X } ? X : never\n\nconst useBearStore = createBoundedUseStore(bearStore)\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b:</li> <li>\u200b\u8be5\u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u5e26\u6709\u200b\u7c7b\u578b\u200b\u7ea6\u675f\u200b\u7684\u200b <code>useStore</code> \u200b\u94a9\u5b50\u200b\uff0c\u200b\u786e\u4fdd\u200b\u5728\u200b\u4f7f\u7528\u200b vanilla store \u200b\u65f6\u200b\u80fd\u591f\u200b\u6b63\u786e\u200b\u63a8\u65ad\u200b\u72b6\u6001\u200b\u7c7b\u578b\u200b\u3002</li> <li>\u200b\u4f7f\u7528\u200b\u65f6\u9700\u200b\u786e\u4fdd\u200b <code>selector</code> \u200b\u7684\u200b\u7c7b\u578b\u200b\u4e0e\u200b\u5b58\u50a8\u72b6\u6001\u200b\u7c7b\u578b\u200b\u5339\u914d\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/","title":"Updating state.md summary","text":""},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#1-set","title":"1. <code>set</code> \u200b\u51fd\u6570\u200b\u63cf\u8ff0","text":"<p><code>set</code> \u200b\u51fd\u6570\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b Zustand \u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u5e93\u4e2d\u200b\u7684\u200b\u72b6\u6001\u200b\u3002\u200b\u5b83\u200b\u63a5\u6536\u200b\u4e00\u4e2a\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5e76\u200b\u5c06\u200b\u5176\u200b\u6d45\u200b\u5408\u5e76\u200b\u5230\u200b\u73b0\u6709\u200b\u7684\u200b\u72b6\u6001\u200b\u4e2d\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_1","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>const usePersonStore = create&lt;State &amp; Action&gt;((set) =&gt; ({\n  firstName: '',\n  lastName: '',\n  updateFirstName: (firstName) =&gt; set(() =&gt; ({ firstName: firstName })),\n  updateLastName: (lastName) =&gt; set(() =&gt; ({ lastName: lastName })),\n}));\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li><code>set</code> \u200b\u51fd\u6570\u200b\u6267\u884c\u200b\u7684\u200b\u662f\u200b\u6d45\u200b\u5408\u5e76\u200b\uff0c\u200b\u56e0\u6b64\u200b\u5bf9\u4e8e\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\uff0c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u8fdb\u884c\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u5d4c\u5957\u200b\u72b6\u6001\u200b\u7684\u200b\u66f4\u65b0\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u5de5\u5177\u200b\u5982\u200b Immer\u3001optics-ts \u200b\u6216\u200b Ramda \u200b\u6765\u200b\u7b80\u5316\u200b\u64cd\u4f5c\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#2-normalinc","title":"2. <code>normalInc</code> \u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>normalInc</code> \u200b\u65b9\u6cd5\u200b\u7528\u4e8e\u200b\u66f4\u65b0\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u91c7\u7528\u200b\u624b\u52a8\u200b\u6df1\u200b\u62f7\u8d1d\u200b\u7684\u200b\u65b9\u5f0f\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_3","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>normalInc: () =&gt;\n  set((state) =&gt; ({\n    deep: {\n      ...state.deep,\n      nested: {\n        ...state.deep.nested,\n        obj: {\n          ...state.deep.nested.obj,\n          count: state.deep.nested.obj.count + 1\n        }\n      }\n    }\n  })),\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_4","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u200b\u8fd9\u79cd\u200b\u65b9\u5f0f\u200b\u4ee3\u7801\u200b\u5197\u957f\u200b\uff0c\u200b\u9002\u7528\u200b\u4e8e\u200b\u7b80\u5355\u200b\u7684\u200b\u5d4c\u5957\u200b\u7ed3\u6784\u200b\u3002</li> <li>\u200b\u5bf9\u4e8e\u200b\u66f4\u200b\u590d\u6742\u200b\u7684\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u5efa\u8bae\u200b\u4f7f\u7528\u200b\u5176\u4ed6\u200b\u5de5\u5177\u200b\u5982\u200b Immer\u3001optics-ts \u200b\u6216\u200b Ramda \u200b\u6765\u200b\u7b80\u5316\u200b\u64cd\u4f5c\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#3-immerinc","title":"3. <code>immerInc</code> \u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>immerInc</code> \u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b Immer \u200b\u5e93\u6765\u200b\u7b80\u5316\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_5","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>immerInc: () =&gt;\n  set(produce((state: State) =&gt; { ++state.deep.nested.obj.count })),\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_6","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>Immer \u200b\u901a\u8fc7\u200b\u4ee3\u7406\u200b\u5bf9\u8c61\u200b\u5b9e\u73b0\u200b\u72b6\u6001\u200b\u7684\u200b\u4e0d\u53ef\u200b\u53d8\u66f4\u200b\u65b0\u200b\uff0c\u200b\u4ee3\u7801\u200b\u7b80\u6d01\u200b\u4f46\u200b\u9700\u6ce8\u610f\u200b\u5176\u200b\u5185\u90e8\u200b\u673a\u5236\u200b\u3002</li> <li>\u200b\u8bf7\u200b\u53c2\u8003\u200b Immer \u200b\u7684\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#4-opticsinc","title":"4. <code>opticsInc</code> \u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>opticsInc</code> \u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b optics-ts \u200b\u5e93\u6765\u200b\u66f4\u65b0\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_7","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>opticsInc: () =&gt;\n  set(O.modify(O.optic&lt;State&gt;().path(\"deep.nested.obj.count\"))((c) =&gt; c + 1)),\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_8","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>optics-ts \u200b\u4e0d\u200b\u4f7f\u7528\u200b\u4ee3\u7406\u200b\u6216\u200b\u7a81\u53d8\u200b\u8bed\u6cd5\u200b\uff0c\u200b\u9002\u5408\u200b\u5bf9\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u6709\u200b\u8f83\u200b\u9ad8\u200b\u8981\u6c42\u200b\u7684\u200b\u573a\u666f\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u5f15\u5165\u200b optics-ts \u200b\u5e93\u200b\u5e76\u200b\u719f\u6089\u200b\u5176\u200b API\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#5-ramdainc","title":"5. <code>ramdaInc</code> \u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":"<p><code>ramdaInc</code> \u200b\u65b9\u6cd5\u200b\u4f7f\u7528\u200b Ramda \u200b\u5e93\u6765\u200b\u66f4\u65b0\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u72b6\u6001\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_9","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":"<pre><code>ramdaInc: () =&gt;\n  set(R.modifyPath([\"deep\", \"nested\", \"obj\", \"count\"], (c) =&gt; c + 1)),\n</code></pre>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_10","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>Ramda \u200b\u63d0\u4f9b\u200b\u4e86\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7f16\u7a0b\u200b\u7684\u200b\u5de5\u5177\u200b\uff0c\u200b\u9002\u5408\u200b\u5bf9\u200b\u51fd\u6570\u200b\u5f0f\u200b\u7f16\u7a0b\u200b\u6709\u200b\u7ecf\u9a8c\u200b\u7684\u200b\u5f00\u53d1\u8005\u200b\u3002</li> <li>\u200b\u9700\u8981\u200b\u5f15\u5165\u200b Ramda \u200b\u5e93\u200b\u5e76\u200b\u719f\u6089\u200b\u5176\u200b API\u3002</li> </ul>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#6","title":"6. \u200b\u4ee3\u7801\u200b\u793a\u4f8b\u200b\u603b\u7ed3","text":"<p>\u200b\u4ee5\u4e0a\u200b\u65b9\u6cd5\u200b\u5c55\u793a\u200b\u4e86\u200b\u5982\u4f55\u200b\u4f7f\u7528\u200b Zustand \u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u7279\u522b\u200b\u662f\u200b\u5904\u7406\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u65f6\u200b\u7684\u200b\u4e0d\u540c\u200b\u7b56\u7565\u200b\u3002\u200b\u6bcf\u79cd\u200b\u65b9\u6cd5\u200b\u90fd\u200b\u6709\u200b\u5176\u200b\u4f18\u7f3a\u70b9\u200b\uff0c\u200b\u5f00\u53d1\u8005\u200b\u53ef\u4ee5\u200b\u6839\u636e\u200b\u9879\u76ee\u200b\u9700\u6c42\u200b\u9009\u62e9\u200b\u5408\u9002\u200b\u7684\u200b\u5de5\u5177\u200b\u3002</p>"},{"location":"programming/javascript/zustand/guides/summaries/updating-state.md_summary/#_11","title":"\u793a\u4f8b\u200b\u4ee3\u7801\u200b\u94fe\u63a5","text":"<p>CodeSandbox Demo</p>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/","title":"Immer middleware","text":"<p>The Immer middleware enables you to use immutable state in a more convenient way. Also, with Immer, you can simplify handling immutable data structures in Zustand.</p>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/#installation","title":"Installation","text":"<p>In order to use the Immer middleware in Zustand, you will need to install Immer as a direct dependency.</p> <pre><code>npm install immer\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/#usage","title":"Usage","text":"<p>(Notice the extra parentheses after the type parameter as mentioned in the Typescript Guide).</p> <p>Updating simple states</p> <pre><code>import { create } from 'zustand'\nimport { immer } from 'zustand/middleware/immer'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\nexport const useCountStore = create&lt;State &amp; Actions&gt;()(\n  immer((set) =&gt; ({\n    count: 0,\n    increment: (qty: number) =&gt;\n      set((state) =&gt; {\n        state.count += qty\n      }),\n    decrement: (qty: number) =&gt;\n      set((state) =&gt; {\n        state.count -= qty\n      }),\n  })),\n)\n</code></pre> <p>Updating complex states</p> <pre><code>import { create } from 'zustand'\nimport { immer } from 'zustand/middleware/immer'\n\ninterface Todo {\n  id: string\n  title: string\n  done: boolean\n}\n\ntype State = {\n  todos: Record&lt;string, Todo&gt;\n}\n\ntype Actions = {\n  toggleTodo: (todoId: string) =&gt; void\n}\n\nexport const useTodoStore = create&lt;State &amp; Actions&gt;()(\n  immer((set) =&gt; ({\n    todos: {\n      '82471c5f-4207-4b1d-abcb-b98547e01a3e': {\n        id: '82471c5f-4207-4b1d-abcb-b98547e01a3e',\n        title: 'Learn Zustand',\n        done: false,\n      },\n      '354ee16c-bfdd-44d3-afa9-e93679bda367': {\n        id: '354ee16c-bfdd-44d3-afa9-e93679bda367',\n        title: 'Learn Jotai',\n        done: false,\n      },\n      '771c85c5-46ea-4a11-8fed-36cc2c7be344': {\n        id: '771c85c5-46ea-4a11-8fed-36cc2c7be344',\n        title: 'Learn Valtio',\n        done: false,\n      },\n      '363a4bac-083f-47f7-a0a2-aeeee153a99c': {\n        id: '363a4bac-083f-47f7-a0a2-aeeee153a99c',\n        title: 'Learn Signals',\n        done: false,\n      },\n    },\n    toggleTodo: (todoId: string) =&gt;\n      set((state) =&gt; {\n        state.todos[todoId].done = !state.todos[todoId].done\n      }),\n  })),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/#gotchas","title":"Gotchas","text":"<p>In this section you will find some things that you need to keep in mind when using Zustand with Immer.</p>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/#my-subscriptions-arent-being-called","title":"My subscriptions aren't being called","text":"<p>If you are using Immer, make sure you are actually following the rules of Immer.</p> <p>For example, you have to add <code>[immerable] = true</code> for class objects to work. If you don't do this, Immer will still mutate the object, but not as a proxy, so it will also update the current state. Zustand checks if the state has actually changed, so since both the current state and the next state are equal (if you don't do it correctly), Zustand will skip calling the subscriptions.</p>"},{"location":"programming/javascript/zustand/integrations/immer-middleware/#codesandbox-demo","title":"CodeSandbox Demo","text":"<ul> <li>Basic,</li> <li>Advanced.</li> </ul>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/","title":"Persisting store data","text":"<p>The Persist middleware enables you to store your Zustand state in a storage (e.g., <code>localStorage</code>, <code>AsyncStorage</code>, <code>IndexedDB</code>, etc.), thus persisting its data.</p> <p>Note that this middleware supports both synchronous storages, like <code>localStorage</code>, and asynchronous storages, like <code>AsyncStorage</code>, but using an asynchronous storage does come with a cost. See Hydration and asynchronous storages for more details.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#simple-example","title":"Simple example","text":"<pre><code>import { create } from 'zustand'\nimport { persist, createJSONStorage } from 'zustand/middleware'\n\nexport const useBearStore = create(\n  persist(\n    (set, get) =&gt; ({\n      bears: 0,\n      addABear: () =&gt; set({ bears: get().bears + 1 }),\n    }),\n    {\n      name: 'food-storage', // name of the item in the storage (must be unique)\n      storage: createJSONStorage(() =&gt; sessionStorage), // (optional) by default, 'localStorage' is used\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#options","title":"Options","text":""},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#name","title":"<code>name</code>","text":"<p>This is the only required option. The given name is going to be the key used to store your Zustand state in the storage, so it must be unique.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#storage","title":"<code>storage</code>","text":"<p>Type: <code>() =&gt; StateStorage</code></p> <p>The <code>StateStorage</code> can be imported with:</p> <pre><code>import { StateStorage } from 'zustand/middleware'\n</code></pre> <p>Default: <code>createJSONStorage(() =&gt; localStorage)</code></p> <p>Enables you to use your own storage. Simply pass a function that returns the storage you want to use. It's recommended to use the <code>createJSONStorage</code> helper function to create a <code>storage</code> object that is compliant with the <code>StateStorage</code> interface.</p> <p>Example:</p> <pre><code>import { persist, createJSONStorage } from 'zustand/middleware'\n\nexport const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      // ...\n    }),\n    {\n      // ...\n      storage: createJSONStorage(() =&gt; AsyncStorage),\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#partialize","title":"<code>partialize</code>","text":"<p>Type: <code>(state: Object) =&gt; Object</code></p> <p>Default: <code>(state) =&gt; state</code></p> <p>Enables you to pick some of the state's fields to be stored in the storage.</p> <p>You could omit multiple fields using the following:</p> <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      foo: 0,\n      bar: 1,\n    }),\n    {\n      // ...\n      partialize: (state) =&gt;\n        Object.fromEntries(\n          Object.entries(state).filter(([key]) =&gt; !['foo'].includes(key)),\n        ),\n    },\n  ),\n)\n</code></pre> <p>Or you could allow only specific fields using the following:</p> <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      foo: 0,\n      bar: 1,\n    }),\n    {\n      // ...\n      partialize: (state) =&gt; ({ foo: state.foo }),\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#onrehydratestorage","title":"<code>onRehydrateStorage</code>","text":"<p>Type: <code>(state: Object) =&gt; ((state?: Object, error?: Error) =&gt; void) | void</code></p> <p>This option enables you to pass a listener function that will be called when the storage is hydrated.</p> <p>Example:</p> <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      // ...\n    }),\n    {\n      // ...\n      onRehydrateStorage: (state) =&gt; {\n        console.log('hydration starts')\n\n        // optional\n        return (state, error) =&gt; {\n          if (error) {\n            console.log('an error happened during hydration', error)\n          } else {\n            console.log('hydration finished')\n          }\n        }\n      },\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#version","title":"<code>version</code>","text":"<p>Type: <code>number</code></p> <p>Default: <code>0</code></p> <p>If you want to introduce a breaking change in your storage (e.g. renaming a field), you can specify a new version number. By default, if the version in the storage does not match the version in the code, the stored value won't be used. You can use the migrate function (see below) to handle breaking changes in order to persist previously stored data.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#migrate","title":"<code>migrate</code>","text":"<p>Type: <code>(persistedState: Object, version: number) =&gt; Object | Promise&lt;Object&gt;</code></p> <p>Default: <code>(persistedState) =&gt; persistedState</code></p> <p>You can use this option to handle versions migration. The migrate function takes the persisted state and the version number as arguments. It must return a state that is compliant to the latest version (the version in the code).</p> <p>For instance, if you want to rename a field, you can use the following:</p> <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      newField: 0, // let's say this field was named otherwise in version 0\n    }),\n    {\n      // ...\n      version: 1, // a migration will be triggered if the version in the storage mismatches this one\n      migrate: (persistedState, version) =&gt; {\n        if (version === 0) {\n          // if the stored value is in version 0, we rename the field to the new name\n          persistedState.newField = persistedState.oldField\n          delete persistedState.oldField\n        }\n\n        return persistedState\n      },\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#merge","title":"<code>merge</code>","text":"<p>Type: <code>(persistedState: Object, currentState: Object) =&gt; Object</code></p> <p>Default: <code>(persistedState, currentState) =&gt; ({ ...currentState, ...persistedState })</code></p> <p>In some cases, you might want to use a custom merge function to merge the persisted value with the current state.</p> <p>By default, the middleware does a shallow merge. The shallow merge might not be enough if you have partially persisted nested objects. For instance, if the storage contains the following:</p> <pre><code>{\n  foo: {\n    bar: 0,\n  }\n}\n</code></pre> <p>But your Zustand store contains:</p> <pre><code>{\n  foo: {\n    bar: 0,\n    baz: 1,\n  }\n}\n</code></pre> <p>The shallow merge will erase the <code>baz</code> field from the <code>foo</code> object. One way to fix this would be to give a custom deep merge function:</p> <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      foo: {\n        bar: 0,\n        baz: 1,\n      },\n    }),\n    {\n      // ...\n      merge: (persistedState, currentState) =&gt;\n        deepMerge(currentState, persistedState),\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#skiphydration","title":"<code>skipHydration</code>","text":"<p>Type: <code>boolean | undefined</code></p> <p>Default: <code>undefined</code></p> <p>By default the store will be hydrated on initialization.</p> <p>In some applications you may need to control when the first hydration occurs. For example, in server-rendered apps.</p> <p>If you set <code>skipHydration</code>, the initial call for hydration isn't called, and it is left up to you to manually call <code>rehydrate()</code>.</p> <pre><code>export const useBoundStore = create(\n  persist(\n    () =&gt; ({\n      count: 0,\n      // ...\n    }),\n    {\n      // ...\n      skipHydration: true,\n    },\n  ),\n)\n</code></pre> <pre><code>import { useBoundStore } from './path-to-store';\n\nexport function StoreConsumer() {\n  // hydrate persisted store after on mount\n  useEffect(() =&gt; {\n    useBoundStore.persist.rehydrate();\n  }, [])\n\n  return (\n    //...\n  )\n}\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#api","title":"API","text":"<p>Version: &gt;=3.6.3</p> <p>The Persist API enables you to do a number of interactions with the Persist middleware from inside or outside of a React component.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#getoptions","title":"<code>getOptions</code>","text":"<p>Type: <code>() =&gt; Partial&lt;PersistOptions&gt;</code></p> <p>Returns: Options of the Persist middleware</p> <p>For example, it can be used to obtain the storage name:</p> <pre><code>useBoundStore.persist.getOptions().name\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#setoptions","title":"<code>setOptions</code>","text":"<p>Type: <code>(newOptions: Partial&lt;PersistOptions&gt;) =&gt; void</code></p> <p>Changes the middleware options. Note that the new options will be merged with the current ones.</p> <p>For instance, this can be used to change the storage name:</p> <pre><code>useBoundStore.persist.setOptions({\n  name: 'new-name',\n})\n</code></pre> <p>Or even to change the storage engine:</p> <pre><code>useBoundStore.persist.setOptions({\n  storage: createJSONStorage(() =&gt; sessionStorage),\n})\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#clearstorage","title":"<code>clearStorage</code>","text":"<p>Type: <code>() =&gt; void</code></p> <p>Clears everything stored under the name key.</p> <pre><code>useBoundStore.persist.clearStorage()\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#rehydrate","title":"<code>rehydrate</code>","text":"<p>Type: <code>() =&gt; Promise&lt;void&gt;</code></p> <p>In some cases, you might want to trigger the rehydration manually. This can be done by calling the <code>rehydrate</code> method.</p> <pre><code>await useBoundStore.persist.rehydrate()\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#hashydrated","title":"<code>hasHydrated</code>","text":"<p>Type: <code>() =&gt; boolean</code></p> <p>This is a non-reactive getter to check if the storage has been hydrated (note that it updates when calling <code>rehydrate</code>).</p> <pre><code>useBoundStore.persist.hasHydrated()\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#onhydrate","title":"<code>onHydrate</code>","text":"<p>Type: <code>(listener: (state) =&gt; void) =&gt; () =&gt; void</code></p> <p>Returns: Unsubscribe function</p> <p>This listener will be called when the hydration process starts.</p> <pre><code>const unsub = useBoundStore.persist.onHydrate((state) =&gt; {\n  console.log('hydration starts')\n})\n\n// later on...\nunsub()\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#onfinishhydration","title":"<code>onFinishHydration</code>","text":"<p>Type: <code>(listener: (state) =&gt; void) =&gt; () =&gt; void</code></p> <p>Returns: Unsubscribe function</p> <p>This listener will be called when the hydration process ends.</p> <pre><code>const unsub = useBoundStore.persist.onFinishHydration((state) =&gt; {\n  console.log('hydration finished')\n})\n\n// later on...\nunsub()\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#createjsonstorage","title":"<code>createJSONStorage</code>","text":"<p>Type: <code>(getStorage: () =&gt; StateStorage, options?: JsonStorageOptions) =&gt; StateStorage</code></p> <p>Returns: <code>PersistStorage</code></p> <p>This helper function enables you to create a <code>storage</code> object which is useful when you want to use a custom storage engine.</p> <p><code>getStorage</code> is a function that returns the storage engine with the properties <code>getItem</code>, <code>setItem</code>, and <code>removeItem</code>.</p> <p><code>options</code> is an optional object that can be used to customize the serialization and deserialization of the data. <code>options.reviver</code> is a function that is passed to <code>JSON.parse</code> to deserialize the data. <code>options.replacer</code> is a function that is passed to <code>JSON.stringify</code> to serialize the data.</p> <pre><code>import { createJSONStorage } from 'zustand/middleware'\n\nconst storage = createJSONStorage(() =&gt; sessionStorage, {\n  reviver: (key, value) =&gt; {\n    if (value &amp;&amp; value.type === 'date') {\n      return new Date(value)\n    }\n    return value\n  },\n  replacer: (key, value) =&gt; {\n    if (value instanceof Date) {\n      return { type: 'date', value: value.toISOString() }\n    }\n    return value\n  },\n})\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#hydration-and-asynchronous-storages","title":"Hydration and asynchronous storages","text":"<p>To explain what is the \"cost\" of asynchronous storages, you need to understand what is hydration.</p> <p>In a nutshell, hydration is a process of retrieving persisted state from the storage and merging it with the current state.</p> <p>The Persist middleware does two kinds of hydration: synchronous and asynchronous. If the given storage is synchronous (e.g., <code>localStorage</code>), hydration will be done synchronously. On the other hand, if the given storage is asynchronous (e.g., <code>AsyncStorage</code>), hydration will be done asynchronously (shocking, I know!).</p> <p>But what's the catch? With synchronous hydration, the Zustand store will already have been hydrated at its creation. In contrast, with asynchronous hydration, the Zustand store will be hydrated later on, in a microtask.</p> <p>Why does it matter? Asynchronous hydration can cause some unexpected behaviors. For instance, if you use Zustand in a React app, the store will not be hydrated at the initial render. In cases where your app depends on the persisted value at page load, you might want to wait until the store has been hydrated before showing anything. For example, your app might think the user is not logged in because it's the default, but in reality the store has not been hydrated yet.</p> <p>If your app does depends on the persisted state at page load, see How can I check if my store has been hydrated in the FAQ section below.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#usage-in-nextjs","title":"Usage in Next.js","text":"<p>NextJS uses Server Side Rendering, and it will compare the rendered component on the server with the one rendered on client. But since you are using data from browser to change your component, the two renders will differ and Next will throw a warning at you.</p> <p>The errors usually are:</p> <ul> <li>Text content does not match server-rendered HTML</li> <li>Hydration failed because the initial UI does not match what was rendered on the server</li> <li>There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering</li> </ul> <p>To solve these errors, create a custom hook so that Zustand waits a little before changing your components.</p> <p>Create a file with the following:</p> <pre><code>// useStore.ts\nimport { useState, useEffect } from 'react'\n\nconst useStore = &lt;T, F&gt;(\n  store: (callback: (state: T) =&gt; unknown) =&gt; unknown,\n  callback: (state: T) =&gt; F,\n) =&gt; {\n  const result = store(callback) as F\n  const [data, setData] = useState&lt;F&gt;()\n\n  useEffect(() =&gt; {\n    setData(result)\n  }, [result])\n\n  return data\n}\n\nexport default useStore\n</code></pre> <p>Now in your pages, you will use the hook a little bit differently:</p> <pre><code>// useBearStore.ts\n\nimport { create } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\n// the store itself does not need any change\nexport const useBearStore = create(\n  persist(\n    (set, get) =&gt; ({\n      bears: 0,\n      addABear: () =&gt; set({ bears: get().bears + 1 }),\n    }),\n    {\n      name: 'food-storage',\n    },\n  ),\n)\n</code></pre> <pre><code>// yourComponent.tsx\n\nimport useStore from './useStore'\nimport { useBearStore } from './stores/useBearStore'\n\nconst bears = useStore(useBearStore, (state) =&gt; state.bears)\n</code></pre> <p>Credits: This reply to an issue, which points to this blog post.</p>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#faq","title":"FAQ","text":""},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#how-can-i-check-if-my-store-has-been-hydrated","title":"How can I check if my store has been hydrated","text":"<p>There are a few different ways to do this.</p> <p>You can use the <code>onRehydrateStorage</code> listener function to update a field in the store:</p> <pre><code>const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      // ...\n      _hasHydrated: false,\n      setHasHydrated: (state) =&gt; {\n        set({\n          _hasHydrated: state\n        });\n      }\n    }),\n    {\n      // ...\n      onRehydrateStorage: (state) =&gt; {\n        return () =&gt; state.setHasHydrated(true)\n      }\n    }\n  )\n);\n\nexport default function App() {\n  const hasHydrated = useBoundStore(state =&gt; state._hasHydrated);\n\n  if (!hasHydrated) {\n    return &lt;p&gt;Loading...&lt;/p&gt;\n  }\n\n  return (\n    // ...\n  );\n}\n</code></pre> <p>You can also create a custom <code>useHydration</code> hook:</p> <pre><code>const useBoundStore = create(persist(...))\n\nconst useHydration = () =&gt; {\n  const [hydrated, setHydrated] = useState(false)\n\n  useEffect(() =&gt; {\n    // Note: This is just in case you want to take into account manual rehydration.\n    // You can remove the following line if you don't need it.\n    const unsubHydrate = useBoundStore.persist.onHydrate(() =&gt; setHydrated(false))\n\n    const unsubFinishHydration = useBoundStore.persist.onFinishHydration(() =&gt; setHydrated(true))\n\n    setHydrated(useBoundStore.persist.hasHydrated())\n\n    return () =&gt; {\n      unsubHydrate()\n      unsubFinishHydration()\n    }\n  }, [])\n\n  return hydrated\n}\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#how-can-i-use-a-custom-storage-engine","title":"How can I use a custom storage engine","text":"<p>If the storage you want to use does not match the expected API, you can create your own storage:</p> <pre><code>import { create } from 'zustand'\nimport { persist, createJSONStorage, StateStorage } from 'zustand/middleware'\nimport { get, set, del } from 'idb-keyval' // can use anything: IndexedDB, Ionic Storage, etc.\n\n// Custom storage object\nconst storage: StateStorage = {\n  getItem: async (name: string): Promise&lt;string | null&gt; =&gt; {\n    console.log(name, 'has been retrieved')\n    return (await get(name)) || null\n  },\n  setItem: async (name: string, value: string): Promise&lt;void&gt; =&gt; {\n    console.log(name, 'with value', value, 'has been saved')\n    await set(name, value)\n  },\n  removeItem: async (name: string): Promise&lt;void&gt; =&gt; {\n    console.log(name, 'has been deleted')\n    await del(name)\n  },\n}\n\nexport const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      bears: 0,\n      addABear: () =&gt; set({ bears: get().bears + 1 }),\n    }),\n    {\n      name: 'food-storage', // unique name\n      storage: createJSONStorage(() =&gt; storage),\n    },\n  ),\n)\n</code></pre> <p>If you're using a type that <code>JSON.stringify()</code> doesn't support, you'll need to write your own serialization/deserialization code. However, if this is tedious, you can use third-party libraries to serialize and deserialize different types of data.</p> <p>For example, Superjson can serialize data along with its type, allowing the data to be parsed back to its original type upon deserialization</p> <pre><code>import superjson from 'superjson' //  can use anything: serialize-javascript, devalue, etc.\nimport { PersistStorage } from 'zustand/middleware'\n\ninterface BearState {\n  bear: Map&lt;string, string&gt;\n  fish: Set&lt;string&gt;\n  time: Date\n  query: RegExp\n}\n\nconst storage: PersistStorage&lt;BearState&gt; = {\n  getItem: (name) =&gt; {\n    const str = localStorage.getItem(name)\n    if (!str) return null\n    return superjson.parse(str)\n  },\n  setItem: (name, value) =&gt; {\n    localStorage.setItem(name, superjson.stringify(value))\n  },\n  removeItem: (name) =&gt; localStorage.removeItem(name),\n}\n\nconst initialState: BearState = {\n  bear: new Map(),\n  fish: new Set(),\n  time: new Date(),\n  query: new RegExp(''),\n}\n\nexport const useBearStore = create&lt;BearState&gt;()(\n  persist(\n    (set) =&gt; ({\n      ...initialState,\n      // ...\n    }),\n    {\n      name: 'food-storage',\n      storage,\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#how-can-i-rehydrate-on-storage-event","title":"How can I rehydrate on storage event","text":"<p>You can use the Persist API to create your own implementation, similar to the example below:</p> <pre><code>type StoreWithPersist = Mutate&lt;StoreApi&lt;State&gt;, [[\"zustand/persist\", unknown]]&gt;\n\nexport const withStorageDOMEvents = (store: StoreWithPersist) =&gt; {\n  const storageEventCallback = (e: StorageEvent) =&gt; {\n    if (e.key === store.persist.getOptions().name &amp;&amp; e.newValue) {\n      store.persist.rehydrate()\n    }\n  }\n\n  window.addEventListener('storage', storageEventCallback)\n\n  return () =&gt; {\n    window.removeEventListener('storage', storageEventCallback)\n  }\n}\n\nconst useBoundStore = create(persist(...))\nwithStorageDOMEvents(useBoundStore)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#how-do-i-use-it-with-typescript","title":"How do I use it with TypeScript","text":"<p>Basic typescript usage doesn't require anything special except for writing <code>create&lt;State&gt;()(...)</code> instead of <code>create(...)</code>.</p> <pre><code>import { create } from 'zustand'\nimport { persist, createJSONStorage } from 'zustand/middleware'\n\ninterface MyState {\n  bears: number\n  addABear: () =&gt; void\n}\n\nexport const useBearStore = create&lt;MyState&gt;()(\n  persist(\n    (set, get) =&gt; ({\n      bears: 0,\n      addABear: () =&gt; set({ bears: get().bears + 1 }),\n    }),\n    {\n      name: 'food-storage', // name of item in the storage (must be unique)\n      storage: createJSONStorage(() =&gt; sessionStorage), // (optional) by default the 'localStorage' is used\n      partialize: (state) =&gt; ({ bears: state.bears }),\n    },\n  ),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/persisting-store-data/#how-do-i-use-it-with-map-and-set","title":"How do I use it with Map and Set","text":"<p>In order to persist object types such as <code>Map</code> and <code>Set</code>, they will need to be converted to JSON-serializable types such as an <code>Array</code> which can be done by defining a custom <code>storage</code> engine.</p> <p>Let's say your state uses <code>Map</code> to handle a list of <code>transactions</code>, then you can convert the <code>Map</code> into an <code>Array</code> in the <code>storage</code> prop which is shown below:</p> <pre><code>interface BearState {\n  .\n  .\n  .\n  transactions: Map&lt;any&gt;\n}\n\n  storage: {\n    getItem: (name) =&gt; {\n      const str = localStorage.getItem(name);\n      if (!str) return null;\n      const existingValue = JSON.parse(str);\n      return {\n        ...existingValue,\n        state: {\n          ...existingValue.state,\n          transactions: new Map(existingValue.state.transactions),\n        }\n      }\n    },\n    setItem: (name, newValue: StorageValue&lt;BearState&gt;) =&gt; {\n      // functions cannot be JSON encoded\n      const str = JSON.stringify({\n        ...newValue,\n        state: {\n          ...newValue.state,\n          transactions: Array.from(newValue.state.transactions.entries()),\n        },\n      })\n      localStorage.setItem(name, str)\n    },\n    removeItem: (name) =&gt; localStorage.removeItem(name),\n  },\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/third-party-libraries/","title":"Third-party Libraries","text":"<p>Zustand provides bear necessities for state management. Although it is great for most projects, some users wish to extend the library's feature set. This can be done using third-party libraries created by the community.</p> <p>Disclaimer: These libraries may have bugs, limited maintenance, or other limitations, and are not officially recommended by pmndrs or the Zustand maintainers. This list aims to provide a good starting point for someone looking to extend Zustand's feature set.</p> <ul> <li>@colorfy-software/zfy \u2014 \ud83e\uddf8 Useful helpers for state management in React with Zustand.</li> <li>@davstack/store \u2014 A zustand store factory that auto generates selectors with get/set/use methods, supports inferred types, and makes global / local state management easy.</li> <li>@dhmk/zustand-lens \u2014 Lens support for Zustand.</li> <li>@liveblocks/zustand \u2014 Liveblocks middleware to make your application multiplayer.</li> <li>@prncss-xyz/zustand-optics \u2014 An adapter for optics-ts.</li> <li>auto-zustand-selectors-hook \u2014 Automatic generation of Zustand hooks with Typescript support.</li> <li>derive-zustand \u2014 A function to create a derived Zustand store from other Zustand stores.</li> <li>geschichte \u2014 Zustand and Immer-based hook to manage query parameters.</li> <li>leiten-zustand \u2014 Cleans your store from boilerplate for requests and data transformation.</li> <li>leo-query \u2014 A simple library to connect async queries to Zustand stores.</li> <li>mobz \u2014 Zustand-style MobX API.</li> <li>ngx-zustand \u2014 A Zustand adapter for Angular.</li> <li>persist-and-sync \u2014 Zustand middleware to easily persist and sync Zustand state between tabs/windows/iframes with same origin.</li> <li>shared-zustand \u2014 Cross-tab state sharing for Zustand.</li> <li>simple-zustand-devtools \u2014 \ud83d\udc3b\u269b\ufe0f Inspect your Zustand store in React DevTools.</li> <li>solid-zustand \u2014 State management in Solid using Zustand.</li> <li>treeshakable \u2014 A wrapper for library creators to avoid redundant store creation.</li> <li>use-broadcast-ts \u2014 Zustand middleware to share state between tabs.</li> <li>use-zustand \u2014 Another custom hook to use Zustand vanilla store.</li> <li>vue-zustand \u2014 State management solution for Vue based on Zustand.</li> <li>zoov \u2014 State management solution based on Zustand with Module-like API.</li> <li>zukeeper \u2014 Native devtools with state and action tracking, diffing, tree display, and time travel</li> <li>zundo \u2014 \ud83c\udf5c Undo and redo middleware for Zustand, enabling time-travel in your apps.</li> <li>zustand-ards \u2014 \ud83d\udc81 Simple opinionated utilities for example alternative selector formats and default shallow hooks</li> <li>zustand-async-slice - Simple Zustand utility to create Async Slice. TypeScript Fully Supported \ud83d\udd96</li> <li>zustand-boilerplate \u2014 A tool that automatically generates getters, setters and more for your zustand store.</li> <li>zustand-computed \u2014 A Zustand middleware to create computed states.</li> <li>zustand-computed-state \u2014 Simple middleware to add computed states.</li> <li>zustand-constate \u2014 Context-based state management based on Zustand and taking ideas from Constate.</li> <li>zustand-context \u2014 Create a zustand store in React Context, containing an initial value, or use it in your components with isolated, mockable instances.</li> <li>zustand-di \u2014 use react props to init zustand stores</li> <li>zustand-forms \u2014 Fast, type safe form states as Zustand stores.</li> <li>zustand-hash-storage \u2014 Zustand middleware for saving state into URL hash, b64 encoded (can be configured) and debounce timer.</li> <li>zustand-injectors \u2014 A sweet way to lazy load slices</li> <li>zustand-interval-persist \u2014 An enhancement for zustand that enables automatic saving of the store's state to the specified storage at regular interval.</li> <li>zustand-lit \u2014 A zustand adapter for lit.js (LitElement)</li> <li>zustand-middleware-computed-state \u2014 A dead simple middleware for adding computed state to Zustand.</li> <li>zustand-middleware-xstate \u2014 A middleware for putting XState state machines into a global Zustand store.</li> <li>zustand-middleware-yjs \u2014 A middleware for synchronizing Zustand stores with Yjs.</li> <li>zustand-persist \u2014 A middleware for persisting and rehydrating state.</li> <li>zustand-pub \u2014 Cross-Application/Cross-Framework State Management And Sharing based on zustand and zustand-vue for React/Vue.</li> <li>zustand-querystring \u2014 A Zustand middleware that syncs the store with the querystring.</li> <li>zustand-rx \u2014 A Zustand middleware enabling you to subscribe to a store as an RxJS Observable.</li> <li>zustand-saga \u2014 A Zustand middleware for redux-saga (minus redux).</li> <li>zustand-slices \u2014 A slice utility for Zustand.</li> <li>zustand-store-addons \u2014 React state management addons for Zustand.</li> <li>zustand-sync-tabs \u2014 Zustand middleware to easily sync Zustand state between tabs/windows/iframes with same origin.</li> <li>zustand-valtio \u2014 A sweet combination of Zustand and Valtio</li> <li>zustand-vue \u2014 State management for vue (Vue3 / Vue2) based on zustand.</li> <li>zustand-xs \u2014 XState/store compabile middleware for Zustand</li> <li>zustand-yjs \u2014 Zustand stores for Yjs structures.</li> <li>zusteller \u2014 Your global state savior. \"Just hooks\" + Zustand.</li> <li>zustood \u2014 \ud83d\udc3b\u200d\u2744\ufe0f A modular store factory using Zustand.</li> <li>zusty \u2014 Zustand tool to assist debugging with time travel, action logs, state snapshots, store view, render time metrics and state component tree.</li> <li>zutron \u2014 Use Zustand in Electron apps, seamlessly.</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/","title":"Immer middleware.md summary","text":""},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0","text":""},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#immer","title":"<code>immer</code>","text":"<p><code>immer</code> \u200b\u662f\u200b Zustand \u200b\u7684\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u7b80\u5316\u200b\u5904\u7406\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u6570\u636e\u7ed3\u6784\u200b\u7684\u200b\u8fc7\u7a0b\u200b\u3002\u200b\u901a\u8fc7\u200b <code>immer</code>\uff0c\u200b\u4f60\u200b\u53ef\u4ee5\u200b\u5728\u200b Zustand \u200b\u4e2d\u4ee5\u200b\u66f4\u200b\u76f4\u89c2\u200b\u7684\u200b\u65b9\u5f0f\u200b\u66f4\u65b0\u200b\u72b6\u6001\u200b\uff0c\u200b\u800c\u200b\u4e0d\u5fc5\u200b\u624b\u52a8\u200b\u521b\u5efa\u200b\u65b0\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#_2","title":"\u793a\u4f8b\u200b\u7528\u6cd5","text":""},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#_3","title":"\u66f4\u65b0\u200b\u7b80\u5355\u200b\u72b6\u6001","text":"<pre><code>import { create } from 'zustand'\nimport { immer } from 'zustand/middleware/immer'\n\ntype State = {\n  count: number\n}\n\ntype Actions = {\n  increment: (qty: number) =&gt; void\n  decrement: (qty: number) =&gt; void\n}\n\nexport const useCountStore = create&lt;State &amp; Actions&gt;()(\n  immer((set) =&gt; ({\n    count: 0,\n    increment: (qty: number) =&gt;\n      set((state) =&gt; {\n        state.count += qty\n      }),\n    decrement: (qty: number) =&gt;\n      set((state) =&gt; {\n        state.count -= qty\n      }),\n  })),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#_4","title":"\u66f4\u65b0\u200b\u590d\u6742\u200b\u72b6\u6001","text":"<pre><code>import { create } from 'zustand'\nimport { immer } from 'zustand/middleware/immer'\n\ninterface Todo {\n  id: string\n  title: string\n  done: boolean\n}\n\ntype State = {\n  todos: Record&lt;string, Todo&gt;\n}\n\ntype Actions = {\n  toggleTodo: (todoId: string) =&gt; void\n}\n\nexport const useTodoStore = create&lt;State &amp; Actions&gt;()(\n  immer((set) =&gt; ({\n    todos: {\n      '82471c5f-4207-4b1d-abcb-b98547e01a3e': {\n        id: '82471c5f-4207-4b1d-abcb-b98547e01a3e',\n        title: 'Learn Zustand',\n        done: false,\n      },\n      '354ee16c-bfdd-44d3-afa9-e93679bda367': {\n        id: '354ee16c-bfdd-44d3-afa9-e93679bda367',\n        title: 'Learn Jotai',\n        done: false,\n      },\n      '771c85c5-46ea-4a11-8fed-36cc2c7be344': {\n        id: '771c85c5-46ea-4a11-8fed-36cc2c7be344',\n        title: 'Learn Valtio',\n        done: false,\n      },\n      '363a4bac-083f-47f7-a0a2-aeeee153a99c': {\n        id: '363a4bac-083f-47f7-a0a2-aeeee153a99c',\n        title: 'Learn Signals',\n        done: false,\n      },\n    },\n    toggleTodo: (todoId: string) =&gt;\n      set((state) =&gt; {\n        state.todos[todoId].done = !state.todos[todoId].done\n      }),\n  })),\n)\n</code></pre>"},{"location":"programming/javascript/zustand/integrations/summaries/immer-middleware.md_summary/#_5","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ol> <li> <p>\u200b\u8ba2\u9605\u200b\u672a\u200b\u88ab\u200b\u8c03\u7528\u200b\uff1a\u200b\u5982\u679c\u200b\u4f60\u200b\u5728\u200b\u4f7f\u7528\u200b <code>immer</code> \u200b\u65f6\u200b\u53d1\u73b0\u200b\u8ba2\u9605\u200b\u672a\u200b\u88ab\u200b\u8c03\u7528\u200b\uff0c\u200b\u786e\u4fdd\u200b\u4f60\u200b\u9075\u5faa\u200b\u4e86\u200b Immer \u200b\u7684\u200b\u89c4\u5219\u200b\u3002\u200b\u4f8b\u5982\u200b\uff0c\u200b\u5bf9\u4e8e\u200b\u7c7b\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4f60\u200b\u9700\u8981\u200b\u6dfb\u52a0\u200b <code>[immerable] = true</code>\uff0c\u200b\u5426\u5219\u200b Immer \u200b\u5c06\u200b\u4e0d\u4f1a\u200b\u5c06\u200b\u5176\u200b\u89c6\u4e3a\u200b\u4ee3\u7406\u200b\u5bf9\u8c61\u200b\uff0c\u200b\u4ece\u800c\u200b\u5bfc\u81f4\u200b\u72b6\u6001\u200b\u672a\u200b\u5b9e\u9645\u200b\u66f4\u65b0\u200b\u3002</p> </li> <li> <p>\u200b\u590d\u6742\u200b\u5bf9\u8c61\u200b\u5904\u7406\u200b\uff1a\u200b\u5bf9\u4e8e\u200b\u590d\u6742\u200b\u5bf9\u8c61\u200b\uff08\u200b\u5982\u7c7b\u200b\u5b9e\u4f8b\u200b\uff09\uff0c\u200b\u786e\u4fdd\u200b\u4f60\u200b\u6b63\u786e\u200b\u5730\u200b\u5904\u7406\u200b\u4e86\u200b\u5b83\u4eec\u200b\uff0c\u200b\u5426\u5219\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u72b6\u6001\u200b\u66f4\u65b0\u200b\u4e0d\u200b\u6b63\u786e\u200b\u3002</p> </li> <li> <p>\u200b\u6027\u80fd\u200b\u5f71\u54cd\u200b\uff1a\u200b\u867d\u7136\u200b <code>immer</code> \u200b\u7b80\u5316\u200b\u4e86\u200b\u4e0d\u53ef\u200b\u53d8\u200b\u72b6\u6001\u200b\u7684\u200b\u5904\u7406\u200b\uff0c\u200b\u4f46\u200b\u5728\u200b\u67d0\u4e9b\u200b\u60c5\u51b5\u200b\u4e0b\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f15\u5165\u200b\u6027\u80fd\u200b\u5f00\u9500\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u5904\u7406\u200b\u975e\u5e38\u200b\u5927\u200b\u7684\u200b\u6570\u636e\u7ed3\u6784\u200b\u65f6\u200b\u3002</p> </li> </ol>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/","title":"Persisting store data.md summary","text":""},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#_1","title":"\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#persist","title":"<code>persist</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>persist</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u4e2d\u95f4\u4ef6\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5c06\u200b Zustand \u200b\u72b6\u6001\u200b\u6301\u4e45\u200b\u5316\u5230\u200b\u5b58\u50a8\u200b\u4e2d\u200b\uff08\u200b\u5982\u200b <code>localStorage</code>, <code>AsyncStorage</code>, <code>IndexedDB</code> \u200b\u7b49\u200b\uff09\u3002\u200b\u5b83\u200b\u652f\u6301\u200b\u540c\u6b65\u200b\u548c\u200b\u5f02\u6b65\u200b\u5b58\u50a8\u200b\uff0c\u200b\u4f46\u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u5b58\u50a8\u200b\u4f1a\u200b\u6709\u200b\u4e00\u5b9a\u200b\u7684\u200b\u6210\u672c\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { create } from 'zustand'\nimport { persist, createJSONStorage } from 'zustand/middleware'\n\nexport const useBearStore = create(\n  persist(\n    (set, get) =&gt; ({\n      bears: 0,\n      addABear: () =&gt; set({ bears: get().bears + 1 }),\n    }),\n    {\n      name: 'food-storage', // \u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u952e\u540d\u200b\uff08\u200b\u5fc5\u987b\u200b\u552f\u4e00\u200b\uff09\n      storage: createJSONStorage(() =&gt; sessionStorage), // \u200b\u9ed8\u8ba4\u200b\u4f7f\u7528\u200b localStorage\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>name</code> \u200b\u662f\u200b\u552f\u4e00\u200b\u5fc5\u9700\u200b\u7684\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u6807\u8bc6\u200b\u72b6\u6001\u200b\u3002 - \u200b\u4f7f\u7528\u200b\u5f02\u6b65\u200b\u5b58\u50a8\u200b\u65f6\u200b\uff0c\u200b\u72b6\u6001\u200b\u7684\u200b hydration \u200b\u662f\u200b\u5f02\u6b65\u200b\u7684\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u521d\u59cb\u200b\u6e32\u67d3\u200b\u65f6\u200b\u72b6\u6001\u200b\u672a\u200b\u52a0\u8f7d\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#createjsonstorage","title":"<code>createJSONStorage</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>createJSONStorage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u8f85\u52a9\u200b\u51fd\u6570\u200b\uff0c\u200b\u7528\u4e8e\u200b\u521b\u5efa\u200b\u7b26\u5408\u200b <code>StateStorage</code> \u200b\u63a5\u53e3\u200b\u7684\u200b\u5b58\u50a8\u200b\u5bf9\u8c61\u200b\u3002\u200b\u5b83\u200b\u652f\u6301\u200b\u81ea\u5b9a\u4e49\u200b\u5b58\u50a8\u200b\u5f15\u64ce\u200b\uff0c\u200b\u5e76\u200b\u53ef\u4ee5\u200b\u914d\u7f6e\u200b\u5e8f\u5217\u5316\u200b\u548c\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u7684\u200b\u9009\u9879\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>import { createJSONStorage } from 'zustand/middleware'\n\nconst storage = createJSONStorage(() =&gt; sessionStorage, {\n  reviver: (key, value) =&gt; {\n    if (value &amp;&amp; value.type === 'date') {\n      return new Date(value)\n    }\n    return value\n  },\n  replacer: (key, value) =&gt; {\n    if (value instanceof Date) {\n      return { type: 'date', value: value.toISOString() }\n    }\n    return value\n  },\n})\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>reviver</code> \u200b\u548c\u200b <code>replacer</code> \u200b\u7528\u4e8e\u200b\u81ea\u5b9a\u4e49\u200b JSON \u200b\u7684\u200b\u5e8f\u5217\u5316\u200b\u548c\u200b\u53cd\u200b\u5e8f\u5217\u5316\u200b\u3002 - \u200b\u8fd4\u56de\u200b\u7684\u200b <code>storage</code> \u200b\u5bf9\u8c61\u200b\u5fc5\u987b\u200b\u5b9e\u73b0\u200b <code>getItem</code>, <code>setItem</code>, \u200b\u548c\u200b <code>removeItem</code> \u200b\u65b9\u6cd5\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#partialize","title":"<code>partialize</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>partialize</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u9009\u62e9\u6027\u200b\u5730\u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\u4e2d\u200b\u7684\u200b\u67d0\u4e9b\u200b\u5b57\u200b\u6bb5\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u6240\u6709\u200b\u72b6\u6001\u5b57\u200b\u6bb5\u200b\u90fd\u200b\u4f1a\u200b\u88ab\u200b\u6301\u4e45\u200b\u5316\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      foo: 0,\n      bar: 1,\n    }),\n    {\n      partialize: (state) =&gt; ({ foo: state.foo }), // \u200b\u53ea\u200b\u6301\u4e45\u200b\u5316\u200b foo \u200b\u5b57\u200b\u6bb5\u200b\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u53ef\u4ee5\u200b\u901a\u8fc7\u200b <code>Object.fromEntries</code> \u200b\u6216\u200b\u76f4\u63a5\u200b\u8fd4\u56de\u200b\u90e8\u5206\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u6765\u200b\u9009\u62e9\u200b\u6301\u4e45\u200b\u5316\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#onrehydratestorage","title":"<code>onRehydrateStorage</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>onRehydrateStorage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b\u5b58\u50a8\u200b hydration \u200b\u8fc7\u7a0b\u200b\u4e2d\u200b\u6267\u884c\u200b\u81ea\u5b9a\u4e49\u200b\u903b\u8f91\u200b\u3002\u200b\u5b83\u200b\u53ef\u4ee5\u200b\u5728\u200b hydration \u200b\u5f00\u59cb\u200b\u548c\u200b\u7ed3\u675f\u200b\u65f6\u200b\u8c03\u7528\u200b\u56de\u8c03\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      // ...\n    }),\n    {\n      onRehydrateStorage: (state) =&gt; {\n        console.log('hydration starts')\n        return (state, error) =&gt; {\n          if (error) {\n            console.log('an error happened during hydration', error)\n          } else {\n            console.log('hydration finished')\n          }\n        }\n      },\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8fd4\u56de\u200b\u7684\u200b\u51fd\u6570\u200b\u4f1a\u200b\u5728\u200b hydration \u200b\u7ed3\u675f\u200b\u65f6\u200b\u8c03\u7528\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u5904\u7406\u9519\u8bef\u200b\u6216\u200b\u6267\u884c\u200b\u5176\u4ed6\u200b\u903b\u8f91\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#migrate","title":"<code>migrate</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>migrate</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5904\u7406\u200b\u5b58\u50a8\u200b\u7248\u672c\u200b\u8fc1\u79fb\u200b\u3002\u200b\u5f53\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u7248\u672c\u200b\u4e0e\u200b\u4ee3\u7801\u200b\u4e2d\u200b\u7684\u200b\u7248\u672c\u200b\u4e0d\u200b\u5339\u914d\u200b\u65f6\u200b\uff0c\u200b\u53ef\u4ee5\u200b\u4f7f\u7528\u200b\u6b64\u200b\u51fd\u6570\u200b\u6765\u200b\u8fc1\u79fb\u200b\u65e7\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      newField: 0, // \u200b\u5047\u8bbe\u200b\u5728\u200b\u7248\u672c\u200b 0 \u200b\u4e2d\u200b\u5b57\u6bb5\u540d\u200b\u4e0d\u540c\u200b\n    }),\n    {\n      version: 1,\n      migrate: (persistedState, version) =&gt; {\n        if (version === 0) {\n          persistedState.newField = persistedState.oldField\n          delete persistedState.oldField\n        }\n        return persistedState\n      },\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - <code>migrate</code> \u200b\u51fd\u6570\u200b\u5fc5\u987b\u200b\u8fd4\u56de\u200b\u4e0e\u200b\u6700\u65b0\u200b\u7248\u672c\u200b\u517c\u5bb9\u200b\u7684\u200b\u72b6\u6001\u200b\u5bf9\u8c61\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#merge","title":"<code>merge</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>merge</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u81ea\u5b9a\u4e49\u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\u4e0e\u200b\u5f53\u524d\u200b\u72b6\u6001\u200b\u7684\u200b\u5408\u5e76\u200b\u903b\u8f91\u200b\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0c\u200b\u4e2d\u95f4\u4ef6\u200b\u6267\u884c\u200b\u6d45\u200b\u5408\u5e76\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    (set, get) =&gt; ({\n      foo: {\n        bar: 0,\n        baz: 1,\n      },\n    }),\n    {\n      merge: (persistedState, currentState) =&gt; deepMerge(currentState, persistedState),\n    },\n  ),\n)\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u6d45\u200b\u5408\u5e76\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u5d4c\u5957\u200b\u5bf9\u8c61\u200b\u7684\u200b\u5b57\u200b\u6bb5\u200b\u4e22\u5931\u200b\uff0c\u200b\u5efa\u8bae\u200b\u5728\u200b\u9700\u8981\u200b\u65f6\u200b\u4f7f\u7528\u200b\u6df1\u200b\u5408\u5e76\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#skiphydration","title":"<code>skipHydration</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>skipHydration</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b\u9009\u9879\u200b\uff0c\u200b\u7528\u4e8e\u200b\u63a7\u5236\u200b\u662f\u5426\u200b\u5728\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u8df3\u200b\u8fc7\u200b hydration\u3002\u200b\u9ed8\u8ba4\u200b\u60c5\u51b5\u200b\u4e0b\u200b\uff0cstore \u200b\u4f1a\u200b\u5728\u200b\u521d\u59cb\u5316\u200b\u65f6\u200b\u81ea\u52a8\u200b hydrate\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>export const useBoundStore = create(\n  persist(\n    () =&gt; ({\n      count: 0,\n    }),\n    {\n      skipHydration: true,\n    },\n  ),\n)\n\nuseEffect(() =&gt; {\n  useBoundStore.persist.rehydrate()\n}, [])\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8bbe\u7f6e\u200b\u4e3a\u200b <code>true</code> \u200b\u65f6\u200b\uff0c\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u8c03\u7528\u200b <code>rehydrate</code> \u200b\u65b9\u6cd5\u200b\u6765\u200b\u89e6\u53d1\u200b hydration\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#getoptions","title":"<code>getOptions</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>getOptions</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u83b7\u53d6\u200b\u5f53\u524d\u200b Persist \u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const storageName = useBoundStore.persist.getOptions().name\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8fd4\u56de\u200b\u7684\u200b\u9009\u9879\u200b\u662f\u200b\u53ea\u8bfb\u200b\u7684\u200b\uff0c\u200b\u4e0d\u80fd\u200b\u76f4\u63a5\u200b\u4fee\u6539\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#setoptions","title":"<code>setOptions</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>setOptions</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u52a8\u6001\u200b\u66f4\u6539\u200b Persist \u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b\u914d\u7f6e\u200b\u9009\u9879\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>useBoundStore.persist.setOptions({\n  name: 'new-name',\n  storage: createJSONStorage(() =&gt; sessionStorage),\n})\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u65b0\u200b\u9009\u9879\u200b\u4f1a\u200b\u4e0e\u200b\u5f53\u524d\u200b\u9009\u9879\u200b\u5408\u5e76\u200b\uff0c\u200b\u4e0d\u4f1a\u200b\u8986\u76d6\u200b\u6240\u6709\u200b\u9009\u9879\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#clearstorage","title":"<code>clearStorage</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>clearStorage</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u6e05\u9664\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u4e0e\u200b\u5f53\u524d\u200b store \u200b\u76f8\u5173\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>useBoundStore.persist.clearStorage()\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u64cd\u4f5c\u200b\u4f1a\u200b\u5220\u9664\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u4e0e\u200b <code>name</code> \u200b\u952e\u200b\u76f8\u5173\u200b\u7684\u200b\u6240\u6709\u200b\u6570\u636e\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#rehydrate","title":"<code>rehydrate</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>rehydrate</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u624b\u52a8\u200b\u89e6\u53d1\u200b hydration \u200b\u8fc7\u7a0b\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>await useBoundStore.persist.rehydrate()\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u9002\u7528\u200b\u4e8e\u200b\u9700\u8981\u200b\u624b\u52a8\u200b\u63a7\u5236\u200b hydration \u200b\u7684\u200b\u573a\u666f\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#hashydrated","title":"<code>hasHydrated</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>hasHydrated</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u68c0\u67e5\u200b\u5b58\u50a8\u200b\u662f\u5426\u200b\u5df2\u200b\u5b8c\u6210\u200b hydration\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const isHydrated = useBoundStore.persist.hasHydrated()\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8be5\u200b\u65b9\u6cd5\u200b\u662f\u975e\u200b\u54cd\u5e94\u200b\u5f0f\u200b\u7684\u200b\uff0c\u200b\u8fd4\u56de\u200b\u5e03\u5c14\u503c\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#onhydrate","title":"<code>onHydrate</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>onHydrate</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b hydration \u200b\u5f00\u59cb\u200b\u65f6\u200b\u6ce8\u518c\u200b\u76d1\u542c\u5668\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const unsub = useBoundStore.persist.onHydrate((state) =&gt; {\n  console.log('hydration starts')\n})\nunsub() // \u200b\u53d6\u6d88\u200b\u8ba2\u9605\u200b\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u53d6\u6d88\u200b\u8ba2\u9605\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/persisting-store-data.md_summary/#onfinishhydration","title":"<code>onFinishHydration</code>","text":"<p>\u200b\u63cf\u8ff0\u200b: <code>onFinishHydration</code> \u200b\u662f\u200b\u4e00\u4e2a\u200b API \u200b\u65b9\u6cd5\u200b\uff0c\u200b\u7528\u4e8e\u200b\u5728\u200b hydration \u200b\u7ed3\u675f\u200b\u65f6\u200b\u6ce8\u518c\u200b\u76d1\u542c\u5668\u200b\u3002</p> <p>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b: <pre><code>const unsub = useBoundStore.persist.onFinishHydration((state) =&gt; {\n  console.log('hydration finished')\n})\nunsub() // \u200b\u53d6\u6d88\u200b\u8ba2\u9605\u200b\n</code></pre></p> <p>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: - \u200b\u8fd4\u56de\u200b\u4e00\u4e2a\u200b\u53d6\u6d88\u200b\u8ba2\u9605\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</p> <p>\u200b\u4ee5\u4e0a\u200b\u662f\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u7684\u200b\u7b80\u8981\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u53ca\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u3002</p>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/","title":"Third party libraries.md summary","text":"<p>\u200b\u4ee5\u4e0b\u200b\u662f\u200b\u6587\u4ef6\u200b\u4e2d\u200b\u63d0\u5230\u200b\u7684\u200b\u90e8\u5206\u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u7684\u200b\u6807\u51c6\u5316\u200b\u63d0\u793a\u200b\u8bcd\u200b\uff0c\u200b\u5305\u542b\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u548c\u200b\u6ce8\u610f\u4e8b\u9879\u200b\uff1a</p>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#1-derive-zustand","title":"1. <code>derive-zustand</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u4ece\u200b\u5176\u4ed6\u200b Zustand \u200b\u5b58\u50a8\u200b\u521b\u5efa\u200b\u6d3e\u751f\u200b\u5b58\u50a8\u200b\u7684\u200b\u51fd\u6570\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport derive from 'derive-zustand';\n\nconst baseStore = create((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}));\n\nconst derivedStore = derive(baseStore, (state) =&gt; ({\n  doubleCount: state.count * 2,\n}));\n\nconst useDerivedStore = create(derivedStore);\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u6d3e\u751f\u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\u4f9d\u8d56\u4e8e\u200b\u57fa\u7840\u200b\u5b58\u50a8\u200b\u7684\u200b\u72b6\u6001\u200b\uff0c\u200b\u57fa\u7840\u200b\u5b58\u50a8\u200b\u7684\u200b\u66f4\u6539\u200b\u4f1a\u200b\u81ea\u52a8\u200b\u53cd\u6620\u200b\u5728\u200b\u6d3e\u751f\u200b\u5b58\u50a8\u200b\u4e2d\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#2-zundo","title":"2. <code>zundo</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u4e3a\u200b Zustand \u200b\u63d0\u4f9b\u200b\u64a4\u9500\u200b\u548c\u200b\u91cd\u200b\u505a\u200b\u529f\u80fd\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { zundo } from 'zundo';\n\nconst useStore = create(zundo((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n})));\n\nconst { undo, redo } = useStore.getState();\nundo(); // \u200b\u64a4\u9500\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u64cd\u4f5c\u200b\nredo(); // \u200b\u91cd\u505a\u200b\u4e0a\u200b\u4e00\u6b21\u200b\u64a4\u9500\u200b\u7684\u200b\u64cd\u4f5c\u200b\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u4f1a\u200b\u589e\u52a0\u200b\u5b58\u50a8\u200b\u7684\u200b\u590d\u6742\u6027\u200b\uff0c\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5f71\u54cd\u200b\u6027\u80fd\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u72b6\u6001\u200b\u9891\u7e41\u200b\u53d8\u5316\u200b\u65f6\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#3-zustand-persist","title":"3. <code>zustand-persist</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u6301\u4e45\u200b\u5316\u200b\u548c\u200b\u91cd\u65b0\u200b\u52a0\u8f7d\u200b\u72b6\u6001\u200b\u7684\u200b Zustand \u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { persist } from 'zustand-persist';\n\nconst useStore = create(persist({\n  name: 'my-store',\n  getStorage: () =&gt; localStorage,\n})(set =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n})));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u6301\u4e45\u200b\u5316\u200b\u72b6\u6001\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u5bfc\u81f4\u200b\u9690\u79c1\u200b\u95ee\u9898\u200b\uff0c\u200b\u5c24\u5176\u200b\u662f\u200b\u5728\u200b\u5b58\u50a8\u200b\u654f\u611f\u6570\u636e\u200b\u65f6\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#4-zustand-computed","title":"4. <code>zustand-computed</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u4e3a\u200b Zustand \u200b\u6dfb\u52a0\u200b\u8ba1\u7b97\u200b\u72b6\u6001\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { computed } from 'zustand-computed';\n\nconst useStore = create(computed((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}), (state) =&gt; ({\n  doubleCount: state.count * 2,\n})));\n\nconst doubleCount = useStore((state) =&gt; state.doubleCount);\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8ba1\u7b97\u200b\u72b6\u6001\u200b\u4f1a\u200b\u5728\u200b\u4f9d\u8d56\u200b\u7684\u200b\u72b6\u6001\u200b\u53d8\u5316\u200b\u65f6\u200b\u81ea\u52a8\u66f4\u65b0\u200b\uff0c\u200b\u4f46\u200b\u53ef\u80fd\u200b\u4f1a\u200b\u589e\u52a0\u200b\u8ba1\u7b97\u200b\u5f00\u9500\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#5-zustand-saga","title":"5. <code>zustand-saga</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u5c06\u200b Redux-Saga \u200b\u4e0e\u200b Zustand \u200b\u7ed3\u5408\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { saga } from 'zustand-saga';\nimport { takeEvery } from 'redux-saga/effects';\n\nfunction* incrementSaga() {\n  yield console.log('Incrementing...');\n}\n\nconst useStore = create(saga((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}), function* () {\n  yield takeEvery('INCREMENT', incrementSaga);\n}));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u9002\u5408\u200b\u9700\u8981\u200b\u590d\u6742\u200b\u5f02\u6b65\u200b\u903b\u8f91\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u4f46\u4f1a\u200b\u589e\u52a0\u200b\u4ee3\u7801\u200b\u590d\u6742\u5ea6\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#6-zustand-sync-tabs","title":"6. <code>zustand-sync-tabs</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u7528\u4e8e\u200b\u5728\u200b\u540c\u4e00\u200b\u6e90\u200b\u7684\u200b\u591a\u4e2a\u200b\u6807\u7b7e\u200b\u9875\u200b\u4e4b\u95f4\u200b\u540c\u6b65\u200b Zustand \u200b\u72b6\u6001\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { syncTabs } from 'zustand-sync-tabs';\n\nconst useStore = create(syncTabs((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n})));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u4f9d\u8d56\u4e8e\u200b <code>BroadcastChannel</code> API\uff0c\u200b\u53ef\u80fd\u200b\u5728\u200b\u67d0\u4e9b\u200b\u6d4f\u89c8\u5668\u200b\u6216\u200b\u73af\u5883\u200b\u4e2d\u200b\u4e0d\u53ef\u200b\u7528\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#7-zustand-computed-state","title":"7. <code>zustand-computed-state</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u4e3a\u200b Zustand \u200b\u6dfb\u52a0\u200b\u8ba1\u7b97\u200b\u72b6\u6001\u200b\u7684\u200b\u7b80\u5355\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { computedState } from 'zustand-computed-state';\n\nconst useStore = create(computedState((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}), (state) =&gt; ({\n  doubleCount: state.count * 2,\n})));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u7684\u200b\u529f\u80fd\u200b\u4e0e\u200b <code>zustand-computed</code> \u200b\u7c7b\u4f3c\u200b\uff0c\u200b\u4f46\u200b\u5b9e\u73b0\u200b\u66f4\u200b\u7b80\u5355\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#8-zustand-forms","title":"8. <code>zustand-forms</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u4e3a\u200b Zustand \u200b\u63d0\u4f9b\u200b\u5feb\u901f\u200b\u3001\u200b\u7c7b\u578b\u200b\u5b89\u5168\u200b\u7684\u200b\u8868\u5355\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { createForm } from 'zustand-forms';\n\nconst useFormStore = create(createForm({\n  initialValues: { name: '', email: '' },\n  onSubmit: (values) =&gt; console.log(values),\n}));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u5e93\u200b\u9002\u5408\u200b\u5904\u7406\u200b\u8868\u5355\u200b\u72b6\u6001\u200b\uff0c\u200b\u4f46\u200b\u4e0d\u200b\u9002\u5408\u200b\u590d\u6742\u200b\u7684\u200b\u5168\u5c40\u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#9-zustand-middleware-xstate","title":"9. <code>zustand-middleware-xstate</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u5c06\u200b XState \u200b\u72b6\u6001\u673a\u200b\u96c6\u6210\u200b\u5230\u200b Zustand \u200b\u5b58\u50a8\u200b\u4e2d\u200b\u7684\u200b\u4e2d\u95f4\u4ef6\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import create from 'zustand';\nimport { createMachine } from 'xstate';\nimport { xstateMiddleware } from 'zustand-middleware-xstate';\n\nconst machine = createMachine({\n  id: 'toggle',\n  initial: 'inactive',\n  states: {\n    inactive: { on: { TOGGLE: 'active' } },\n    active: { on: { TOGGLE: 'inactive' } },\n  },\n});\n\nconst useStore = create(xstateMiddleware((set) =&gt; ({\n  machine,\n  send: (event) =&gt; set((state) =&gt; ({ machine: state.machine.transition(event) })),\n})));\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u200b\u4e2d\u95f4\u4ef6\u200b\u9002\u5408\u200b\u9700\u8981\u200b\u590d\u6742\u200b\u72b6\u6001\u673a\u200b\u7684\u200b\u573a\u666f\u200b\uff0c\u200b\u4f46\u4f1a\u200b\u589e\u52a0\u200b\u4ee3\u7801\u200b\u590d\u6742\u5ea6\u200b\u3002</li> </ul>"},{"location":"programming/javascript/zustand/integrations/summaries/third-party-libraries.md_summary/#10-zustand-vue","title":"10. <code>zustand-vue</code>","text":"<ul> <li>\u200b\u63cf\u8ff0\u200b: \u200b\u57fa\u4e8e\u200b Zustand \u200b\u7684\u200b Vue \u200b\u72b6\u6001\u200b\u7ba1\u7406\u200b\u89e3\u51b3\u65b9\u6848\u200b\u3002</li> <li>\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b:   <pre><code>import { createStore } from 'zustand-vue';\n\nconst useStore = createStore((set) =&gt; ({\n  count: 0,\n  increment: () =&gt; set((state) =&gt; ({ count: state.count + 1 })),\n}));\n\nconst { count, increment } = useStore();\n</code></pre></li> <li>\u200b\u6ce8\u610f\u4e8b\u9879\u200b: \u200b\u8be5\u5e93\u200b\u9002\u7528\u200b\u4e8e\u200b Vue 3 \u200b\u548c\u200b Vue 2\uff0c\u200b\u4f46\u200b\u9700\u8981\u200b\u786e\u4fdd\u200b\u4e0e\u200b Vue \u200b\u7684\u200b\u54cd\u5e94\u200b\u5f0f\u200b\u7cfb\u7edf\u200b\u517c\u5bb9\u200b\u3002</li> </ul> <p>\u200b\u4ee5\u4e0a\u200b\u662f\u200b\u90e8\u5206\u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u7684\u200b\u63cf\u8ff0\u200b\u3001\u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\u548c\u200b\u6ce8\u610f\u4e8b\u9879\u200b\u3002</p>"},{"location":"programming/python/","title":"Python Programming","text":"<p>Welcome to the Python programming section! This collection focuses on practical Python tools and utilities for automation, web scraping, and system administration. Whether you're building automation scripts or data collection tools, you'll find useful resources here.</p>"},{"location":"programming/python/#featured-tools","title":"Featured Tools","text":""},{"location":"programming/python/#auto-wifi-management","title":"Auto WiFi Management","text":"<p>Automated WiFi connection and management utility: - Network Detection - Automatic WiFi network discovery - Connection Management - Seamless network switching - Profile Storage - Save and manage network credentials - System Integration - Cross-platform compatibility - Error Handling - Robust connection error recovery</p>"},{"location":"programming/python/#web-crawling-and-scraping","title":"Web Crawling and Scraping","text":"<p>Comprehensive web crawling and data extraction tool: - Multi-threaded Crawling - Concurrent web page processing - AI-Powered Analysis - Content summarization using OpenAI API - Progress Tracking - Real-time crawling progress monitoring - Error Recovery - Automatic retry mechanisms - File Processing - Support for multiple file formats (.txt, .md, .py)</p>"},{"location":"programming/python/#tool-categories","title":"Tool Categories","text":""},{"location":"programming/python/#network-and-system-utilities","title":"Network and System Utilities","text":"<ul> <li>WiFi Management - Automated network connection tools</li> <li>System Monitoring - Resource usage and performance tracking</li> <li>Process Management - Service control and automation</li> <li>Configuration Management - System settings automation</li> </ul>"},{"location":"programming/python/#web-scraping-and-data-collection","title":"Web Scraping and Data Collection","text":"<ul> <li>HTTP Clients - Advanced web request handling</li> <li>Content Parsing - HTML, XML, and JSON processing</li> <li>Data Extraction - Structured data collection</li> <li>Rate Limiting - Respectful web scraping practices</li> </ul>"},{"location":"programming/python/#ai-and-machine-learning-integration","title":"AI and Machine Learning Integration","text":"<ul> <li>API Integration - OpenAI and other AI service integration</li> <li>Content Analysis - Automated text processing and summarization</li> <li>Natural Language Processing - Text analysis and understanding</li> <li>Data Preprocessing - ML-ready data preparation</li> </ul>"},{"location":"programming/python/#development-patterns","title":"Development Patterns","text":""},{"location":"programming/python/#automation-scripts","title":"Automation Scripts","text":"<ul> <li>Task Scheduling - Cron-like job scheduling</li> <li>Event-Driven Programming - Reactive automation systems</li> <li>Configuration Files - YAML, JSON, and INI file handling</li> <li>Logging and Monitoring - Comprehensive activity tracking</li> </ul>"},{"location":"programming/python/#concurrent-programming","title":"Concurrent Programming","text":"<ul> <li>Threading - Multi-threaded application development</li> <li>Async/Await - Asynchronous programming patterns</li> <li>Process Pools - CPU-intensive task distribution</li> <li>Queue Management - Task queue and worker patterns</li> </ul>"},{"location":"programming/python/#error-handling-and-reliability","title":"Error Handling and Reliability","text":"<ul> <li>Exception Management - Robust error handling strategies</li> <li>Retry Mechanisms - Automatic failure recovery</li> <li>Circuit Breakers - Preventing cascade failures</li> <li>Health Checks - System status monitoring</li> </ul>"},{"location":"programming/python/#libraries-and-frameworks","title":"Libraries and Frameworks","text":""},{"location":"programming/python/#core-libraries","title":"Core Libraries","text":"<ul> <li>requests - HTTP library for web interactions</li> <li>concurrent.futures - High-level threading and processing</li> <li>json/yaml - Data serialization and configuration</li> <li>logging - Comprehensive logging framework</li> <li>argparse - Command-line argument parsing</li> </ul>"},{"location":"programming/python/#specialized-libraries","title":"Specialized Libraries","text":"<ul> <li>BeautifulSoup - HTML/XML parsing and manipulation</li> <li>selenium - Web browser automation</li> <li>pandas - Data analysis and manipulation</li> <li>numpy - Numerical computing</li> <li>matplotlib - Data visualization</li> </ul>"},{"location":"programming/python/#ai-and-ml-libraries","title":"AI and ML Libraries","text":"<ul> <li>openai - OpenAI API integration</li> <li>transformers - Hugging Face model integration</li> <li>scikit-learn - Machine learning algorithms</li> <li>tensorflow/pytorch - Deep learning frameworks</li> <li>spacy - Natural language processing</li> </ul>"},{"location":"programming/python/#best-practices","title":"Best Practices","text":""},{"location":"programming/python/#code-organization","title":"Code Organization","text":"<ul> <li>Module Structure - Proper package and module organization</li> <li>Configuration Management - Environment-specific settings</li> <li>Documentation - Comprehensive docstrings and comments</li> <li>Testing - Unit tests and integration testing</li> </ul>"},{"location":"programming/python/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Profiling - Identifying performance bottlenecks</li> <li>Memory Management - Efficient memory usage patterns</li> <li>Caching - Strategic data caching approaches</li> <li>Parallel Processing - CPU and I/O bound task optimization</li> </ul>"},{"location":"programming/python/#security-considerations","title":"Security Considerations","text":"<ul> <li>Input Validation - Preventing injection attacks</li> <li>Credential Management - Secure API key and password handling</li> <li>Network Security - HTTPS and certificate validation</li> <li>Data Privacy - Protecting sensitive information</li> </ul>"},{"location":"programming/python/#development-environment","title":"Development Environment","text":""},{"location":"programming/python/#setup-and-configuration","title":"Setup and Configuration","text":"<ul> <li>Virtual Environments - Isolated dependency management</li> <li>Package Management - pip, conda, and poetry</li> <li>IDE Configuration - VS Code, PyCharm setup</li> <li>Debugging Tools - pdb and advanced debugging techniques</li> </ul>"},{"location":"programming/python/#testing-and-quality-assurance","title":"Testing and Quality Assurance","text":"<ul> <li>Unit Testing - pytest and unittest frameworks</li> <li>Code Coverage - Measuring test effectiveness</li> <li>Linting - flake8, pylint, and black formatting</li> <li>Type Checking - mypy static type analysis</li> </ul>"},{"location":"programming/python/#deployment-and-distribution","title":"Deployment and Distribution","text":"<ul> <li>Package Creation - Building distributable packages</li> <li>Docker Integration - Containerized deployment</li> <li>CI/CD Pipelines - Automated testing and deployment</li> <li>Monitoring - Production application monitoring</li> </ul>"},{"location":"programming/python/#learning-path","title":"Learning Path","text":""},{"location":"programming/python/#beginner-level","title":"Beginner Level","text":"<ol> <li>Auto WiFi Tool - Learn system integration and network programming</li> <li>Basic Web Scraping - Understand HTTP requests and HTML parsing</li> <li>Error Handling - Implement robust error management</li> </ol>"},{"location":"programming/python/#intermediate-level","title":"Intermediate Level","text":"<ol> <li>Advanced Crawling - Multi-threaded and asynchronous programming</li> <li>AI Integration - API usage and content analysis</li> <li>Data Processing - File handling and data transformation</li> </ol>"},{"location":"programming/python/#advanced-level","title":"Advanced Level","text":"<ol> <li>Performance Optimization - Profiling and optimization techniques</li> <li>Scalable Architecture - Building production-ready tools</li> <li>Custom Frameworks - Creating reusable automation frameworks</li> </ol>"},{"location":"programming/python/#practical-applications","title":"Practical Applications","text":""},{"location":"programming/python/#system-administration","title":"System Administration","text":"<ul> <li>Network configuration automation</li> <li>System monitoring and alerting</li> <li>Log analysis and reporting</li> <li>Backup and maintenance scripts</li> </ul>"},{"location":"programming/python/#data-collection-and-analysis","title":"Data Collection and Analysis","text":"<ul> <li>Web scraping for research</li> <li>API data aggregation</li> <li>Content analysis and summarization</li> <li>Data pipeline automation</li> </ul>"},{"location":"programming/python/#business-automation","title":"Business Automation","text":"<ul> <li>Report generation</li> <li>Email automation</li> <li>File processing workflows</li> <li>Integration between systems</li> </ul> <p>Each tool includes: - \ud83d\udcd6 Complete Documentation - Detailed usage instructions - \ud83d\udcbb Working Examples - Ready-to-use code samples - \ud83d\udd27 Configuration Guides - Setup and customization - \u26a1 Performance Tips - Optimization techniques - \ud83d\udee1\ufe0f Security Best Practices - Safe coding approaches</p> <p>Start with the Auto WiFi tool for system integration or the Web Crawling tool for data collection!</p>"},{"location":"programming/python/auto-wifi/","title":"Auto WiFi Management Tool","text":"<p>This Python tool provides automated WiFi connection management using Selenium WebDriver. It's designed to automatically connect to specific network portals, particularly useful for institutional or public WiFi networks that require web-based authentication.</p>"},{"location":"programming/python/auto-wifi/#overview","title":"Overview","text":"<p>The Auto WiFi tool automates the process of connecting to WiFi networks that require web portal authentication. It uses Selenium WebDriver to interact with web-based login pages, making it ideal for:</p> <ul> <li>Campus Networks - University and school WiFi systems</li> <li>Public WiFi - Hotels, airports, and public spaces</li> <li>Corporate Networks - Company guest networks</li> <li>ISP Portals - Internet service provider authentication pages</li> </ul>"},{"location":"programming/python/auto-wifi/#features","title":"Features","text":""},{"location":"programming/python/auto-wifi/#automated-web-authentication","title":"Automated Web Authentication","text":"<ul> <li>Browser Automation - Uses Microsoft Edge WebDriver for reliable web interaction</li> <li>Form Handling - Automatically fills and submits login forms</li> <li>Dropdown Selection - Handles complex form elements like operator selection</li> <li>Wait Conditions - Intelligent waiting for page elements to load</li> </ul>"},{"location":"programming/python/auto-wifi/#configuration-options","title":"Configuration Options","text":"<ul> <li>Customizable URLs - Support for different portal addresses</li> <li>Operator Selection - Automatic selection of network operators</li> <li>Timeout Management - Configurable wait times for page loading</li> <li>Error Handling - Graceful handling of connection failures</li> </ul>"},{"location":"programming/python/auto-wifi/#installation","title":"Installation","text":""},{"location":"programming/python/auto-wifi/#prerequisites","title":"Prerequisites","text":"<pre><code>pip install selenium\n</code></pre>"},{"location":"programming/python/auto-wifi/#webdriver-setup","title":"WebDriver Setup","text":"<ol> <li>Download Microsoft Edge WebDriver from the official Microsoft website</li> <li>Extract the driver to a known location (e.g., <code>D:\\webdriver\\msedgedriver.exe</code>)</li> <li>Update the driver path in the script</li> </ol>"},{"location":"programming/python/auto-wifi/#alternative-webdrivers","title":"Alternative WebDrivers","text":"<p>The tool can be adapted for other browsers: - Chrome - Use ChromeDriver with <code>webdriver.Chrome()</code> - Firefox - Use GeckoDriver with <code>webdriver.Firefox()</code> - Safari - Use Safari WebDriver (macOS only)</p>"},{"location":"programming/python/auto-wifi/#usage","title":"Usage","text":""},{"location":"programming/python/auto-wifi/#basic-usage","title":"Basic Usage","text":"<pre><code>from selenium import webdriver\nfrom selenium.webdriver.edge.service import Service\n\n# Configure WebDriver\nservice = Service('path/to/msedgedriver.exe')\ndriver = webdriver.Edge(service=service)\n\n# Navigate to portal\ndriver.get(\"http://portal.example.com\")\n\n# Perform authentication steps\n# ... (form filling and submission)\n\n# Clean up\ndriver.quit()\n</code></pre>"},{"location":"programming/python/auto-wifi/#current-implementation","title":"Current Implementation","text":"<p>The tool is configured for a specific network portal:</p> <pre><code># Target portal URL\nportal_url = \"http://10.10.244.11/a79.htm\"\n\n# Operator selection\nselect.select_by_visible_text(\"\u200b\u4e2d\u56fd\u7535\u4fe1\u200b\")  # China Telecom\n\n# Login button interaction\nlogin_button.click()\n</code></pre>"},{"location":"programming/python/auto-wifi/#configuration","title":"Configuration","text":""},{"location":"programming/python/auto-wifi/#network-settings","title":"Network Settings","text":"<ul> <li>Portal URL - The web address of the authentication portal</li> <li>Operator Selection - Network provider or service type</li> <li>Credentials - Username and password (if required)</li> <li>Timeout Values - Wait times for page loading</li> </ul>"},{"location":"programming/python/auto-wifi/#webdriver-configuration","title":"WebDriver Configuration","text":"<pre><code># Service configuration\nservice = Service('D:\\webdriver\\msedgedriver.exe')\n\n# Driver options (optional)\noptions = webdriver.EdgeOptions()\noptions.add_argument('--headless')  # Run without GUI\noptions.add_argument('--no-sandbox')  # Linux compatibility\n\ndriver = webdriver.Edge(service=service, options=options)\n</code></pre>"},{"location":"programming/python/auto-wifi/#advanced-features","title":"Advanced Features","text":""},{"location":"programming/python/auto-wifi/#error-handling","title":"Error Handling","text":"<pre><code>try:\n    # Authentication logic\n    driver.get(portal_url)\n    # ... form interactions\nexcept TimeoutException:\n    print(\"Page loading timeout\")\nexcept NoSuchElementException:\n    print(\"Required element not found\")\nfinally:\n    driver.quit()\n</code></pre>"},{"location":"programming/python/auto-wifi/#headless-operation","title":"Headless Operation","text":"<pre><code>options = webdriver.EdgeOptions()\noptions.add_argument('--headless')\ndriver = webdriver.Edge(service=service, options=options)\n</code></pre>"},{"location":"programming/python/auto-wifi/#multiple-portal-support","title":"Multiple Portal Support","text":"<pre><code>portals = [\n    {\"url\": \"http://portal1.com\", \"operator\": \"Provider1\"},\n    {\"url\": \"http://portal2.com\", \"operator\": \"Provider2\"}\n]\n\nfor portal in portals:\n    try:\n        connect_to_portal(portal)\n        break  # Stop on successful connection\n    except Exception as e:\n        print(f\"Failed to connect to {portal['url']}: {e}\")\n</code></pre>"},{"location":"programming/python/auto-wifi/#customization","title":"Customization","text":""},{"location":"programming/python/auto-wifi/#adapting-for-different-portals","title":"Adapting for Different Portals","text":"<ol> <li>Identify Form Elements - Use browser developer tools to find form field names</li> <li>Update Selectors - Modify the element selection logic</li> <li>Adjust Wait Conditions - Configure appropriate timeouts</li> <li>Handle Different Flows - Adapt to specific authentication sequences</li> </ol>"},{"location":"programming/python/auto-wifi/#adding-credential-management","title":"Adding Credential Management","text":"<pre><code>import os\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\nusername = os.getenv('WIFI_USERNAME')\npassword = os.getenv('WIFI_PASSWORD')\n\n# Use credentials in form filling\nusername_field.send_keys(username)\npassword_field.send_keys(password)\n</code></pre>"},{"location":"programming/python/auto-wifi/#logging-and-monitoring","title":"Logging and Monitoring","text":"<pre><code>import logging\n\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nlogger.info(\"Starting WiFi authentication\")\nlogger.info(f\"Connecting to portal: {portal_url}\")\nlogger.info(\"Authentication successful\")\n</code></pre>"},{"location":"programming/python/auto-wifi/#best-practices","title":"Best Practices","text":""},{"location":"programming/python/auto-wifi/#security-considerations","title":"Security Considerations","text":"<ul> <li>Credential Protection - Store sensitive information securely</li> <li>HTTPS Verification - Ensure secure connections when possible</li> <li>Network Validation - Verify portal authenticity</li> <li>Access Control - Limit script access and permissions</li> </ul>"},{"location":"programming/python/auto-wifi/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Headless Mode - Run without GUI for better performance</li> <li>Element Caching - Store frequently used element references</li> <li>Timeout Tuning - Optimize wait times for your network</li> <li>Resource Cleanup - Always close browser instances</li> </ul>"},{"location":"programming/python/auto-wifi/#reliability-improvements","title":"Reliability Improvements","text":"<ul> <li>Retry Logic - Implement automatic retry on failures</li> <li>Health Checks - Verify connection status after authentication</li> <li>Fallback Options - Support multiple authentication methods</li> <li>Status Monitoring - Track connection success rates</li> </ul>"},{"location":"programming/python/auto-wifi/#troubleshooting","title":"Troubleshooting","text":""},{"location":"programming/python/auto-wifi/#common-issues","title":"Common Issues","text":"<ul> <li>WebDriver Path - Ensure correct driver location and permissions</li> <li>Element Not Found - Verify form element selectors</li> <li>Timeout Errors - Increase wait times for slow networks</li> <li>Portal Changes - Update selectors when portals are modified</li> </ul>"},{"location":"programming/python/auto-wifi/#debugging-tips","title":"Debugging Tips","text":"<ul> <li>Screenshot Capture - Take screenshots for debugging</li> <li>Element Inspection - Use browser tools to verify selectors</li> <li>Verbose Logging - Enable detailed logging for troubleshooting</li> <li>Manual Testing - Test portal interaction manually first</li> </ul> <p>This tool provides a foundation for automated WiFi authentication that can be customized for various network environments and authentication systems.</p>"},{"location":"programming/python/crawl/","title":"Web Crawling and Content Analysis Tool","text":"<p>This comprehensive Python tool provides automated web crawling, file processing, and AI-powered content analysis capabilities. It's designed for large-scale content processing with concurrent execution, progress tracking, and intelligent summarization.</p>"},{"location":"programming/python/crawl/#overview","title":"Overview","text":"<p>The Web Crawling tool combines file system traversal, content extraction, and AI-powered analysis to process large collections of documents. It's particularly useful for:</p> <ul> <li>Documentation Analysis - Processing technical documentation and code files</li> <li>Content Summarization - Generating summaries of large document collections</li> <li>Code Analysis - Analyzing codebases for functions and methods</li> <li>Research Automation - Automated content analysis for research projects</li> </ul>"},{"location":"programming/python/crawl/#key-features","title":"Key Features","text":""},{"location":"programming/python/crawl/#multi-threaded-processing","title":"Multi-threaded Processing","text":"<ul> <li>Concurrent Execution - Process multiple files simultaneously</li> <li>Thread Pool Management - Configurable worker thread count</li> <li>Progress Tracking - Real-time progress monitoring with tqdm</li> <li>Graceful Interruption - Signal handling for clean shutdown</li> </ul>"},{"location":"programming/python/crawl/#ai-powered-analysis","title":"AI-Powered Analysis","text":"<ul> <li>OpenAI Integration - Uses DeepSeek API for content analysis</li> <li>Function Documentation - Automatically generates function/method examples</li> <li>Intelligent Summarization - Creates structured summaries with usage examples</li> <li>Retry Logic - Automatic retry on API failures</li> </ul>"},{"location":"programming/python/crawl/#file-processing","title":"File Processing","text":"<ul> <li>Multiple Formats - Supports .txt, .md, and .py files</li> <li>Recursive Directory Traversal - Processes entire directory trees</li> <li>Output Management - Organized summary file generation</li> <li>Error Handling - Robust file reading and processing</li> </ul>"},{"location":"programming/python/crawl/#installation","title":"Installation","text":""},{"location":"programming/python/crawl/#prerequisites","title":"Prerequisites","text":"<pre><code>pip install openai concurrent.futures tqdm\n</code></pre>"},{"location":"programming/python/crawl/#api-configuration","title":"API Configuration","text":"<pre><code>from openai import OpenAI\n\nclient = OpenAI(\n    api_key='your-api-key-here',\n    base_url='https://api.deepseek.com/v1'  # or your preferred endpoint\n)\n</code></pre>"},{"location":"programming/python/crawl/#usage","title":"Usage","text":""},{"location":"programming/python/crawl/#basic-usage","title":"Basic Usage","text":"<pre><code>import os\nfrom crawl import process_directory\n\n# Process a directory with default settings\ndirectory_path = \"/path/to/documents\"\nprocess_directory(directory_path)\n</code></pre>"},{"location":"programming/python/crawl/#advanced-configuration","title":"Advanced Configuration","text":"<pre><code># Custom thread count and processing\nprocess_directory(\n    directory=\"/path/to/documents\",\n    max_workers=10,  # Increase for faster processing\n    file_extensions=['.txt', '.md', '.py', '.js'],  # Custom file types\n    output_dir=\"./summaries\"  # Custom output location\n)\n</code></pre>"},{"location":"programming/python/crawl/#core-functions","title":"Core Functions","text":""},{"location":"programming/python/crawl/#file-discovery","title":"File Discovery","text":"<pre><code>def get_all_files(directory):\n    \"\"\"\u200b\u83b7\u53d6\u200b\u6307\u5b9a\u200b\u76ee\u5f55\u200b\u4e0b\u200b\u6240\u6709\u200b\u6587\u4ef6\u200b\u7684\u200b\u8def\u5f84\u200b\"\"\"\n    file_paths = []\n    for root, dirs, files in os.walk(directory):\n        for file in files:\n            if file.endswith(('.txt', '.md', '.py')):\n                file_paths.append(os.path.join(root, file))\n    return file_paths\n</code></pre>"},{"location":"programming/python/crawl/#content-analysis","title":"Content Analysis","text":"<pre><code>def generate_summary(content):\n    \"\"\"\u200b\u751f\u6210\u200b\u5185\u5bb9\u6458\u8981\u200b\uff0c\u200b\u63d0\u793a\u200b\u8bcd\u200b\u66f4\u200b\u7cbe\u51c6\u200b\"\"\"\n    prompt = (\n        \"\u200b\u8bf7\u200b\u9605\u8bfb\u200b\u4ee5\u4e0b\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff0c\u200b\u5e76\u200b\u4e3a\u200b\u5176\u4e2d\u200b\u51fa\u73b0\u200b\u7684\u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63d0\u4f9b\u200b\u7b80\u8981\u200b\u793a\u4f8b\u200b\uff0c\"\n        \"\u200b\u8f93\u51fa\u200b\u9700\u200b\u5305\u542b\u200b\u4ee5\u4e0b\u200b\u8981\u70b9\u200b\uff1a\\n1. \u200b\u51fd\u6570\u200b\u6216\u200b\u65b9\u6cd5\u200b\u63cf\u8ff0\u200b\\n2. \u200b\u793a\u4f8b\u200b\u7528\u6cd5\u200b\\n3. \u200b\u6ce8\u610f\u4e8b\u9879\u200b\\n\\n\"\n        f\"\u200b\u6587\u4ef6\u200b\u5185\u5bb9\u200b\uff1a\\n\\n{content}\\n\\n\u200b\u8bf7\u200b\u6309\u7167\u200b\u4e0a\u8ff0\u200b\u8981\u6c42\u200b\u4e3a\u200b\u8be5\u200b\u6587\u4ef6\u200b\u8f93\u51fa\u200b\u6807\u51c6\u5316\u200b\u63d0\u793a\u200b\u8bcd\u200b\u3002\"\n    )\n\n    response = client.chat.completions.create(\n        model=\"deepseek-chat\",\n        messages=[{\"role\": \"user\", \"content\": prompt}]\n    )\n    return response.choices[0].message.content\n</code></pre>"},{"location":"programming/python/crawl/#concurrent-processing","title":"Concurrent Processing","text":"<pre><code>def process_directory(directory, max_workers=5):\n    \"\"\"\u200b\u4f7f\u7528\u200b\u7ebf\u7a0b\u200b\u6c60\u200b\u5e76\u53d1\u200b\u5904\u7406\u200b\u6574\u4e2a\u200b\u76ee\u5f55\u200b\"\"\"\n    files = get_all_files(directory)\n    success_count = 0\n    failed_count = 0\n\n    with concurrent.futures.ThreadPoolExecutor(max_workers=max_workers) as executor:\n        futures = {\n            executor.submit(process_single_file, file_path): file_path\n            for file_path in files\n        }\n\n        with tqdm(total=len(files), desc=\"\u200b\u5904\u7406\u200b\u8fdb\u5ea6\u200b\") as pbar:\n            for future in concurrent.futures.as_completed(futures):\n                # Process results and update progress\n                pbar.update(1)\n</code></pre>"},{"location":"programming/python/crawl/#configuration-options","title":"Configuration Options","text":""},{"location":"programming/python/crawl/#thread-pool-settings","title":"Thread Pool Settings","text":"<pre><code># Conservative setting for limited resources\nmax_workers = 3\n\n# Aggressive setting for powerful machines\nmax_workers = 10\n\n# Auto-detection based on CPU cores\nimport os\nmax_workers = min(os.cpu_count(), 8)\n</code></pre>"},{"location":"programming/python/crawl/#api-configuration_1","title":"API Configuration","text":"<pre><code># DeepSeek API (default)\nclient = OpenAI(\n    api_key='sk-your-key-here',\n    base_url='https://api.deepseek.com/v1'\n)\n\n# OpenAI API\nclient = OpenAI(\n    api_key='sk-your-openai-key-here'\n)\n\n# Custom endpoint\nclient = OpenAI(\n    api_key='your-key',\n    base_url='https://your-custom-endpoint.com/v1'\n)\n</code></pre>"},{"location":"programming/python/crawl/#file-type-configuration","title":"File Type Configuration","text":"<pre><code># Default supported types\nSUPPORTED_EXTENSIONS = ('.txt', '.md', '.py')\n\n# Extended support\nSUPPORTED_EXTENSIONS = ('.txt', '.md', '.py', '.js', '.ts', '.java', '.cpp')\n\n# Custom filter function\ndef should_process_file(file_path):\n    return (\n        file_path.endswith(SUPPORTED_EXTENSIONS) and\n        not file_path.startswith('.') and\n        'node_modules' not in file_path\n    )\n</code></pre>"},{"location":"programming/python/crawl/#advanced-features","title":"Advanced Features","text":""},{"location":"programming/python/crawl/#signal-handling","title":"Signal Handling","text":"<pre><code>import signal\nimport sys\n\ninterrupted = False\n\ndef signal_handler(sig, frame):\n    global interrupted\n    interrupted = True\n    print(\"\\n\u200b\u4e2d\u65ad\u200b\u4fe1\u53f7\u200b\u63a5\u6536\u200b\uff0c\u200b\u6b63\u5728\u200b\u505c\u6b62\u200b\u5904\u7406\u200b...\")\n\nsignal.signal(signal.SIGINT, signal_handler)\nsignal.signal(signal.SIGTERM, signal_handler)\n</code></pre>"},{"location":"programming/python/crawl/#retry-logic","title":"Retry Logic","text":"<pre><code>def process_single_file(file_path):\n    \"\"\"\u200b\u5904\u7406\u200b\u5355\u4e2a\u200b\u6587\u4ef6\u200b\u5e76\u200b\u652f\u6301\u200b\u91cd\u8bd5\u200b\"\"\"\n    retry_count = 3\n    while retry_count &gt; 0:\n        try:\n            summary = generate_summary(content)\n            if summary:\n                save_summary(summary, file_path)\n                return True\n        except Exception as e:\n            retry_count -= 1\n            if retry_count == 0:\n                print(f\"\u200b\u5904\u7406\u200b\u6587\u4ef6\u200b {file_path} \u200b\u5931\u8d25\u200b\uff0c\u200b\u5df2\u200b\u91cd\u8bd5\u200b3\u200b\u6b21\u200b: {str(e)}\")\n            time.sleep(1)\n    return False\n</code></pre>"},{"location":"programming/python/crawl/#output-management","title":"Output Management","text":"<pre><code>def save_summary(summary, original_file_path):\n    \"\"\"\u200b\u4fdd\u5b58\u200b\u6458\u8981\u200b\u5230\u200b\u6587\u4ef6\u200b\"\"\"\n    # Create output directory structure\n    output_dir = \"summaries\"\n    relative_path = os.path.relpath(original_file_path)\n    output_path = os.path.join(output_dir, relative_path + \"_summary.md\")\n\n    # Ensure directory exists\n    os.makedirs(os.path.dirname(output_path), exist_ok=True)\n\n    # Write summary\n    with open(output_path, 'w', encoding='utf-8') as f:\n        f.write(summary)\n</code></pre>"},{"location":"programming/python/crawl/#performance-optimization","title":"Performance Optimization","text":""},{"location":"programming/python/crawl/#memory-management","title":"Memory Management","text":"<pre><code># Process files in batches to manage memory\ndef process_in_batches(files, batch_size=100):\n    for i in range(0, len(files), batch_size):\n        batch = files[i:i + batch_size]\n        process_batch(batch)\n        # Optional: garbage collection\n        import gc\n        gc.collect()\n</code></pre>"},{"location":"programming/python/crawl/#rate-limiting","title":"Rate Limiting","text":"<pre><code>import time\nfrom functools import wraps\n\ndef rate_limit(calls_per_second=1):\n    def decorator(func):\n        last_called = [0.0]\n\n        @wraps(func)\n        def wrapper(*args, **kwargs):\n            elapsed = time.time() - last_called[0]\n            left_to_wait = 1.0 / calls_per_second - elapsed\n            if left_to_wait &gt; 0:\n                time.sleep(left_to_wait)\n            ret = func(*args, **kwargs)\n            last_called[0] = time.time()\n            return ret\n        return wrapper\n    return decorator\n\n@rate_limit(calls_per_second=2)  # Limit to 2 API calls per second\ndef generate_summary(content):\n    # API call implementation\n    pass\n</code></pre>"},{"location":"programming/python/crawl/#caching","title":"Caching","text":"<pre><code>import hashlib\nimport json\nimport os\n\ndef get_cache_key(content):\n    return hashlib.md5(content.encode()).hexdigest()\n\ndef get_cached_summary(content):\n    cache_key = get_cache_key(content)\n    cache_file = f\"cache/{cache_key}.json\"\n\n    if os.path.exists(cache_file):\n        with open(cache_file, 'r', encoding='utf-8') as f:\n            return json.load(f)['summary']\n    return None\n\ndef cache_summary(content, summary):\n    cache_key = get_cache_key(content)\n    cache_file = f\"cache/{cache_key}.json\"\n\n    os.makedirs('cache', exist_ok=True)\n    with open(cache_file, 'w', encoding='utf-8') as f:\n        json.dump({'summary': summary}, f, ensure_ascii=False)\n</code></pre>"},{"location":"programming/python/crawl/#best-practices","title":"Best Practices","text":""},{"location":"programming/python/crawl/#error-handling","title":"Error Handling","text":"<ul> <li>Graceful Degradation - Continue processing other files on individual failures</li> <li>Detailed Logging - Log errors with context for debugging</li> <li>Resource Cleanup - Ensure proper cleanup on interruption</li> <li>Status Reporting - Provide clear success/failure statistics</li> </ul>"},{"location":"programming/python/crawl/#api-usage","title":"API Usage","text":"<ul> <li>Rate Limiting - Respect API rate limits to avoid throttling</li> <li>Cost Management - Monitor API usage and costs</li> <li>Error Recovery - Implement exponential backoff for API failures</li> <li>Content Validation - Validate API responses before processing</li> </ul>"},{"location":"programming/python/crawl/#file-management","title":"File Management","text":"<ul> <li>Path Handling - Use os.path for cross-platform compatibility</li> <li>Encoding - Specify UTF-8 encoding for international content</li> <li>Large Files - Consider streaming for very large files</li> <li>Backup Strategy - Backup original files before processing</li> </ul> <p>This tool provides a robust foundation for automated content analysis and can be customized for various document processing and analysis workflows.</p>"}]}